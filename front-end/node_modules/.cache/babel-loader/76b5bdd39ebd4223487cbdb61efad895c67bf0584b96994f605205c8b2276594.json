{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\n\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\n\nclass CompatRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"compat\", RuntimeModule.STAGE_ATTACH);\n    this.fullHash = true;\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    const {\n      chunkGraph,\n      chunk,\n      compilation\n    } = this;\n    const {\n      runtimeTemplate,\n      mainTemplate,\n      moduleTemplates,\n      dependencyTemplates\n    } = compilation;\n    const bootstrap = mainTemplate.hooks.bootstrap.call(\"\", chunk, compilation.hash || \"XXXX\", moduleTemplates.javascript, dependencyTemplates);\n    const localVars = mainTemplate.hooks.localVars.call(\"\", chunk, compilation.hash || \"XXXX\");\n    const requireExtensions = mainTemplate.hooks.requireExtensions.call(\"\", chunk, compilation.hash || \"XXXX\");\n    const runtimeRequirements = chunkGraph.getTreeRuntimeRequirements(chunk);\n    let requireEnsure = \"\";\n    if (runtimeRequirements.has(RuntimeGlobals.ensureChunk)) {\n      const requireEnsureHandler = mainTemplate.hooks.requireEnsure.call(\"\", chunk, compilation.hash || \"XXXX\", \"chunkId\");\n      if (requireEnsureHandler) {\n        requireEnsure = `${RuntimeGlobals.ensureChunkHandlers}.compat = ${runtimeTemplate.basicFunction(\"chunkId, promises\", requireEnsureHandler)};`;\n      }\n    }\n    return [bootstrap, localVars, requireEnsure, requireExtensions].filter(Boolean).join(\"\\n\");\n  }\n\n  /**\r\n   * @returns {boolean} true, if the runtime module should get it's own scope\r\n   */\n  shouldIsolate() {\n    // We avoid isolating this to have better backward-compat\n    return false;\n  }\n}\nmodule.exports = CompatRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","CompatRuntimeModule","constructor","STAGE_ATTACH","fullHash","generate","chunkGraph","chunk","compilation","runtimeTemplate","mainTemplate","moduleTemplates","dependencyTemplates","bootstrap","hooks","call","hash","javascript","localVars","requireExtensions","runtimeRequirements","getTreeRuntimeRequirements","requireEnsure","has","ensureChunk","requireEnsureHandler","ensureChunkHandlers","basicFunction","filter","Boolean","join","shouldIsolate","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/runtime/CompatRuntimeModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\n\r\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\r\n\r\nclass CompatRuntimeModule extends RuntimeModule {\r\n\tconstructor() {\r\n\t\tsuper(\"compat\", RuntimeModule.STAGE_ATTACH);\r\n\t\tthis.fullHash = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\tconst { chunkGraph, chunk, compilation } = this;\r\n\t\tconst {\r\n\t\t\truntimeTemplate,\r\n\t\t\tmainTemplate,\r\n\t\t\tmoduleTemplates,\r\n\t\t\tdependencyTemplates\r\n\t\t} = compilation;\r\n\t\tconst bootstrap = mainTemplate.hooks.bootstrap.call(\r\n\t\t\t\"\",\r\n\t\t\tchunk,\r\n\t\t\tcompilation.hash || \"XXXX\",\r\n\t\t\tmoduleTemplates.javascript,\r\n\t\t\tdependencyTemplates\r\n\t\t);\r\n\t\tconst localVars = mainTemplate.hooks.localVars.call(\r\n\t\t\t\"\",\r\n\t\t\tchunk,\r\n\t\t\tcompilation.hash || \"XXXX\"\r\n\t\t);\r\n\t\tconst requireExtensions = mainTemplate.hooks.requireExtensions.call(\r\n\t\t\t\"\",\r\n\t\t\tchunk,\r\n\t\t\tcompilation.hash || \"XXXX\"\r\n\t\t);\r\n\t\tconst runtimeRequirements = chunkGraph.getTreeRuntimeRequirements(chunk);\r\n\t\tlet requireEnsure = \"\";\r\n\t\tif (runtimeRequirements.has(RuntimeGlobals.ensureChunk)) {\r\n\t\t\tconst requireEnsureHandler = mainTemplate.hooks.requireEnsure.call(\r\n\t\t\t\t\"\",\r\n\t\t\t\tchunk,\r\n\t\t\t\tcompilation.hash || \"XXXX\",\r\n\t\t\t\t\"chunkId\"\r\n\t\t\t);\r\n\t\t\tif (requireEnsureHandler) {\r\n\t\t\t\trequireEnsure = `${\r\n\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\r\n\t\t\t\t}.compat = ${runtimeTemplate.basicFunction(\r\n\t\t\t\t\t\"chunkId, promises\",\r\n\t\t\t\t\trequireEnsureHandler\r\n\t\t\t\t)};`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [bootstrap, localVars, requireEnsure, requireExtensions]\r\n\t\t\t.filter(Boolean)\r\n\t\t\t.join(\"\\n\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean} true, if the runtime module should get it's own scope\r\n\t */\r\n\tshouldIsolate() {\r\n\t\t// We avoid isolating this to have better backward-compat\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = CompatRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;;AAEjD;;AAEA,MAAME,mBAAmB,SAASD,aAAa,CAAC;EAC/CE,WAAW,GAAG;IACb,KAAK,CAAC,QAAQ,EAAEF,aAAa,CAACG,YAAY,CAAC;IAC3C,IAAI,CAACC,QAAQ,GAAG,IAAI;EACrB;;EAEA;AACD;AACA;EACCC,QAAQ,GAAG;IACV,MAAM;MAAEC,UAAU;MAAEC,KAAK;MAAEC;IAAY,CAAC,GAAG,IAAI;IAC/C,MAAM;MACLC,eAAe;MACfC,YAAY;MACZC,eAAe;MACfC;IACD,CAAC,GAAGJ,WAAW;IACf,MAAMK,SAAS,GAAGH,YAAY,CAACI,KAAK,CAACD,SAAS,CAACE,IAAI,CAClD,EAAE,EACFR,KAAK,EACLC,WAAW,CAACQ,IAAI,IAAI,MAAM,EAC1BL,eAAe,CAACM,UAAU,EAC1BL,mBAAmB,CACnB;IACD,MAAMM,SAAS,GAAGR,YAAY,CAACI,KAAK,CAACI,SAAS,CAACH,IAAI,CAClD,EAAE,EACFR,KAAK,EACLC,WAAW,CAACQ,IAAI,IAAI,MAAM,CAC1B;IACD,MAAMG,iBAAiB,GAAGT,YAAY,CAACI,KAAK,CAACK,iBAAiB,CAACJ,IAAI,CAClE,EAAE,EACFR,KAAK,EACLC,WAAW,CAACQ,IAAI,IAAI,MAAM,CAC1B;IACD,MAAMI,mBAAmB,GAAGd,UAAU,CAACe,0BAA0B,CAACd,KAAK,CAAC;IACxE,IAAIe,aAAa,GAAG,EAAE;IACtB,IAAIF,mBAAmB,CAACG,GAAG,CAACzB,cAAc,CAAC0B,WAAW,CAAC,EAAE;MACxD,MAAMC,oBAAoB,GAAGf,YAAY,CAACI,KAAK,CAACQ,aAAa,CAACP,IAAI,CACjE,EAAE,EACFR,KAAK,EACLC,WAAW,CAACQ,IAAI,IAAI,MAAM,EAC1B,SAAS,CACT;MACD,IAAIS,oBAAoB,EAAE;QACzBH,aAAa,GAAI,GAChBxB,cAAc,CAAC4B,mBACf,aAAYjB,eAAe,CAACkB,aAAa,CACzC,mBAAmB,EACnBF,oBAAoB,CACnB,GAAE;MACL;IACD;IACA,OAAO,CAACZ,SAAS,EAAEK,SAAS,EAAEI,aAAa,EAAEH,iBAAiB,CAAC,CAC7DS,MAAM,CAACC,OAAO,CAAC,CACfC,IAAI,CAAC,IAAI,CAAC;EACb;;EAEA;AACD;AACA;EACCC,aAAa,GAAG;IACf;IACA,OAAO,KAAK;EACb;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGhC,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}