{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\r\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nclass ContainerExposedDependency extends ModuleDependency {\n  /**\r\n   * @param {string} exposedName public name\r\n   * @param {string} request request to module\r\n   */\n  constructor(exposedName, request) {\n    super(request);\n    this.exposedName = exposedName;\n  }\n  get type() {\n    return \"container exposed\";\n  }\n  get category() {\n    return \"esm\";\n  }\n\n  /**\r\n   * @returns {string | null} an identifier to merge equal requests\r\n   */\n  getResourceIdentifier() {\n    return `exposed dependency ${this.exposedName}=${this.request}`;\n  }\n  serialize(context) {\n    context.write(this.exposedName);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    this.exposedName = context.read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(ContainerExposedDependency, \"webpack/lib/container/ContainerExposedDependency\");\nmodule.exports = ContainerExposedDependency;","map":{"version":3,"names":["ModuleDependency","require","makeSerializable","ContainerExposedDependency","constructor","exposedName","request","type","category","getResourceIdentifier","serialize","context","write","deserialize","read","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/container/ContainerExposedDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\n\r\nclass ContainerExposedDependency extends ModuleDependency {\r\n\t/**\r\n\t * @param {string} exposedName public name\r\n\t * @param {string} request request to module\r\n\t */\r\n\tconstructor(exposedName, request) {\r\n\t\tsuper(request);\r\n\t\tthis.exposedName = exposedName;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"container exposed\";\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"esm\";\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string | null} an identifier to merge equal requests\r\n\t */\r\n\tgetResourceIdentifier() {\r\n\t\treturn `exposed dependency ${this.exposedName}=${this.request}`;\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tcontext.write(this.exposedName);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tthis.exposedName = context.read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tContainerExposedDependency,\r\n\t\"webpack/lib/container/ContainerExposedDependency\"\r\n);\r\n\r\nmodule.exports = ContainerExposedDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AACpE,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAE5D,MAAME,0BAA0B,SAASH,gBAAgB,CAAC;EACzD;AACD;AACA;AACA;EACCI,WAAW,CAACC,WAAW,EAAEC,OAAO,EAAE;IACjC,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACD,WAAW,GAAGA,WAAW;EAC/B;EAEA,IAAIE,IAAI,GAAG;IACV,OAAO,mBAAmB;EAC3B;EAEA,IAAIC,QAAQ,GAAG;IACd,OAAO,KAAK;EACb;;EAEA;AACD;AACA;EACCC,qBAAqB,GAAG;IACvB,OAAQ,sBAAqB,IAAI,CAACJ,WAAY,IAAG,IAAI,CAACC,OAAQ,EAAC;EAChE;EAEAI,SAAS,CAACC,OAAO,EAAE;IAClBA,OAAO,CAACC,KAAK,CAAC,IAAI,CAACP,WAAW,CAAC;IAC/B,KAAK,CAACK,SAAS,CAACC,OAAO,CAAC;EACzB;EAEAE,WAAW,CAACF,OAAO,EAAE;IACpB,IAAI,CAACN,WAAW,GAAGM,OAAO,CAACG,IAAI,EAAE;IACjC,KAAK,CAACD,WAAW,CAACF,OAAO,CAAC;EAC3B;AACD;AAEAT,gBAAgB,CACfC,0BAA0B,EAC1B,kDAAkD,CAClD;AAEDY,MAAM,CAACC,OAAO,GAAGb,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}