{"ast":null,"code":"#!/usr/bin/env node\n\n//process.env.DEBUG_NOPT = 1\n\n// my-program.js\nvar nopt = require(\"../lib/nopt\"),\n  Stream = require(\"stream\").Stream,\n  path = require(\"path\"),\n  knownOpts = {\n    \"foo\": [String, null],\n    \"bar\": [Stream, Number],\n    \"baz\": path,\n    \"bloo\": [\"big\", \"medium\", \"small\"],\n    \"flag\": Boolean,\n    \"pick\": Boolean\n  },\n  shortHands = {\n    \"foofoo\": [\"--foo\", \"Mr. Foo\"],\n    \"b7\": [\"--bar\", \"7\"],\n    \"m\": [\"--bloo\", \"medium\"],\n    \"p\": [\"--pick\"],\n    \"f\": [\"--flag\", \"true\"],\n    \"g\": [\"--flag\"],\n    \"s\": \"--flag\"\n  }\n  // everything is optional.\n  // knownOpts and shorthands default to {}\n  // arg list defaults to process.argv\n  // slice defaults to 2\n  ,\n  parsed = nopt(knownOpts, shortHands, process.argv, 2);\nconsole.log(\"parsed =\\n\" + require(\"util\").inspect(parsed));","map":{"version":3,"names":["nopt","require","Stream","path","knownOpts","String","Number","Boolean","shortHands","parsed","process","argv","console","log","inspect"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/nopt/examples/my-program.js"],"sourcesContent":["#!/usr/bin/env node\r\n\r\n//process.env.DEBUG_NOPT = 1\r\n\r\n// my-program.js\r\nvar nopt = require(\"../lib/nopt\")\r\n  , Stream = require(\"stream\").Stream\r\n  , path = require(\"path\")\r\n  , knownOpts = { \"foo\" : [String, null]\r\n                , \"bar\" : [Stream, Number]\r\n                , \"baz\" : path\r\n                , \"bloo\" : [ \"big\", \"medium\", \"small\" ]\r\n                , \"flag\" : Boolean\r\n                , \"pick\" : Boolean\r\n                }\r\n  , shortHands = { \"foofoo\" : [\"--foo\", \"Mr. Foo\"]\r\n                 , \"b7\" : [\"--bar\", \"7\"]\r\n                 , \"m\" : [\"--bloo\", \"medium\"]\r\n                 , \"p\" : [\"--pick\"]\r\n                 , \"f\" : [\"--flag\", \"true\"]\r\n                 , \"g\" : [\"--flag\"]\r\n                 , \"s\" : \"--flag\"\r\n                 }\r\n             // everything is optional.\r\n             // knownOpts and shorthands default to {}\r\n             // arg list defaults to process.argv\r\n             // slice defaults to 2\r\n  , parsed = nopt(knownOpts, shortHands, process.argv, 2)\r\n\r\nconsole.log(\"parsed =\\n\"+ require(\"util\").inspect(parsed))\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;EAC7BC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM;EACjCC,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;EACtBG,SAAS,GAAG;IAAE,KAAK,EAAG,CAACC,MAAM,EAAE,IAAI,CAAC;IACtB,KAAK,EAAG,CAACH,MAAM,EAAEI,MAAM,CAAC;IACxB,KAAK,EAAGH,IAAI;IACZ,MAAM,EAAG,CAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAE;IACrC,MAAM,EAAGI,OAAO;IAChB,MAAM,EAAGA;EACX,CAAC;EACbC,UAAU,GAAG;IAAE,QAAQ,EAAG,CAAC,OAAO,EAAE,SAAS,CAAC;IAC/B,IAAI,EAAG,CAAC,OAAO,EAAE,GAAG,CAAC;IACrB,GAAG,EAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAC1B,GAAG,EAAG,CAAC,QAAQ,CAAC;IAChB,GAAG,EAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IACxB,GAAG,EAAG,CAAC,QAAQ,CAAC;IAChB,GAAG,EAAG;EACR;EACJ;EACA;EACA;EACA;EAAA;EACTC,MAAM,GAAGT,IAAI,CAACI,SAAS,EAAEI,UAAU,EAAEE,OAAO,CAACC,IAAI,EAAE,CAAC,CAAC;AAEzDC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAEZ,OAAO,CAAC,MAAM,CAAC,CAACa,OAAO,CAACL,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}