{"ast":null,"code":"var test = require(\"tape\");\nvar extend = require(\"./\");\nvar mutableExtend = require(\"./mutable\");\ntest(\"merge\", function (assert) {\n  var a = {\n    a: \"foo\"\n  };\n  var b = {\n    b: \"bar\"\n  };\n  assert.deepEqual(extend(a, b), {\n    a: \"foo\",\n    b: \"bar\"\n  });\n  assert.end();\n});\ntest(\"replace\", function (assert) {\n  var a = {\n    a: \"foo\"\n  };\n  var b = {\n    a: \"bar\"\n  };\n  assert.deepEqual(extend(a, b), {\n    a: \"bar\"\n  });\n  assert.end();\n});\ntest(\"undefined\", function (assert) {\n  var a = {\n    a: undefined\n  };\n  var b = {\n    b: \"foo\"\n  };\n  assert.deepEqual(extend(a, b), {\n    a: undefined,\n    b: \"foo\"\n  });\n  assert.deepEqual(extend(b, a), {\n    a: undefined,\n    b: \"foo\"\n  });\n  assert.end();\n});\ntest(\"handle 0\", function (assert) {\n  var a = {\n    a: \"default\"\n  };\n  var b = {\n    a: 0\n  };\n  assert.deepEqual(extend(a, b), {\n    a: 0\n  });\n  assert.deepEqual(extend(b, a), {\n    a: \"default\"\n  });\n  assert.end();\n});\ntest(\"is immutable\", function (assert) {\n  var record = {};\n  extend(record, {\n    foo: \"bar\"\n  });\n  assert.equal(record.foo, undefined);\n  assert.end();\n});\ntest(\"null as argument\", function (assert) {\n  var a = {\n    foo: \"bar\"\n  };\n  var b = null;\n  var c = void 0;\n  assert.deepEqual(extend(b, a, c), {\n    foo: \"bar\"\n  });\n  assert.end();\n});\ntest(\"mutable\", function (assert) {\n  var a = {\n    foo: \"bar\"\n  };\n  mutableExtend(a, {\n    bar: \"baz\"\n  });\n  assert.equal(a.bar, \"baz\");\n  assert.end();\n});\ntest(\"null prototype\", function (assert) {\n  var a = {\n    a: \"foo\"\n  };\n  var b = Object.create(null);\n  b.b = \"bar\";\n  assert.deepEqual(extend(a, b), {\n    a: \"foo\",\n    b: \"bar\"\n  });\n  assert.end();\n});\ntest(\"null prototype mutable\", function (assert) {\n  var a = {\n    foo: \"bar\"\n  };\n  var b = Object.create(null);\n  b.bar = \"baz\";\n  mutableExtend(a, b);\n  assert.equal(a.bar, \"baz\");\n  assert.end();\n});\ntest(\"prototype pollution\", function (assert) {\n  var a = {};\n  var maliciousPayload = '{\"__proto__\":{\"oops\":\"It works!\"}}';\n  assert.strictEqual(a.oops, undefined);\n  extend({}, maliciousPayload);\n  assert.strictEqual(a.oops, undefined);\n  assert.end();\n});\ntest(\"prototype pollution mutable\", function (assert) {\n  var a = {};\n  var maliciousPayload = '{\"__proto__\":{\"oops\":\"It works!\"}}';\n  assert.strictEqual(a.oops, undefined);\n  mutableExtend({}, maliciousPayload);\n  assert.strictEqual(a.oops, undefined);\n  assert.end();\n});","map":{"version":3,"names":["test","require","extend","mutableExtend","assert","a","b","deepEqual","end","undefined","record","foo","equal","c","bar","Object","create","maliciousPayload","strictEqual","oops"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/xtend/test.js"],"sourcesContent":["var test = require(\"tape\")\nvar extend = require(\"./\")\nvar mutableExtend = require(\"./mutable\")\n\ntest(\"merge\", function(assert) {\n    var a = { a: \"foo\" }\n    var b = { b: \"bar\" }\n\n    assert.deepEqual(extend(a, b), { a: \"foo\", b: \"bar\" })\n    assert.end()\n})\n\ntest(\"replace\", function(assert) {\n    var a = { a: \"foo\" }\n    var b = { a: \"bar\" }\n\n    assert.deepEqual(extend(a, b), { a: \"bar\" })\n    assert.end()\n})\n\ntest(\"undefined\", function(assert) {\n    var a = { a: undefined }\n    var b = { b: \"foo\" }\n\n    assert.deepEqual(extend(a, b), { a: undefined, b: \"foo\" })\n    assert.deepEqual(extend(b, a), { a: undefined, b: \"foo\" })\n    assert.end()\n})\n\ntest(\"handle 0\", function(assert) {\n    var a = { a: \"default\" }\n    var b = { a: 0 }\n\n    assert.deepEqual(extend(a, b), { a: 0 })\n    assert.deepEqual(extend(b, a), { a: \"default\" })\n    assert.end()\n})\n\ntest(\"is immutable\", function (assert) {\n    var record = {}\n\n    extend(record, { foo: \"bar\" })\n    assert.equal(record.foo, undefined)\n    assert.end()\n})\n\ntest(\"null as argument\", function (assert) {\n    var a = { foo: \"bar\" }\n    var b = null\n    var c = void 0\n\n    assert.deepEqual(extend(b, a, c), { foo: \"bar\" })\n    assert.end()\n})\n\ntest(\"mutable\", function (assert) {\n    var a = { foo: \"bar\" }\n\n    mutableExtend(a, { bar: \"baz\" })\n\n    assert.equal(a.bar, \"baz\")\n    assert.end()\n})\n\ntest(\"null prototype\", function(assert) {\n    var a = { a: \"foo\" }\n    var b = Object.create(null)\n    b.b = \"bar\";\n\n    assert.deepEqual(extend(a, b), { a: \"foo\", b: \"bar\" })\n    assert.end()\n})\n\ntest(\"null prototype mutable\", function (assert) {\n    var a = { foo: \"bar\" }\n    var b = Object.create(null)\n    b.bar = \"baz\";\n\n    mutableExtend(a, b)\n\n    assert.equal(a.bar, \"baz\")\n    assert.end()\n})\n\ntest(\"prototype pollution\", function (assert) {\n    var a = {}\n    var maliciousPayload = '{\"__proto__\":{\"oops\":\"It works!\"}}'\n\n    assert.strictEqual(a.oops, undefined)\n    extend({}, maliciousPayload)\n    assert.strictEqual(a.oops, undefined)\n    assert.end()\n})\n\ntest(\"prototype pollution mutable\", function (assert) {\n    var a = {}\n    var maliciousPayload = '{\"__proto__\":{\"oops\":\"It works!\"}}'\n\n    assert.strictEqual(a.oops, undefined)\n    mutableExtend({}, maliciousPayload)\n    assert.strictEqual(a.oops, undefined)\n    assert.end()\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}