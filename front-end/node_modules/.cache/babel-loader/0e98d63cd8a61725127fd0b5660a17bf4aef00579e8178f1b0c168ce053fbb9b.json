{"ast":null,"code":"var inspect = require('../');\nvar test = require('tape');\ntest('element', function (t) {\n  t.plan(3);\n  var elem = {\n    nodeName: 'div',\n    attributes: [{\n      name: 'class',\n      value: 'row'\n    }],\n    getAttribute: function (key) {\n      return key;\n    },\n    childNodes: []\n  };\n  var obj = [1, elem, 3];\n  t.deepEqual(inspect(obj), '[ 1, <div class=\"row\"></div>, 3 ]');\n  t.deepEqual(inspect(obj, {\n    quoteStyle: 'single'\n  }), \"[ 1, <div class='row'></div>, 3 ]\");\n  t.deepEqual(inspect(obj, {\n    quoteStyle: 'double'\n  }), '[ 1, <div class=\"row\"></div>, 3 ]');\n});\ntest('element no attr', function (t) {\n  t.plan(1);\n  var elem = {\n    nodeName: 'div',\n    getAttribute: function (key) {\n      return key;\n    },\n    childNodes: []\n  };\n  var obj = [1, elem, 3];\n  t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\n});\ntest('element with contents', function (t) {\n  t.plan(1);\n  var elem = {\n    nodeName: 'div',\n    getAttribute: function (key) {\n      return key;\n    },\n    childNodes: [{\n      nodeName: 'b'\n    }]\n  };\n  var obj = [1, elem, 3];\n  t.deepEqual(inspect(obj), '[ 1, <div>...</div>, 3 ]');\n});\ntest('element instance', function (t) {\n  t.plan(1);\n  var h = global.HTMLElement;\n  global.HTMLElement = function (name, attr) {\n    this.nodeName = name;\n    this.attributes = attr;\n  };\n  global.HTMLElement.prototype.getAttribute = function () {};\n  var elem = new global.HTMLElement('div', []);\n  var obj = [1, elem, 3];\n  t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\n  global.HTMLElement = h;\n});","map":{"version":3,"names":["inspect","require","test","t","plan","elem","nodeName","attributes","name","value","getAttribute","key","childNodes","obj","deepEqual","quoteStyle","h","global","HTMLElement","attr","prototype"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/object-inspect/test/element.js"],"sourcesContent":["var inspect = require('../');\r\nvar test = require('tape');\r\n\r\ntest('element', function (t) {\r\n    t.plan(3);\r\n    var elem = {\r\n        nodeName: 'div',\r\n        attributes: [{ name: 'class', value: 'row' }],\r\n        getAttribute: function (key) { return key; },\r\n        childNodes: []\r\n    };\r\n    var obj = [1, elem, 3];\r\n    t.deepEqual(inspect(obj), '[ 1, <div class=\"row\"></div>, 3 ]');\r\n    t.deepEqual(inspect(obj, { quoteStyle: 'single' }), \"[ 1, <div class='row'></div>, 3 ]\");\r\n    t.deepEqual(inspect(obj, { quoteStyle: 'double' }), '[ 1, <div class=\"row\"></div>, 3 ]');\r\n});\r\n\r\ntest('element no attr', function (t) {\r\n    t.plan(1);\r\n    var elem = {\r\n        nodeName: 'div',\r\n        getAttribute: function (key) { return key; },\r\n        childNodes: []\r\n    };\r\n    var obj = [1, elem, 3];\r\n    t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\r\n});\r\n\r\ntest('element with contents', function (t) {\r\n    t.plan(1);\r\n    var elem = {\r\n        nodeName: 'div',\r\n        getAttribute: function (key) { return key; },\r\n        childNodes: [{ nodeName: 'b' }]\r\n    };\r\n    var obj = [1, elem, 3];\r\n    t.deepEqual(inspect(obj), '[ 1, <div>...</div>, 3 ]');\r\n});\r\n\r\ntest('element instance', function (t) {\r\n    t.plan(1);\r\n    var h = global.HTMLElement;\r\n    global.HTMLElement = function (name, attr) {\r\n        this.nodeName = name;\r\n        this.attributes = attr;\r\n    };\r\n    global.HTMLElement.prototype.getAttribute = function () {};\r\n\r\n    var elem = new global.HTMLElement('div', []);\r\n    var obj = [1, elem, 3];\r\n    t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\r\n    global.HTMLElement = h;\r\n});\r\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC5B,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE1BC,IAAI,CAAC,SAAS,EAAE,UAAUC,CAAC,EAAE;EACzBA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACT,IAAIC,IAAI,GAAG;IACPC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;IAC7CC,YAAY,EAAE,UAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG;IAAE,CAAC;IAC5CC,UAAU,EAAE;EAChB,CAAC;EACD,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAER,IAAI,EAAE,CAAC,CAAC;EACtBF,CAAC,CAACW,SAAS,CAACd,OAAO,CAACa,GAAG,CAAC,EAAE,mCAAmC,CAAC;EAC9DV,CAAC,CAACW,SAAS,CAACd,OAAO,CAACa,GAAG,EAAE;IAAEE,UAAU,EAAE;EAAS,CAAC,CAAC,EAAE,mCAAmC,CAAC;EACxFZ,CAAC,CAACW,SAAS,CAACd,OAAO,CAACa,GAAG,EAAE;IAAEE,UAAU,EAAE;EAAS,CAAC,CAAC,EAAE,mCAAmC,CAAC;AAC5F,CAAC,CAAC;AAEFb,IAAI,CAAC,iBAAiB,EAAE,UAAUC,CAAC,EAAE;EACjCA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACT,IAAIC,IAAI,GAAG;IACPC,QAAQ,EAAE,KAAK;IACfI,YAAY,EAAE,UAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG;IAAE,CAAC;IAC5CC,UAAU,EAAE;EAChB,CAAC;EACD,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAER,IAAI,EAAE,CAAC,CAAC;EACtBF,CAAC,CAACW,SAAS,CAACd,OAAO,CAACa,GAAG,CAAC,EAAE,uBAAuB,CAAC;AACtD,CAAC,CAAC;AAEFX,IAAI,CAAC,uBAAuB,EAAE,UAAUC,CAAC,EAAE;EACvCA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACT,IAAIC,IAAI,GAAG;IACPC,QAAQ,EAAE,KAAK;IACfI,YAAY,EAAE,UAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG;IAAE,CAAC;IAC5CC,UAAU,EAAE,CAAC;MAAEN,QAAQ,EAAE;IAAI,CAAC;EAClC,CAAC;EACD,IAAIO,GAAG,GAAG,CAAC,CAAC,EAAER,IAAI,EAAE,CAAC,CAAC;EACtBF,CAAC,CAACW,SAAS,CAACd,OAAO,CAACa,GAAG,CAAC,EAAE,0BAA0B,CAAC;AACzD,CAAC,CAAC;AAEFX,IAAI,CAAC,kBAAkB,EAAE,UAAUC,CAAC,EAAE;EAClCA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACT,IAAIY,CAAC,GAAGC,MAAM,CAACC,WAAW;EAC1BD,MAAM,CAACC,WAAW,GAAG,UAAUV,IAAI,EAAEW,IAAI,EAAE;IACvC,IAAI,CAACb,QAAQ,GAAGE,IAAI;IACpB,IAAI,CAACD,UAAU,GAAGY,IAAI;EAC1B,CAAC;EACDF,MAAM,CAACC,WAAW,CAACE,SAAS,CAACV,YAAY,GAAG,YAAY,CAAC,CAAC;EAE1D,IAAIL,IAAI,GAAG,IAAIY,MAAM,CAACC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC;EAC5C,IAAIL,GAAG,GAAG,CAAC,CAAC,EAAER,IAAI,EAAE,CAAC,CAAC;EACtBF,CAAC,CAACW,SAAS,CAACd,OAAO,CAACa,GAAG,CAAC,EAAE,uBAAuB,CAAC;EAClDI,MAAM,CAACC,WAAW,GAAGF,CAAC;AAC1B,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}