{"ast":null,"code":"import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nexport const resolveCustomEndpointsConfig = input => {\n  const {\n    endpoint,\n    urlParser\n  } = input;\n  return {\n    ...input,\n    tls: input.tls ?? true,\n    endpoint: normalizeProvider(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint),\n    isCustomEndpoint: true,\n    useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false)\n  };\n};","map":{"version":3,"names":["normalizeProvider","resolveCustomEndpointsConfig","input","endpoint","urlParser","tls","isCustomEndpoint","useDualstackEndpoint"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/resolveCustomEndpointsConfig.js"],"sourcesContent":["import { normalizeProvider } from \"@aws-sdk/util-middleware\";\r\nexport const resolveCustomEndpointsConfig = (input) => {\r\n    const { endpoint, urlParser } = input;\r\n    return {\r\n        ...input,\r\n        tls: input.tls ?? true,\r\n        endpoint: normalizeProvider(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint),\r\n        isCustomEndpoint: true,\r\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\r\n    };\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAO,MAAMC,4BAA4B,GAAIC,KAAK,IAAK;EACnD,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGF,KAAK;EACrC,OAAO;IACH,GAAGA,KAAK;IACRG,GAAG,EAAEH,KAAK,CAACG,GAAG,IAAI,IAAI;IACtBF,QAAQ,EAAEH,iBAAiB,CAAC,OAAOG,QAAQ,KAAK,QAAQ,GAAGC,SAAS,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAAC;IAC1FG,gBAAgB,EAAE,IAAI;IACtBC,oBAAoB,EAAEP,iBAAiB,CAACE,KAAK,CAACK,oBAAoB,IAAI,KAAK;EAC/E,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}