{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  getContext\n} = require(\"loader-runner\");\nconst asyncLib = require(\"neo-async\");\nconst {\n  AsyncSeriesBailHook,\n  SyncWaterfallHook,\n  SyncBailHook,\n  SyncHook,\n  HookMap\n} = require(\"tapable\");\nconst ChunkGraph = require(\"./ChunkGraph\");\nconst Module = require(\"./Module\");\nconst ModuleFactory = require(\"./ModuleFactory\");\nconst ModuleGraph = require(\"./ModuleGraph\");\nconst NormalModule = require(\"./NormalModule\");\nconst BasicEffectRulePlugin = require(\"./rules/BasicEffectRulePlugin\");\nconst BasicMatcherRulePlugin = require(\"./rules/BasicMatcherRulePlugin\");\nconst ObjectMatcherRulePlugin = require(\"./rules/ObjectMatcherRulePlugin\");\nconst RuleSetCompiler = require(\"./rules/RuleSetCompiler\");\nconst UseEffectRulePlugin = require(\"./rules/UseEffectRulePlugin\");\nconst LazySet = require(\"./util/LazySet\");\nconst {\n  getScheme\n} = require(\"./util/URLAbsoluteSpecifier\");\nconst {\n  cachedCleverMerge,\n  cachedSetProperty\n} = require(\"./util/cleverMerge\");\nconst {\n  join\n} = require(\"./util/fs\");\nconst {\n  parseResource,\n  parseResourceWithoutFragment\n} = require(\"./util/identifier\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").RuleSetRule} RuleSetRule */\n/** @typedef {import(\"./Generator\")} Generator */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryCreateData} ModuleFactoryCreateData */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n/** @typedef {import(\"./NormalModule\").NormalModuleCreateData} NormalModuleCreateData */\n/** @typedef {import(\"./Parser\")} Parser */\n/** @typedef {import(\"./ResolverFactory\")} ResolverFactory */\n/** @typedef {import(\"./dependencies/ModuleDependency\")} ModuleDependency */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {Pick<RuleSetRule, 'type'|'sideEffects'|'parser'|'generator'|'resolve'|'layer'>} ModuleSettings */\n/** @typedef {Partial<NormalModuleCreateData & {settings: ModuleSettings}>} CreateData */\n\n/**\r\n * @typedef {Object} ResolveData\r\n * @property {ModuleFactoryCreateData[\"contextInfo\"]} contextInfo\r\n * @property {ModuleFactoryCreateData[\"resolveOptions\"]} resolveOptions\r\n * @property {string} context\r\n * @property {string} request\r\n * @property {Record<string, any> | undefined} assertions\r\n * @property {ModuleDependency[]} dependencies\r\n * @property {string} dependencyType\r\n * @property {CreateData} createData\r\n * @property {LazySet<string>} fileDependencies\r\n * @property {LazySet<string>} missingDependencies\r\n * @property {LazySet<string>} contextDependencies\r\n * @property {boolean} cacheable allow to use the unsafe cache\r\n */\n\n/**\r\n * @typedef {Object} ResourceData\r\n * @property {string} resource\r\n * @property {string} path\r\n * @property {string} query\r\n * @property {string} fragment\r\n * @property {string=} context\r\n */\n\n/** @typedef {ResourceData & { data: Record<string, any> }} ResourceDataWithData */\n\n/** @typedef {Object} ParsedLoaderRequest\r\n * @property {string} loader loader\r\n * @property {string|undefined} options options\r\n */\n\nconst EMPTY_RESOLVE_OPTIONS = {};\nconst EMPTY_PARSER_OPTIONS = {};\nconst EMPTY_GENERATOR_OPTIONS = {};\nconst EMPTY_ELEMENTS = [];\nconst MATCH_RESOURCE_REGEX = /^([^!]+)!=!/;\nconst loaderToIdent = data => {\n  if (!data.options) {\n    return data.loader;\n  }\n  if (typeof data.options === \"string\") {\n    return data.loader + \"?\" + data.options;\n  }\n  if (typeof data.options !== \"object\") {\n    throw new Error(\"loader options must be string or object\");\n  }\n  if (data.ident) {\n    return data.loader + \"??\" + data.ident;\n  }\n  return data.loader + \"?\" + JSON.stringify(data.options);\n};\nconst stringifyLoadersAndResource = (loaders, resource) => {\n  let str = \"\";\n  for (const loader of loaders) {\n    str += loaderToIdent(loader) + \"!\";\n  }\n  return str + resource;\n};\nconst needCalls = (times, callback) => {\n  return err => {\n    if (--times === 0) {\n      return callback(err);\n    }\n    if (err && times > 0) {\n      times = NaN;\n      return callback(err);\n    }\n  };\n};\nconst mergeGlobalOptions = (globalOptions, type, localOptions) => {\n  const parts = type.split(\"/\");\n  let result;\n  let current = \"\";\n  for (const part of parts) {\n    current = current ? `${current}/${part}` : part;\n    const options = globalOptions[current];\n    if (typeof options === \"object\") {\n      if (result === undefined) {\n        result = options;\n      } else {\n        result = cachedCleverMerge(result, options);\n      }\n    }\n  }\n  if (result === undefined) {\n    return localOptions;\n  } else {\n    return cachedCleverMerge(result, localOptions);\n  }\n};\n\n// TODO webpack 6 remove\nconst deprecationChangedHookMessage = (name, hook) => {\n  const names = hook.taps.map(tapped => {\n    return tapped.name;\n  }).join(\", \");\n  return `NormalModuleFactory.${name} (${names}) is no longer a waterfall hook, but a bailing hook instead. ` + \"Do not return the passed object, but modify it instead. \" + \"Returning false will ignore the request and results in no module created.\";\n};\nconst ruleSetCompiler = new RuleSetCompiler([new BasicMatcherRulePlugin(\"test\", \"resource\"), new BasicMatcherRulePlugin(\"scheme\"), new BasicMatcherRulePlugin(\"mimetype\"), new BasicMatcherRulePlugin(\"dependency\"), new BasicMatcherRulePlugin(\"include\", \"resource\"), new BasicMatcherRulePlugin(\"exclude\", \"resource\", true), new BasicMatcherRulePlugin(\"resource\"), new BasicMatcherRulePlugin(\"resourceQuery\"), new BasicMatcherRulePlugin(\"resourceFragment\"), new BasicMatcherRulePlugin(\"realResource\"), new BasicMatcherRulePlugin(\"issuer\"), new BasicMatcherRulePlugin(\"compiler\"), new BasicMatcherRulePlugin(\"issuerLayer\"), new ObjectMatcherRulePlugin(\"assert\", \"assertions\"), new ObjectMatcherRulePlugin(\"descriptionData\"), new BasicEffectRulePlugin(\"type\"), new BasicEffectRulePlugin(\"sideEffects\"), new BasicEffectRulePlugin(\"parser\"), new BasicEffectRulePlugin(\"resolve\"), new BasicEffectRulePlugin(\"generator\"), new BasicEffectRulePlugin(\"layer\"), new UseEffectRulePlugin()]);\nclass NormalModuleFactory extends ModuleFactory {\n  /**\r\n   * @param {Object} param params\r\n   * @param {string=} param.context context\r\n   * @param {InputFileSystem} param.fs file system\r\n   * @param {ResolverFactory} param.resolverFactory resolverFactory\r\n   * @param {ModuleOptions} param.options options\r\n   * @param {Object=} param.associatedObjectForCache an object to which the cache will be attached\r\n   * @param {boolean=} param.layers enable layers\r\n   */\n  constructor(_ref) {\n    let {\n      context,\n      fs,\n      resolverFactory,\n      options,\n      associatedObjectForCache,\n      layers = false\n    } = _ref;\n    super();\n    this.hooks = Object.freeze({\n      /** @type {AsyncSeriesBailHook<[ResolveData], Module | false | void>} */\n      resolve: new AsyncSeriesBailHook([\"resolveData\"]),\n      /** @type {HookMap<AsyncSeriesBailHook<[ResourceDataWithData, ResolveData], true | void>>} */\n      resolveForScheme: new HookMap(() => new AsyncSeriesBailHook([\"resourceData\", \"resolveData\"])),\n      /** @type {HookMap<AsyncSeriesBailHook<[ResourceDataWithData, ResolveData], true | void>>} */\n      resolveInScheme: new HookMap(() => new AsyncSeriesBailHook([\"resourceData\", \"resolveData\"])),\n      /** @type {AsyncSeriesBailHook<[ResolveData], Module>} */\n      factorize: new AsyncSeriesBailHook([\"resolveData\"]),\n      /** @type {AsyncSeriesBailHook<[ResolveData], false | void>} */\n      beforeResolve: new AsyncSeriesBailHook([\"resolveData\"]),\n      /** @type {AsyncSeriesBailHook<[ResolveData], false | void>} */\n      afterResolve: new AsyncSeriesBailHook([\"resolveData\"]),\n      /** @type {AsyncSeriesBailHook<[ResolveData[\"createData\"], ResolveData], Module | void>} */\n      createModule: new AsyncSeriesBailHook([\"createData\", \"resolveData\"]),\n      /** @type {SyncWaterfallHook<[Module, ResolveData[\"createData\"], ResolveData], Module>} */\n      module: new SyncWaterfallHook([\"module\", \"createData\", \"resolveData\"]),\n      createParser: new HookMap(() => new SyncBailHook([\"parserOptions\"])),\n      parser: new HookMap(() => new SyncHook([\"parser\", \"parserOptions\"])),\n      createGenerator: new HookMap(() => new SyncBailHook([\"generatorOptions\"])),\n      generator: new HookMap(() => new SyncHook([\"generator\", \"generatorOptions\"]))\n    });\n    this.resolverFactory = resolverFactory;\n    this.ruleSet = ruleSetCompiler.compile([{\n      rules: options.defaultRules\n    }, {\n      rules: options.rules\n    }]);\n    this.context = context || \"\";\n    this.fs = fs;\n    this._globalParserOptions = options.parser;\n    this._globalGeneratorOptions = options.generator;\n    /** @type {Map<string, WeakMap<Object, TODO>>} */\n    this.parserCache = new Map();\n    /** @type {Map<string, WeakMap<Object, Generator>>} */\n    this.generatorCache = new Map();\n    /** @type {Set<Module>} */\n    this._restoredUnsafeCacheEntries = new Set();\n    const cacheParseResource = parseResource.bindCache(associatedObjectForCache);\n    const cachedParseResourceWithoutFragment = parseResourceWithoutFragment.bindCache(associatedObjectForCache);\n    this._parseResourceWithoutFragment = cachedParseResourceWithoutFragment;\n    this.hooks.factorize.tapAsync({\n      name: \"NormalModuleFactory\",\n      stage: 100\n    }, (resolveData, callback) => {\n      this.hooks.resolve.callAsync(resolveData, (err, result) => {\n        if (err) return callback(err);\n\n        // Ignored\n        if (result === false) return callback();\n\n        // direct module\n        if (result instanceof Module) return callback(null, result);\n        if (typeof result === \"object\") throw new Error(deprecationChangedHookMessage(\"resolve\", this.hooks.resolve) + \" Returning a Module object will result in this module used as result.\");\n        this.hooks.afterResolve.callAsync(resolveData, (err, result) => {\n          if (err) return callback(err);\n          if (typeof result === \"object\") throw new Error(deprecationChangedHookMessage(\"afterResolve\", this.hooks.afterResolve));\n\n          // Ignored\n          if (result === false) return callback();\n          const createData = resolveData.createData;\n          this.hooks.createModule.callAsync(createData, resolveData, (err, createdModule) => {\n            if (!createdModule) {\n              if (!resolveData.request) {\n                return callback(new Error(\"Empty dependency (no request)\"));\n              }\n              createdModule = new NormalModule( /** @type {NormalModuleCreateData} */createData);\n            }\n            createdModule = this.hooks.module.call(createdModule, createData, resolveData);\n            return callback(null, createdModule);\n          });\n        });\n      });\n    });\n    this.hooks.resolve.tapAsync({\n      name: \"NormalModuleFactory\",\n      stage: 100\n    }, (data, callback) => {\n      const {\n        contextInfo,\n        context,\n        dependencies,\n        dependencyType,\n        request,\n        assertions,\n        resolveOptions,\n        fileDependencies,\n        missingDependencies,\n        contextDependencies\n      } = data;\n      const loaderResolver = this.getResolver(\"loader\");\n\n      /** @type {ResourceData | undefined} */\n      let matchResourceData = undefined;\n      /** @type {string} */\n      let unresolvedResource;\n      /** @type {ParsedLoaderRequest[]} */\n      let elements;\n      let noPreAutoLoaders = false;\n      let noAutoLoaders = false;\n      let noPrePostAutoLoaders = false;\n      const contextScheme = getScheme(context);\n      /** @type {string | undefined} */\n      let scheme = getScheme(request);\n      if (!scheme) {\n        /** @type {string} */\n        let requestWithoutMatchResource = request;\n        const matchResourceMatch = MATCH_RESOURCE_REGEX.exec(request);\n        if (matchResourceMatch) {\n          let matchResource = matchResourceMatch[1];\n          if (matchResource.charCodeAt(0) === 46) {\n            // 46 === \".\", 47 === \"/\"\n            const secondChar = matchResource.charCodeAt(1);\n            if (secondChar === 47 || secondChar === 46 && matchResource.charCodeAt(2) === 47) {\n              // if matchResources startsWith ../ or ./\n              matchResource = join(this.fs, context, matchResource);\n            }\n          }\n          matchResourceData = {\n            resource: matchResource,\n            ...cacheParseResource(matchResource)\n          };\n          requestWithoutMatchResource = request.slice(matchResourceMatch[0].length);\n        }\n        scheme = getScheme(requestWithoutMatchResource);\n        if (!scheme && !contextScheme) {\n          const firstChar = requestWithoutMatchResource.charCodeAt(0);\n          const secondChar = requestWithoutMatchResource.charCodeAt(1);\n          noPreAutoLoaders = firstChar === 45 && secondChar === 33; // startsWith \"-!\"\n          noAutoLoaders = noPreAutoLoaders || firstChar === 33; // startsWith \"!\"\n          noPrePostAutoLoaders = firstChar === 33 && secondChar === 33; // startsWith \"!!\";\n          const rawElements = requestWithoutMatchResource.slice(noPreAutoLoaders || noPrePostAutoLoaders ? 2 : noAutoLoaders ? 1 : 0).split(/!+/);\n          unresolvedResource = rawElements.pop();\n          elements = rawElements.map(el => {\n            const {\n              path,\n              query\n            } = cachedParseResourceWithoutFragment(el);\n            return {\n              loader: path,\n              options: query ? query.slice(1) : undefined\n            };\n          });\n          scheme = getScheme(unresolvedResource);\n        } else {\n          unresolvedResource = requestWithoutMatchResource;\n          elements = EMPTY_ELEMENTS;\n        }\n      } else {\n        unresolvedResource = request;\n        elements = EMPTY_ELEMENTS;\n      }\n      const resolveContext = {\n        fileDependencies,\n        missingDependencies,\n        contextDependencies\n      };\n\n      /** @type {ResourceDataWithData} */\n      let resourceData;\n      let loaders;\n      const continueCallback = needCalls(2, err => {\n        if (err) return callback(err);\n\n        // translate option idents\n        try {\n          for (const item of loaders) {\n            if (typeof item.options === \"string\" && item.options[0] === \"?\") {\n              const ident = item.options.slice(1);\n              if (ident === \"[[missing ident]]\") {\n                throw new Error(\"No ident is provided by referenced loader. \" + \"When using a function for Rule.use in config you need to \" + \"provide an 'ident' property for referenced loader options.\");\n              }\n              item.options = this.ruleSet.references.get(ident);\n              if (item.options === undefined) {\n                throw new Error(\"Invalid ident is provided by referenced loader\");\n              }\n              item.ident = ident;\n            }\n          }\n        } catch (e) {\n          return callback(e);\n        }\n        if (!resourceData) {\n          // ignored\n          return callback(null, dependencies[0].createIgnoredModule(context));\n        }\n        const userRequest = (matchResourceData !== undefined ? `${matchResourceData.resource}!=!` : \"\") + stringifyLoadersAndResource(loaders, resourceData.resource);\n        const settings = {};\n        const useLoadersPost = [];\n        const useLoaders = [];\n        const useLoadersPre = [];\n\n        // handle .webpack[] suffix\n        let resource;\n        let match;\n        if (matchResourceData && typeof (resource = matchResourceData.resource) === \"string\" && (match = /\\.webpack\\[([^\\]]+)\\]$/.exec(resource))) {\n          settings.type = match[1];\n          matchResourceData.resource = matchResourceData.resource.slice(0, -settings.type.length - 10);\n        } else {\n          settings.type = \"javascript/auto\";\n          const resourceDataForRules = matchResourceData || resourceData;\n          const result = this.ruleSet.exec({\n            resource: resourceDataForRules.path,\n            realResource: resourceData.path,\n            resourceQuery: resourceDataForRules.query,\n            resourceFragment: resourceDataForRules.fragment,\n            scheme,\n            assertions,\n            mimetype: matchResourceData ? \"\" : resourceData.data.mimetype || \"\",\n            dependency: dependencyType,\n            descriptionData: matchResourceData ? undefined : resourceData.data.descriptionFileData,\n            issuer: contextInfo.issuer,\n            compiler: contextInfo.compiler,\n            issuerLayer: contextInfo.issuerLayer || \"\"\n          });\n          for (const r of result) {\n            if (r.type === \"use\") {\n              if (!noAutoLoaders && !noPrePostAutoLoaders) {\n                useLoaders.push(r.value);\n              }\n            } else if (r.type === \"use-post\") {\n              if (!noPrePostAutoLoaders) {\n                useLoadersPost.push(r.value);\n              }\n            } else if (r.type === \"use-pre\") {\n              if (!noPreAutoLoaders && !noPrePostAutoLoaders) {\n                useLoadersPre.push(r.value);\n              }\n            } else if (typeof r.value === \"object\" && r.value !== null && typeof settings[r.type] === \"object\" && settings[r.type] !== null) {\n              settings[r.type] = cachedCleverMerge(settings[r.type], r.value);\n            } else {\n              settings[r.type] = r.value;\n            }\n          }\n        }\n        let postLoaders, normalLoaders, preLoaders;\n        const continueCallback = needCalls(3, err => {\n          if (err) {\n            return callback(err);\n          }\n          const allLoaders = postLoaders;\n          if (matchResourceData === undefined) {\n            for (const loader of loaders) allLoaders.push(loader);\n            for (const loader of normalLoaders) allLoaders.push(loader);\n          } else {\n            for (const loader of normalLoaders) allLoaders.push(loader);\n            for (const loader of loaders) allLoaders.push(loader);\n          }\n          for (const loader of preLoaders) allLoaders.push(loader);\n          let type = settings.type;\n          const resolveOptions = settings.resolve;\n          const layer = settings.layer;\n          if (layer !== undefined && !layers) {\n            return callback(new Error(\"'Rule.layer' is only allowed when 'experiments.layers' is enabled\"));\n          }\n          try {\n            Object.assign(data.createData, {\n              layer: layer === undefined ? contextInfo.issuerLayer || null : layer,\n              request: stringifyLoadersAndResource(allLoaders, resourceData.resource),\n              userRequest,\n              rawRequest: request,\n              loaders: allLoaders,\n              resource: resourceData.resource,\n              context: resourceData.context || getContext(resourceData.resource),\n              matchResource: matchResourceData ? matchResourceData.resource : undefined,\n              resourceResolveData: resourceData.data,\n              settings,\n              type,\n              parser: this.getParser(type, settings.parser),\n              parserOptions: settings.parser,\n              generator: this.getGenerator(type, settings.generator),\n              generatorOptions: settings.generator,\n              resolveOptions\n            });\n          } catch (e) {\n            return callback(e);\n          }\n          callback();\n        });\n        this.resolveRequestArray(contextInfo, this.context, useLoadersPost, loaderResolver, resolveContext, (err, result) => {\n          postLoaders = result;\n          continueCallback(err);\n        });\n        this.resolveRequestArray(contextInfo, this.context, useLoaders, loaderResolver, resolveContext, (err, result) => {\n          normalLoaders = result;\n          continueCallback(err);\n        });\n        this.resolveRequestArray(contextInfo, this.context, useLoadersPre, loaderResolver, resolveContext, (err, result) => {\n          preLoaders = result;\n          continueCallback(err);\n        });\n      });\n      this.resolveRequestArray(contextInfo, contextScheme ? this.context : context, elements, loaderResolver, resolveContext, (err, result) => {\n        if (err) return continueCallback(err);\n        loaders = result;\n        continueCallback();\n      });\n      const defaultResolve = context => {\n        if (/^($|\\?)/.test(unresolvedResource)) {\n          resourceData = {\n            resource: unresolvedResource,\n            data: {},\n            ...cacheParseResource(unresolvedResource)\n          };\n          continueCallback();\n        }\n\n        // resource without scheme and with path\n        else {\n          const normalResolver = this.getResolver(\"normal\", dependencyType ? cachedSetProperty(resolveOptions || EMPTY_RESOLVE_OPTIONS, \"dependencyType\", dependencyType) : resolveOptions);\n          this.resolveResource(contextInfo, context, unresolvedResource, normalResolver, resolveContext, (err, resolvedResource, resolvedResourceResolveData) => {\n            if (err) return continueCallback(err);\n            if (resolvedResource !== false) {\n              resourceData = {\n                resource: resolvedResource,\n                data: resolvedResourceResolveData,\n                ...cacheParseResource(resolvedResource)\n              };\n            }\n            continueCallback();\n          });\n        }\n      };\n\n      // resource with scheme\n      if (scheme) {\n        resourceData = {\n          resource: unresolvedResource,\n          data: {},\n          path: undefined,\n          query: undefined,\n          fragment: undefined,\n          context: undefined\n        };\n        this.hooks.resolveForScheme.for(scheme).callAsync(resourceData, data, err => {\n          if (err) return continueCallback(err);\n          continueCallback();\n        });\n      }\n\n      // resource within scheme\n      else if (contextScheme) {\n        resourceData = {\n          resource: unresolvedResource,\n          data: {},\n          path: undefined,\n          query: undefined,\n          fragment: undefined,\n          context: undefined\n        };\n        this.hooks.resolveInScheme.for(contextScheme).callAsync(resourceData, data, (err, handled) => {\n          if (err) return continueCallback(err);\n          if (!handled) return defaultResolve(this.context);\n          continueCallback();\n        });\n      }\n\n      // resource without scheme and without path\n      else defaultResolve(context);\n    });\n  }\n  cleanupForCache() {\n    for (const module of this._restoredUnsafeCacheEntries) {\n      ChunkGraph.clearChunkGraphForModule(module);\n      ModuleGraph.clearModuleGraphForModule(module);\n      module.cleanupForCache();\n    }\n  }\n\n  /**\r\n   * @param {ModuleFactoryCreateData} data data object\r\n   * @param {function(Error=, ModuleFactoryResult=): void} callback callback\r\n   * @returns {void}\r\n   */\n  create(data, callback) {\n    const dependencies = /** @type {ModuleDependency[]} */data.dependencies;\n    const context = data.context || this.context;\n    const resolveOptions = data.resolveOptions || EMPTY_RESOLVE_OPTIONS;\n    const dependency = dependencies[0];\n    const request = dependency.request;\n    const assertions = dependency.assertions;\n    const contextInfo = data.contextInfo;\n    const fileDependencies = new LazySet();\n    const missingDependencies = new LazySet();\n    const contextDependencies = new LazySet();\n    const dependencyType = dependencies.length > 0 && dependencies[0].category || \"\";\n    /** @type {ResolveData} */\n    const resolveData = {\n      contextInfo,\n      resolveOptions,\n      context,\n      request,\n      assertions,\n      dependencies,\n      dependencyType,\n      fileDependencies,\n      missingDependencies,\n      contextDependencies,\n      createData: {},\n      cacheable: true\n    };\n    this.hooks.beforeResolve.callAsync(resolveData, (err, result) => {\n      if (err) {\n        return callback(err, {\n          fileDependencies,\n          missingDependencies,\n          contextDependencies,\n          cacheable: false\n        });\n      }\n\n      // Ignored\n      if (result === false) {\n        return callback(null, {\n          fileDependencies,\n          missingDependencies,\n          contextDependencies,\n          cacheable: resolveData.cacheable\n        });\n      }\n      if (typeof result === \"object\") throw new Error(deprecationChangedHookMessage(\"beforeResolve\", this.hooks.beforeResolve));\n      this.hooks.factorize.callAsync(resolveData, (err, module) => {\n        if (err) {\n          return callback(err, {\n            fileDependencies,\n            missingDependencies,\n            contextDependencies,\n            cacheable: false\n          });\n        }\n        const factoryResult = {\n          module,\n          fileDependencies,\n          missingDependencies,\n          contextDependencies,\n          cacheable: resolveData.cacheable\n        };\n        callback(null, factoryResult);\n      });\n    });\n  }\n  resolveResource(contextInfo, context, unresolvedResource, resolver, resolveContext, callback) {\n    resolver.resolve(contextInfo, context, unresolvedResource, resolveContext, (err, resolvedResource, resolvedResourceResolveData) => {\n      if (err) {\n        return this._resolveResourceErrorHints(err, contextInfo, context, unresolvedResource, resolver, resolveContext, (err2, hints) => {\n          if (err2) {\n            err.message += `\nAn fatal error happened during resolving additional hints for this error: ${err2.message}`;\n            err.stack += `\n\nAn fatal error happened during resolving additional hints for this error:\n${err2.stack}`;\n            return callback(err);\n          }\n          if (hints && hints.length > 0) {\n            err.message += `\n${hints.join(\"\\n\\n\")}`;\n          }\n          callback(err);\n        });\n      }\n      callback(err, resolvedResource, resolvedResourceResolveData);\n    });\n  }\n  _resolveResourceErrorHints(error, contextInfo, context, unresolvedResource, resolver, resolveContext, callback) {\n    asyncLib.parallel([callback => {\n      if (!resolver.options.fullySpecified) return callback();\n      resolver.withOptions({\n        fullySpecified: false\n      }).resolve(contextInfo, context, unresolvedResource, resolveContext, (err, resolvedResource) => {\n        if (!err && resolvedResource) {\n          const resource = parseResource(resolvedResource).path.replace(/^.*[\\\\/]/, \"\");\n          return callback(null, `Did you mean '${resource}'?\nBREAKING CHANGE: The request '${unresolvedResource}' failed to resolve only because it was resolved as fully specified\n(probably because the origin is strict EcmaScript Module, e. g. a module with javascript mimetype, a '*.mjs' file, or a '*.js' file where the package.json contains '\"type\": \"module\"').\nThe extension in the request is mandatory for it to be fully specified.\nAdd the extension to the request.`);\n        }\n        callback();\n      });\n    }, callback => {\n      if (!resolver.options.enforceExtension) return callback();\n      resolver.withOptions({\n        enforceExtension: false,\n        extensions: []\n      }).resolve(contextInfo, context, unresolvedResource, resolveContext, (err, resolvedResource) => {\n        if (!err && resolvedResource) {\n          let hint = \"\";\n          const match = /(\\.[^.]+)(\\?|$)/.exec(unresolvedResource);\n          if (match) {\n            const fixedRequest = unresolvedResource.replace(/(\\.[^.]+)(\\?|$)/, \"$2\");\n            if (resolver.options.extensions.has(match[1])) {\n              hint = `Did you mean '${fixedRequest}'?`;\n            } else {\n              hint = `Did you mean '${fixedRequest}'? Also note that '${match[1]}' is not in 'resolve.extensions' yet and need to be added for this to work?`;\n            }\n          } else {\n            hint = `Did you mean to omit the extension or to remove 'resolve.enforceExtension'?`;\n          }\n          return callback(null, `The request '${unresolvedResource}' failed to resolve only because 'resolve.enforceExtension' was specified.\n${hint}\nIncluding the extension in the request is no longer possible. Did you mean to enforce including the extension in requests with 'resolve.extensions: []' instead?`);\n        }\n        callback();\n      });\n    }, callback => {\n      if (/^\\.\\.?\\//.test(unresolvedResource) || resolver.options.preferRelative) {\n        return callback();\n      }\n      resolver.resolve(contextInfo, context, `./${unresolvedResource}`, resolveContext, (err, resolvedResource) => {\n        if (err || !resolvedResource) return callback();\n        const moduleDirectories = resolver.options.modules.map(m => Array.isArray(m) ? m.join(\", \") : m).join(\", \");\n        callback(null, `Did you mean './${unresolvedResource}'?\nRequests that should resolve in the current directory need to start with './'.\nRequests that start with a name are treated as module requests and resolve within module directories (${moduleDirectories}).\nIf changing the source code is not an option there is also a resolve options called 'preferRelative' which tries to resolve these kind of requests in the current directory too.`);\n      });\n    }], (err, hints) => {\n      if (err) return callback(err);\n      callback(null, hints.filter(Boolean));\n    });\n  }\n  resolveRequestArray(contextInfo, context, array, resolver, resolveContext, callback) {\n    if (array.length === 0) return callback(null, array);\n    asyncLib.map(array, (item, callback) => {\n      resolver.resolve(contextInfo, context, item.loader, resolveContext, (err, result) => {\n        if (err && /^[^/]*$/.test(item.loader) && !/-loader$/.test(item.loader)) {\n          return resolver.resolve(contextInfo, context, item.loader + \"-loader\", resolveContext, err2 => {\n            if (!err2) {\n              err.message = err.message + \"\\n\" + \"BREAKING CHANGE: It's no longer allowed to omit the '-loader' suffix when using loaders.\\n\" + `                 You need to specify '${item.loader}-loader' instead of '${item.loader}',\\n` + \"                 see https://webpack.js.org/migrate/3/#automatic-loader-module-name-extension-removed\";\n            }\n            callback(err);\n          });\n        }\n        if (err) return callback(err);\n        const parsedResult = this._parseResourceWithoutFragment(result);\n        const resolved = {\n          loader: parsedResult.path,\n          options: item.options === undefined ? parsedResult.query ? parsedResult.query.slice(1) : undefined : item.options,\n          ident: item.options === undefined ? undefined : item.ident\n        };\n        return callback(null, resolved);\n      });\n    }, callback);\n  }\n  getParser(type) {\n    let parserOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_PARSER_OPTIONS;\n    let cache = this.parserCache.get(type);\n    if (cache === undefined) {\n      cache = new WeakMap();\n      this.parserCache.set(type, cache);\n    }\n    let parser = cache.get(parserOptions);\n    if (parser === undefined) {\n      parser = this.createParser(type, parserOptions);\n      cache.set(parserOptions, parser);\n    }\n    return parser;\n  }\n\n  /**\r\n   * @param {string} type type\r\n   * @param {{[k: string]: any}} parserOptions parser options\r\n   * @returns {Parser} parser\r\n   */\n  createParser(type) {\n    let parserOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    parserOptions = mergeGlobalOptions(this._globalParserOptions, type, parserOptions);\n    const parser = this.hooks.createParser.for(type).call(parserOptions);\n    if (!parser) {\n      throw new Error(`No parser registered for ${type}`);\n    }\n    this.hooks.parser.for(type).call(parser, parserOptions);\n    return parser;\n  }\n  getGenerator(type) {\n    let generatorOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_GENERATOR_OPTIONS;\n    let cache = this.generatorCache.get(type);\n    if (cache === undefined) {\n      cache = new WeakMap();\n      this.generatorCache.set(type, cache);\n    }\n    let generator = cache.get(generatorOptions);\n    if (generator === undefined) {\n      generator = this.createGenerator(type, generatorOptions);\n      cache.set(generatorOptions, generator);\n    }\n    return generator;\n  }\n  createGenerator(type) {\n    let generatorOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    generatorOptions = mergeGlobalOptions(this._globalGeneratorOptions, type, generatorOptions);\n    const generator = this.hooks.createGenerator.for(type).call(generatorOptions);\n    if (!generator) {\n      throw new Error(`No generator registered for ${type}`);\n    }\n    this.hooks.generator.for(type).call(generator, generatorOptions);\n    return generator;\n  }\n  getResolver(type, resolveOptions) {\n    return this.resolverFactory.get(type, resolveOptions);\n  }\n}\nmodule.exports = NormalModuleFactory;","map":{"version":3,"names":["getContext","require","asyncLib","AsyncSeriesBailHook","SyncWaterfallHook","SyncBailHook","SyncHook","HookMap","ChunkGraph","Module","ModuleFactory","ModuleGraph","NormalModule","BasicEffectRulePlugin","BasicMatcherRulePlugin","ObjectMatcherRulePlugin","RuleSetCompiler","UseEffectRulePlugin","LazySet","getScheme","cachedCleverMerge","cachedSetProperty","join","parseResource","parseResourceWithoutFragment","EMPTY_RESOLVE_OPTIONS","EMPTY_PARSER_OPTIONS","EMPTY_GENERATOR_OPTIONS","EMPTY_ELEMENTS","MATCH_RESOURCE_REGEX","loaderToIdent","data","options","loader","Error","ident","JSON","stringify","stringifyLoadersAndResource","loaders","resource","str","needCalls","times","callback","err","NaN","mergeGlobalOptions","globalOptions","type","localOptions","parts","split","result","current","part","undefined","deprecationChangedHookMessage","name","hook","names","taps","map","tapped","ruleSetCompiler","NormalModuleFactory","constructor","context","fs","resolverFactory","associatedObjectForCache","layers","hooks","Object","freeze","resolve","resolveForScheme","resolveInScheme","factorize","beforeResolve","afterResolve","createModule","module","createParser","parser","createGenerator","generator","ruleSet","compile","rules","defaultRules","_globalParserOptions","_globalGeneratorOptions","parserCache","Map","generatorCache","_restoredUnsafeCacheEntries","Set","cacheParseResource","bindCache","cachedParseResourceWithoutFragment","_parseResourceWithoutFragment","tapAsync","stage","resolveData","callAsync","createData","createdModule","request","call","contextInfo","dependencies","dependencyType","assertions","resolveOptions","fileDependencies","missingDependencies","contextDependencies","loaderResolver","getResolver","matchResourceData","unresolvedResource","elements","noPreAutoLoaders","noAutoLoaders","noPrePostAutoLoaders","contextScheme","scheme","requestWithoutMatchResource","matchResourceMatch","exec","matchResource","charCodeAt","secondChar","slice","length","firstChar","rawElements","pop","el","path","query","resolveContext","resourceData","continueCallback","item","references","get","e","createIgnoredModule","userRequest","settings","useLoadersPost","useLoaders","useLoadersPre","match","resourceDataForRules","realResource","resourceQuery","resourceFragment","fragment","mimetype","dependency","descriptionData","descriptionFileData","issuer","compiler","issuerLayer","r","push","value","postLoaders","normalLoaders","preLoaders","allLoaders","layer","assign","rawRequest","resourceResolveData","getParser","parserOptions","getGenerator","generatorOptions","resolveRequestArray","defaultResolve","test","normalResolver","resolveResource","resolvedResource","resolvedResourceResolveData","for","handled","cleanupForCache","clearChunkGraphForModule","clearModuleGraphForModule","create","category","cacheable","factoryResult","resolver","_resolveResourceErrorHints","err2","hints","message","stack","error","parallel","fullySpecified","withOptions","replace","enforceExtension","extensions","hint","fixedRequest","has","preferRelative","moduleDirectories","modules","m","Array","isArray","filter","Boolean","array","parsedResult","resolved","cache","WeakMap","set","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/NormalModuleFactory.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { getContext } = require(\"loader-runner\");\r\nconst asyncLib = require(\"neo-async\");\r\nconst {\r\n\tAsyncSeriesBailHook,\r\n\tSyncWaterfallHook,\r\n\tSyncBailHook,\r\n\tSyncHook,\r\n\tHookMap\r\n} = require(\"tapable\");\r\nconst ChunkGraph = require(\"./ChunkGraph\");\r\nconst Module = require(\"./Module\");\r\nconst ModuleFactory = require(\"./ModuleFactory\");\r\nconst ModuleGraph = require(\"./ModuleGraph\");\r\nconst NormalModule = require(\"./NormalModule\");\r\nconst BasicEffectRulePlugin = require(\"./rules/BasicEffectRulePlugin\");\r\nconst BasicMatcherRulePlugin = require(\"./rules/BasicMatcherRulePlugin\");\r\nconst ObjectMatcherRulePlugin = require(\"./rules/ObjectMatcherRulePlugin\");\r\nconst RuleSetCompiler = require(\"./rules/RuleSetCompiler\");\r\nconst UseEffectRulePlugin = require(\"./rules/UseEffectRulePlugin\");\r\nconst LazySet = require(\"./util/LazySet\");\r\nconst { getScheme } = require(\"./util/URLAbsoluteSpecifier\");\r\nconst { cachedCleverMerge, cachedSetProperty } = require(\"./util/cleverMerge\");\r\nconst { join } = require(\"./util/fs\");\r\nconst {\r\n\tparseResource,\r\n\tparseResourceWithoutFragment\r\n} = require(\"./util/identifier\");\r\n\r\n/** @typedef {import(\"../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\r\n/** @typedef {import(\"../declarations/WebpackOptions\").RuleSetRule} RuleSetRule */\r\n/** @typedef {import(\"./Generator\")} Generator */\r\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryCreateData} ModuleFactoryCreateData */\r\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\r\n/** @typedef {import(\"./NormalModule\").NormalModuleCreateData} NormalModuleCreateData */\r\n/** @typedef {import(\"./Parser\")} Parser */\r\n/** @typedef {import(\"./ResolverFactory\")} ResolverFactory */\r\n/** @typedef {import(\"./dependencies/ModuleDependency\")} ModuleDependency */\r\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\r\n\r\n/** @typedef {Pick<RuleSetRule, 'type'|'sideEffects'|'parser'|'generator'|'resolve'|'layer'>} ModuleSettings */\r\n/** @typedef {Partial<NormalModuleCreateData & {settings: ModuleSettings}>} CreateData */\r\n\r\n/**\r\n * @typedef {Object} ResolveData\r\n * @property {ModuleFactoryCreateData[\"contextInfo\"]} contextInfo\r\n * @property {ModuleFactoryCreateData[\"resolveOptions\"]} resolveOptions\r\n * @property {string} context\r\n * @property {string} request\r\n * @property {Record<string, any> | undefined} assertions\r\n * @property {ModuleDependency[]} dependencies\r\n * @property {string} dependencyType\r\n * @property {CreateData} createData\r\n * @property {LazySet<string>} fileDependencies\r\n * @property {LazySet<string>} missingDependencies\r\n * @property {LazySet<string>} contextDependencies\r\n * @property {boolean} cacheable allow to use the unsafe cache\r\n */\r\n\r\n/**\r\n * @typedef {Object} ResourceData\r\n * @property {string} resource\r\n * @property {string} path\r\n * @property {string} query\r\n * @property {string} fragment\r\n * @property {string=} context\r\n */\r\n\r\n/** @typedef {ResourceData & { data: Record<string, any> }} ResourceDataWithData */\r\n\r\n/** @typedef {Object} ParsedLoaderRequest\r\n * @property {string} loader loader\r\n * @property {string|undefined} options options\r\n */\r\n\r\nconst EMPTY_RESOLVE_OPTIONS = {};\r\nconst EMPTY_PARSER_OPTIONS = {};\r\nconst EMPTY_GENERATOR_OPTIONS = {};\r\nconst EMPTY_ELEMENTS = [];\r\n\r\nconst MATCH_RESOURCE_REGEX = /^([^!]+)!=!/;\r\n\r\nconst loaderToIdent = data => {\r\n\tif (!data.options) {\r\n\t\treturn data.loader;\r\n\t}\r\n\tif (typeof data.options === \"string\") {\r\n\t\treturn data.loader + \"?\" + data.options;\r\n\t}\r\n\tif (typeof data.options !== \"object\") {\r\n\t\tthrow new Error(\"loader options must be string or object\");\r\n\t}\r\n\tif (data.ident) {\r\n\t\treturn data.loader + \"??\" + data.ident;\r\n\t}\r\n\treturn data.loader + \"?\" + JSON.stringify(data.options);\r\n};\r\n\r\nconst stringifyLoadersAndResource = (loaders, resource) => {\r\n\tlet str = \"\";\r\n\tfor (const loader of loaders) {\r\n\t\tstr += loaderToIdent(loader) + \"!\";\r\n\t}\r\n\treturn str + resource;\r\n};\r\n\r\nconst needCalls = (times, callback) => {\r\n\treturn err => {\r\n\t\tif (--times === 0) {\r\n\t\t\treturn callback(err);\r\n\t\t}\r\n\t\tif (err && times > 0) {\r\n\t\t\ttimes = NaN;\r\n\t\t\treturn callback(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst mergeGlobalOptions = (globalOptions, type, localOptions) => {\r\n\tconst parts = type.split(\"/\");\r\n\tlet result;\r\n\tlet current = \"\";\r\n\tfor (const part of parts) {\r\n\t\tcurrent = current ? `${current}/${part}` : part;\r\n\t\tconst options = globalOptions[current];\r\n\t\tif (typeof options === \"object\") {\r\n\t\t\tif (result === undefined) {\r\n\t\t\t\tresult = options;\r\n\t\t\t} else {\r\n\t\t\t\tresult = cachedCleverMerge(result, options);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (result === undefined) {\r\n\t\treturn localOptions;\r\n\t} else {\r\n\t\treturn cachedCleverMerge(result, localOptions);\r\n\t}\r\n};\r\n\r\n// TODO webpack 6 remove\r\nconst deprecationChangedHookMessage = (name, hook) => {\r\n\tconst names = hook.taps\r\n\t\t.map(tapped => {\r\n\t\t\treturn tapped.name;\r\n\t\t})\r\n\t\t.join(\", \");\r\n\r\n\treturn (\r\n\t\t`NormalModuleFactory.${name} (${names}) is no longer a waterfall hook, but a bailing hook instead. ` +\r\n\t\t\"Do not return the passed object, but modify it instead. \" +\r\n\t\t\"Returning false will ignore the request and results in no module created.\"\r\n\t);\r\n};\r\n\r\nconst ruleSetCompiler = new RuleSetCompiler([\r\n\tnew BasicMatcherRulePlugin(\"test\", \"resource\"),\r\n\tnew BasicMatcherRulePlugin(\"scheme\"),\r\n\tnew BasicMatcherRulePlugin(\"mimetype\"),\r\n\tnew BasicMatcherRulePlugin(\"dependency\"),\r\n\tnew BasicMatcherRulePlugin(\"include\", \"resource\"),\r\n\tnew BasicMatcherRulePlugin(\"exclude\", \"resource\", true),\r\n\tnew BasicMatcherRulePlugin(\"resource\"),\r\n\tnew BasicMatcherRulePlugin(\"resourceQuery\"),\r\n\tnew BasicMatcherRulePlugin(\"resourceFragment\"),\r\n\tnew BasicMatcherRulePlugin(\"realResource\"),\r\n\tnew BasicMatcherRulePlugin(\"issuer\"),\r\n\tnew BasicMatcherRulePlugin(\"compiler\"),\r\n\tnew BasicMatcherRulePlugin(\"issuerLayer\"),\r\n\tnew ObjectMatcherRulePlugin(\"assert\", \"assertions\"),\r\n\tnew ObjectMatcherRulePlugin(\"descriptionData\"),\r\n\tnew BasicEffectRulePlugin(\"type\"),\r\n\tnew BasicEffectRulePlugin(\"sideEffects\"),\r\n\tnew BasicEffectRulePlugin(\"parser\"),\r\n\tnew BasicEffectRulePlugin(\"resolve\"),\r\n\tnew BasicEffectRulePlugin(\"generator\"),\r\n\tnew BasicEffectRulePlugin(\"layer\"),\r\n\tnew UseEffectRulePlugin()\r\n]);\r\n\r\nclass NormalModuleFactory extends ModuleFactory {\r\n\t/**\r\n\t * @param {Object} param params\r\n\t * @param {string=} param.context context\r\n\t * @param {InputFileSystem} param.fs file system\r\n\t * @param {ResolverFactory} param.resolverFactory resolverFactory\r\n\t * @param {ModuleOptions} param.options options\r\n\t * @param {Object=} param.associatedObjectForCache an object to which the cache will be attached\r\n\t * @param {boolean=} param.layers enable layers\r\n\t */\r\n\tconstructor({\r\n\t\tcontext,\r\n\t\tfs,\r\n\t\tresolverFactory,\r\n\t\toptions,\r\n\t\tassociatedObjectForCache,\r\n\t\tlayers = false\r\n\t}) {\r\n\t\tsuper();\r\n\t\tthis.hooks = Object.freeze({\r\n\t\t\t/** @type {AsyncSeriesBailHook<[ResolveData], Module | false | void>} */\r\n\t\t\tresolve: new AsyncSeriesBailHook([\"resolveData\"]),\r\n\t\t\t/** @type {HookMap<AsyncSeriesBailHook<[ResourceDataWithData, ResolveData], true | void>>} */\r\n\t\t\tresolveForScheme: new HookMap(\r\n\t\t\t\t() => new AsyncSeriesBailHook([\"resourceData\", \"resolveData\"])\r\n\t\t\t),\r\n\t\t\t/** @type {HookMap<AsyncSeriesBailHook<[ResourceDataWithData, ResolveData], true | void>>} */\r\n\t\t\tresolveInScheme: new HookMap(\r\n\t\t\t\t() => new AsyncSeriesBailHook([\"resourceData\", \"resolveData\"])\r\n\t\t\t),\r\n\t\t\t/** @type {AsyncSeriesBailHook<[ResolveData], Module>} */\r\n\t\t\tfactorize: new AsyncSeriesBailHook([\"resolveData\"]),\r\n\t\t\t/** @type {AsyncSeriesBailHook<[ResolveData], false | void>} */\r\n\t\t\tbeforeResolve: new AsyncSeriesBailHook([\"resolveData\"]),\r\n\t\t\t/** @type {AsyncSeriesBailHook<[ResolveData], false | void>} */\r\n\t\t\tafterResolve: new AsyncSeriesBailHook([\"resolveData\"]),\r\n\t\t\t/** @type {AsyncSeriesBailHook<[ResolveData[\"createData\"], ResolveData], Module | void>} */\r\n\t\t\tcreateModule: new AsyncSeriesBailHook([\"createData\", \"resolveData\"]),\r\n\t\t\t/** @type {SyncWaterfallHook<[Module, ResolveData[\"createData\"], ResolveData], Module>} */\r\n\t\t\tmodule: new SyncWaterfallHook([\"module\", \"createData\", \"resolveData\"]),\r\n\t\t\tcreateParser: new HookMap(() => new SyncBailHook([\"parserOptions\"])),\r\n\t\t\tparser: new HookMap(() => new SyncHook([\"parser\", \"parserOptions\"])),\r\n\t\t\tcreateGenerator: new HookMap(\r\n\t\t\t\t() => new SyncBailHook([\"generatorOptions\"])\r\n\t\t\t),\r\n\t\t\tgenerator: new HookMap(\r\n\t\t\t\t() => new SyncHook([\"generator\", \"generatorOptions\"])\r\n\t\t\t)\r\n\t\t});\r\n\t\tthis.resolverFactory = resolverFactory;\r\n\t\tthis.ruleSet = ruleSetCompiler.compile([\r\n\t\t\t{\r\n\t\t\t\trules: options.defaultRules\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trules: options.rules\r\n\t\t\t}\r\n\t\t]);\r\n\t\tthis.context = context || \"\";\r\n\t\tthis.fs = fs;\r\n\t\tthis._globalParserOptions = options.parser;\r\n\t\tthis._globalGeneratorOptions = options.generator;\r\n\t\t/** @type {Map<string, WeakMap<Object, TODO>>} */\r\n\t\tthis.parserCache = new Map();\r\n\t\t/** @type {Map<string, WeakMap<Object, Generator>>} */\r\n\t\tthis.generatorCache = new Map();\r\n\t\t/** @type {Set<Module>} */\r\n\t\tthis._restoredUnsafeCacheEntries = new Set();\r\n\r\n\t\tconst cacheParseResource = parseResource.bindCache(\r\n\t\t\tassociatedObjectForCache\r\n\t\t);\r\n\t\tconst cachedParseResourceWithoutFragment =\r\n\t\t\tparseResourceWithoutFragment.bindCache(associatedObjectForCache);\r\n\t\tthis._parseResourceWithoutFragment = cachedParseResourceWithoutFragment;\r\n\r\n\t\tthis.hooks.factorize.tapAsync(\r\n\t\t\t{\r\n\t\t\t\tname: \"NormalModuleFactory\",\r\n\t\t\t\tstage: 100\r\n\t\t\t},\r\n\t\t\t(resolveData, callback) => {\r\n\t\t\t\tthis.hooks.resolve.callAsync(resolveData, (err, result) => {\r\n\t\t\t\t\tif (err) return callback(err);\r\n\r\n\t\t\t\t\t// Ignored\r\n\t\t\t\t\tif (result === false) return callback();\r\n\r\n\t\t\t\t\t// direct module\r\n\t\t\t\t\tif (result instanceof Module) return callback(null, result);\r\n\r\n\t\t\t\t\tif (typeof result === \"object\")\r\n\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\tdeprecationChangedHookMessage(\"resolve\", this.hooks.resolve) +\r\n\t\t\t\t\t\t\t\t\" Returning a Module object will result in this module used as result.\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.hooks.afterResolve.callAsync(resolveData, (err, result) => {\r\n\t\t\t\t\t\tif (err) return callback(err);\r\n\r\n\t\t\t\t\t\tif (typeof result === \"object\")\r\n\t\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\tdeprecationChangedHookMessage(\r\n\t\t\t\t\t\t\t\t\t\"afterResolve\",\r\n\t\t\t\t\t\t\t\t\tthis.hooks.afterResolve\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// Ignored\r\n\t\t\t\t\t\tif (result === false) return callback();\r\n\r\n\t\t\t\t\t\tconst createData = resolveData.createData;\r\n\r\n\t\t\t\t\t\tthis.hooks.createModule.callAsync(\r\n\t\t\t\t\t\t\tcreateData,\r\n\t\t\t\t\t\t\tresolveData,\r\n\t\t\t\t\t\t\t(err, createdModule) => {\r\n\t\t\t\t\t\t\t\tif (!createdModule) {\r\n\t\t\t\t\t\t\t\t\tif (!resolveData.request) {\r\n\t\t\t\t\t\t\t\t\t\treturn callback(new Error(\"Empty dependency (no request)\"));\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tcreatedModule = new NormalModule(\r\n\t\t\t\t\t\t\t\t\t\t/** @type {NormalModuleCreateData} */ (createData)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcreatedModule = this.hooks.module.call(\r\n\t\t\t\t\t\t\t\t\tcreatedModule,\r\n\t\t\t\t\t\t\t\t\tcreateData,\r\n\t\t\t\t\t\t\t\t\tresolveData\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\treturn callback(null, createdModule);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.hooks.resolve.tapAsync(\r\n\t\t\t{\r\n\t\t\t\tname: \"NormalModuleFactory\",\r\n\t\t\t\tstage: 100\r\n\t\t\t},\r\n\t\t\t(data, callback) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tdependencies,\r\n\t\t\t\t\tdependencyType,\r\n\t\t\t\t\trequest,\r\n\t\t\t\t\tassertions,\r\n\t\t\t\t\tresolveOptions,\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies\r\n\t\t\t\t} = data;\r\n\t\t\t\tconst loaderResolver = this.getResolver(\"loader\");\r\n\r\n\t\t\t\t/** @type {ResourceData | undefined} */\r\n\t\t\t\tlet matchResourceData = undefined;\r\n\t\t\t\t/** @type {string} */\r\n\t\t\t\tlet unresolvedResource;\r\n\t\t\t\t/** @type {ParsedLoaderRequest[]} */\r\n\t\t\t\tlet elements;\r\n\t\t\t\tlet noPreAutoLoaders = false;\r\n\t\t\t\tlet noAutoLoaders = false;\r\n\t\t\t\tlet noPrePostAutoLoaders = false;\r\n\r\n\t\t\t\tconst contextScheme = getScheme(context);\r\n\t\t\t\t/** @type {string | undefined} */\r\n\t\t\t\tlet scheme = getScheme(request);\r\n\r\n\t\t\t\tif (!scheme) {\r\n\t\t\t\t\t/** @type {string} */\r\n\t\t\t\t\tlet requestWithoutMatchResource = request;\r\n\t\t\t\t\tconst matchResourceMatch = MATCH_RESOURCE_REGEX.exec(request);\r\n\t\t\t\t\tif (matchResourceMatch) {\r\n\t\t\t\t\t\tlet matchResource = matchResourceMatch[1];\r\n\t\t\t\t\t\tif (matchResource.charCodeAt(0) === 46) {\r\n\t\t\t\t\t\t\t// 46 === \".\", 47 === \"/\"\r\n\t\t\t\t\t\t\tconst secondChar = matchResource.charCodeAt(1);\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tsecondChar === 47 ||\r\n\t\t\t\t\t\t\t\t(secondChar === 46 && matchResource.charCodeAt(2) === 47)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t// if matchResources startsWith ../ or ./\r\n\t\t\t\t\t\t\t\tmatchResource = join(this.fs, context, matchResource);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatchResourceData = {\r\n\t\t\t\t\t\t\tresource: matchResource,\r\n\t\t\t\t\t\t\t...cacheParseResource(matchResource)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\trequestWithoutMatchResource = request.slice(\r\n\t\t\t\t\t\t\tmatchResourceMatch[0].length\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscheme = getScheme(requestWithoutMatchResource);\r\n\r\n\t\t\t\t\tif (!scheme && !contextScheme) {\r\n\t\t\t\t\t\tconst firstChar = requestWithoutMatchResource.charCodeAt(0);\r\n\t\t\t\t\t\tconst secondChar = requestWithoutMatchResource.charCodeAt(1);\r\n\t\t\t\t\t\tnoPreAutoLoaders = firstChar === 45 && secondChar === 33; // startsWith \"-!\"\r\n\t\t\t\t\t\tnoAutoLoaders = noPreAutoLoaders || firstChar === 33; // startsWith \"!\"\r\n\t\t\t\t\t\tnoPrePostAutoLoaders = firstChar === 33 && secondChar === 33; // startsWith \"!!\";\r\n\t\t\t\t\t\tconst rawElements = requestWithoutMatchResource\r\n\t\t\t\t\t\t\t.slice(\r\n\t\t\t\t\t\t\t\tnoPreAutoLoaders || noPrePostAutoLoaders\r\n\t\t\t\t\t\t\t\t\t? 2\r\n\t\t\t\t\t\t\t\t\t: noAutoLoaders\r\n\t\t\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.split(/!+/);\r\n\t\t\t\t\t\tunresolvedResource = rawElements.pop();\r\n\t\t\t\t\t\telements = rawElements.map(el => {\r\n\t\t\t\t\t\t\tconst { path, query } = cachedParseResourceWithoutFragment(el);\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tloader: path,\r\n\t\t\t\t\t\t\t\toptions: query ? query.slice(1) : undefined\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tscheme = getScheme(unresolvedResource);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tunresolvedResource = requestWithoutMatchResource;\r\n\t\t\t\t\t\telements = EMPTY_ELEMENTS;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tunresolvedResource = request;\r\n\t\t\t\t\telements = EMPTY_ELEMENTS;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst resolveContext = {\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/** @type {ResourceDataWithData} */\r\n\t\t\t\tlet resourceData;\r\n\r\n\t\t\t\tlet loaders;\r\n\r\n\t\t\t\tconst continueCallback = needCalls(2, err => {\r\n\t\t\t\t\tif (err) return callback(err);\r\n\r\n\t\t\t\t\t// translate option idents\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tfor (const item of loaders) {\r\n\t\t\t\t\t\t\tif (typeof item.options === \"string\" && item.options[0] === \"?\") {\r\n\t\t\t\t\t\t\t\tconst ident = item.options.slice(1);\r\n\t\t\t\t\t\t\t\tif (ident === \"[[missing ident]]\") {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\t\t\t\"No ident is provided by referenced loader. \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\"When using a function for Rule.use in config you need to \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\"provide an 'ident' property for referenced loader options.\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\titem.options = this.ruleSet.references.get(ident);\r\n\t\t\t\t\t\t\t\tif (item.options === undefined) {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\t\t\t\"Invalid ident is provided by referenced loader\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\titem.ident = ident;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\treturn callback(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!resourceData) {\r\n\t\t\t\t\t\t// ignored\r\n\t\t\t\t\t\treturn callback(null, dependencies[0].createIgnoredModule(context));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst userRequest =\r\n\t\t\t\t\t\t(matchResourceData !== undefined\r\n\t\t\t\t\t\t\t? `${matchResourceData.resource}!=!`\r\n\t\t\t\t\t\t\t: \"\") +\r\n\t\t\t\t\t\tstringifyLoadersAndResource(loaders, resourceData.resource);\r\n\r\n\t\t\t\t\tconst settings = {};\r\n\t\t\t\t\tconst useLoadersPost = [];\r\n\t\t\t\t\tconst useLoaders = [];\r\n\t\t\t\t\tconst useLoadersPre = [];\r\n\r\n\t\t\t\t\t// handle .webpack[] suffix\r\n\t\t\t\t\tlet resource;\r\n\t\t\t\t\tlet match;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmatchResourceData &&\r\n\t\t\t\t\t\ttypeof (resource = matchResourceData.resource) === \"string\" &&\r\n\t\t\t\t\t\t(match = /\\.webpack\\[([^\\]]+)\\]$/.exec(resource))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tsettings.type = match[1];\r\n\t\t\t\t\t\tmatchResourceData.resource = matchResourceData.resource.slice(\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t-settings.type.length - 10\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsettings.type = \"javascript/auto\";\r\n\t\t\t\t\t\tconst resourceDataForRules = matchResourceData || resourceData;\r\n\t\t\t\t\t\tconst result = this.ruleSet.exec({\r\n\t\t\t\t\t\t\tresource: resourceDataForRules.path,\r\n\t\t\t\t\t\t\trealResource: resourceData.path,\r\n\t\t\t\t\t\t\tresourceQuery: resourceDataForRules.query,\r\n\t\t\t\t\t\t\tresourceFragment: resourceDataForRules.fragment,\r\n\t\t\t\t\t\t\tscheme,\r\n\t\t\t\t\t\t\tassertions,\r\n\t\t\t\t\t\t\tmimetype: matchResourceData\r\n\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t: resourceData.data.mimetype || \"\",\r\n\t\t\t\t\t\t\tdependency: dependencyType,\r\n\t\t\t\t\t\t\tdescriptionData: matchResourceData\r\n\t\t\t\t\t\t\t\t? undefined\r\n\t\t\t\t\t\t\t\t: resourceData.data.descriptionFileData,\r\n\t\t\t\t\t\t\tissuer: contextInfo.issuer,\r\n\t\t\t\t\t\t\tcompiler: contextInfo.compiler,\r\n\t\t\t\t\t\t\tissuerLayer: contextInfo.issuerLayer || \"\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfor (const r of result) {\r\n\t\t\t\t\t\t\tif (r.type === \"use\") {\r\n\t\t\t\t\t\t\t\tif (!noAutoLoaders && !noPrePostAutoLoaders) {\r\n\t\t\t\t\t\t\t\t\tuseLoaders.push(r.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (r.type === \"use-post\") {\r\n\t\t\t\t\t\t\t\tif (!noPrePostAutoLoaders) {\r\n\t\t\t\t\t\t\t\t\tuseLoadersPost.push(r.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (r.type === \"use-pre\") {\r\n\t\t\t\t\t\t\t\tif (!noPreAutoLoaders && !noPrePostAutoLoaders) {\r\n\t\t\t\t\t\t\t\t\tuseLoadersPre.push(r.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\ttypeof r.value === \"object\" &&\r\n\t\t\t\t\t\t\t\tr.value !== null &&\r\n\t\t\t\t\t\t\t\ttypeof settings[r.type] === \"object\" &&\r\n\t\t\t\t\t\t\t\tsettings[r.type] !== null\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tsettings[r.type] = cachedCleverMerge(settings[r.type], r.value);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsettings[r.type] = r.value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet postLoaders, normalLoaders, preLoaders;\r\n\r\n\t\t\t\t\tconst continueCallback = needCalls(3, err => {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst allLoaders = postLoaders;\r\n\t\t\t\t\t\tif (matchResourceData === undefined) {\r\n\t\t\t\t\t\t\tfor (const loader of loaders) allLoaders.push(loader);\r\n\t\t\t\t\t\t\tfor (const loader of normalLoaders) allLoaders.push(loader);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (const loader of normalLoaders) allLoaders.push(loader);\r\n\t\t\t\t\t\t\tfor (const loader of loaders) allLoaders.push(loader);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (const loader of preLoaders) allLoaders.push(loader);\r\n\t\t\t\t\t\tlet type = settings.type;\r\n\t\t\t\t\t\tconst resolveOptions = settings.resolve;\r\n\t\t\t\t\t\tconst layer = settings.layer;\r\n\t\t\t\t\t\tif (layer !== undefined && !layers) {\r\n\t\t\t\t\t\t\treturn callback(\r\n\t\t\t\t\t\t\t\tnew Error(\r\n\t\t\t\t\t\t\t\t\t\"'Rule.layer' is only allowed when 'experiments.layers' is enabled\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tObject.assign(data.createData, {\r\n\t\t\t\t\t\t\t\tlayer:\r\n\t\t\t\t\t\t\t\t\tlayer === undefined ? contextInfo.issuerLayer || null : layer,\r\n\t\t\t\t\t\t\t\trequest: stringifyLoadersAndResource(\r\n\t\t\t\t\t\t\t\t\tallLoaders,\r\n\t\t\t\t\t\t\t\t\tresourceData.resource\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tuserRequest,\r\n\t\t\t\t\t\t\t\trawRequest: request,\r\n\t\t\t\t\t\t\t\tloaders: allLoaders,\r\n\t\t\t\t\t\t\t\tresource: resourceData.resource,\r\n\t\t\t\t\t\t\t\tcontext:\r\n\t\t\t\t\t\t\t\t\tresourceData.context || getContext(resourceData.resource),\r\n\t\t\t\t\t\t\t\tmatchResource: matchResourceData\r\n\t\t\t\t\t\t\t\t\t? matchResourceData.resource\r\n\t\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t\t\tresourceResolveData: resourceData.data,\r\n\t\t\t\t\t\t\t\tsettings,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tparser: this.getParser(type, settings.parser),\r\n\t\t\t\t\t\t\t\tparserOptions: settings.parser,\r\n\t\t\t\t\t\t\t\tgenerator: this.getGenerator(type, settings.generator),\r\n\t\t\t\t\t\t\t\tgeneratorOptions: settings.generator,\r\n\t\t\t\t\t\t\t\tresolveOptions\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\treturn callback(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.resolveRequestArray(\r\n\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\tthis.context,\r\n\t\t\t\t\t\tuseLoadersPost,\r\n\t\t\t\t\t\tloaderResolver,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\t\tpostLoaders = result;\r\n\t\t\t\t\t\t\tcontinueCallback(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.resolveRequestArray(\r\n\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\tthis.context,\r\n\t\t\t\t\t\tuseLoaders,\r\n\t\t\t\t\t\tloaderResolver,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\t\tnormalLoaders = result;\r\n\t\t\t\t\t\t\tcontinueCallback(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.resolveRequestArray(\r\n\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\tthis.context,\r\n\t\t\t\t\t\tuseLoadersPre,\r\n\t\t\t\t\t\tloaderResolver,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\t\tpreLoaders = result;\r\n\t\t\t\t\t\t\tcontinueCallback(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.resolveRequestArray(\r\n\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\tcontextScheme ? this.context : context,\r\n\t\t\t\t\telements,\r\n\t\t\t\t\tloaderResolver,\r\n\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\tif (err) return continueCallback(err);\r\n\t\t\t\t\t\tloaders = result;\r\n\t\t\t\t\t\tcontinueCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst defaultResolve = context => {\r\n\t\t\t\t\tif (/^($|\\?)/.test(unresolvedResource)) {\r\n\t\t\t\t\t\tresourceData = {\r\n\t\t\t\t\t\t\tresource: unresolvedResource,\r\n\t\t\t\t\t\t\tdata: {},\r\n\t\t\t\t\t\t\t...cacheParseResource(unresolvedResource)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcontinueCallback();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// resource without scheme and with path\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst normalResolver = this.getResolver(\r\n\t\t\t\t\t\t\t\"normal\",\r\n\t\t\t\t\t\t\tdependencyType\r\n\t\t\t\t\t\t\t\t? cachedSetProperty(\r\n\t\t\t\t\t\t\t\t\t\tresolveOptions || EMPTY_RESOLVE_OPTIONS,\r\n\t\t\t\t\t\t\t\t\t\t\"dependencyType\",\r\n\t\t\t\t\t\t\t\t\t\tdependencyType\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t: resolveOptions\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tthis.resolveResource(\r\n\t\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\tunresolvedResource,\r\n\t\t\t\t\t\t\tnormalResolver,\r\n\t\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t\t(err, resolvedResource, resolvedResourceResolveData) => {\r\n\t\t\t\t\t\t\t\tif (err) return continueCallback(err);\r\n\t\t\t\t\t\t\t\tif (resolvedResource !== false) {\r\n\t\t\t\t\t\t\t\t\tresourceData = {\r\n\t\t\t\t\t\t\t\t\t\tresource: resolvedResource,\r\n\t\t\t\t\t\t\t\t\t\tdata: resolvedResourceResolveData,\r\n\t\t\t\t\t\t\t\t\t\t...cacheParseResource(resolvedResource)\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcontinueCallback();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// resource with scheme\r\n\t\t\t\tif (scheme) {\r\n\t\t\t\t\tresourceData = {\r\n\t\t\t\t\t\tresource: unresolvedResource,\r\n\t\t\t\t\t\tdata: {},\r\n\t\t\t\t\t\tpath: undefined,\r\n\t\t\t\t\t\tquery: undefined,\r\n\t\t\t\t\t\tfragment: undefined,\r\n\t\t\t\t\t\tcontext: undefined\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.hooks.resolveForScheme\r\n\t\t\t\t\t\t.for(scheme)\r\n\t\t\t\t\t\t.callAsync(resourceData, data, err => {\r\n\t\t\t\t\t\t\tif (err) return continueCallback(err);\r\n\t\t\t\t\t\t\tcontinueCallback();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// resource within scheme\r\n\t\t\t\telse if (contextScheme) {\r\n\t\t\t\t\tresourceData = {\r\n\t\t\t\t\t\tresource: unresolvedResource,\r\n\t\t\t\t\t\tdata: {},\r\n\t\t\t\t\t\tpath: undefined,\r\n\t\t\t\t\t\tquery: undefined,\r\n\t\t\t\t\t\tfragment: undefined,\r\n\t\t\t\t\t\tcontext: undefined\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.hooks.resolveInScheme\r\n\t\t\t\t\t\t.for(contextScheme)\r\n\t\t\t\t\t\t.callAsync(resourceData, data, (err, handled) => {\r\n\t\t\t\t\t\t\tif (err) return continueCallback(err);\r\n\t\t\t\t\t\t\tif (!handled) return defaultResolve(this.context);\r\n\t\t\t\t\t\t\tcontinueCallback();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// resource without scheme and without path\r\n\t\t\t\telse defaultResolve(context);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tcleanupForCache() {\r\n\t\tfor (const module of this._restoredUnsafeCacheEntries) {\r\n\t\t\tChunkGraph.clearChunkGraphForModule(module);\r\n\t\t\tModuleGraph.clearModuleGraphForModule(module);\r\n\t\t\tmodule.cleanupForCache();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleFactoryCreateData} data data object\r\n\t * @param {function(Error=, ModuleFactoryResult=): void} callback callback\r\n\t * @returns {void}\r\n\t */\r\n\tcreate(data, callback) {\r\n\t\tconst dependencies = /** @type {ModuleDependency[]} */ (data.dependencies);\r\n\t\tconst context = data.context || this.context;\r\n\t\tconst resolveOptions = data.resolveOptions || EMPTY_RESOLVE_OPTIONS;\r\n\t\tconst dependency = dependencies[0];\r\n\t\tconst request = dependency.request;\r\n\t\tconst assertions = dependency.assertions;\r\n\t\tconst contextInfo = data.contextInfo;\r\n\t\tconst fileDependencies = new LazySet();\r\n\t\tconst missingDependencies = new LazySet();\r\n\t\tconst contextDependencies = new LazySet();\r\n\t\tconst dependencyType =\r\n\t\t\t(dependencies.length > 0 && dependencies[0].category) || \"\";\r\n\t\t/** @type {ResolveData} */\r\n\t\tconst resolveData = {\r\n\t\t\tcontextInfo,\r\n\t\t\tresolveOptions,\r\n\t\t\tcontext,\r\n\t\t\trequest,\r\n\t\t\tassertions,\r\n\t\t\tdependencies,\r\n\t\t\tdependencyType,\r\n\t\t\tfileDependencies,\r\n\t\t\tmissingDependencies,\r\n\t\t\tcontextDependencies,\r\n\t\t\tcreateData: {},\r\n\t\t\tcacheable: true\r\n\t\t};\r\n\t\tthis.hooks.beforeResolve.callAsync(resolveData, (err, result) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn callback(err, {\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies,\r\n\t\t\t\t\tcacheable: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Ignored\r\n\t\t\tif (result === false) {\r\n\t\t\t\treturn callback(null, {\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies,\r\n\t\t\t\t\tcacheable: resolveData.cacheable\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof result === \"object\")\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tdeprecationChangedHookMessage(\r\n\t\t\t\t\t\t\"beforeResolve\",\r\n\t\t\t\t\t\tthis.hooks.beforeResolve\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\tthis.hooks.factorize.callAsync(resolveData, (err, module) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn callback(err, {\r\n\t\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\t\tcontextDependencies,\r\n\t\t\t\t\t\tcacheable: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst factoryResult = {\r\n\t\t\t\t\tmodule,\r\n\t\t\t\t\tfileDependencies,\r\n\t\t\t\t\tmissingDependencies,\r\n\t\t\t\t\tcontextDependencies,\r\n\t\t\t\t\tcacheable: resolveData.cacheable\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcallback(null, factoryResult);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tresolveResource(\r\n\t\tcontextInfo,\r\n\t\tcontext,\r\n\t\tunresolvedResource,\r\n\t\tresolver,\r\n\t\tresolveContext,\r\n\t\tcallback\r\n\t) {\r\n\t\tresolver.resolve(\r\n\t\t\tcontextInfo,\r\n\t\t\tcontext,\r\n\t\t\tunresolvedResource,\r\n\t\t\tresolveContext,\r\n\t\t\t(err, resolvedResource, resolvedResourceResolveData) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn this._resolveResourceErrorHints(\r\n\t\t\t\t\t\terr,\r\n\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\tunresolvedResource,\r\n\t\t\t\t\t\tresolver,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t(err2, hints) => {\r\n\t\t\t\t\t\t\tif (err2) {\r\n\t\t\t\t\t\t\t\terr.message += `\r\nAn fatal error happened during resolving additional hints for this error: ${err2.message}`;\r\n\t\t\t\t\t\t\t\terr.stack += `\r\n\r\nAn fatal error happened during resolving additional hints for this error:\r\n${err2.stack}`;\r\n\t\t\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (hints && hints.length > 0) {\r\n\t\t\t\t\t\t\t\terr.message += `\r\n${hints.join(\"\\n\\n\")}`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tcallback(err, resolvedResource, resolvedResourceResolveData);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t_resolveResourceErrorHints(\r\n\t\terror,\r\n\t\tcontextInfo,\r\n\t\tcontext,\r\n\t\tunresolvedResource,\r\n\t\tresolver,\r\n\t\tresolveContext,\r\n\t\tcallback\r\n\t) {\r\n\t\tasyncLib.parallel(\r\n\t\t\t[\r\n\t\t\t\tcallback => {\r\n\t\t\t\t\tif (!resolver.options.fullySpecified) return callback();\r\n\t\t\t\t\tresolver\r\n\t\t\t\t\t\t.withOptions({\r\n\t\t\t\t\t\t\tfullySpecified: false\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.resolve(\r\n\t\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\tunresolvedResource,\r\n\t\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t\t(err, resolvedResource) => {\r\n\t\t\t\t\t\t\t\tif (!err && resolvedResource) {\r\n\t\t\t\t\t\t\t\t\tconst resource = parseResource(resolvedResource).path.replace(\r\n\t\t\t\t\t\t\t\t\t\t/^.*[\\\\/]/,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\treturn callback(\r\n\t\t\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t\t\t`Did you mean '${resource}'?\r\nBREAKING CHANGE: The request '${unresolvedResource}' failed to resolve only because it was resolved as fully specified\r\n(probably because the origin is strict EcmaScript Module, e. g. a module with javascript mimetype, a '*.mjs' file, or a '*.js' file where the package.json contains '\"type\": \"module\"').\r\nThe extension in the request is mandatory for it to be fully specified.\r\nAdd the extension to the request.`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tcallback => {\r\n\t\t\t\t\tif (!resolver.options.enforceExtension) return callback();\r\n\t\t\t\t\tresolver\r\n\t\t\t\t\t\t.withOptions({\r\n\t\t\t\t\t\t\tenforceExtension: false,\r\n\t\t\t\t\t\t\textensions: []\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.resolve(\r\n\t\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\tunresolvedResource,\r\n\t\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t\t(err, resolvedResource) => {\r\n\t\t\t\t\t\t\t\tif (!err && resolvedResource) {\r\n\t\t\t\t\t\t\t\t\tlet hint = \"\";\r\n\t\t\t\t\t\t\t\t\tconst match = /(\\.[^.]+)(\\?|$)/.exec(unresolvedResource);\r\n\t\t\t\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\t\t\t\tconst fixedRequest = unresolvedResource.replace(\r\n\t\t\t\t\t\t\t\t\t\t\t/(\\.[^.]+)(\\?|$)/,\r\n\t\t\t\t\t\t\t\t\t\t\t\"$2\"\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tif (resolver.options.extensions.has(match[1])) {\r\n\t\t\t\t\t\t\t\t\t\t\thint = `Did you mean '${fixedRequest}'?`;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\thint = `Did you mean '${fixedRequest}'? Also note that '${match[1]}' is not in 'resolve.extensions' yet and need to be added for this to work?`;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\thint = `Did you mean to omit the extension or to remove 'resolve.enforceExtension'?`;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn callback(\r\n\t\t\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t\t\t`The request '${unresolvedResource}' failed to resolve only because 'resolve.enforceExtension' was specified.\r\n${hint}\r\nIncluding the extension in the request is no longer possible. Did you mean to enforce including the extension in requests with 'resolve.extensions: []' instead?`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tcallback => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t/^\\.\\.?\\//.test(unresolvedResource) ||\r\n\t\t\t\t\t\tresolver.options.preferRelative\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn callback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolver.resolve(\r\n\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t`./${unresolvedResource}`,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t(err, resolvedResource) => {\r\n\t\t\t\t\t\t\tif (err || !resolvedResource) return callback();\r\n\t\t\t\t\t\t\tconst moduleDirectories = resolver.options.modules\r\n\t\t\t\t\t\t\t\t.map(m => (Array.isArray(m) ? m.join(\", \") : m))\r\n\t\t\t\t\t\t\t\t.join(\", \");\r\n\t\t\t\t\t\t\tcallback(\r\n\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t`Did you mean './${unresolvedResource}'?\r\nRequests that should resolve in the current directory need to start with './'.\r\nRequests that start with a name are treated as module requests and resolve within module directories (${moduleDirectories}).\r\nIf changing the source code is not an option there is also a resolve options called 'preferRelative' which tries to resolve these kind of requests in the current directory too.`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t(err, hints) => {\r\n\t\t\t\tif (err) return callback(err);\r\n\t\t\t\tcallback(null, hints.filter(Boolean));\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tresolveRequestArray(\r\n\t\tcontextInfo,\r\n\t\tcontext,\r\n\t\tarray,\r\n\t\tresolver,\r\n\t\tresolveContext,\r\n\t\tcallback\r\n\t) {\r\n\t\tif (array.length === 0) return callback(null, array);\r\n\t\tasyncLib.map(\r\n\t\t\tarray,\r\n\t\t\t(item, callback) => {\r\n\t\t\t\tresolver.resolve(\r\n\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\titem.loader,\r\n\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\terr &&\r\n\t\t\t\t\t\t\t/^[^/]*$/.test(item.loader) &&\r\n\t\t\t\t\t\t\t!/-loader$/.test(item.loader)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn resolver.resolve(\r\n\t\t\t\t\t\t\t\tcontextInfo,\r\n\t\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\t\titem.loader + \"-loader\",\r\n\t\t\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t\t\terr2 => {\r\n\t\t\t\t\t\t\t\t\tif (!err2) {\r\n\t\t\t\t\t\t\t\t\t\terr.message =\r\n\t\t\t\t\t\t\t\t\t\t\terr.message +\r\n\t\t\t\t\t\t\t\t\t\t\t\"\\n\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\"BREAKING CHANGE: It's no longer allowed to omit the '-loader' suffix when using loaders.\\n\" +\r\n\t\t\t\t\t\t\t\t\t\t\t`                 You need to specify '${item.loader}-loader' instead of '${item.loader}',\\n` +\r\n\t\t\t\t\t\t\t\t\t\t\t\"                 see https://webpack.js.org/migrate/3/#automatic-loader-module-name-extension-removed\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (err) return callback(err);\r\n\r\n\t\t\t\t\t\tconst parsedResult = this._parseResourceWithoutFragment(result);\r\n\t\t\t\t\t\tconst resolved = {\r\n\t\t\t\t\t\t\tloader: parsedResult.path,\r\n\t\t\t\t\t\t\toptions:\r\n\t\t\t\t\t\t\t\titem.options === undefined\r\n\t\t\t\t\t\t\t\t\t? parsedResult.query\r\n\t\t\t\t\t\t\t\t\t\t? parsedResult.query.slice(1)\r\n\t\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t\t\t: item.options,\r\n\t\t\t\t\t\t\tident: item.options === undefined ? undefined : item.ident\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn callback(null, resolved);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tcallback\r\n\t\t);\r\n\t}\r\n\r\n\tgetParser(type, parserOptions = EMPTY_PARSER_OPTIONS) {\r\n\t\tlet cache = this.parserCache.get(type);\r\n\r\n\t\tif (cache === undefined) {\r\n\t\t\tcache = new WeakMap();\r\n\t\t\tthis.parserCache.set(type, cache);\r\n\t\t}\r\n\r\n\t\tlet parser = cache.get(parserOptions);\r\n\r\n\t\tif (parser === undefined) {\r\n\t\t\tparser = this.createParser(type, parserOptions);\r\n\t\t\tcache.set(parserOptions, parser);\r\n\t\t}\r\n\r\n\t\treturn parser;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} type type\r\n\t * @param {{[k: string]: any}} parserOptions parser options\r\n\t * @returns {Parser} parser\r\n\t */\r\n\tcreateParser(type, parserOptions = {}) {\r\n\t\tparserOptions = mergeGlobalOptions(\r\n\t\t\tthis._globalParserOptions,\r\n\t\t\ttype,\r\n\t\t\tparserOptions\r\n\t\t);\r\n\t\tconst parser = this.hooks.createParser.for(type).call(parserOptions);\r\n\t\tif (!parser) {\r\n\t\t\tthrow new Error(`No parser registered for ${type}`);\r\n\t\t}\r\n\t\tthis.hooks.parser.for(type).call(parser, parserOptions);\r\n\t\treturn parser;\r\n\t}\r\n\r\n\tgetGenerator(type, generatorOptions = EMPTY_GENERATOR_OPTIONS) {\r\n\t\tlet cache = this.generatorCache.get(type);\r\n\r\n\t\tif (cache === undefined) {\r\n\t\t\tcache = new WeakMap();\r\n\t\t\tthis.generatorCache.set(type, cache);\r\n\t\t}\r\n\r\n\t\tlet generator = cache.get(generatorOptions);\r\n\r\n\t\tif (generator === undefined) {\r\n\t\t\tgenerator = this.createGenerator(type, generatorOptions);\r\n\t\t\tcache.set(generatorOptions, generator);\r\n\t\t}\r\n\r\n\t\treturn generator;\r\n\t}\r\n\r\n\tcreateGenerator(type, generatorOptions = {}) {\r\n\t\tgeneratorOptions = mergeGlobalOptions(\r\n\t\t\tthis._globalGeneratorOptions,\r\n\t\t\ttype,\r\n\t\t\tgeneratorOptions\r\n\t\t);\r\n\t\tconst generator = this.hooks.createGenerator\r\n\t\t\t.for(type)\r\n\t\t\t.call(generatorOptions);\r\n\t\tif (!generator) {\r\n\t\t\tthrow new Error(`No generator registered for ${type}`);\r\n\t\t}\r\n\t\tthis.hooks.generator.for(type).call(generator, generatorOptions);\r\n\t\treturn generator;\r\n\t}\r\n\r\n\tgetResolver(type, resolveOptions) {\r\n\t\treturn this.resolverFactory.get(type, resolveOptions);\r\n\t}\r\n}\r\n\r\nmodule.exports = NormalModuleFactory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}