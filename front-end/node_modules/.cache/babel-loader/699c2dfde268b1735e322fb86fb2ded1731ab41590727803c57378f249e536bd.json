{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\nconst getCanonicalHeaders = (_ref, unsignableHeaders, signableHeaders) => {\n  let {\n    headers\n  } = _ref;\n  const canonical = {};\n  for (const headerName of Object.keys(headers).sort()) {\n    if (headers[headerName] == undefined) {\n      continue;\n    }\n    const canonicalHeaderName = headerName.toLowerCase();\n    if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) || constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n      if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {\n        continue;\n      }\n    }\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n  return canonical;\n};\nexports.getCanonicalHeaders = getCanonicalHeaders;","map":{"version":3,"names":["Object","defineProperty","exports","value","getCanonicalHeaders","constants_1","require","unsignableHeaders","signableHeaders","headers","canonical","headerName","keys","sort","undefined","canonicalHeaderName","toLowerCase","ALWAYS_UNSIGNABLE_HEADERS","has","PROXY_HEADER_PATTERN","test","SEC_HEADER_PATTERN","trim","replace"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalHeaders.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getCanonicalHeaders = void 0;\r\nconst constants_1 = require(\"./constants\");\r\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\r\n    const canonical = {};\r\n    for (const headerName of Object.keys(headers).sort()) {\r\n        if (headers[headerName] == undefined) {\r\n            continue;\r\n        }\r\n        const canonicalHeaderName = headerName.toLowerCase();\r\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\r\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\r\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\r\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\r\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\r\n                continue;\r\n            }\r\n        }\r\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\r\n    }\r\n    return canonical;\r\n};\r\nexports.getCanonicalHeaders = getCanonicalHeaders;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMF,mBAAmB,GAAG,OAAcG,iBAAiB,EAAEC,eAAe,KAAK;EAAA,IAApD;IAAEC;EAAQ,CAAC;EACpC,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,KAAK,MAAMC,UAAU,IAAIX,MAAM,CAACY,IAAI,CAACH,OAAO,CAAC,CAACI,IAAI,EAAE,EAAE;IAClD,IAAIJ,OAAO,CAACE,UAAU,CAAC,IAAIG,SAAS,EAAE;MAClC;IACJ;IACA,MAAMC,mBAAmB,GAAGJ,UAAU,CAACK,WAAW,EAAE;IACpD,IAAID,mBAAmB,IAAIV,WAAW,CAACY,yBAAyB,KAC3DV,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACW,GAAG,CAACH,mBAAmB,CAAC,CAAC,IAClHV,WAAW,CAACc,oBAAoB,CAACC,IAAI,CAACL,mBAAmB,CAAC,IAC1DV,WAAW,CAACgB,kBAAkB,CAACD,IAAI,CAACL,mBAAmB,CAAC,EAAE;MAC1D,IAAI,CAACP,eAAe,IAAKA,eAAe,IAAI,CAACA,eAAe,CAACU,GAAG,CAACH,mBAAmB,CAAE,EAAE;QACpF;MACJ;IACJ;IACAL,SAAS,CAACK,mBAAmB,CAAC,GAAGN,OAAO,CAACE,UAAU,CAAC,CAACW,IAAI,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EACpF;EACA,OAAOb,SAAS;AACpB,CAAC;AACDR,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}