{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nclass AddManagedPathsPlugin {\n  /**\r\n   * @param {Iterable<string | RegExp>} managedPaths list of managed paths\r\n   * @param {Iterable<string | RegExp>} immutablePaths list of immutable paths\r\n   */\n  constructor(managedPaths, immutablePaths) {\n    this.managedPaths = new Set(managedPaths);\n    this.immutablePaths = new Set(immutablePaths);\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    for (const managedPath of this.managedPaths) {\n      compiler.managedPaths.add(managedPath);\n    }\n    for (const immutablePath of this.immutablePaths) {\n      compiler.immutablePaths.add(immutablePath);\n    }\n  }\n}\nmodule.exports = AddManagedPathsPlugin;","map":{"version":3,"names":["AddManagedPathsPlugin","constructor","managedPaths","immutablePaths","Set","apply","compiler","managedPath","add","immutablePath","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/cache/AddManagedPathsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n\r\nclass AddManagedPathsPlugin {\r\n\t/**\r\n\t * @param {Iterable<string | RegExp>} managedPaths list of managed paths\r\n\t * @param {Iterable<string | RegExp>} immutablePaths list of immutable paths\r\n\t */\r\n\tconstructor(managedPaths, immutablePaths) {\r\n\t\tthis.managedPaths = new Set(managedPaths);\r\n\t\tthis.immutablePaths = new Set(immutablePaths);\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tfor (const managedPath of this.managedPaths) {\r\n\t\t\tcompiler.managedPaths.add(managedPath);\r\n\t\t}\r\n\t\tfor (const immutablePath of this.immutablePaths) {\r\n\t\t\tcompiler.immutablePaths.add(immutablePath);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = AddManagedPathsPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,MAAMA,qBAAqB,CAAC;EAC3B;AACD;AACA;AACA;EACCC,WAAW,CAACC,YAAY,EAAEC,cAAc,EAAE;IACzC,IAAI,CAACD,YAAY,GAAG,IAAIE,GAAG,CAACF,YAAY,CAAC;IACzC,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,CAACD,cAAc,CAAC;EAC9C;;EAEA;AACD;AACA;AACA;AACA;EACCE,KAAK,CAACC,QAAQ,EAAE;IACf,KAAK,MAAMC,WAAW,IAAI,IAAI,CAACL,YAAY,EAAE;MAC5CI,QAAQ,CAACJ,YAAY,CAACM,GAAG,CAACD,WAAW,CAAC;IACvC;IACA,KAAK,MAAME,aAAa,IAAI,IAAI,CAACN,cAAc,EAAE;MAChDG,QAAQ,CAACH,cAAc,CAACK,GAAG,CAACC,aAAa,CAAC;IAC3C;EACD;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGX,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}