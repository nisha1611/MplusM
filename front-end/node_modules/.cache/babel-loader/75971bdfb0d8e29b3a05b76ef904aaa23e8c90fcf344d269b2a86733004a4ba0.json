{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst cache = new WeakMap();\nclass ObjectStructure {\n  constructor() {\n    this.keys = undefined;\n    this.children = undefined;\n  }\n  getKeys(keys) {\n    if (this.keys === undefined) this.keys = keys;\n    return this.keys;\n  }\n  key(key) {\n    if (this.children === undefined) this.children = new Map();\n    const child = this.children.get(key);\n    if (child !== undefined) return child;\n    const newChild = new ObjectStructure();\n    this.children.set(key, newChild);\n    return newChild;\n  }\n}\nconst getCachedKeys = (keys, cacheAssoc) => {\n  let root = cache.get(cacheAssoc);\n  if (root === undefined) {\n    root = new ObjectStructure();\n    cache.set(cacheAssoc, root);\n  }\n  let current = root;\n  for (const key of keys) {\n    current = current.key(key);\n  }\n  return current.getKeys(keys);\n};\nclass PlainObjectSerializer {\n  serialize(obj, _ref) {\n    let {\n      write\n    } = _ref;\n    const keys = Object.keys(obj);\n    if (keys.length > 128) {\n      // Objects with so many keys are unlikely to share structure\n      // with other objects\n      write(keys);\n      for (const key of keys) {\n        write(obj[key]);\n      }\n    } else if (keys.length > 1) {\n      write(getCachedKeys(keys, write));\n      for (const key of keys) {\n        write(obj[key]);\n      }\n    } else if (keys.length === 1) {\n      const key = keys[0];\n      write(key);\n      write(obj[key]);\n    } else {\n      write(null);\n    }\n  }\n  deserialize(_ref2) {\n    let {\n      read\n    } = _ref2;\n    const keys = read();\n    const obj = {};\n    if (Array.isArray(keys)) {\n      for (const key of keys) {\n        obj[key] = read();\n      }\n    } else if (keys !== null) {\n      obj[keys] = read();\n    }\n    return obj;\n  }\n}\nmodule.exports = PlainObjectSerializer;","map":{"version":3,"names":["cache","WeakMap","ObjectStructure","constructor","keys","undefined","children","getKeys","key","Map","child","get","newChild","set","getCachedKeys","cacheAssoc","root","current","PlainObjectSerializer","serialize","obj","write","Object","length","deserialize","read","Array","isArray","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/serialization/PlainObjectSerializer.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst cache = new WeakMap();\r\n\r\nclass ObjectStructure {\r\n\tconstructor() {\r\n\t\tthis.keys = undefined;\r\n\t\tthis.children = undefined;\r\n\t}\r\n\r\n\tgetKeys(keys) {\r\n\t\tif (this.keys === undefined) this.keys = keys;\r\n\t\treturn this.keys;\r\n\t}\r\n\r\n\tkey(key) {\r\n\t\tif (this.children === undefined) this.children = new Map();\r\n\t\tconst child = this.children.get(key);\r\n\t\tif (child !== undefined) return child;\r\n\t\tconst newChild = new ObjectStructure();\r\n\t\tthis.children.set(key, newChild);\r\n\t\treturn newChild;\r\n\t}\r\n}\r\n\r\nconst getCachedKeys = (keys, cacheAssoc) => {\r\n\tlet root = cache.get(cacheAssoc);\r\n\tif (root === undefined) {\r\n\t\troot = new ObjectStructure();\r\n\t\tcache.set(cacheAssoc, root);\r\n\t}\r\n\tlet current = root;\r\n\tfor (const key of keys) {\r\n\t\tcurrent = current.key(key);\r\n\t}\r\n\treturn current.getKeys(keys);\r\n};\r\n\r\nclass PlainObjectSerializer {\r\n\tserialize(obj, { write }) {\r\n\t\tconst keys = Object.keys(obj);\r\n\t\tif (keys.length > 128) {\r\n\t\t\t// Objects with so many keys are unlikely to share structure\r\n\t\t\t// with other objects\r\n\t\t\twrite(keys);\r\n\t\t\tfor (const key of keys) {\r\n\t\t\t\twrite(obj[key]);\r\n\t\t\t}\r\n\t\t} else if (keys.length > 1) {\r\n\t\t\twrite(getCachedKeys(keys, write));\r\n\t\t\tfor (const key of keys) {\r\n\t\t\t\twrite(obj[key]);\r\n\t\t\t}\r\n\t\t} else if (keys.length === 1) {\r\n\t\t\tconst key = keys[0];\r\n\t\t\twrite(key);\r\n\t\t\twrite(obj[key]);\r\n\t\t} else {\r\n\t\t\twrite(null);\r\n\t\t}\r\n\t}\r\n\tdeserialize({ read }) {\r\n\t\tconst keys = read();\r\n\t\tconst obj = {};\r\n\t\tif (Array.isArray(keys)) {\r\n\t\t\tfor (const key of keys) {\r\n\t\t\t\tobj[key] = read();\r\n\t\t\t}\r\n\t\t} else if (keys !== null) {\r\n\t\t\tobj[keys] = read();\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nmodule.exports = PlainObjectSerializer;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,KAAK,GAAG,IAAIC,OAAO,EAAE;AAE3B,MAAMC,eAAe,CAAC;EACrBC,WAAW,GAAG;IACb,IAAI,CAACC,IAAI,GAAGC,SAAS;IACrB,IAAI,CAACC,QAAQ,GAAGD,SAAS;EAC1B;EAEAE,OAAO,CAACH,IAAI,EAAE;IACb,IAAI,IAAI,CAACA,IAAI,KAAKC,SAAS,EAAE,IAAI,CAACD,IAAI,GAAGA,IAAI;IAC7C,OAAO,IAAI,CAACA,IAAI;EACjB;EAEAI,GAAG,CAACA,GAAG,EAAE;IACR,IAAI,IAAI,CAACF,QAAQ,KAAKD,SAAS,EAAE,IAAI,CAACC,QAAQ,GAAG,IAAIG,GAAG,EAAE;IAC1D,MAAMC,KAAK,GAAG,IAAI,CAACJ,QAAQ,CAACK,GAAG,CAACH,GAAG,CAAC;IACpC,IAAIE,KAAK,KAAKL,SAAS,EAAE,OAAOK,KAAK;IACrC,MAAME,QAAQ,GAAG,IAAIV,eAAe,EAAE;IACtC,IAAI,CAACI,QAAQ,CAACO,GAAG,CAACL,GAAG,EAAEI,QAAQ,CAAC;IAChC,OAAOA,QAAQ;EAChB;AACD;AAEA,MAAME,aAAa,GAAG,CAACV,IAAI,EAAEW,UAAU,KAAK;EAC3C,IAAIC,IAAI,GAAGhB,KAAK,CAACW,GAAG,CAACI,UAAU,CAAC;EAChC,IAAIC,IAAI,KAAKX,SAAS,EAAE;IACvBW,IAAI,GAAG,IAAId,eAAe,EAAE;IAC5BF,KAAK,CAACa,GAAG,CAACE,UAAU,EAAEC,IAAI,CAAC;EAC5B;EACA,IAAIC,OAAO,GAAGD,IAAI;EAClB,KAAK,MAAMR,GAAG,IAAIJ,IAAI,EAAE;IACvBa,OAAO,GAAGA,OAAO,CAACT,GAAG,CAACA,GAAG,CAAC;EAC3B;EACA,OAAOS,OAAO,CAACV,OAAO,CAACH,IAAI,CAAC;AAC7B,CAAC;AAED,MAAMc,qBAAqB,CAAC;EAC3BC,SAAS,CAACC,GAAG,QAAa;IAAA,IAAX;MAAEC;IAAM,CAAC;IACvB,MAAMjB,IAAI,GAAGkB,MAAM,CAAClB,IAAI,CAACgB,GAAG,CAAC;IAC7B,IAAIhB,IAAI,CAACmB,MAAM,GAAG,GAAG,EAAE;MACtB;MACA;MACAF,KAAK,CAACjB,IAAI,CAAC;MACX,KAAK,MAAMI,GAAG,IAAIJ,IAAI,EAAE;QACvBiB,KAAK,CAACD,GAAG,CAACZ,GAAG,CAAC,CAAC;MAChB;IACD,CAAC,MAAM,IAAIJ,IAAI,CAACmB,MAAM,GAAG,CAAC,EAAE;MAC3BF,KAAK,CAACP,aAAa,CAACV,IAAI,EAAEiB,KAAK,CAAC,CAAC;MACjC,KAAK,MAAMb,GAAG,IAAIJ,IAAI,EAAE;QACvBiB,KAAK,CAACD,GAAG,CAACZ,GAAG,CAAC,CAAC;MAChB;IACD,CAAC,MAAM,IAAIJ,IAAI,CAACmB,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAMf,GAAG,GAAGJ,IAAI,CAAC,CAAC,CAAC;MACnBiB,KAAK,CAACb,GAAG,CAAC;MACVa,KAAK,CAACD,GAAG,CAACZ,GAAG,CAAC,CAAC;IAChB,CAAC,MAAM;MACNa,KAAK,CAAC,IAAI,CAAC;IACZ;EACD;EACAG,WAAW,QAAW;IAAA,IAAV;MAAEC;IAAK,CAAC;IACnB,MAAMrB,IAAI,GAAGqB,IAAI,EAAE;IACnB,MAAML,GAAG,GAAG,CAAC,CAAC;IACd,IAAIM,KAAK,CAACC,OAAO,CAACvB,IAAI,CAAC,EAAE;MACxB,KAAK,MAAMI,GAAG,IAAIJ,IAAI,EAAE;QACvBgB,GAAG,CAACZ,GAAG,CAAC,GAAGiB,IAAI,EAAE;MAClB;IACD,CAAC,MAAM,IAAIrB,IAAI,KAAK,IAAI,EAAE;MACzBgB,GAAG,CAAChB,IAAI,CAAC,GAAGqB,IAAI,EAAE;IACnB;IACA,OAAOL,GAAG;EACX;AACD;AAEAQ,MAAM,CAACC,OAAO,GAAGX,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}