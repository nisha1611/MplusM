{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar aCallable = require('../internals/a-callable');\nvar aSet = require('../internals/a-set');\nvar iterate = require('../internals/set-iterate');\nvar $TypeError = TypeError;\n\n// `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var set = aSet(this);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aCallable(callbackfn);\n    iterate(set, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, value, set);\n      }\n    });\n    if (noInitial) throw $TypeError('Reduce of empty set with no initial value');\n    return accumulator;\n  }\n});","map":{"version":3,"names":["$","require","aCallable","aSet","iterate","$TypeError","TypeError","target","proto","real","forced","reduce","callbackfn","set","noInitial","arguments","length","accumulator","undefined","value"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/core-js/modules/esnext.set.reduce.js"],"sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar aCallable = require('../internals/a-callable');\r\nvar aSet = require('../internals/a-set');\r\nvar iterate = require('../internals/set-iterate');\r\n\r\nvar $TypeError = TypeError;\r\n\r\n// `Set.prototype.reduce` method\r\n// https://github.com/tc39/proposal-collection-methods\r\n$({ target: 'Set', proto: true, real: true, forced: true }, {\r\n  reduce: function reduce(callbackfn /* , initialValue */) {\r\n    var set = aSet(this);\r\n    var noInitial = arguments.length < 2;\r\n    var accumulator = noInitial ? undefined : arguments[1];\r\n    aCallable(callbackfn);\r\n    iterate(set, function (value) {\r\n      if (noInitial) {\r\n        noInitial = false;\r\n        accumulator = value;\r\n      } else {\r\n        accumulator = callbackfn(accumulator, value, value, set);\r\n      }\r\n    });\r\n    if (noInitial) throw $TypeError('Reduce of empty set with no initial value');\r\n    return accumulator;\r\n  }\r\n});\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAIE,IAAI,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACxC,IAAIG,OAAO,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AAEjD,IAAII,UAAU,GAAGC,SAAS;;AAE1B;AACA;AACAN,CAAC,CAAC;EAAEO,MAAM,EAAE,KAAK;EAAEC,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC,EAAE;EAC1DC,MAAM,EAAE,SAASA,MAAM,CAACC,UAAU,CAAC,sBAAsB;IACvD,IAAIC,GAAG,GAAGV,IAAI,CAAC,IAAI,CAAC;IACpB,IAAIW,SAAS,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC;IACpC,IAAIC,WAAW,GAAGH,SAAS,GAAGI,SAAS,GAAGH,SAAS,CAAC,CAAC,CAAC;IACtDb,SAAS,CAACU,UAAU,CAAC;IACrBR,OAAO,CAACS,GAAG,EAAE,UAAUM,KAAK,EAAE;MAC5B,IAAIL,SAAS,EAAE;QACbA,SAAS,GAAG,KAAK;QACjBG,WAAW,GAAGE,KAAK;MACrB,CAAC,MAAM;QACLF,WAAW,GAAGL,UAAU,CAACK,WAAW,EAAEE,KAAK,EAAEA,KAAK,EAAEN,GAAG,CAAC;MAC1D;IACF,CAAC,CAAC;IACF,IAAIC,SAAS,EAAE,MAAMT,UAAU,CAAC,2CAA2C,CAAC;IAC5E,OAAOY,WAAW;EACpB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}