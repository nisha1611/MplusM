{"ast":null,"code":"'use strict';\n\nconst Decimal = require('../types/decimal128');\nconst ObjectId = require('../types/objectid');\nconst specialProperties = require('./specialProperties');\nconst isMongooseObject = require('./isMongooseObject');\nconst getFunctionName = require('./getFunctionName');\nconst isBsonType = require('./isBsonType');\nconst isObject = require('./isObject');\nconst symbols = require('./symbols');\nconst trustedSymbol = require('./query/trusted').trustedSymbol;\nconst utils = require('../utils');\n\n/**\r\n * Object clone with Mongoose natives support.\r\n *\r\n * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.\r\n *\r\n * Functions are never cloned.\r\n *\r\n * @param {Object} obj the object to clone\r\n * @param {Object} options\r\n * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.\r\n * @return {Object} the cloned object\r\n * @api private\r\n */\n\nfunction clone(obj, options, isArrayChild) {\n  if (obj == null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return cloneArray(utils.isMongooseArray(obj) ? obj.__array : obj, options);\n  }\n  if (isMongooseObject(obj)) {\n    // Single nested subdocs should apply getters later in `applyGetters()`\n    // when calling `toObject()`. See gh-7442, gh-8295\n    if (options && options._skipSingleNestedGetters && obj.$isSingleNested) {\n      options = Object.assign({}, options, {\n        getters: false\n      });\n    }\n    const isSingleNested = obj.$isSingleNested;\n    if (utils.isPOJO(obj) && obj.$__ != null && obj._doc != null) {\n      return obj._doc;\n    }\n    let ret;\n    if (options && options.json && typeof obj.toJSON === 'function') {\n      ret = obj.toJSON(options);\n    } else {\n      ret = obj.toObject(options);\n    }\n    if (options && options.minimize && isSingleNested && Object.keys(ret).length === 0) {\n      return undefined;\n    }\n    return ret;\n  }\n  const objConstructor = obj.constructor;\n  if (objConstructor) {\n    switch (getFunctionName(objConstructor)) {\n      case 'Object':\n        return cloneObject(obj, options, isArrayChild);\n      case 'Date':\n        return new objConstructor(+obj);\n      case 'RegExp':\n        return cloneRegExp(obj);\n      default:\n        // ignore\n        break;\n    }\n  }\n  if (isBsonType(obj, 'ObjectID')) {\n    return new ObjectId(obj.id);\n  }\n  if (isBsonType(obj, 'Decimal128')) {\n    if (options && options.flattenDecimals) {\n      return obj.toJSON();\n    }\n    return Decimal.fromString(obj.toString());\n  }\n\n  // object created with Object.create(null)\n  if (!objConstructor && isObject(obj)) {\n    return cloneObject(obj, options, isArrayChild);\n  }\n  if (typeof obj === 'object' && obj[symbols.schemaTypeSymbol]) {\n    return obj.clone();\n  }\n\n  // If we're cloning this object to go into a MongoDB command,\n  // and there's a `toBSON()` function, assume this object will be\n  // stored as a primitive in MongoDB and doesn't need to be cloned.\n  if (options && options.bson && typeof obj.toBSON === 'function') {\n    return obj;\n  }\n  if (typeof obj.valueOf === 'function') {\n    return obj.valueOf();\n  }\n  return cloneObject(obj, options, isArrayChild);\n}\nmodule.exports = clone;\n\n/*!\r\n * ignore\r\n */\n\nfunction cloneObject(obj, options, isArrayChild) {\n  const minimize = options && options.minimize;\n  const omitUndefined = options && options.omitUndefined;\n  const seen = options && options._seen;\n  const ret = {};\n  let hasKeys;\n  if (seen && seen.has(obj)) {\n    return seen.get(obj);\n  } else if (seen) {\n    seen.set(obj, ret);\n  }\n  if (trustedSymbol in obj) {\n    ret[trustedSymbol] = obj[trustedSymbol];\n  }\n  let i = 0;\n  let key = '';\n  const keys = Object.keys(obj);\n  const len = keys.length;\n  for (i = 0; i < len; ++i) {\n    if (specialProperties.has(key = keys[i])) {\n      continue;\n    }\n\n    // Don't pass `isArrayChild` down\n    const val = clone(obj[key], options, false);\n    if ((minimize === false || omitUndefined) && typeof val === 'undefined') {\n      delete ret[key];\n    } else if (minimize !== true || typeof val !== 'undefined') {\n      hasKeys || (hasKeys = true);\n      ret[key] = val;\n    }\n  }\n  return minimize && !isArrayChild ? hasKeys && ret : ret;\n}\nfunction cloneArray(arr, options) {\n  let i = 0;\n  const len = arr.length;\n  const ret = new Array(len);\n  for (i = 0; i < len; ++i) {\n    ret[i] = clone(arr[i], options, true);\n  }\n  return ret;\n}\nfunction cloneRegExp(regexp) {\n  const ret = new RegExp(regexp.source, regexp.flags);\n  if (ret.lastIndex !== regexp.lastIndex) {\n    ret.lastIndex = regexp.lastIndex;\n  }\n  return ret;\n}","map":{"version":3,"names":["Decimal","require","ObjectId","specialProperties","isMongooseObject","getFunctionName","isBsonType","isObject","symbols","trustedSymbol","utils","clone","obj","options","isArrayChild","Array","isArray","cloneArray","isMongooseArray","__array","_skipSingleNestedGetters","$isSingleNested","Object","assign","getters","isSingleNested","isPOJO","$__","_doc","ret","json","toJSON","toObject","minimize","keys","length","undefined","objConstructor","constructor","cloneObject","cloneRegExp","id","flattenDecimals","fromString","toString","schemaTypeSymbol","bson","toBSON","valueOf","module","exports","omitUndefined","seen","_seen","hasKeys","has","get","set","i","key","len","val","arr","regexp","RegExp","source","flags","lastIndex"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/clone.js"],"sourcesContent":["'use strict';\r\n\r\nconst Decimal = require('../types/decimal128');\r\nconst ObjectId = require('../types/objectid');\r\nconst specialProperties = require('./specialProperties');\r\nconst isMongooseObject = require('./isMongooseObject');\r\nconst getFunctionName = require('./getFunctionName');\r\nconst isBsonType = require('./isBsonType');\r\nconst isObject = require('./isObject');\r\nconst symbols = require('./symbols');\r\nconst trustedSymbol = require('./query/trusted').trustedSymbol;\r\nconst utils = require('../utils');\r\n\r\n\r\n/**\r\n * Object clone with Mongoose natives support.\r\n *\r\n * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.\r\n *\r\n * Functions are never cloned.\r\n *\r\n * @param {Object} obj the object to clone\r\n * @param {Object} options\r\n * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.\r\n * @return {Object} the cloned object\r\n * @api private\r\n */\r\n\r\nfunction clone(obj, options, isArrayChild) {\r\n  if (obj == null) {\r\n    return obj;\r\n  }\r\n\r\n  if (Array.isArray(obj)) {\r\n    return cloneArray(utils.isMongooseArray(obj) ? obj.__array : obj, options);\r\n  }\r\n\r\n  if (isMongooseObject(obj)) {\r\n    // Single nested subdocs should apply getters later in `applyGetters()`\r\n    // when calling `toObject()`. See gh-7442, gh-8295\r\n    if (options && options._skipSingleNestedGetters && obj.$isSingleNested) {\r\n      options = Object.assign({}, options, { getters: false });\r\n    }\r\n    const isSingleNested = obj.$isSingleNested;\r\n\r\n    if (utils.isPOJO(obj) && obj.$__ != null && obj._doc != null) {\r\n      return obj._doc;\r\n    }\r\n\r\n    let ret;\r\n    if (options && options.json && typeof obj.toJSON === 'function') {\r\n      ret = obj.toJSON(options);\r\n    } else {\r\n      ret = obj.toObject(options);\r\n    }\r\n\r\n    if (options && options.minimize && isSingleNested && Object.keys(ret).length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  const objConstructor = obj.constructor;\r\n\r\n  if (objConstructor) {\r\n    switch (getFunctionName(objConstructor)) {\r\n      case 'Object':\r\n        return cloneObject(obj, options, isArrayChild);\r\n      case 'Date':\r\n        return new objConstructor(+obj);\r\n      case 'RegExp':\r\n        return cloneRegExp(obj);\r\n      default:\r\n        // ignore\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (isBsonType(obj, 'ObjectID')) {\r\n    return new ObjectId(obj.id);\r\n  }\r\n\r\n  if (isBsonType(obj, 'Decimal128')) {\r\n    if (options && options.flattenDecimals) {\r\n      return obj.toJSON();\r\n    }\r\n    return Decimal.fromString(obj.toString());\r\n  }\r\n\r\n  // object created with Object.create(null)\r\n  if (!objConstructor && isObject(obj)) {\r\n    return cloneObject(obj, options, isArrayChild);\r\n  }\r\n\r\n  if (typeof obj === 'object' && obj[symbols.schemaTypeSymbol]) {\r\n    return obj.clone();\r\n  }\r\n\r\n  // If we're cloning this object to go into a MongoDB command,\r\n  // and there's a `toBSON()` function, assume this object will be\r\n  // stored as a primitive in MongoDB and doesn't need to be cloned.\r\n  if (options && options.bson && typeof obj.toBSON === 'function') {\r\n    return obj;\r\n  }\r\n\r\n  if (typeof obj.valueOf === 'function') {\r\n    return obj.valueOf();\r\n  }\r\n\r\n  return cloneObject(obj, options, isArrayChild);\r\n}\r\nmodule.exports = clone;\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nfunction cloneObject(obj, options, isArrayChild) {\r\n  const minimize = options && options.minimize;\r\n  const omitUndefined = options && options.omitUndefined;\r\n  const seen = options && options._seen;\r\n  const ret = {};\r\n  let hasKeys;\r\n\r\n  if (seen && seen.has(obj)) {\r\n    return seen.get(obj);\r\n  } else if (seen) {\r\n    seen.set(obj, ret);\r\n  }\r\n  if (trustedSymbol in obj) {\r\n    ret[trustedSymbol] = obj[trustedSymbol];\r\n  }\r\n\r\n  let i = 0;\r\n  let key = '';\r\n  const keys = Object.keys(obj);\r\n  const len = keys.length;\r\n\r\n  for (i = 0; i < len; ++i) {\r\n    if (specialProperties.has(key = keys[i])) {\r\n      continue;\r\n    }\r\n\r\n    // Don't pass `isArrayChild` down\r\n    const val = clone(obj[key], options, false);\r\n\r\n    if ((minimize === false || omitUndefined) && typeof val === 'undefined') {\r\n      delete ret[key];\r\n    } else if (minimize !== true || (typeof val !== 'undefined')) {\r\n      hasKeys || (hasKeys = true);\r\n      ret[key] = val;\r\n    }\r\n  }\r\n\r\n  return minimize && !isArrayChild ? hasKeys && ret : ret;\r\n}\r\n\r\nfunction cloneArray(arr, options) {\r\n  let i = 0;\r\n  const len = arr.length;\r\n  const ret = new Array(len);\r\n  for (i = 0; i < len; ++i) {\r\n    ret[i] = clone(arr[i], options, true);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction cloneRegExp(regexp) {\r\n  const ret = new RegExp(regexp.source, regexp.flags);\r\n\r\n  if (ret.lastIndex !== regexp.lastIndex) {\r\n    ret.lastIndex = regexp.lastIndex;\r\n  }\r\n  return ret;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}