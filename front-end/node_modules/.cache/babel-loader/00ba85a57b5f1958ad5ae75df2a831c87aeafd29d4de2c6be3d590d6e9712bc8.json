{"ast":null,"code":"export const getValidatedProcessCredentials = (profileName, data) => {\n  if (data.Version !== 1) {\n    throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n  }\n  if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n    throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n  }\n  if (data.Expiration) {\n    const currentTime = new Date();\n    const expireTime = new Date(data.Expiration);\n    if (expireTime < currentTime) {\n      throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n    }\n  }\n  return {\n    accessKeyId: data.AccessKeyId,\n    secretAccessKey: data.SecretAccessKey,\n    ...(data.SessionToken && {\n      sessionToken: data.SessionToken\n    }),\n    ...(data.Expiration && {\n      expiration: new Date(data.Expiration)\n    })\n  };\n};","map":{"version":3,"names":["getValidatedProcessCredentials","profileName","data","Version","Error","AccessKeyId","undefined","SecretAccessKey","Expiration","currentTime","Date","expireTime","accessKeyId","secretAccessKey","SessionToken","sessionToken","expiration"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js"],"sourcesContent":["export const getValidatedProcessCredentials = (profileName, data) => {\r\n    if (data.Version !== 1) {\r\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\r\n    }\r\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\r\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\r\n    }\r\n    if (data.Expiration) {\r\n        const currentTime = new Date();\r\n        const expireTime = new Date(data.Expiration);\r\n        if (expireTime < currentTime) {\r\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\r\n        }\r\n    }\r\n    return {\r\n        accessKeyId: data.AccessKeyId,\r\n        secretAccessKey: data.SecretAccessKey,\r\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\r\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\r\n    };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,8BAA8B,GAAG,CAACC,WAAW,EAAEC,IAAI,KAAK;EACjE,IAAIA,IAAI,CAACC,OAAO,KAAK,CAAC,EAAE;IACpB,MAAMC,KAAK,CAAE,WAAUH,WAAY,+CAA8C,CAAC;EACtF;EACA,IAAIC,IAAI,CAACG,WAAW,KAAKC,SAAS,IAAIJ,IAAI,CAACK,eAAe,KAAKD,SAAS,EAAE;IACtE,MAAMF,KAAK,CAAE,WAAUH,WAAY,mDAAkD,CAAC;EAC1F;EACA,IAAIC,IAAI,CAACM,UAAU,EAAE;IACjB,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,MAAMC,UAAU,GAAG,IAAID,IAAI,CAACR,IAAI,CAACM,UAAU,CAAC;IAC5C,IAAIG,UAAU,GAAGF,WAAW,EAAE;MAC1B,MAAML,KAAK,CAAE,WAAUH,WAAY,mDAAkD,CAAC;IAC1F;EACJ;EACA,OAAO;IACHW,WAAW,EAAEV,IAAI,CAACG,WAAW;IAC7BQ,eAAe,EAAEX,IAAI,CAACK,eAAe;IACrC,IAAIL,IAAI,CAACY,YAAY,IAAI;MAAEC,YAAY,EAAEb,IAAI,CAACY;IAAa,CAAC,CAAC;IAC7D,IAAIZ,IAAI,CAACM,UAAU,IAAI;MAAEQ,UAAU,EAAE,IAAIN,IAAI,CAACR,IAAI,CAACM,UAAU;IAAE,CAAC;EACpE,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}