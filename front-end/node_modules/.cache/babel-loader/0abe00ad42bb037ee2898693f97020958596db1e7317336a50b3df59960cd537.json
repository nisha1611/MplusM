{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  join,\n  dirname,\n  readJson\n} = require(\"../util/fs\");\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/**\r\n * @param {string} str maybe required version\r\n * @returns {boolean} true, if it looks like a version\r\n */\nexports.isRequiredVersion = str => {\n  return /^([\\d^=v<>~]|[*xX]$)/.test(str);\n};\n\n/**\r\n *\r\n * @param {InputFileSystem} fs file system\r\n * @param {string} directory directory to start looking into\r\n * @param {string[]} descriptionFiles possible description filenames\r\n * @param {function((Error | null)=, {data: object, path: string}=): void} callback callback\r\n */\nconst getDescriptionFile = (fs, directory, descriptionFiles, callback) => {\n  let i = 0;\n  const tryLoadCurrent = () => {\n    if (i >= descriptionFiles.length) {\n      const parentDirectory = dirname(fs, directory);\n      if (!parentDirectory || parentDirectory === directory) return callback();\n      return getDescriptionFile(fs, parentDirectory, descriptionFiles, callback);\n    }\n    const filePath = join(fs, directory, descriptionFiles[i]);\n    readJson(fs, filePath, (err, data) => {\n      if (err) {\n        if (\"code\" in err && err.code === \"ENOENT\") {\n          i++;\n          return tryLoadCurrent();\n        }\n        return callback(err);\n      }\n      if (!data || typeof data !== \"object\" || Array.isArray(data)) {\n        return callback(new Error(`Description file ${filePath} is not an object`));\n      }\n      callback(null, {\n        data,\n        path: filePath\n      });\n    });\n  };\n  tryLoadCurrent();\n};\nexports.getDescriptionFile = getDescriptionFile;\nexports.getRequiredVersionFromDescriptionFile = (data, packageName) => {\n  if (data.optionalDependencies && typeof data.optionalDependencies === \"object\" && packageName in data.optionalDependencies) {\n    return data.optionalDependencies[packageName];\n  }\n  if (data.dependencies && typeof data.dependencies === \"object\" && packageName in data.dependencies) {\n    return data.dependencies[packageName];\n  }\n  if (data.peerDependencies && typeof data.peerDependencies === \"object\" && packageName in data.peerDependencies) {\n    return data.peerDependencies[packageName];\n  }\n  if (data.devDependencies && typeof data.devDependencies === \"object\" && packageName in data.devDependencies) {\n    return data.devDependencies[packageName];\n  }\n};","map":{"version":3,"names":["join","dirname","readJson","require","exports","isRequiredVersion","str","test","getDescriptionFile","fs","directory","descriptionFiles","callback","i","tryLoadCurrent","length","parentDirectory","filePath","err","data","code","Array","isArray","Error","path","getRequiredVersionFromDescriptionFile","packageName","optionalDependencies","dependencies","peerDependencies","devDependencies"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/sharing/utils.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { join, dirname, readJson } = require(\"../util/fs\");\r\n\r\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\r\n\r\n/**\r\n * @param {string} str maybe required version\r\n * @returns {boolean} true, if it looks like a version\r\n */\r\nexports.isRequiredVersion = str => {\r\n\treturn /^([\\d^=v<>~]|[*xX]$)/.test(str);\r\n};\r\n\r\n/**\r\n *\r\n * @param {InputFileSystem} fs file system\r\n * @param {string} directory directory to start looking into\r\n * @param {string[]} descriptionFiles possible description filenames\r\n * @param {function((Error | null)=, {data: object, path: string}=): void} callback callback\r\n */\r\nconst getDescriptionFile = (fs, directory, descriptionFiles, callback) => {\r\n\tlet i = 0;\r\n\tconst tryLoadCurrent = () => {\r\n\t\tif (i >= descriptionFiles.length) {\r\n\t\t\tconst parentDirectory = dirname(fs, directory);\r\n\t\t\tif (!parentDirectory || parentDirectory === directory) return callback();\r\n\t\t\treturn getDescriptionFile(\r\n\t\t\t\tfs,\r\n\t\t\t\tparentDirectory,\r\n\t\t\t\tdescriptionFiles,\r\n\t\t\t\tcallback\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst filePath = join(fs, directory, descriptionFiles[i]);\r\n\t\treadJson(fs, filePath, (err, data) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tif (\"code\" in err && err.code === \"ENOENT\") {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\treturn tryLoadCurrent();\r\n\t\t\t\t}\r\n\t\t\t\treturn callback(err);\r\n\t\t\t}\r\n\t\t\tif (!data || typeof data !== \"object\" || Array.isArray(data)) {\r\n\t\t\t\treturn callback(\r\n\t\t\t\t\tnew Error(`Description file ${filePath} is not an object`)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tcallback(null, { data, path: filePath });\r\n\t\t});\r\n\t};\r\n\ttryLoadCurrent();\r\n};\r\nexports.getDescriptionFile = getDescriptionFile;\r\n\r\nexports.getRequiredVersionFromDescriptionFile = (data, packageName) => {\r\n\tif (\r\n\t\tdata.optionalDependencies &&\r\n\t\ttypeof data.optionalDependencies === \"object\" &&\r\n\t\tpackageName in data.optionalDependencies\r\n\t) {\r\n\t\treturn data.optionalDependencies[packageName];\r\n\t}\r\n\tif (\r\n\t\tdata.dependencies &&\r\n\t\ttypeof data.dependencies === \"object\" &&\r\n\t\tpackageName in data.dependencies\r\n\t) {\r\n\t\treturn data.dependencies[packageName];\r\n\t}\r\n\tif (\r\n\t\tdata.peerDependencies &&\r\n\t\ttypeof data.peerDependencies === \"object\" &&\r\n\t\tpackageName in data.peerDependencies\r\n\t) {\r\n\t\treturn data.peerDependencies[packageName];\r\n\t}\r\n\tif (\r\n\t\tdata.devDependencies &&\r\n\t\ttypeof data.devDependencies === \"object\" &&\r\n\t\tpackageName in data.devDependencies\r\n\t) {\r\n\t\treturn data.devDependencies[packageName];\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA,IAAI;EAAEC,OAAO;EAAEC;AAAS,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAEzD;;AAEA;AACA;AACA;AACA;AACAC,OAAO,CAACC,iBAAiB,GAAGC,GAAG,IAAI;EAClC,OAAO,sBAAsB,CAACC,IAAI,CAACD,GAAG,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,kBAAkB,GAAG,CAACC,EAAE,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,QAAQ,KAAK;EACzE,IAAIC,CAAC,GAAG,CAAC;EACT,MAAMC,cAAc,GAAG,MAAM;IAC5B,IAAID,CAAC,IAAIF,gBAAgB,CAACI,MAAM,EAAE;MACjC,MAAMC,eAAe,GAAGf,OAAO,CAACQ,EAAE,EAAEC,SAAS,CAAC;MAC9C,IAAI,CAACM,eAAe,IAAIA,eAAe,KAAKN,SAAS,EAAE,OAAOE,QAAQ,EAAE;MACxE,OAAOJ,kBAAkB,CACxBC,EAAE,EACFO,eAAe,EACfL,gBAAgB,EAChBC,QAAQ,CACR;IACF;IACA,MAAMK,QAAQ,GAAGjB,IAAI,CAACS,EAAE,EAAEC,SAAS,EAAEC,gBAAgB,CAACE,CAAC,CAAC,CAAC;IACzDX,QAAQ,CAACO,EAAE,EAAEQ,QAAQ,EAAE,CAACC,GAAG,EAAEC,IAAI,KAAK;MACrC,IAAID,GAAG,EAAE;QACR,IAAI,MAAM,IAAIA,GAAG,IAAIA,GAAG,CAACE,IAAI,KAAK,QAAQ,EAAE;UAC3CP,CAAC,EAAE;UACH,OAAOC,cAAc,EAAE;QACxB;QACA,OAAOF,QAAQ,CAACM,GAAG,CAAC;MACrB;MACA,IAAI,CAACC,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;QAC7D,OAAOP,QAAQ,CACd,IAAIW,KAAK,CAAE,oBAAmBN,QAAS,mBAAkB,CAAC,CAC1D;MACF;MACAL,QAAQ,CAAC,IAAI,EAAE;QAAEO,IAAI;QAAEK,IAAI,EAAEP;MAAS,CAAC,CAAC;IACzC,CAAC,CAAC;EACH,CAAC;EACDH,cAAc,EAAE;AACjB,CAAC;AACDV,OAAO,CAACI,kBAAkB,GAAGA,kBAAkB;AAE/CJ,OAAO,CAACqB,qCAAqC,GAAG,CAACN,IAAI,EAAEO,WAAW,KAAK;EACtE,IACCP,IAAI,CAACQ,oBAAoB,IACzB,OAAOR,IAAI,CAACQ,oBAAoB,KAAK,QAAQ,IAC7CD,WAAW,IAAIP,IAAI,CAACQ,oBAAoB,EACvC;IACD,OAAOR,IAAI,CAACQ,oBAAoB,CAACD,WAAW,CAAC;EAC9C;EACA,IACCP,IAAI,CAACS,YAAY,IACjB,OAAOT,IAAI,CAACS,YAAY,KAAK,QAAQ,IACrCF,WAAW,IAAIP,IAAI,CAACS,YAAY,EAC/B;IACD,OAAOT,IAAI,CAACS,YAAY,CAACF,WAAW,CAAC;EACtC;EACA,IACCP,IAAI,CAACU,gBAAgB,IACrB,OAAOV,IAAI,CAACU,gBAAgB,KAAK,QAAQ,IACzCH,WAAW,IAAIP,IAAI,CAACU,gBAAgB,EACnC;IACD,OAAOV,IAAI,CAACU,gBAAgB,CAACH,WAAW,CAAC;EAC1C;EACA,IACCP,IAAI,CAACW,eAAe,IACpB,OAAOX,IAAI,CAACW,eAAe,KAAK,QAAQ,IACxCJ,WAAW,IAAIP,IAAI,CAACW,eAAe,EAClC;IACD,OAAOX,IAAI,CAACW,eAAe,CAACJ,WAAW,CAAC;EACzC;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}