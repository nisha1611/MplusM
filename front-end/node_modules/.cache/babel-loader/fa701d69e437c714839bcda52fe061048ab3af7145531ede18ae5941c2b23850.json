{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\nconst getCanonicalQuery = _ref => {\n  let {\n    query = {}\n  } = _ref;\n  const keys = [];\n  const serialized = {};\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n      continue;\n    }\n    keys.push(key);\n    const value = query[key];\n    if (typeof value === \"string\") {\n      serialized[key] = `${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).sort().reduce((encoded, value) => encoded.concat([`${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`]), []).join(\"&\");\n    }\n  }\n  return keys.map(key => serialized[key]).filter(serialized => serialized).join(\"&\");\n};\nexports.getCanonicalQuery = getCanonicalQuery;","map":{"version":3,"names":["Object","defineProperty","exports","value","getCanonicalQuery","util_uri_escape_1","require","constants_1","query","keys","serialized","key","sort","toLowerCase","SIGNATURE_HEADER","push","escapeUri","Array","isArray","slice","reduce","encoded","concat","join","map","filter"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalQuery.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getCanonicalQuery = void 0;\r\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\r\nconst constants_1 = require(\"./constants\");\r\nconst getCanonicalQuery = ({ query = {} }) => {\r\n    const keys = [];\r\n    const serialized = {};\r\n    for (const key of Object.keys(query).sort()) {\r\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\r\n            continue;\r\n        }\r\n        keys.push(key);\r\n        const value = query[key];\r\n        if (typeof value === \"string\") {\r\n            serialized[key] = `${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`;\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            serialized[key] = value\r\n                .slice(0)\r\n                .sort()\r\n                .reduce((encoded, value) => encoded.concat([`${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`]), [])\r\n                .join(\"&\");\r\n        }\r\n    }\r\n    return keys\r\n        .map((key) => serialized[key])\r\n        .filter((serialized) => serialized)\r\n        .join(\"&\");\r\n};\r\nexports.getCanonicalQuery = getCanonicalQuery;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC7D,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMF,iBAAiB,GAAG,QAAoB;EAAA,IAAnB;IAAEI,KAAK,GAAG,CAAC;EAAE,CAAC;EACrC,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB,KAAK,MAAMC,GAAG,IAAIX,MAAM,CAACS,IAAI,CAACD,KAAK,CAAC,CAACI,IAAI,EAAE,EAAE;IACzC,IAAID,GAAG,CAACE,WAAW,EAAE,KAAKN,WAAW,CAACO,gBAAgB,EAAE;MACpD;IACJ;IACAL,IAAI,CAACM,IAAI,CAACJ,GAAG,CAAC;IACd,MAAMR,KAAK,GAAGK,KAAK,CAACG,GAAG,CAAC;IACxB,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;MAC3BO,UAAU,CAACC,GAAG,CAAC,GAAI,GAAE,CAAC,CAAC,EAAEN,iBAAiB,CAACW,SAAS,EAAEL,GAAG,CAAE,IAAG,CAAC,CAAC,EAAEN,iBAAiB,CAACW,SAAS,EAAEb,KAAK,CAAE,EAAC;IAC3G,CAAC,MACI,IAAIc,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,EAAE;MAC3BO,UAAU,CAACC,GAAG,CAAC,GAAGR,KAAK,CAClBgB,KAAK,CAAC,CAAC,CAAC,CACRP,IAAI,EAAE,CACNQ,MAAM,CAAC,CAACC,OAAO,EAAElB,KAAK,KAAKkB,OAAO,CAACC,MAAM,CAAC,CAAE,GAAE,CAAC,CAAC,EAAEjB,iBAAiB,CAACW,SAAS,EAAEL,GAAG,CAAE,IAAG,CAAC,CAAC,EAAEN,iBAAiB,CAACW,SAAS,EAAEb,KAAK,CAAE,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACvIoB,IAAI,CAAC,GAAG,CAAC;IAClB;EACJ;EACA,OAAOd,IAAI,CACNe,GAAG,CAAEb,GAAG,IAAKD,UAAU,CAACC,GAAG,CAAC,CAAC,CAC7Bc,MAAM,CAAEf,UAAU,IAAKA,UAAU,CAAC,CAClCa,IAAI,CAAC,GAAG,CAAC;AAClB,CAAC;AACDrB,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}