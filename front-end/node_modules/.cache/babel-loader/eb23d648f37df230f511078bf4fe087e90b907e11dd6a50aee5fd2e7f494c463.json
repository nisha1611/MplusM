{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateObjectSize = void 0;\nvar buffer_1 = require(\"buffer\");\nvar binary_1 = require(\"../binary\");\nvar constants = require(\"../constants\");\nvar utils_1 = require(\"./utils\");\nfunction calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n  var totalLength = 4 + 1;\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (typeof (object === null || object === void 0 ? void 0 : object.toBSON) === 'function') {\n      object = object.toBSON();\n    }\n    // Calculate size\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n  return totalLength;\n}\nexports.calculateObjectSize = calculateObjectSize;\n/** @internal */\nfunction calculateElement(name,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, serializeFunctions, isArray, ignoreUndefined) {\n  if (serializeFunctions === void 0) {\n    serializeFunctions = false;\n  }\n  if (isArray === void 0) {\n    isArray = false;\n  }\n  if (ignoreUndefined === void 0) {\n    ignoreUndefined = false;\n  }\n  // If we have toBSON defined, override the current object\n  if (typeof (value === null || value === void 0 ? void 0 : value.toBSON) === 'function') {\n    value = value.toBSON();\n  }\n  switch (typeof value) {\n    case 'string':\n      return 1 + buffer_1.Buffer.byteLength(name, 'utf8') + 1 + 4 + buffer_1.Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (Math.floor(value) === value && value >= constants.JS_INT_MIN && value <= constants.JS_INT_MAX) {\n        if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined) return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || (0, utils_1.isDate)(value)) {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (ArrayBuffer.isView(value) || value instanceof ArrayBuffer || (0, utils_1.isAnyArrayBuffer)(value)) {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength;\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Double' || value['_bsontype'] === 'Timestamp') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value['_bsontype'] === 'Decimal128') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + buffer_1.Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + buffer_1.Buffer.byteLength(value.code.toString(), 'utf8') + 1;\n        }\n      } else if (value['_bsontype'] === 'Binary') {\n        var binary = value;\n        // Check what kind of subtype we have\n        if (binary.sub_type === binary_1.Binary.SUBTYPE_BYTE_ARRAY) {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (binary.position + 1 + 4 + 1 + 4);\n        } else {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + (binary.position + 1 + 4 + 1);\n        }\n      } else if (value['_bsontype'] === 'Symbol') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + buffer_1.Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;\n      } else if (value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = Object.assign({\n          $ref: value.collection,\n          $id: value.oid\n        }, value.fields);\n        // Add db reference if it exists\n        if (value.db != null) {\n          ordered_values['$db'] = value.db;\n        }\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);\n      } else if (value instanceof RegExp || (0, utils_1.isRegExp)(value)) {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + buffer_1.Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + buffer_1.Buffer.byteLength(value.pattern, 'utf8') + 1 + buffer_1.Buffer.byteLength(value.options, 'utf8') + 1;\n      } else {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (value instanceof RegExp || (0, utils_1.isRegExp)(value) || String.call(value) === '[object RegExp]') {\n        return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + buffer_1.Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + buffer_1.Buffer.byteLength((0, utils_1.normalizedFunctionString)(value), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else if (serializeFunctions) {\n          return (name != null ? buffer_1.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + buffer_1.Buffer.byteLength((0, utils_1.normalizedFunctionString)(value), 'utf8') + 1;\n        }\n      }\n  }\n  return 0;\n}","map":{"version":3,"mappings":"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","names":["calculateObjectSize","object","serializeFunctions","ignoreUndefined","totalLength","Array","isArray","i","length","calculateElement","toString","toBSON","key","exports","name","value","buffer_1","byteLength","Math","floor","constants","JS_INT_MIN","JS_INT_MAX","BSON_INT32_MIN","BSON_INT32_MAX","Date","ArrayBuffer","isView","scope","Object","keys","code","binary","sub_type","binary_1","SUBTYPE_BYTE_ARRAY","position","ordered_values","assign","$ref","collection","$id","oid","fields","db","RegExp","source","global","ignoreCase","multiline","pattern","options","String","call"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\bson\\src\\parser\\calculate_size.ts"],"sourcesContent":["import { Buffer } from 'buffer';\r\nimport { Binary } from '../binary';\r\nimport type { Document } from '../bson';\r\nimport * as constants from '../constants';\r\nimport { isAnyArrayBuffer, isDate, isRegExp, normalizedFunctionString } from './utils';\r\n\r\nexport function calculateObjectSize(\r\n  object: Document,\r\n  serializeFunctions?: boolean,\r\n  ignoreUndefined?: boolean\r\n): number {\r\n  let totalLength = 4 + 1;\r\n\r\n  if (Array.isArray(object)) {\r\n    for (let i = 0; i < object.length; i++) {\r\n      totalLength += calculateElement(\r\n        i.toString(),\r\n        object[i],\r\n        serializeFunctions,\r\n        true,\r\n        ignoreUndefined\r\n      );\r\n    }\r\n  } else {\r\n    // If we have toBSON defined, override the current object\r\n\r\n    if (typeof object?.toBSON === 'function') {\r\n      object = object.toBSON();\r\n    }\r\n\r\n    // Calculate size\r\n    for (const key in object) {\r\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\r\n    }\r\n  }\r\n\r\n  return totalLength;\r\n}\r\n\r\n/** @internal */\r\nfunction calculateElement(\r\n  name: string,\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  value: any,\r\n  serializeFunctions = false,\r\n  isArray = false,\r\n  ignoreUndefined = false\r\n) {\r\n  // If we have toBSON defined, override the current object\r\n  if (typeof value?.toBSON === 'function') {\r\n    value = value.toBSON();\r\n  }\r\n\r\n  switch (typeof value) {\r\n    case 'string':\r\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\r\n    case 'number':\r\n      if (\r\n        Math.floor(value) === value &&\r\n        value >= constants.JS_INT_MIN &&\r\n        value <= constants.JS_INT_MAX\r\n      ) {\r\n        if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\r\n          // 32 bit\r\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\r\n        } else {\r\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\r\n        }\r\n      } else {\r\n        // 64 bit\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\r\n      }\r\n    case 'undefined':\r\n      if (isArray || !ignoreUndefined)\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\r\n      return 0;\r\n    case 'boolean':\r\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\r\n    case 'object':\r\n      if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\r\n      } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\r\n      } else if (value instanceof Date || isDate(value)) {\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\r\n      } else if (\r\n        ArrayBuffer.isView(value) ||\r\n        value instanceof ArrayBuffer ||\r\n        isAnyArrayBuffer(value)\r\n      ) {\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength\r\n        );\r\n      } else if (\r\n        value['_bsontype'] === 'Long' ||\r\n        value['_bsontype'] === 'Double' ||\r\n        value['_bsontype'] === 'Timestamp'\r\n      ) {\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\r\n      } else if (value['_bsontype'] === 'Decimal128') {\r\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\r\n      } else if (value['_bsontype'] === 'Code') {\r\n        // Calculate size depending on the availability of a scope\r\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\r\n          return (\r\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n            1 +\r\n            4 +\r\n            4 +\r\n            Buffer.byteLength(value.code.toString(), 'utf8') +\r\n            1 +\r\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\r\n          );\r\n        } else {\r\n          return (\r\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n            1 +\r\n            4 +\r\n            Buffer.byteLength(value.code.toString(), 'utf8') +\r\n            1\r\n          );\r\n        }\r\n      } else if (value['_bsontype'] === 'Binary') {\r\n        const binary: Binary = value;\r\n        // Check what kind of subtype we have\r\n        if (binary.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\r\n          return (\r\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n            (binary.position + 1 + 4 + 1 + 4)\r\n          );\r\n        } else {\r\n          return (\r\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (binary.position + 1 + 4 + 1)\r\n          );\r\n        }\r\n      } else if (value['_bsontype'] === 'Symbol') {\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n          Buffer.byteLength(value.value, 'utf8') +\r\n          4 +\r\n          1 +\r\n          1\r\n        );\r\n      } else if (value['_bsontype'] === 'DBRef') {\r\n        // Set up correct object for serialization\r\n        const ordered_values = Object.assign(\r\n          {\r\n            $ref: value.collection,\r\n            $id: value.oid\r\n          },\r\n          value.fields\r\n        );\r\n\r\n        // Add db reference if it exists\r\n        if (value.db != null) {\r\n          ordered_values['$db'] = value.db;\r\n        }\r\n\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n          1 +\r\n          calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\r\n        );\r\n      } else if (value instanceof RegExp || isRegExp(value)) {\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n          1 +\r\n          Buffer.byteLength(value.source, 'utf8') +\r\n          1 +\r\n          (value.global ? 1 : 0) +\r\n          (value.ignoreCase ? 1 : 0) +\r\n          (value.multiline ? 1 : 0) +\r\n          1\r\n        );\r\n      } else if (value['_bsontype'] === 'BSONRegExp') {\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n          1 +\r\n          Buffer.byteLength(value.pattern, 'utf8') +\r\n          1 +\r\n          Buffer.byteLength(value.options, 'utf8') +\r\n          1\r\n        );\r\n      } else {\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n          calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\r\n          1\r\n        );\r\n      }\r\n    case 'function':\r\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\r\n      if (value instanceof RegExp || isRegExp(value) || String.call(value) === '[object RegExp]') {\r\n        return (\r\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n          1 +\r\n          Buffer.byteLength(value.source, 'utf8') +\r\n          1 +\r\n          (value.global ? 1 : 0) +\r\n          (value.ignoreCase ? 1 : 0) +\r\n          (value.multiline ? 1 : 0) +\r\n          1\r\n        );\r\n      } else {\r\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\r\n          return (\r\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n            1 +\r\n            4 +\r\n            4 +\r\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\r\n            1 +\r\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\r\n          );\r\n        } else if (serializeFunctions) {\r\n          return (\r\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\r\n            1 +\r\n            4 +\r\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\r\n            1\r\n          );\r\n        }\r\n      }\r\n  }\r\n\r\n  return 0;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}