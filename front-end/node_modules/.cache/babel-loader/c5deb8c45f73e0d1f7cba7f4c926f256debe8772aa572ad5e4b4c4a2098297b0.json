{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass ExternalsPlugin {\n  /**\r\n   * @param {string | undefined} type default external type\r\n   * @param {Externals} externals externals config\r\n   */\n  constructor(type, externals) {\n    this.type = type;\n    this.externals = externals;\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compile.tap(\"ExternalsPlugin\", _ref => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      new ExternalModuleFactoryPlugin(this.type, this.externals).apply(normalModuleFactory);\n    });\n  }\n}\nmodule.exports = ExternalsPlugin;","map":{"version":3,"names":["ExternalModuleFactoryPlugin","require","ExternalsPlugin","constructor","type","externals","apply","compiler","hooks","compile","tap","normalModuleFactory","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/ExternalsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\r\n\r\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n\r\nclass ExternalsPlugin {\r\n\t/**\r\n\t * @param {string | undefined} type default external type\r\n\t * @param {Externals} externals externals config\r\n\t */\r\n\tconstructor(type, externals) {\r\n\t\tthis.type = type;\r\n\t\tthis.externals = externals;\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compile.tap(\"ExternalsPlugin\", ({ normalModuleFactory }) => {\r\n\t\t\tnew ExternalModuleFactoryPlugin(this.type, this.externals).apply(\r\n\t\t\t\tnormalModuleFactory\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = ExternalsPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAA+B,CAAC;;AAE5E;AACA;;AAEA,MAAMC,eAAe,CAAC;EACrB;AACD;AACA;AACA;EACCC,WAAW,CAACC,IAAI,EAAEC,SAAS,EAAE;IAC5B,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC3B;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,QAA6B;MAAA,IAA5B;QAAEC;MAAoB,CAAC;MACrE,IAAIX,2BAA2B,CAAC,IAAI,CAACI,IAAI,EAAE,IAAI,CAACC,SAAS,CAAC,CAACC,KAAK,CAC/DK,mBAAmB,CACnB;IACF,CAAC,CAAC;EACH;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGX,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}