{"ast":null,"code":"import { GetCredentialsForIdentityCommand } from \"@aws-sdk/client-cognito-identity\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { resolveLogins } from \"./resolveLogins\";\nexport function fromCognitoIdentity(parameters) {\n  return async () => {\n    const {\n      Credentials: {\n        AccessKeyId = throwOnMissingAccessKeyId(),\n        Expiration,\n        SecretKey = throwOnMissingSecretKey(),\n        SessionToken\n      } = throwOnMissingCredentials()\n    } = await parameters.client.send(new GetCredentialsForIdentityCommand({\n      CustomRoleArn: parameters.customRoleArn,\n      IdentityId: parameters.identityId,\n      Logins: parameters.logins ? await resolveLogins(parameters.logins) : undefined\n    }));\n    return {\n      identityId: parameters.identityId,\n      accessKeyId: AccessKeyId,\n      secretAccessKey: SecretKey,\n      sessionToken: SessionToken,\n      expiration: Expiration\n    };\n  };\n}\nfunction throwOnMissingAccessKeyId() {\n  throw new CredentialsProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\nfunction throwOnMissingCredentials() {\n  throw new CredentialsProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\nfunction throwOnMissingSecretKey() {\n  throw new CredentialsProviderError(\"Response from Amazon Cognito contained no secret key\");\n}","map":{"version":3,"names":["GetCredentialsForIdentityCommand","CredentialsProviderError","resolveLogins","fromCognitoIdentity","parameters","Credentials","AccessKeyId","throwOnMissingAccessKeyId","Expiration","SecretKey","throwOnMissingSecretKey","SessionToken","throwOnMissingCredentials","client","send","CustomRoleArn","customRoleArn","IdentityId","identityId","Logins","logins","undefined","accessKeyId","secretAccessKey","sessionToken","expiration"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentity.js"],"sourcesContent":["import { GetCredentialsForIdentityCommand } from \"@aws-sdk/client-cognito-identity\";\r\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\r\nimport { resolveLogins } from \"./resolveLogins\";\r\nexport function fromCognitoIdentity(parameters) {\r\n    return async () => {\r\n        const { Credentials: { AccessKeyId = throwOnMissingAccessKeyId(), Expiration, SecretKey = throwOnMissingSecretKey(), SessionToken, } = throwOnMissingCredentials(), } = await parameters.client.send(new GetCredentialsForIdentityCommand({\r\n            CustomRoleArn: parameters.customRoleArn,\r\n            IdentityId: parameters.identityId,\r\n            Logins: parameters.logins ? await resolveLogins(parameters.logins) : undefined,\r\n        }));\r\n        return {\r\n            identityId: parameters.identityId,\r\n            accessKeyId: AccessKeyId,\r\n            secretAccessKey: SecretKey,\r\n            sessionToken: SessionToken,\r\n            expiration: Expiration,\r\n        };\r\n    };\r\n}\r\nfunction throwOnMissingAccessKeyId() {\r\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no access key ID\");\r\n}\r\nfunction throwOnMissingCredentials() {\r\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no credentials\");\r\n}\r\nfunction throwOnMissingSecretKey() {\r\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no secret key\");\r\n}\r\n"],"mappings":"AAAA,SAASA,gCAAgC,QAAQ,kCAAkC;AACnF,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,SAASC,mBAAmB,CAACC,UAAU,EAAE;EAC5C,OAAO,YAAY;IACf,MAAM;MAAEC,WAAW,EAAE;QAAEC,WAAW,GAAGC,yBAAyB,EAAE;QAAEC,UAAU;QAAEC,SAAS,GAAGC,uBAAuB,EAAE;QAAEC;MAAc,CAAC,GAAGC,yBAAyB;IAAI,CAAC,GAAG,MAAMR,UAAU,CAACS,MAAM,CAACC,IAAI,CAAC,IAAId,gCAAgC,CAAC;MACtOe,aAAa,EAAEX,UAAU,CAACY,aAAa;MACvCC,UAAU,EAAEb,UAAU,CAACc,UAAU;MACjCC,MAAM,EAAEf,UAAU,CAACgB,MAAM,GAAG,MAAMlB,aAAa,CAACE,UAAU,CAACgB,MAAM,CAAC,GAAGC;IACzE,CAAC,CAAC,CAAC;IACH,OAAO;MACHH,UAAU,EAAEd,UAAU,CAACc,UAAU;MACjCI,WAAW,EAAEhB,WAAW;MACxBiB,eAAe,EAAEd,SAAS;MAC1Be,YAAY,EAAEb,YAAY;MAC1Bc,UAAU,EAAEjB;IAChB,CAAC;EACL,CAAC;AACL;AACA,SAASD,yBAAyB,GAAG;EACjC,MAAM,IAAIN,wBAAwB,CAAC,yDAAyD,CAAC;AACjG;AACA,SAASW,yBAAyB,GAAG;EACjC,MAAM,IAAIX,wBAAwB,CAAC,uDAAuD,CAAC;AAC/F;AACA,SAASS,uBAAuB,GAAG;EAC/B,MAAM,IAAIT,wBAAwB,CAAC,sDAAsD,CAAC;AAC9F"},"metadata":{},"sourceType":"module","externalDependencies":[]}