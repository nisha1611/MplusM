{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\nconst util_middleware_1 = require(\"@aws-sdk/util-middleware\");\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = input => {\n  const normalizedCreds = input.credentials ? normalizeCredentialProvider(input.credentials) : input.credentialDefaultProvider(input);\n  const {\n    signingEscapePath = true,\n    systemClockOffset = input.systemClockOffset || 0,\n    sha256\n  } = input;\n  let signer;\n  if (input.signer) {\n    signer = (0, util_middleware_1.normalizeProvider)(input.signer);\n  } else if (input.regionInfoProvider) {\n    signer = () => (0, util_middleware_1.normalizeProvider)(input.region)().then(async region => [(await input.regionInfoProvider(region, {\n      useFipsEndpoint: await input.useFipsEndpoint(),\n      useDualstackEndpoint: await input.useDualstackEndpoint()\n    })) || {}, region]).then(_ref => {\n      let [regionInfo, region] = _ref;\n      const {\n        signingRegion,\n        signingService\n      } = regionInfo;\n      input.signingRegion = input.signingRegion || signingRegion || region;\n      input.signingName = input.signingName || signingService || input.serviceId;\n      const params = {\n        ...input,\n        credentials: normalizedCreds,\n        region: input.signingRegion,\n        service: input.signingName,\n        sha256,\n        uriEscapePath: signingEscapePath\n      };\n      const SignerCtor = input.signerConstructor || signature_v4_1.SignatureV4;\n      return new SignerCtor(params);\n    });\n  } else {\n    signer = async authScheme => {\n      authScheme = Object.assign({}, {\n        name: \"sigv4\",\n        signingName: input.signingName || input.defaultSigningName,\n        signingRegion: await (0, util_middleware_1.normalizeProvider)(input.region)(),\n        properties: {}\n      }, authScheme);\n      const signingRegion = authScheme.signingRegion;\n      const signingService = authScheme.signingName;\n      input.signingRegion = input.signingRegion || signingRegion;\n      input.signingName = input.signingName || signingService || input.serviceId;\n      const params = {\n        ...input,\n        credentials: normalizedCreds,\n        region: input.signingRegion,\n        service: input.signingName,\n        sha256,\n        uriEscapePath: signingEscapePath\n      };\n      const SignerCtor = input.signerConstructor || signature_v4_1.SignatureV4;\n      return new SignerCtor(params);\n    };\n  }\n  return {\n    ...input,\n    systemClockOffset,\n    signingEscapePath,\n    credentials: normalizedCreds,\n    signer\n  };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\nconst resolveSigV4AuthConfig = input => {\n  const normalizedCreds = input.credentials ? normalizeCredentialProvider(input.credentials) : input.credentialDefaultProvider(input);\n  const {\n    signingEscapePath = true,\n    systemClockOffset = input.systemClockOffset || 0,\n    sha256\n  } = input;\n  let signer;\n  if (input.signer) {\n    signer = (0, util_middleware_1.normalizeProvider)(input.signer);\n  } else {\n    signer = (0, util_middleware_1.normalizeProvider)(new signature_v4_1.SignatureV4({\n      credentials: normalizedCreds,\n      region: input.region,\n      service: input.signingName,\n      sha256,\n      uriEscapePath: signingEscapePath\n    }));\n  }\n  return {\n    ...input,\n    systemClockOffset,\n    signingEscapePath,\n    credentials: normalizedCreds,\n    signer\n  };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeCredentialProvider = credentials => {\n  if (typeof credentials === \"function\") {\n    return (0, property_provider_1.memoize)(credentials, credentials => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, credentials => credentials.expiration !== undefined);\n  }\n  return (0, util_middleware_1.normalizeProvider)(credentials);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveSigV4AuthConfig","resolveAwsAuthConfig","property_provider_1","require","signature_v4_1","util_middleware_1","CREDENTIAL_EXPIRE_WINDOW","input","normalizedCreds","credentials","normalizeCredentialProvider","credentialDefaultProvider","signingEscapePath","systemClockOffset","sha256","signer","normalizeProvider","regionInfoProvider","region","then","useFipsEndpoint","useDualstackEndpoint","regionInfo","signingRegion","signingService","signingName","serviceId","params","service","uriEscapePath","SignerCtor","signerConstructor","SignatureV4","authScheme","assign","name","defaultSigningName","properties","memoize","expiration","undefined","getTime","Date","now"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/middleware-signing/dist-cjs/configurations.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\r\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\r\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\r\nconst util_middleware_1 = require(\"@aws-sdk/util-middleware\");\r\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\r\nconst resolveAwsAuthConfig = (input) => {\r\n    const normalizedCreds = input.credentials\r\n        ? normalizeCredentialProvider(input.credentials)\r\n        : input.credentialDefaultProvider(input);\r\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\r\n    let signer;\r\n    if (input.signer) {\r\n        signer = (0, util_middleware_1.normalizeProvider)(input.signer);\r\n    }\r\n    else if (input.regionInfoProvider) {\r\n        signer = () => (0, util_middleware_1.normalizeProvider)(input.region)()\r\n            .then(async (region) => [\r\n            (await input.regionInfoProvider(region, {\r\n                useFipsEndpoint: await input.useFipsEndpoint(),\r\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\r\n            })) || {},\r\n            region,\r\n        ])\r\n            .then(([regionInfo, region]) => {\r\n            const { signingRegion, signingService } = regionInfo;\r\n            input.signingRegion = input.signingRegion || signingRegion || region;\r\n            input.signingName = input.signingName || signingService || input.serviceId;\r\n            const params = {\r\n                ...input,\r\n                credentials: normalizedCreds,\r\n                region: input.signingRegion,\r\n                service: input.signingName,\r\n                sha256,\r\n                uriEscapePath: signingEscapePath,\r\n            };\r\n            const SignerCtor = input.signerConstructor || signature_v4_1.SignatureV4;\r\n            return new SignerCtor(params);\r\n        });\r\n    }\r\n    else {\r\n        signer = async (authScheme) => {\r\n            authScheme = Object.assign({}, {\r\n                name: \"sigv4\",\r\n                signingName: input.signingName || input.defaultSigningName,\r\n                signingRegion: await (0, util_middleware_1.normalizeProvider)(input.region)(),\r\n                properties: {},\r\n            }, authScheme);\r\n            const signingRegion = authScheme.signingRegion;\r\n            const signingService = authScheme.signingName;\r\n            input.signingRegion = input.signingRegion || signingRegion;\r\n            input.signingName = input.signingName || signingService || input.serviceId;\r\n            const params = {\r\n                ...input,\r\n                credentials: normalizedCreds,\r\n                region: input.signingRegion,\r\n                service: input.signingName,\r\n                sha256,\r\n                uriEscapePath: signingEscapePath,\r\n            };\r\n            const SignerCtor = input.signerConstructor || signature_v4_1.SignatureV4;\r\n            return new SignerCtor(params);\r\n        };\r\n    }\r\n    return {\r\n        ...input,\r\n        systemClockOffset,\r\n        signingEscapePath,\r\n        credentials: normalizedCreds,\r\n        signer,\r\n    };\r\n};\r\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\r\nconst resolveSigV4AuthConfig = (input) => {\r\n    const normalizedCreds = input.credentials\r\n        ? normalizeCredentialProvider(input.credentials)\r\n        : input.credentialDefaultProvider(input);\r\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\r\n    let signer;\r\n    if (input.signer) {\r\n        signer = (0, util_middleware_1.normalizeProvider)(input.signer);\r\n    }\r\n    else {\r\n        signer = (0, util_middleware_1.normalizeProvider)(new signature_v4_1.SignatureV4({\r\n            credentials: normalizedCreds,\r\n            region: input.region,\r\n            service: input.signingName,\r\n            sha256,\r\n            uriEscapePath: signingEscapePath,\r\n        }));\r\n    }\r\n    return {\r\n        ...input,\r\n        systemClockOffset,\r\n        signingEscapePath,\r\n        credentials: normalizedCreds,\r\n        signer,\r\n    };\r\n};\r\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\r\nconst normalizeCredentialProvider = (credentials) => {\r\n    if (typeof credentials === \"function\") {\r\n        return (0, property_provider_1.memoize)(credentials, (credentials) => credentials.expiration !== undefined &&\r\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\r\n    }\r\n    return (0, util_middleware_1.normalizeProvider)(credentials);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}