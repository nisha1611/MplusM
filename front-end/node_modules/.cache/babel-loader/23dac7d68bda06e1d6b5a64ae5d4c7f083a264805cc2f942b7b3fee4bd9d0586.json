{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst ConditionalInitFragment = require(\"../ConditionalInitFragment\");\nconst Dependency = require(\"../Dependency\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\nconst InitFragment = require(\"../InitFragment\");\nconst Template = require(\"../Template\");\nconst AwaitDependenciesInitFragment = require(\"../async-modules/AwaitDependenciesInitFragment\");\nconst {\n  filterRuntime,\n  mergeRuntime\n} = require(\"../util/runtime\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst ExportPresenceModes = {\n  NONE: /** @type {0} */0,\n  WARN: /** @type {1} */1,\n  AUTO: /** @type {2} */2,\n  ERROR: /** @type {3} */3,\n  fromUserOption(str) {\n    switch (str) {\n      case \"error\":\n        return ExportPresenceModes.ERROR;\n      case \"warn\":\n        return ExportPresenceModes.WARN;\n      case \"auto\":\n        return ExportPresenceModes.AUTO;\n      case false:\n        return ExportPresenceModes.NONE;\n      default:\n        throw new Error(`Invalid export presence value ${str}`);\n    }\n  }\n};\nclass HarmonyImportDependency extends ModuleDependency {\n  /**\r\n   *\r\n   * @param {string} request request string\r\n   * @param {number} sourceOrder source order\r\n   * @param {Record<string, any>=} assertions import assertions\r\n   */\n  constructor(request, sourceOrder, assertions) {\n    super(request);\n    this.sourceOrder = sourceOrder;\n    this.assertions = assertions;\n  }\n  get category() {\n    return \"esm\";\n  }\n\n  /**\r\n   * Returns list of exports referenced by this dependency\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    return Dependency.NO_EXPORTS_REFERENCED;\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @returns {string} name of the variable for the import\r\n   */\n  getImportVar(moduleGraph) {\n    const module = moduleGraph.getParentModule(this);\n    const meta = moduleGraph.getMeta(module);\n    let importVarMap = meta.importVarMap;\n    if (!importVarMap) meta.importVarMap = importVarMap = new Map();\n    let importVar = importVarMap.get(moduleGraph.getModule(this));\n    if (importVar) return importVar;\n    importVar = `${Template.toIdentifier(`${this.userRequest}`)}__WEBPACK_IMPORTED_MODULE_${importVarMap.size}__`;\n    importVarMap.set(moduleGraph.getModule(this), importVar);\n    return importVar;\n  }\n\n  /**\r\n   * @param {boolean} update create new variables or update existing one\r\n   * @param {DependencyTemplateContext} templateContext the template context\r\n   * @returns {[string, string]} the import statement and the compat statement\r\n   */\n  getImportStatement(update, _ref) {\n    let {\n      runtimeTemplate,\n      module,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref;\n    return runtimeTemplate.importStatement({\n      update,\n      module: moduleGraph.getModule(this),\n      chunkGraph,\n      importVar: this.getImportVar(moduleGraph),\n      request: this.request,\n      originModule: module,\n      runtimeRequirements\n    });\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {string[]} ids imported ids\r\n   * @param {string} additionalMessage extra info included in the error message\r\n   * @returns {WebpackError[] | undefined} errors\r\n   */\n  getLinkingErrors(moduleGraph, ids, additionalMessage) {\n    const importedModule = moduleGraph.getModule(this);\n    // ignore errors for missing or failed modules\n    if (!importedModule || importedModule.getNumberOfErrors() > 0) {\n      return;\n    }\n    const parentModule = moduleGraph.getParentModule(this);\n    const exportsType = importedModule.getExportsType(moduleGraph, parentModule.buildMeta.strictHarmonyModule);\n    if (exportsType === \"namespace\" || exportsType === \"default-with-named\") {\n      if (ids.length === 0) {\n        return;\n      }\n      if ((exportsType !== \"default-with-named\" || ids[0] !== \"default\") && moduleGraph.isExportProvided(importedModule, ids) === false) {\n        // We are sure that it's not provided\n\n        // Try to provide detailed info in the error message\n        let pos = 0;\n        let exportsInfo = moduleGraph.getExportsInfo(importedModule);\n        while (pos < ids.length && exportsInfo) {\n          const id = ids[pos++];\n          const exportInfo = exportsInfo.getReadOnlyExportInfo(id);\n          if (exportInfo.provided === false) {\n            // We are sure that it's not provided\n            const providedExports = exportsInfo.getProvidedExports();\n            const moreInfo = !Array.isArray(providedExports) ? \" (possible exports unknown)\" : providedExports.length === 0 ? \" (module has no exports)\" : ` (possible exports: ${providedExports.join(\", \")})`;\n            return [new HarmonyLinkingError(`export ${ids.slice(0, pos).map(id => `'${id}'`).join(\".\")} ${additionalMessage} was not found in '${this.userRequest}'${moreInfo}`)];\n          }\n          exportsInfo = exportInfo.getNestedExportsInfo();\n        }\n\n        // General error message\n        return [new HarmonyLinkingError(`export ${ids.map(id => `'${id}'`).join(\".\")} ${additionalMessage} was not found in '${this.userRequest}'`)];\n      }\n    }\n    switch (exportsType) {\n      case \"default-only\":\n        // It's has only a default export\n        if (ids.length > 0 && ids[0] !== \"default\") {\n          // In strict harmony modules we only support the default export\n          return [new HarmonyLinkingError(`Can't import the named export ${ids.map(id => `'${id}'`).join(\".\")} ${additionalMessage} from default-exporting module (only default export is available)`)];\n        }\n        break;\n      case \"default-with-named\":\n        // It has a default export and named properties redirect\n        // In some cases we still want to warn here\n        if (ids.length > 0 && ids[0] !== \"default\" && importedModule.buildMeta.defaultObject === \"redirect-warn\") {\n          // For these modules only the default export is supported\n          return [new HarmonyLinkingError(`Should not import the named export ${ids.map(id => `'${id}'`).join(\".\")} ${additionalMessage} from default-exporting module (only default export is available soon)`)];\n        }\n        break;\n    }\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.sourceOrder);\n    write(this.assertions);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.sourceOrder = read();\n    this.assertions = read();\n    super.deserialize(context);\n  }\n}\nmodule.exports = HarmonyImportDependency;\n\n/** @type {WeakMap<Module, WeakMap<Module, RuntimeSpec | boolean>>} */\nconst importEmittedMap = new WeakMap();\nHarmonyImportDependency.Template = class HarmonyImportDependencyTemplate extends ModuleDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, templateContext) {\n    const dep = /** @type {HarmonyImportDependency} */dependency;\n    const {\n      module,\n      chunkGraph,\n      moduleGraph,\n      runtime\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep);\n    if (connection && !connection.isTargetActive(runtime)) return;\n    const referencedModule = connection && connection.module;\n    if (connection && connection.weak && referencedModule && chunkGraph.getModuleId(referencedModule) === null) {\n      // in weak references, module might not be in any chunk\n      // but that's ok, we don't need that logic in this case\n      return;\n    }\n    const moduleKey = referencedModule ? referencedModule.identifier() : dep.request;\n    const key = `harmony import ${moduleKey}`;\n    const runtimeCondition = dep.weak ? false : connection ? filterRuntime(runtime, r => connection.isTargetActive(r)) : true;\n    if (module && referencedModule) {\n      let emittedModules = importEmittedMap.get(module);\n      if (emittedModules === undefined) {\n        emittedModules = new WeakMap();\n        importEmittedMap.set(module, emittedModules);\n      }\n      let mergedRuntimeCondition = runtimeCondition;\n      const oldRuntimeCondition = emittedModules.get(referencedModule) || false;\n      if (oldRuntimeCondition !== false && mergedRuntimeCondition !== true) {\n        if (mergedRuntimeCondition === false || oldRuntimeCondition === true) {\n          mergedRuntimeCondition = oldRuntimeCondition;\n        } else {\n          mergedRuntimeCondition = mergeRuntime(oldRuntimeCondition, mergedRuntimeCondition);\n        }\n      }\n      emittedModules.set(referencedModule, mergedRuntimeCondition);\n    }\n    const importStatement = dep.getImportStatement(false, templateContext);\n    if (referencedModule && templateContext.moduleGraph.isAsync(referencedModule)) {\n      templateContext.initFragments.push(new ConditionalInitFragment(importStatement[0], InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder, key, runtimeCondition));\n      templateContext.initFragments.push(new AwaitDependenciesInitFragment(new Set([dep.getImportVar(templateContext.moduleGraph)])));\n      templateContext.initFragments.push(new ConditionalInitFragment(importStatement[1], InitFragment.STAGE_ASYNC_HARMONY_IMPORTS, dep.sourceOrder, key + \" compat\", runtimeCondition));\n    } else {\n      templateContext.initFragments.push(new ConditionalInitFragment(importStatement[0] + importStatement[1], InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder, key, runtimeCondition));\n    }\n  }\n\n  /**\r\n   *\r\n   * @param {Module} module the module\r\n   * @param {Module} referencedModule the referenced module\r\n   * @returns {RuntimeSpec | boolean} runtimeCondition in which this import has been emitted\r\n   */\n  static getImportEmittedRuntime(module, referencedModule) {\n    const emittedModules = importEmittedMap.get(module);\n    if (emittedModules === undefined) return false;\n    return emittedModules.get(referencedModule) || false;\n  }\n};\nmodule.exports.ExportPresenceModes = ExportPresenceModes;","map":{"version":3,"names":["ConditionalInitFragment","require","Dependency","HarmonyLinkingError","InitFragment","Template","AwaitDependenciesInitFragment","filterRuntime","mergeRuntime","ModuleDependency","ExportPresenceModes","NONE","WARN","AUTO","ERROR","fromUserOption","str","Error","HarmonyImportDependency","constructor","request","sourceOrder","assertions","category","getReferencedExports","moduleGraph","runtime","NO_EXPORTS_REFERENCED","getImportVar","module","getParentModule","meta","getMeta","importVarMap","Map","importVar","get","getModule","toIdentifier","userRequest","size","set","getImportStatement","update","runtimeTemplate","chunkGraph","runtimeRequirements","importStatement","originModule","getLinkingErrors","ids","additionalMessage","importedModule","getNumberOfErrors","parentModule","exportsType","getExportsType","buildMeta","strictHarmonyModule","length","isExportProvided","pos","exportsInfo","getExportsInfo","id","exportInfo","getReadOnlyExportInfo","provided","providedExports","getProvidedExports","moreInfo","Array","isArray","join","slice","map","getNestedExportsInfo","defaultObject","serialize","context","write","deserialize","read","exports","importEmittedMap","WeakMap","HarmonyImportDependencyTemplate","apply","dependency","source","templateContext","dep","connection","getConnection","isTargetActive","referencedModule","weak","getModuleId","moduleKey","identifier","key","runtimeCondition","r","emittedModules","undefined","mergedRuntimeCondition","oldRuntimeCondition","isAsync","initFragments","push","STAGE_HARMONY_IMPORTS","Set","STAGE_ASYNC_HARMONY_IMPORTS","getImportEmittedRuntime"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/HarmonyImportDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst ConditionalInitFragment = require(\"../ConditionalInitFragment\");\r\nconst Dependency = require(\"../Dependency\");\r\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\r\nconst InitFragment = require(\"../InitFragment\");\r\nconst Template = require(\"../Template\");\r\nconst AwaitDependenciesInitFragment = require(\"../async-modules/AwaitDependenciesInitFragment\");\r\nconst { filterRuntime, mergeRuntime } = require(\"../util/runtime\");\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"webpack-sources\").Source} Source */\r\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../Module\")} Module */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n/** @typedef {import(\"../WebpackError\")} WebpackError */\r\n/** @typedef {import(\"../util/Hash\")} Hash */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\nconst ExportPresenceModes = {\r\n\tNONE: /** @type {0} */ (0),\r\n\tWARN: /** @type {1} */ (1),\r\n\tAUTO: /** @type {2} */ (2),\r\n\tERROR: /** @type {3} */ (3),\r\n\tfromUserOption(str) {\r\n\t\tswitch (str) {\r\n\t\t\tcase \"error\":\r\n\t\t\t\treturn ExportPresenceModes.ERROR;\r\n\t\t\tcase \"warn\":\r\n\t\t\t\treturn ExportPresenceModes.WARN;\r\n\t\t\tcase \"auto\":\r\n\t\t\t\treturn ExportPresenceModes.AUTO;\r\n\t\t\tcase false:\r\n\t\t\t\treturn ExportPresenceModes.NONE;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid export presence value ${str}`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nclass HarmonyImportDependency extends ModuleDependency {\r\n\t/**\r\n\t *\r\n\t * @param {string} request request string\r\n\t * @param {number} sourceOrder source order\r\n\t * @param {Record<string, any>=} assertions import assertions\r\n\t */\r\n\tconstructor(request, sourceOrder, assertions) {\r\n\t\tsuper(request);\r\n\t\tthis.sourceOrder = sourceOrder;\r\n\t\tthis.assertions = assertions;\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"esm\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of exports referenced by this dependency\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n\t */\r\n\tgetReferencedExports(moduleGraph, runtime) {\r\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @returns {string} name of the variable for the import\r\n\t */\r\n\tgetImportVar(moduleGraph) {\r\n\t\tconst module = moduleGraph.getParentModule(this);\r\n\t\tconst meta = moduleGraph.getMeta(module);\r\n\t\tlet importVarMap = meta.importVarMap;\r\n\t\tif (!importVarMap) meta.importVarMap = importVarMap = new Map();\r\n\t\tlet importVar = importVarMap.get(moduleGraph.getModule(this));\r\n\t\tif (importVar) return importVar;\r\n\t\timportVar = `${Template.toIdentifier(\r\n\t\t\t`${this.userRequest}`\r\n\t\t)}__WEBPACK_IMPORTED_MODULE_${importVarMap.size}__`;\r\n\t\timportVarMap.set(moduleGraph.getModule(this), importVar);\r\n\t\treturn importVar;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {boolean} update create new variables or update existing one\r\n\t * @param {DependencyTemplateContext} templateContext the template context\r\n\t * @returns {[string, string]} the import statement and the compat statement\r\n\t */\r\n\tgetImportStatement(\r\n\t\tupdate,\r\n\t\t{ runtimeTemplate, module, moduleGraph, chunkGraph, runtimeRequirements }\r\n\t) {\r\n\t\treturn runtimeTemplate.importStatement({\r\n\t\t\tupdate,\r\n\t\t\tmodule: moduleGraph.getModule(this),\r\n\t\t\tchunkGraph,\r\n\t\t\timportVar: this.getImportVar(moduleGraph),\r\n\t\t\trequest: this.request,\r\n\t\t\toriginModule: module,\r\n\t\t\truntimeRequirements\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {string[]} ids imported ids\r\n\t * @param {string} additionalMessage extra info included in the error message\r\n\t * @returns {WebpackError[] | undefined} errors\r\n\t */\r\n\tgetLinkingErrors(moduleGraph, ids, additionalMessage) {\r\n\t\tconst importedModule = moduleGraph.getModule(this);\r\n\t\t// ignore errors for missing or failed modules\r\n\t\tif (!importedModule || importedModule.getNumberOfErrors() > 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst parentModule = moduleGraph.getParentModule(this);\r\n\t\tconst exportsType = importedModule.getExportsType(\r\n\t\t\tmoduleGraph,\r\n\t\t\tparentModule.buildMeta.strictHarmonyModule\r\n\t\t);\r\n\t\tif (exportsType === \"namespace\" || exportsType === \"default-with-named\") {\r\n\t\t\tif (ids.length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(exportsType !== \"default-with-named\" || ids[0] !== \"default\") &&\r\n\t\t\t\tmoduleGraph.isExportProvided(importedModule, ids) === false\r\n\t\t\t) {\r\n\t\t\t\t// We are sure that it's not provided\r\n\r\n\t\t\t\t// Try to provide detailed info in the error message\r\n\t\t\t\tlet pos = 0;\r\n\t\t\t\tlet exportsInfo = moduleGraph.getExportsInfo(importedModule);\r\n\t\t\t\twhile (pos < ids.length && exportsInfo) {\r\n\t\t\t\t\tconst id = ids[pos++];\r\n\t\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(id);\r\n\t\t\t\t\tif (exportInfo.provided === false) {\r\n\t\t\t\t\t\t// We are sure that it's not provided\r\n\t\t\t\t\t\tconst providedExports = exportsInfo.getProvidedExports();\r\n\t\t\t\t\t\tconst moreInfo = !Array.isArray(providedExports)\r\n\t\t\t\t\t\t\t? \" (possible exports unknown)\"\r\n\t\t\t\t\t\t\t: providedExports.length === 0\r\n\t\t\t\t\t\t\t? \" (module has no exports)\"\r\n\t\t\t\t\t\t\t: ` (possible exports: ${providedExports.join(\", \")})`;\r\n\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\tnew HarmonyLinkingError(\r\n\t\t\t\t\t\t\t\t`export ${ids\r\n\t\t\t\t\t\t\t\t\t.slice(0, pos)\r\n\t\t\t\t\t\t\t\t\t.map(id => `'${id}'`)\r\n\t\t\t\t\t\t\t\t\t.join(\".\")} ${additionalMessage} was not found in '${\r\n\t\t\t\t\t\t\t\t\tthis.userRequest\r\n\t\t\t\t\t\t\t\t}'${moreInfo}`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t}\r\n\t\t\t\t\texportsInfo = exportInfo.getNestedExportsInfo();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// General error message\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew HarmonyLinkingError(\r\n\t\t\t\t\t\t`export ${ids\r\n\t\t\t\t\t\t\t.map(id => `'${id}'`)\r\n\t\t\t\t\t\t\t.join(\".\")} ${additionalMessage} was not found in '${\r\n\t\t\t\t\t\t\tthis.userRequest\r\n\t\t\t\t\t\t}'`\r\n\t\t\t\t\t)\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t\tswitch (exportsType) {\r\n\t\t\tcase \"default-only\":\r\n\t\t\t\t// It's has only a default export\r\n\t\t\t\tif (ids.length > 0 && ids[0] !== \"default\") {\r\n\t\t\t\t\t// In strict harmony modules we only support the default export\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\tnew HarmonyLinkingError(\r\n\t\t\t\t\t\t\t`Can't import the named export ${ids\r\n\t\t\t\t\t\t\t\t.map(id => `'${id}'`)\r\n\t\t\t\t\t\t\t\t.join(\r\n\t\t\t\t\t\t\t\t\t\".\"\r\n\t\t\t\t\t\t\t\t)} ${additionalMessage} from default-exporting module (only default export is available)`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"default-with-named\":\r\n\t\t\t\t// It has a default export and named properties redirect\r\n\t\t\t\t// In some cases we still want to warn here\r\n\t\t\t\tif (\r\n\t\t\t\t\tids.length > 0 &&\r\n\t\t\t\t\tids[0] !== \"default\" &&\r\n\t\t\t\t\timportedModule.buildMeta.defaultObject === \"redirect-warn\"\r\n\t\t\t\t) {\r\n\t\t\t\t\t// For these modules only the default export is supported\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\tnew HarmonyLinkingError(\r\n\t\t\t\t\t\t\t`Should not import the named export ${ids\r\n\t\t\t\t\t\t\t\t.map(id => `'${id}'`)\r\n\t\t\t\t\t\t\t\t.join(\r\n\t\t\t\t\t\t\t\t\t\".\"\r\n\t\t\t\t\t\t\t\t)} ${additionalMessage} from default-exporting module (only default export is available soon)`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.sourceOrder);\r\n\t\twrite(this.assertions);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.sourceOrder = read();\r\n\t\tthis.assertions = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmodule.exports = HarmonyImportDependency;\r\n\r\n/** @type {WeakMap<Module, WeakMap<Module, RuntimeSpec | boolean>>} */\r\nconst importEmittedMap = new WeakMap();\r\n\r\nHarmonyImportDependency.Template = class HarmonyImportDependencyTemplate extends (\r\n\tModuleDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(dependency, source, templateContext) {\r\n\t\tconst dep = /** @type {HarmonyImportDependency} */ (dependency);\r\n\t\tconst { module, chunkGraph, moduleGraph, runtime } = templateContext;\r\n\r\n\t\tconst connection = moduleGraph.getConnection(dep);\r\n\t\tif (connection && !connection.isTargetActive(runtime)) return;\r\n\r\n\t\tconst referencedModule = connection && connection.module;\r\n\r\n\t\tif (\r\n\t\t\tconnection &&\r\n\t\t\tconnection.weak &&\r\n\t\t\treferencedModule &&\r\n\t\t\tchunkGraph.getModuleId(referencedModule) === null\r\n\t\t) {\r\n\t\t\t// in weak references, module might not be in any chunk\r\n\t\t\t// but that's ok, we don't need that logic in this case\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst moduleKey = referencedModule\r\n\t\t\t? referencedModule.identifier()\r\n\t\t\t: dep.request;\r\n\t\tconst key = `harmony import ${moduleKey}`;\r\n\r\n\t\tconst runtimeCondition = dep.weak\r\n\t\t\t? false\r\n\t\t\t: connection\r\n\t\t\t? filterRuntime(runtime, r => connection.isTargetActive(r))\r\n\t\t\t: true;\r\n\r\n\t\tif (module && referencedModule) {\r\n\t\t\tlet emittedModules = importEmittedMap.get(module);\r\n\t\t\tif (emittedModules === undefined) {\r\n\t\t\t\temittedModules = new WeakMap();\r\n\t\t\t\timportEmittedMap.set(module, emittedModules);\r\n\t\t\t}\r\n\t\t\tlet mergedRuntimeCondition = runtimeCondition;\r\n\t\t\tconst oldRuntimeCondition = emittedModules.get(referencedModule) || false;\r\n\t\t\tif (oldRuntimeCondition !== false && mergedRuntimeCondition !== true) {\r\n\t\t\t\tif (mergedRuntimeCondition === false || oldRuntimeCondition === true) {\r\n\t\t\t\t\tmergedRuntimeCondition = oldRuntimeCondition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmergedRuntimeCondition = mergeRuntime(\r\n\t\t\t\t\t\toldRuntimeCondition,\r\n\t\t\t\t\t\tmergedRuntimeCondition\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\temittedModules.set(referencedModule, mergedRuntimeCondition);\r\n\t\t}\r\n\r\n\t\tconst importStatement = dep.getImportStatement(false, templateContext);\r\n\t\tif (\r\n\t\t\treferencedModule &&\r\n\t\t\ttemplateContext.moduleGraph.isAsync(referencedModule)\r\n\t\t) {\r\n\t\t\ttemplateContext.initFragments.push(\r\n\t\t\t\tnew ConditionalInitFragment(\r\n\t\t\t\t\timportStatement[0],\r\n\t\t\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\r\n\t\t\t\t\tdep.sourceOrder,\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\truntimeCondition\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\ttemplateContext.initFragments.push(\r\n\t\t\t\tnew AwaitDependenciesInitFragment(\r\n\t\t\t\t\tnew Set([dep.getImportVar(templateContext.moduleGraph)])\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\ttemplateContext.initFragments.push(\r\n\t\t\t\tnew ConditionalInitFragment(\r\n\t\t\t\t\timportStatement[1],\r\n\t\t\t\t\tInitFragment.STAGE_ASYNC_HARMONY_IMPORTS,\r\n\t\t\t\t\tdep.sourceOrder,\r\n\t\t\t\t\tkey + \" compat\",\r\n\t\t\t\t\truntimeCondition\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\ttemplateContext.initFragments.push(\r\n\t\t\t\tnew ConditionalInitFragment(\r\n\t\t\t\t\timportStatement[0] + importStatement[1],\r\n\t\t\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\r\n\t\t\t\t\tdep.sourceOrder,\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\truntimeCondition\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Module} module the module\r\n\t * @param {Module} referencedModule the referenced module\r\n\t * @returns {RuntimeSpec | boolean} runtimeCondition in which this import has been emitted\r\n\t */\r\n\tstatic getImportEmittedRuntime(module, referencedModule) {\r\n\t\tconst emittedModules = importEmittedMap.get(module);\r\n\t\tif (emittedModules === undefined) return false;\r\n\t\treturn emittedModules.get(referencedModule) || false;\r\n\t}\r\n};\r\n\r\nmodule.exports.ExportPresenceModes = ExportPresenceModes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}