{"ast":null,"code":"const ANY = Symbol('SemVer ANY');\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY() {\n    return ANY;\n  }\n  constructor(comp, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp;\n      } else {\n        comp = comp.value;\n      }\n    }\n    debug('comparator', comp, options);\n    this.options = options;\n    this.loose = !!options.loose;\n    this.parse(comp);\n    if (this.semver === ANY) {\n      this.value = '';\n    } else {\n      this.value = this.operator + this.semver.version;\n    }\n    debug('comp', this);\n  }\n  parse(comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n    const m = comp.match(r);\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`);\n    }\n    this.operator = m[1] !== undefined ? m[1] : '';\n    if (this.operator === '=') {\n      this.operator = '';\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY;\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose);\n    }\n  }\n  toString() {\n    return this.value;\n  }\n  test(version) {\n    debug('Comparator.test', version, this.options.loose);\n    if (this.semver === ANY || version === ANY) {\n      return true;\n    }\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options);\n      } catch (er) {\n        return false;\n      }\n    }\n    return cmp(version, this.operator, this.semver, this.options);\n  }\n  intersects(comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required');\n    }\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true;\n      }\n      return new Range(comp.value, options).test(this.value);\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true;\n      }\n      return new Range(this.value, options).test(comp.semver);\n    }\n    const sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n    const sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n    const sameSemVer = this.semver.version === comp.semver.version;\n    const differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n    const oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n    const oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n    return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n  }\n}\nmodule.exports = Comparator;\nconst {\n  re,\n  t\n} = require('../internal/re');\nconst cmp = require('../functions/cmp');\nconst debug = require('../internal/debug');\nconst SemVer = require('./semver');\nconst Range = require('./range');","map":{"version":3,"names":["ANY","Symbol","Comparator","constructor","comp","options","loose","includePrerelease","value","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","module","exports","require"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/simple-update-notifier/node_modules/semver/classes/comparator.js"],"sourcesContent":["const ANY = Symbol('SemVer ANY')\r\n// hoisted class for cyclic dependency\r\nclass Comparator {\r\n  static get ANY () {\r\n    return ANY\r\n  }\r\n  constructor (comp, options) {\r\n    if (!options || typeof options !== 'object') {\r\n      options = {\r\n        loose: !!options,\r\n        includePrerelease: false\r\n      }\r\n    }\r\n\r\n    if (comp instanceof Comparator) {\r\n      if (comp.loose === !!options.loose) {\r\n        return comp\r\n      } else {\r\n        comp = comp.value\r\n      }\r\n    }\r\n\r\n    debug('comparator', comp, options)\r\n    this.options = options\r\n    this.loose = !!options.loose\r\n    this.parse(comp)\r\n\r\n    if (this.semver === ANY) {\r\n      this.value = ''\r\n    } else {\r\n      this.value = this.operator + this.semver.version\r\n    }\r\n\r\n    debug('comp', this)\r\n  }\r\n\r\n  parse (comp) {\r\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\r\n    const m = comp.match(r)\r\n\r\n    if (!m) {\r\n      throw new TypeError(`Invalid comparator: ${comp}`)\r\n    }\r\n\r\n    this.operator = m[1] !== undefined ? m[1] : ''\r\n    if (this.operator === '=') {\r\n      this.operator = ''\r\n    }\r\n\r\n    // if it literally is just '>' or '' then allow anything.\r\n    if (!m[2]) {\r\n      this.semver = ANY\r\n    } else {\r\n      this.semver = new SemVer(m[2], this.options.loose)\r\n    }\r\n  }\r\n\r\n  toString () {\r\n    return this.value\r\n  }\r\n\r\n  test (version) {\r\n    debug('Comparator.test', version, this.options.loose)\r\n\r\n    if (this.semver === ANY || version === ANY) {\r\n      return true\r\n    }\r\n\r\n    if (typeof version === 'string') {\r\n      try {\r\n        version = new SemVer(version, this.options)\r\n      } catch (er) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return cmp(version, this.operator, this.semver, this.options)\r\n  }\r\n\r\n  intersects (comp, options) {\r\n    if (!(comp instanceof Comparator)) {\r\n      throw new TypeError('a Comparator is required')\r\n    }\r\n\r\n    if (!options || typeof options !== 'object') {\r\n      options = {\r\n        loose: !!options,\r\n        includePrerelease: false\r\n      }\r\n    }\r\n\r\n    if (this.operator === '') {\r\n      if (this.value === '') {\r\n        return true\r\n      }\r\n      return new Range(comp.value, options).test(this.value)\r\n    } else if (comp.operator === '') {\r\n      if (comp.value === '') {\r\n        return true\r\n      }\r\n      return new Range(this.value, options).test(comp.semver)\r\n    }\r\n\r\n    const sameDirectionIncreasing =\r\n      (this.operator === '>=' || this.operator === '>') &&\r\n      (comp.operator === '>=' || comp.operator === '>')\r\n    const sameDirectionDecreasing =\r\n      (this.operator === '<=' || this.operator === '<') &&\r\n      (comp.operator === '<=' || comp.operator === '<')\r\n    const sameSemVer = this.semver.version === comp.semver.version\r\n    const differentDirectionsInclusive =\r\n      (this.operator === '>=' || this.operator === '<=') &&\r\n      (comp.operator === '>=' || comp.operator === '<=')\r\n    const oppositeDirectionsLessThan =\r\n      cmp(this.semver, '<', comp.semver, options) &&\r\n      (this.operator === '>=' || this.operator === '>') &&\r\n        (comp.operator === '<=' || comp.operator === '<')\r\n    const oppositeDirectionsGreaterThan =\r\n      cmp(this.semver, '>', comp.semver, options) &&\r\n      (this.operator === '<=' || this.operator === '<') &&\r\n        (comp.operator === '>=' || comp.operator === '>')\r\n\r\n    return (\r\n      sameDirectionIncreasing ||\r\n      sameDirectionDecreasing ||\r\n      (sameSemVer && differentDirectionsInclusive) ||\r\n      oppositeDirectionsLessThan ||\r\n      oppositeDirectionsGreaterThan\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = Comparator\r\n\r\nconst {re, t} = require('../internal/re')\r\nconst cmp = require('../functions/cmp')\r\nconst debug = require('../internal/debug')\r\nconst SemVer = require('./semver')\r\nconst Range = require('./range')\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}