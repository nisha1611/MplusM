{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  STAGE_BASIC\n} = require(\"../OptimizationStages\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass EnsureChunkConditionsPlugin {\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"EnsureChunkConditionsPlugin\", compilation => {\n      const handler = chunks => {\n        const chunkGraph = compilation.chunkGraph;\n        // These sets are hoisted here to save memory\n        // They are cleared at the end of every loop\n        /** @type {Set<Chunk>} */\n        const sourceChunks = new Set();\n        /** @type {Set<ChunkGroup>} */\n        const chunkGroups = new Set();\n        for (const module of compilation.modules) {\n          if (!module.hasChunkCondition()) continue;\n          for (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n            if (!module.chunkCondition(chunk, compilation)) {\n              sourceChunks.add(chunk);\n              for (const group of chunk.groupsIterable) {\n                chunkGroups.add(group);\n              }\n            }\n          }\n          if (sourceChunks.size === 0) continue;\n          /** @type {Set<Chunk>} */\n          const targetChunks = new Set();\n          chunkGroupLoop: for (const chunkGroup of chunkGroups) {\n            // Can module be placed in a chunk of this group?\n            for (const chunk of chunkGroup.chunks) {\n              if (module.chunkCondition(chunk, compilation)) {\n                targetChunks.add(chunk);\n                continue chunkGroupLoop;\n              }\n            }\n            // We reached the entrypoint: fail\n            if (chunkGroup.isInitial()) {\n              throw new Error(\"Cannot fullfil chunk condition of \" + module.identifier());\n            }\n            // Try placing in all parents\n            for (const group of chunkGroup.parentsIterable) {\n              chunkGroups.add(group);\n            }\n          }\n          for (const sourceChunk of sourceChunks) {\n            chunkGraph.disconnectChunkAndModule(sourceChunk, module);\n          }\n          for (const targetChunk of targetChunks) {\n            chunkGraph.connectChunkAndModule(targetChunk, module);\n          }\n          sourceChunks.clear();\n          chunkGroups.clear();\n        }\n      };\n      compilation.hooks.optimizeChunks.tap({\n        name: \"EnsureChunkConditionsPlugin\",\n        stage: STAGE_BASIC\n      }, handler);\n    });\n  }\n}\nmodule.exports = EnsureChunkConditionsPlugin;","map":{"version":3,"names":["STAGE_BASIC","require","EnsureChunkConditionsPlugin","apply","compiler","hooks","compilation","tap","handler","chunks","chunkGraph","sourceChunks","Set","chunkGroups","module","modules","hasChunkCondition","chunk","getModuleChunksIterable","chunkCondition","add","group","groupsIterable","size","targetChunks","chunkGroupLoop","chunkGroup","isInitial","Error","identifier","parentsIterable","sourceChunk","disconnectChunkAndModule","targetChunk","connectChunkAndModule","clear","optimizeChunks","name","stage","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/optimize/EnsureChunkConditionsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { STAGE_BASIC } = require(\"../OptimizationStages\");\r\n\r\n/** @typedef {import(\"../Chunk\")} Chunk */\r\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n\r\nclass EnsureChunkConditionsPlugin {\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compilation.tap(\r\n\t\t\t\"EnsureChunkConditionsPlugin\",\r\n\t\t\tcompilation => {\r\n\t\t\t\tconst handler = chunks => {\r\n\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\r\n\t\t\t\t\t// These sets are hoisted here to save memory\r\n\t\t\t\t\t// They are cleared at the end of every loop\r\n\t\t\t\t\t/** @type {Set<Chunk>} */\r\n\t\t\t\t\tconst sourceChunks = new Set();\r\n\t\t\t\t\t/** @type {Set<ChunkGroup>} */\r\n\t\t\t\t\tconst chunkGroups = new Set();\r\n\t\t\t\t\tfor (const module of compilation.modules) {\r\n\t\t\t\t\t\tif (!module.hasChunkCondition()) continue;\r\n\t\t\t\t\t\tfor (const chunk of chunkGraph.getModuleChunksIterable(module)) {\r\n\t\t\t\t\t\t\tif (!module.chunkCondition(chunk, compilation)) {\r\n\t\t\t\t\t\t\t\tsourceChunks.add(chunk);\r\n\t\t\t\t\t\t\t\tfor (const group of chunk.groupsIterable) {\r\n\t\t\t\t\t\t\t\t\tchunkGroups.add(group);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (sourceChunks.size === 0) continue;\r\n\t\t\t\t\t\t/** @type {Set<Chunk>} */\r\n\t\t\t\t\t\tconst targetChunks = new Set();\r\n\t\t\t\t\t\tchunkGroupLoop: for (const chunkGroup of chunkGroups) {\r\n\t\t\t\t\t\t\t// Can module be placed in a chunk of this group?\r\n\t\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\r\n\t\t\t\t\t\t\t\tif (module.chunkCondition(chunk, compilation)) {\r\n\t\t\t\t\t\t\t\t\ttargetChunks.add(chunk);\r\n\t\t\t\t\t\t\t\t\tcontinue chunkGroupLoop;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// We reached the entrypoint: fail\r\n\t\t\t\t\t\t\tif (chunkGroup.isInitial()) {\r\n\t\t\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\t\t\"Cannot fullfil chunk condition of \" + module.identifier()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Try placing in all parents\r\n\t\t\t\t\t\t\tfor (const group of chunkGroup.parentsIterable) {\r\n\t\t\t\t\t\t\t\tchunkGroups.add(group);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (const sourceChunk of sourceChunks) {\r\n\t\t\t\t\t\t\tchunkGraph.disconnectChunkAndModule(sourceChunk, module);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (const targetChunk of targetChunks) {\r\n\t\t\t\t\t\t\tchunkGraph.connectChunkAndModule(targetChunk, module);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsourceChunks.clear();\r\n\t\t\t\t\t\tchunkGroups.clear();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tcompilation.hooks.optimizeChunks.tap(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"EnsureChunkConditionsPlugin\",\r\n\t\t\t\t\t\tstage: STAGE_BASIC\r\n\t\t\t\t\t},\r\n\t\t\t\t\thandler\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\nmodule.exports = EnsureChunkConditionsPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAExD;AACA;AACA;;AAEA,MAAMC,2BAA2B,CAAC;EACjC;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,6BAA6B,EAC7BD,WAAW,IAAI;MACd,MAAME,OAAO,GAAGC,MAAM,IAAI;QACzB,MAAMC,UAAU,GAAGJ,WAAW,CAACI,UAAU;QACzC;QACA;QACA;QACA,MAAMC,YAAY,GAAG,IAAIC,GAAG,EAAE;QAC9B;QACA,MAAMC,WAAW,GAAG,IAAID,GAAG,EAAE;QAC7B,KAAK,MAAME,MAAM,IAAIR,WAAW,CAACS,OAAO,EAAE;UACzC,IAAI,CAACD,MAAM,CAACE,iBAAiB,EAAE,EAAE;UACjC,KAAK,MAAMC,KAAK,IAAIP,UAAU,CAACQ,uBAAuB,CAACJ,MAAM,CAAC,EAAE;YAC/D,IAAI,CAACA,MAAM,CAACK,cAAc,CAACF,KAAK,EAAEX,WAAW,CAAC,EAAE;cAC/CK,YAAY,CAACS,GAAG,CAACH,KAAK,CAAC;cACvB,KAAK,MAAMI,KAAK,IAAIJ,KAAK,CAACK,cAAc,EAAE;gBACzCT,WAAW,CAACO,GAAG,CAACC,KAAK,CAAC;cACvB;YACD;UACD;UACA,IAAIV,YAAY,CAACY,IAAI,KAAK,CAAC,EAAE;UAC7B;UACA,MAAMC,YAAY,GAAG,IAAIZ,GAAG,EAAE;UAC9Ba,cAAc,EAAE,KAAK,MAAMC,UAAU,IAAIb,WAAW,EAAE;YACrD;YACA,KAAK,MAAMI,KAAK,IAAIS,UAAU,CAACjB,MAAM,EAAE;cACtC,IAAIK,MAAM,CAACK,cAAc,CAACF,KAAK,EAAEX,WAAW,CAAC,EAAE;gBAC9CkB,YAAY,CAACJ,GAAG,CAACH,KAAK,CAAC;gBACvB,SAASQ,cAAc;cACxB;YACD;YACA;YACA,IAAIC,UAAU,CAACC,SAAS,EAAE,EAAE;cAC3B,MAAM,IAAIC,KAAK,CACd,oCAAoC,GAAGd,MAAM,CAACe,UAAU,EAAE,CAC1D;YACF;YACA;YACA,KAAK,MAAMR,KAAK,IAAIK,UAAU,CAACI,eAAe,EAAE;cAC/CjB,WAAW,CAACO,GAAG,CAACC,KAAK,CAAC;YACvB;UACD;UACA,KAAK,MAAMU,WAAW,IAAIpB,YAAY,EAAE;YACvCD,UAAU,CAACsB,wBAAwB,CAACD,WAAW,EAAEjB,MAAM,CAAC;UACzD;UACA,KAAK,MAAMmB,WAAW,IAAIT,YAAY,EAAE;YACvCd,UAAU,CAACwB,qBAAqB,CAACD,WAAW,EAAEnB,MAAM,CAAC;UACtD;UACAH,YAAY,CAACwB,KAAK,EAAE;UACpBtB,WAAW,CAACsB,KAAK,EAAE;QACpB;MACD,CAAC;MACD7B,WAAW,CAACD,KAAK,CAAC+B,cAAc,CAAC7B,GAAG,CACnC;QACC8B,IAAI,EAAE,6BAA6B;QACnCC,KAAK,EAAEtC;MACR,CAAC,EACDQ,OAAO,CACP;IACF,CAAC,CACD;EACF;AACD;AACAM,MAAM,CAACyB,OAAO,GAAGrC,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}