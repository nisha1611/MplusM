{"ast":null,"code":"'use strict';\n\nrun().catch(error => {\n  console.error(error);\n  process.exit(-1);\n});\nasync function run() {\n  const ReplSet = require('mongodb-memory-server').MongoMemoryReplSet;\n\n  // Create new instance\n  const replSet = new ReplSet({\n    binary: {\n      version: process.argv[2]\n    },\n    instanceOpts: [\n    // Set the expiry job in MongoDB to run every second\n    {\n      port: 27017,\n      args: ['--setParameter', 'ttlMonitorSleepSecs=1']\n    }],\n    dbName: 'mongoose_test',\n    replSet: {\n      name: 'rs0',\n      count: 2,\n      storageEngine: 'wiredTiger'\n    }\n  });\n  await replSet.start();\n  await replSet.waitUntilRunning();\n  console.log('MongoDB-ReplicaSet is now running.');\n  console.log(replSet.getUri('mongoose_test'));\n}","map":{"version":3,"names":["run","catch","error","console","process","exit","ReplSet","require","MongoMemoryReplSet","replSet","binary","version","argv","instanceOpts","port","args","dbName","name","count","storageEngine","start","waitUntilRunning","log","getUri"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/tools/repl.js"],"sourcesContent":["'use strict';\r\n\r\nrun().catch(error => {\r\n  console.error(error);\r\n  process.exit(-1);\r\n});\r\n\r\nasync function run() {\r\n  const ReplSet = require('mongodb-memory-server').MongoMemoryReplSet;\r\n\r\n  // Create new instance\r\n  const replSet = new ReplSet({\r\n    binary: {\r\n      version: process.argv[2]\r\n    },\r\n    instanceOpts: [\r\n      // Set the expiry job in MongoDB to run every second\r\n      {\r\n        port: 27017,\r\n        args: ['--setParameter', 'ttlMonitorSleepSecs=1']\r\n      }\r\n    ],\r\n    dbName: 'mongoose_test',\r\n    replSet: {\r\n      name: 'rs0',\r\n      count: 2,\r\n      storageEngine: 'wiredTiger'\r\n    }\r\n  });\r\n\r\n  await replSet.start();\r\n  await replSet.waitUntilRunning();\r\n  console.log('MongoDB-ReplicaSet is now running.');\r\n  console.log(replSet.getUri('mongoose_test'));\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZA,GAAG,EAAE,CAACC,KAAK,CAACC,KAAK,IAAI;EACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpBE,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AAEF,eAAeL,GAAG,GAAG;EACnB,MAAMM,OAAO,GAAGC,OAAO,CAAC,uBAAuB,CAAC,CAACC,kBAAkB;;EAEnE;EACA,MAAMC,OAAO,GAAG,IAAIH,OAAO,CAAC;IAC1BI,MAAM,EAAE;MACNC,OAAO,EAAEP,OAAO,CAACQ,IAAI,CAAC,CAAC;IACzB,CAAC;IACDC,YAAY,EAAE;IACZ;IACA;MACEC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,CAAC,gBAAgB,EAAE,uBAAuB;IAClD,CAAC,CACF;IACDC,MAAM,EAAE,eAAe;IACvBP,OAAO,EAAE;MACPQ,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,CAAC;MACRC,aAAa,EAAE;IACjB;EACF,CAAC,CAAC;EAEF,MAAMV,OAAO,CAACW,KAAK,EAAE;EACrB,MAAMX,OAAO,CAACY,gBAAgB,EAAE;EAChClB,OAAO,CAACmB,GAAG,CAAC,oCAAoC,CAAC;EACjDnB,OAAO,CAACmB,GAAG,CAACb,OAAO,CAACc,MAAM,CAAC,eAAe,CAAC,CAAC;AAC9C"},"metadata":{},"sourceType":"script","externalDependencies":[]}