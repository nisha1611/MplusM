{"ast":null,"code":"const STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nexport const getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n  const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS + Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n  const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n  logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" + \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" + STATIC_STABILITY_DOC_URL);\n  const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\n  return {\n    ...credentials,\n    ...(originalExpiration ? {\n      originalExpiration\n    } : {}),\n    expiration: newExpiration\n  };\n};","map":{"version":3,"names":["STATIC_STABILITY_REFRESH_INTERVAL_SECONDS","STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS","STATIC_STABILITY_DOC_URL","getExtendedInstanceMetadataCredentials","credentials","logger","refreshInterval","Math","floor","random","newExpiration","Date","now","warn","originalExpiration","expiration"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getExtendedInstanceMetadataCredentials.js"],"sourcesContent":["const STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\r\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\r\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\r\nexport const getExtendedInstanceMetadataCredentials = (credentials, logger) => {\r\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\r\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\r\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\r\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\r\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\r\n        STATIC_STABILITY_DOC_URL);\r\n    const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\r\n    return {\r\n        ...credentials,\r\n        ...(originalExpiration ? { originalExpiration } : {}),\r\n        expiration: newExpiration,\r\n    };\r\n};\r\n"],"mappings":"AAAA,MAAMA,yCAAyC,GAAG,CAAC,GAAG,EAAE;AACxD,MAAMC,uDAAuD,GAAG,CAAC,GAAG,EAAE;AACtE,MAAMC,wBAAwB,GAAG,iFAAiF;AAClH,OAAO,MAAMC,sCAAsC,GAAG,CAACC,WAAW,EAAEC,MAAM,KAAK;EAC3E,MAAMC,eAAe,GAAGN,yCAAyC,GAC7DO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGR,uDAAuD,CAAC;EACvF,MAAMS,aAAa,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAGN,eAAe,GAAG,IAAI,CAAC;EACnED,MAAM,CAACQ,IAAI,CAAC,gHAAgH,GACxH,uGAAuG,GACvGX,wBAAwB,CAAC;EAC7B,MAAMY,kBAAkB,GAAGV,WAAW,CAACU,kBAAkB,IAAIV,WAAW,CAACW,UAAU;EACnF,OAAO;IACH,GAAGX,WAAW;IACd,IAAIU,kBAAkB,GAAG;MAAEA;IAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;IACrDC,UAAU,EAAEL;EAChB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}