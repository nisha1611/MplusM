{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = function (input) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : input.byteLength - offset;\n  if (!(0, is_array_buffer_1.isArrayBuffer)(input)) {\n    throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n  }\n  return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n  if (typeof input !== \"string\") {\n    throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n  }\n  return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;","map":{"version":3,"names":["Object","defineProperty","exports","value","fromString","fromArrayBuffer","is_array_buffer_1","require","buffer_1","input","offset","length","byteLength","isArrayBuffer","TypeError","Buffer","from","encoding"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-buffer-from/dist-cjs/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fromString = exports.fromArrayBuffer = void 0;\r\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\r\n    if (!(0, is_array_buffer_1.isArrayBuffer)(input)) {\r\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\r\n    }\r\n    return buffer_1.Buffer.from(input, offset, length);\r\n};\r\nexports.fromArrayBuffer = fromArrayBuffer;\r\nconst fromString = (input, encoding) => {\r\n    if (typeof input !== \"string\") {\r\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\r\n    }\r\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\r\n};\r\nexports.fromString = fromString;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACG,eAAe,GAAG,KAAK,CAAC;AACrD,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC7D,MAAMC,QAAQ,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAClC,MAAMF,eAAe,GAAG,UAACI,KAAK,EAAqD;EAAA,IAAnDC,MAAM,uEAAG,CAAC;EAAA,IAAEC,MAAM,uEAAGF,KAAK,CAACG,UAAU,GAAGF,MAAM;EAC1E,IAAI,CAAC,CAAC,CAAC,EAAEJ,iBAAiB,CAACO,aAAa,EAAEJ,KAAK,CAAC,EAAE;IAC9C,MAAM,IAAIK,SAAS,CAAE,2DAA0D,OAAOL,KAAM,KAAIA,KAAM,GAAE,CAAC;EAC7G;EACA,OAAOD,QAAQ,CAACO,MAAM,CAACC,IAAI,CAACP,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC;AACtD,CAAC;AACDT,OAAO,CAACG,eAAe,GAAGA,eAAe;AACzC,MAAMD,UAAU,GAAG,CAACK,KAAK,EAAEQ,QAAQ,KAAK;EACpC,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIK,SAAS,CAAE,8DAA6D,OAAOL,KAAM,KAAIA,KAAM,GAAE,CAAC;EAChH;EACA,OAAOQ,QAAQ,GAAGT,QAAQ,CAACO,MAAM,CAACC,IAAI,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGT,QAAQ,CAACO,MAAM,CAACC,IAAI,CAACP,KAAK,CAAC;AACzF,CAAC;AACDP,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}