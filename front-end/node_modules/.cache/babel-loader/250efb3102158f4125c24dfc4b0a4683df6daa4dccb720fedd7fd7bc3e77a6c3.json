{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst {\n  equals\n} = require(\"../util/ArrayHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CommonJsFullRequireDependency extends ModuleDependency {\n  /**\r\n   * @param {string} request the request string\r\n   * @param {[number, number]} range location in source code\r\n   * @param {string[]} names accessed properties on module\r\n   */\n  constructor(request, range, names) {\n    super(request);\n    this.range = range;\n    this.names = names;\n    this.call = false;\n    this.asiSafe = undefined;\n  }\n\n  /**\r\n   * Returns list of exports referenced by this dependency\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    if (this.call) {\n      const importedModule = moduleGraph.getModule(this);\n      if (!importedModule || importedModule.getExportsType(moduleGraph, false) !== \"namespace\") {\n        return [this.names.slice(0, -1)];\n      }\n    }\n    return [this.names];\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.names);\n    write(this.call);\n    write(this.asiSafe);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.names = read();\n    this.call = read();\n    this.asiSafe = read();\n    super.deserialize(context);\n  }\n  get type() {\n    return \"cjs full require\";\n  }\n  get category() {\n    return \"commonjs\";\n  }\n}\nCommonJsFullRequireDependency.Template = class CommonJsFullRequireDependencyTemplate extends ModuleDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements,\n      runtime,\n      initFragments\n    } = _ref;\n    const dep = /** @type {CommonJsFullRequireDependency} */dependency;\n    if (!dep.range) return;\n    const importedModule = moduleGraph.getModule(dep);\n    let requireExpr = runtimeTemplate.moduleExports({\n      module: importedModule,\n      chunkGraph,\n      request: dep.request,\n      weak: dep.weak,\n      runtimeRequirements\n    });\n    if (importedModule) {\n      const ids = dep.names;\n      const usedImported = moduleGraph.getExportsInfo(importedModule).getUsedName(ids, runtime);\n      if (usedImported) {\n        const comment = equals(usedImported, ids) ? \"\" : Template.toNormalComment(propertyAccess(ids)) + \" \";\n        const access = `${comment}${propertyAccess(usedImported)}`;\n        requireExpr = dep.asiSafe === true ? `(${requireExpr}${access})` : `${requireExpr}${access}`;\n      }\n    }\n    source.replace(dep.range[0], dep.range[1] - 1, requireExpr);\n  }\n};\nmakeSerializable(CommonJsFullRequireDependency, \"webpack/lib/dependencies/CommonJsFullRequireDependency\");\nmodule.exports = CommonJsFullRequireDependency;","map":{"version":3,"names":["Template","require","equals","makeSerializable","propertyAccess","ModuleDependency","CommonJsFullRequireDependency","constructor","request","range","names","call","asiSafe","undefined","getReferencedExports","moduleGraph","runtime","importedModule","getModule","getExportsType","slice","serialize","context","write","deserialize","read","type","category","CommonJsFullRequireDependencyTemplate","apply","dependency","source","module","runtimeTemplate","chunkGraph","runtimeRequirements","initFragments","dep","requireExpr","moduleExports","weak","ids","usedImported","getExportsInfo","getUsedName","comment","toNormalComment","access","replace","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/CommonJsFullRequireDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Template = require(\"../Template\");\r\nconst { equals } = require(\"../util/ArrayHelpers\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst propertyAccess = require(\"../util/propertyAccess\");\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../Dependency\")} Dependency */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\nclass CommonJsFullRequireDependency extends ModuleDependency {\r\n\t/**\r\n\t * @param {string} request the request string\r\n\t * @param {[number, number]} range location in source code\r\n\t * @param {string[]} names accessed properties on module\r\n\t */\r\n\tconstructor(request, range, names) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t\tthis.names = names;\r\n\t\tthis.call = false;\r\n\t\tthis.asiSafe = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of exports referenced by this dependency\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n\t */\r\n\tgetReferencedExports(moduleGraph, runtime) {\r\n\t\tif (this.call) {\r\n\t\t\tconst importedModule = moduleGraph.getModule(this);\r\n\t\t\tif (\r\n\t\t\t\t!importedModule ||\r\n\t\t\t\timportedModule.getExportsType(moduleGraph, false) !== \"namespace\"\r\n\t\t\t) {\r\n\t\t\t\treturn [this.names.slice(0, -1)];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [this.names];\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.names);\r\n\t\twrite(this.call);\r\n\t\twrite(this.asiSafe);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.names = read();\r\n\t\tthis.call = read();\r\n\t\tthis.asiSafe = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"cjs full require\";\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"commonjs\";\r\n\t}\r\n}\r\n\r\nCommonJsFullRequireDependency.Template = class CommonJsFullRequireDependencyTemplate extends (\r\n\tModuleDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(\r\n\t\tdependency,\r\n\t\tsource,\r\n\t\t{\r\n\t\t\tmodule,\r\n\t\t\truntimeTemplate,\r\n\t\t\tmoduleGraph,\r\n\t\t\tchunkGraph,\r\n\t\t\truntimeRequirements,\r\n\t\t\truntime,\r\n\t\t\tinitFragments\r\n\t\t}\r\n\t) {\r\n\t\tconst dep = /** @type {CommonJsFullRequireDependency} */ (dependency);\r\n\t\tif (!dep.range) return;\r\n\t\tconst importedModule = moduleGraph.getModule(dep);\r\n\t\tlet requireExpr = runtimeTemplate.moduleExports({\r\n\t\t\tmodule: importedModule,\r\n\t\t\tchunkGraph,\r\n\t\t\trequest: dep.request,\r\n\t\t\tweak: dep.weak,\r\n\t\t\truntimeRequirements\r\n\t\t});\r\n\t\tif (importedModule) {\r\n\t\t\tconst ids = dep.names;\r\n\t\t\tconst usedImported = moduleGraph\r\n\t\t\t\t.getExportsInfo(importedModule)\r\n\t\t\t\t.getUsedName(ids, runtime);\r\n\t\t\tif (usedImported) {\r\n\t\t\t\tconst comment = equals(usedImported, ids)\r\n\t\t\t\t\t? \"\"\r\n\t\t\t\t\t: Template.toNormalComment(propertyAccess(ids)) + \" \";\r\n\t\t\t\tconst access = `${comment}${propertyAccess(usedImported)}`;\r\n\t\t\t\trequireExpr =\r\n\t\t\t\t\tdep.asiSafe === true\r\n\t\t\t\t\t\t? `(${requireExpr}${access})`\r\n\t\t\t\t\t\t: `${requireExpr}${access}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, requireExpr);\r\n\t}\r\n};\r\n\r\nmakeSerializable(\r\n\tCommonJsFullRequireDependency,\r\n\t\"webpack/lib/dependencies/CommonJsFullRequireDependency\"\r\n);\r\n\r\nmodule.exports = CommonJsFullRequireDependency;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}