{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nconst is_crt_available_1 = require(\"./is-crt-available\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nconst defaultUserAgent = _ref => {\n  let {\n    serviceId,\n    clientVersion\n  } = _ref;\n  const sections = [[\"aws-sdk-js\", clientVersion], [`os/${(0, os_1.platform)()}`, (0, os_1.release)()], [\"lang/js\"], [\"md/nodejs\", `${process_1.versions.node}`]];\n  const crtAvailable = (0, is_crt_available_1.isCrtAvailable)();\n  if (crtAvailable) {\n    sections.push(crtAvailable);\n  }\n  if (serviceId) {\n    sections.push([`api/${serviceId}`, clientVersion]);\n  }\n  if (process_1.env.AWS_EXECUTION_ENV) {\n    sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n  }\n  const appIdPromise = (0, node_config_provider_1.loadConfig)({\n    environmentVariableSelector: env => env[exports.UA_APP_ID_ENV_NAME],\n    configFileSelector: profile => profile[exports.UA_APP_ID_INI_NAME],\n    default: undefined\n  })();\n  let resolvedUserAgent = undefined;\n  return async () => {\n    if (!resolvedUserAgent) {\n      const appId = await appIdPromise;\n      resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n    }\n    return resolvedUserAgent;\n  };\n};\nexports.defaultUserAgent = defaultUserAgent;","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultUserAgent","UA_APP_ID_INI_NAME","UA_APP_ID_ENV_NAME","node_config_provider_1","require","os_1","process_1","is_crt_available_1","serviceId","clientVersion","sections","platform","release","versions","node","crtAvailable","isCrtAvailable","push","env","AWS_EXECUTION_ENV","appIdPromise","loadConfig","environmentVariableSelector","configFileSelector","profile","default","undefined","resolvedUserAgent","appId"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\r\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\r\nconst os_1 = require(\"os\");\r\nconst process_1 = require(\"process\");\r\nconst is_crt_available_1 = require(\"./is-crt-available\");\r\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\r\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\r\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\r\n    const sections = [\r\n        [\"aws-sdk-js\", clientVersion],\r\n        [`os/${(0, os_1.platform)()}`, (0, os_1.release)()],\r\n        [\"lang/js\"],\r\n        [\"md/nodejs\", `${process_1.versions.node}`],\r\n    ];\r\n    const crtAvailable = (0, is_crt_available_1.isCrtAvailable)();\r\n    if (crtAvailable) {\r\n        sections.push(crtAvailable);\r\n    }\r\n    if (serviceId) {\r\n        sections.push([`api/${serviceId}`, clientVersion]);\r\n    }\r\n    if (process_1.env.AWS_EXECUTION_ENV) {\r\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\r\n    }\r\n    const appIdPromise = (0, node_config_provider_1.loadConfig)({\r\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\r\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\r\n        default: undefined,\r\n    })();\r\n    let resolvedUserAgent = undefined;\r\n    return async () => {\r\n        if (!resolvedUserAgent) {\r\n            const appId = await appIdPromise;\r\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\r\n        }\r\n        return resolvedUserAgent;\r\n    };\r\n};\r\nexports.defaultUserAgent = defaultUserAgent;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAGF,OAAO,CAACG,kBAAkB,GAAGH,OAAO,CAACI,kBAAkB,GAAG,KAAK,CAAC;AAC3F,MAAMC,sBAAsB,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AACvE,MAAMC,IAAI,GAAGD,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAME,SAAS,GAAGF,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AACxDN,OAAO,CAACI,kBAAkB,GAAG,mBAAmB;AAChDJ,OAAO,CAACG,kBAAkB,GAAG,eAAe;AAC5C,MAAMD,gBAAgB,GAAG,QAAkC;EAAA,IAAjC;IAAEQ,SAAS;IAAEC;EAAc,CAAC;EAClD,MAAMC,QAAQ,GAAG,CACb,CAAC,YAAY,EAAED,aAAa,CAAC,EAC7B,CAAE,MAAK,CAAC,CAAC,EAAEJ,IAAI,CAACM,QAAQ,GAAI,EAAC,EAAE,CAAC,CAAC,EAAEN,IAAI,CAACO,OAAO,GAAG,CAAC,EACnD,CAAC,SAAS,CAAC,EACX,CAAC,WAAW,EAAG,GAAEN,SAAS,CAACO,QAAQ,CAACC,IAAK,EAAC,CAAC,CAC9C;EACD,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAER,kBAAkB,CAACS,cAAc,GAAG;EAC7D,IAAID,YAAY,EAAE;IACdL,QAAQ,CAACO,IAAI,CAACF,YAAY,CAAC;EAC/B;EACA,IAAIP,SAAS,EAAE;IACXE,QAAQ,CAACO,IAAI,CAAC,CAAE,OAAMT,SAAU,EAAC,EAAEC,aAAa,CAAC,CAAC;EACtD;EACA,IAAIH,SAAS,CAACY,GAAG,CAACC,iBAAiB,EAAE;IACjCT,QAAQ,CAACO,IAAI,CAAC,CAAE,YAAWX,SAAS,CAACY,GAAG,CAACC,iBAAkB,EAAC,CAAC,CAAC;EAClE;EACA,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAEjB,sBAAsB,CAACkB,UAAU,EAAE;IACxDC,2BAA2B,EAAGJ,GAAG,IAAKA,GAAG,CAACpB,OAAO,CAACI,kBAAkB,CAAC;IACrEqB,kBAAkB,EAAGC,OAAO,IAAKA,OAAO,CAAC1B,OAAO,CAACG,kBAAkB,CAAC;IACpEwB,OAAO,EAAEC;EACb,CAAC,CAAC,EAAE;EACJ,IAAIC,iBAAiB,GAAGD,SAAS;EACjC,OAAO,YAAY;IACf,IAAI,CAACC,iBAAiB,EAAE;MACpB,MAAMC,KAAK,GAAG,MAAMR,YAAY;MAChCO,iBAAiB,GAAGC,KAAK,GAAG,CAAC,GAAGlB,QAAQ,EAAE,CAAE,OAAMkB,KAAM,EAAC,CAAC,CAAC,GAAG,CAAC,GAAGlB,QAAQ,CAAC;IAC/E;IACA,OAAOiB,iBAAiB;EAC5B,CAAC;AACL,CAAC;AACD7B,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}