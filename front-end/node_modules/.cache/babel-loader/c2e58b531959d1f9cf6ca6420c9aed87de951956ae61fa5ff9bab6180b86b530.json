{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n  if (!customizations) return baseCtor;else return class CustomizableSTSClient extends baseCtor {\n    constructor(config) {\n      super(config);\n      for (const customization of customizations) {\n        this.middlewareStack.use(customization);\n      }\n    }\n  };\n};\nconst getDefaultRoleAssumer = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, defaultStsRoleAssumers_1.getDefaultRoleAssumer)(stsOptions, getCustomizableStsClientCtor(STSClient_1.STSClient, stsPlugins));\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity)(stsOptions, getCustomizableStsClientCtor(STSClient_1.STSClient, stsPlugins));\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = provider => input => provider({\n  roleAssumer: (0, exports.getDefaultRoleAssumer)(input),\n  roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input),\n  ...input\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;","map":{"version":3,"names":["Object","defineProperty","exports","value","decorateDefaultCredentialProvider","getDefaultRoleAssumerWithWebIdentity","getDefaultRoleAssumer","defaultStsRoleAssumers_1","require","STSClient_1","getCustomizableStsClientCtor","baseCtor","customizations","CustomizableSTSClient","constructor","config","customization","middlewareStack","use","stsOptions","stsPlugins","STSClient","provider","input","roleAssumer","roleAssumerWithWebIdentity"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/client-sts/dist-cjs/defaultRoleAssumers.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\r\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\r\nconst STSClient_1 = require(\"./STSClient\");\r\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\r\n    if (!customizations)\r\n        return baseCtor;\r\n    else\r\n        return class CustomizableSTSClient extends baseCtor {\r\n            constructor(config) {\r\n                super(config);\r\n                for (const customization of customizations) {\r\n                    this.middlewareStack.use(customization);\r\n                }\r\n            }\r\n        };\r\n};\r\nconst getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumer)(stsOptions, getCustomizableStsClientCtor(STSClient_1.STSClient, stsPlugins));\r\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\r\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity)(stsOptions, getCustomizableStsClientCtor(STSClient_1.STSClient, stsPlugins));\r\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\r\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\r\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input),\r\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input),\r\n    ...input,\r\n});\r\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iCAAiC,GAAGF,OAAO,CAACG,oCAAoC,GAAGH,OAAO,CAACI,qBAAqB,GAAG,KAAK,CAAC;AACjI,MAAMC,wBAAwB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACpE,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAME,4BAA4B,GAAG,CAACC,QAAQ,EAAEC,cAAc,KAAK;EAC/D,IAAI,CAACA,cAAc,EACf,OAAOD,QAAQ,CAAC,KAEhB,OAAO,MAAME,qBAAqB,SAASF,QAAQ,CAAC;IAChDG,WAAW,CAACC,MAAM,EAAE;MAChB,KAAK,CAACA,MAAM,CAAC;MACb,KAAK,MAAMC,aAAa,IAAIJ,cAAc,EAAE;QACxC,IAAI,CAACK,eAAe,CAACC,GAAG,CAACF,aAAa,CAAC;MAC3C;IACJ;EACJ,CAAC;AACT,CAAC;AACD,MAAMV,qBAAqB,GAAG;EAAA,IAACa,UAAU,uEAAG,CAAC,CAAC;EAAA,IAAEC,UAAU;EAAA,OAAK,CAAC,CAAC,EAAEb,wBAAwB,CAACD,qBAAqB,EAAEa,UAAU,EAAET,4BAA4B,CAACD,WAAW,CAACY,SAAS,EAAED,UAAU,CAAC,CAAC;AAAA;AAC/LlB,OAAO,CAACI,qBAAqB,GAAGA,qBAAqB;AACrD,MAAMD,oCAAoC,GAAG;EAAA,IAACc,UAAU,uEAAG,CAAC,CAAC;EAAA,IAAEC,UAAU;EAAA,OAAK,CAAC,CAAC,EAAEb,wBAAwB,CAACF,oCAAoC,EAAEc,UAAU,EAAET,4BAA4B,CAACD,WAAW,CAACY,SAAS,EAAED,UAAU,CAAC,CAAC;AAAA;AAC7NlB,OAAO,CAACG,oCAAoC,GAAGA,oCAAoC;AACnF,MAAMD,iCAAiC,GAAIkB,QAAQ,IAAMC,KAAK,IAAKD,QAAQ,CAAC;EACxEE,WAAW,EAAE,CAAC,CAAC,EAAEtB,OAAO,CAACI,qBAAqB,EAAEiB,KAAK,CAAC;EACtDE,0BAA0B,EAAE,CAAC,CAAC,EAAEvB,OAAO,CAACG,oCAAoC,EAAEkB,KAAK,CAAC;EACpF,GAAGA;AACP,CAAC,CAAC;AACFrB,OAAO,CAACE,iCAAiC,GAAGA,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}