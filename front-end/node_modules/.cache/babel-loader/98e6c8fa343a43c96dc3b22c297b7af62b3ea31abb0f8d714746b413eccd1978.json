{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Ivan Kopeykin @vankop\r\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst Template = require(\"../Template\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WebpackIsIncludedDependency extends ModuleDependency {\n  constructor(request, range) {\n    super(request);\n    this.weak = true;\n    this.range = range;\n  }\n\n  /**\r\n   * Returns list of exports referenced by this dependency\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    // This doesn't use any export\n    return Dependency.NO_EXPORTS_REFERENCED;\n  }\n  get type() {\n    return \"__webpack_is_included__\";\n  }\n}\nmakeSerializable(WebpackIsIncludedDependency, \"webpack/lib/dependencies/WebpackIsIncludedDependency\");\nWebpackIsIncludedDependency.Template = class WebpackIsIncludedDependencyTemplate extends ModuleDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      chunkGraph,\n      moduleGraph\n    } = _ref;\n    const dep = /** @type {WebpackIsIncludedDependency} */dependency;\n    const connection = moduleGraph.getConnection(dep);\n    const included = connection ? chunkGraph.getNumberOfModuleChunks(connection.module) > 0 : false;\n    const comment = runtimeTemplate.outputOptions.pathinfo ? Template.toComment(`__webpack_is_included__ ${runtimeTemplate.requestShortener.shorten(dep.request)}`) : \"\";\n    source.replace(dep.range[0], dep.range[1] - 1, `${comment}${JSON.stringify(included)}`);\n  }\n};\nmodule.exports = WebpackIsIncludedDependency;","map":{"version":3,"names":["Dependency","require","Template","makeSerializable","ModuleDependency","WebpackIsIncludedDependency","constructor","request","range","weak","getReferencedExports","moduleGraph","runtime","NO_EXPORTS_REFERENCED","type","WebpackIsIncludedDependencyTemplate","apply","dependency","source","runtimeTemplate","chunkGraph","dep","connection","getConnection","included","getNumberOfModuleChunks","module","comment","outputOptions","pathinfo","toComment","requestShortener","shorten","replace","JSON","stringify","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/WebpackIsIncludedDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Ivan Kopeykin @vankop\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Dependency = require(\"../Dependency\");\r\nconst Template = require(\"../Template\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../Compilation\")} Compilation */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\nclass WebpackIsIncludedDependency extends ModuleDependency {\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\r\n\t\tthis.weak = true;\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of exports referenced by this dependency\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n\t */\r\n\tgetReferencedExports(moduleGraph, runtime) {\r\n\t\t// This doesn't use any export\r\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"__webpack_is_included__\";\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tWebpackIsIncludedDependency,\r\n\t\"webpack/lib/dependencies/WebpackIsIncludedDependency\"\r\n);\r\n\r\nWebpackIsIncludedDependency.Template = class WebpackIsIncludedDependencyTemplate extends (\r\n\tModuleDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(dependency, source, { runtimeTemplate, chunkGraph, moduleGraph }) {\r\n\t\tconst dep = /** @type {WebpackIsIncludedDependency} */ (dependency);\r\n\t\tconst connection = moduleGraph.getConnection(dep);\r\n\t\tconst included = connection\r\n\t\t\t? chunkGraph.getNumberOfModuleChunks(connection.module) > 0\r\n\t\t\t: false;\r\n\t\tconst comment = runtimeTemplate.outputOptions.pathinfo\r\n\t\t\t? Template.toComment(\r\n\t\t\t\t\t`__webpack_is_included__ ${runtimeTemplate.requestShortener.shorten(\r\n\t\t\t\t\t\tdep.request\r\n\t\t\t\t\t)}`\r\n\t\t\t  )\r\n\t\t\t: \"\";\r\n\r\n\t\tsource.replace(\r\n\t\t\tdep.range[0],\r\n\t\t\tdep.range[1] - 1,\r\n\t\t\t`${comment}${JSON.stringify(included)}`\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports = WebpackIsIncludedDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,MAAME,gBAAgB,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,2BAA2B,SAASD,gBAAgB,CAAC;EAC1DE,WAAW,CAACC,OAAO,EAAEC,KAAK,EAAE;IAC3B,KAAK,CAACD,OAAO,CAAC;IAEd,IAAI,CAACE,IAAI,GAAG,IAAI;IAChB,IAAI,CAACD,KAAK,GAAGA,KAAK;EACnB;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCE,oBAAoB,CAACC,WAAW,EAAEC,OAAO,EAAE;IAC1C;IACA,OAAOZ,UAAU,CAACa,qBAAqB;EACxC;EAEA,IAAIC,IAAI,GAAG;IACV,OAAO,yBAAyB;EACjC;AACD;AAEAX,gBAAgB,CACfE,2BAA2B,EAC3B,sDAAsD,CACtD;AAEDA,2BAA2B,CAACH,QAAQ,GAAG,MAAMa,mCAAmC,SAC/EX,gBAAgB,CAACF,QAAQ,CACxB;EACD;AACD;AACA;AACA;AACA;AACA;EACCc,KAAK,CAACC,UAAU,EAAEC,MAAM,QAAgD;IAAA,IAA9C;MAAEC,eAAe;MAAEC,UAAU;MAAET;IAAY,CAAC;IACrE,MAAMU,GAAG,GAAG,0CAA4CJ,UAAW;IACnE,MAAMK,UAAU,GAAGX,WAAW,CAACY,aAAa,CAACF,GAAG,CAAC;IACjD,MAAMG,QAAQ,GAAGF,UAAU,GACxBF,UAAU,CAACK,uBAAuB,CAACH,UAAU,CAACI,MAAM,CAAC,GAAG,CAAC,GACzD,KAAK;IACR,MAAMC,OAAO,GAAGR,eAAe,CAACS,aAAa,CAACC,QAAQ,GACnD3B,QAAQ,CAAC4B,SAAS,CACjB,2BAA0BX,eAAe,CAACY,gBAAgB,CAACC,OAAO,CAClEX,GAAG,CAACd,OAAO,CACV,EAAC,CACF,GACD,EAAE;IAELW,MAAM,CAACe,OAAO,CACbZ,GAAG,CAACb,KAAK,CAAC,CAAC,CAAC,EACZa,GAAG,CAACb,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EACf,GAAEmB,OAAQ,GAAEO,IAAI,CAACC,SAAS,CAACX,QAAQ,CAAE,EAAC,CACvC;EACF;AACD,CAAC;AAEDE,MAAM,CAACU,OAAO,GAAG/B,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}