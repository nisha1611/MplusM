{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\nconst {\n  numberToIdentifier,\n  NUMBER_OF_IDENTIFIER_START_CHARS,\n  NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS\n} = require(\"../Template\");\nconst {\n  assignDeterministicIds\n} = require(\"../ids/IdHelpers\");\nconst {\n  compareSelect,\n  compareStringsNumeric\n} = require(\"../util/comparators\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\n\n/**\r\n * @param {ExportsInfo} exportsInfo exports info\r\n * @returns {boolean} mangle is possible\r\n */\nconst canMangle = exportsInfo => {\n  if (exportsInfo.otherExportsInfo.getUsed(undefined) !== UsageState.Unused) return false;\n  let hasSomethingToMangle = false;\n  for (const exportInfo of exportsInfo.exports) {\n    if (exportInfo.canMangle === true) {\n      hasSomethingToMangle = true;\n    }\n  }\n  return hasSomethingToMangle;\n};\n\n// Sort by name\nconst comparator = compareSelect(e => e.name, compareStringsNumeric);\n/**\r\n * @param {boolean} deterministic use deterministic names\r\n * @param {ExportsInfo} exportsInfo exports info\r\n * @param {boolean} isNamespace is namespace object\r\n * @returns {void}\r\n */\nconst mangleExportsInfo = (deterministic, exportsInfo, isNamespace) => {\n  if (!canMangle(exportsInfo)) return;\n  const usedNames = new Set();\n  /** @type {ExportInfo[]} */\n  const mangleableExports = [];\n\n  // Avoid to renamed exports that are not provided when\n  // 1. it's not a namespace export: non-provided exports can be found in prototype chain\n  // 2. there are other provided exports and deterministic mode is chosen:\n  //    non-provided exports would break the determinism\n  let avoidMangleNonProvided = !isNamespace;\n  if (!avoidMangleNonProvided && deterministic) {\n    for (const exportInfo of exportsInfo.ownedExports) {\n      if (exportInfo.provided !== false) {\n        avoidMangleNonProvided = true;\n        break;\n      }\n    }\n  }\n  for (const exportInfo of exportsInfo.ownedExports) {\n    const name = exportInfo.name;\n    if (!exportInfo.hasUsedName()) {\n      if (\n      // Can the export be mangled?\n      exportInfo.canMangle !== true ||\n      // Never rename 1 char exports\n      name.length === 1 && /^[a-zA-Z0-9_$]/.test(name) ||\n      // Don't rename 2 char exports in deterministic mode\n      deterministic && name.length === 2 && /^[a-zA-Z_$][a-zA-Z0-9_$]|^[1-9][0-9]/.test(name) ||\n      // Don't rename exports that are not provided\n      avoidMangleNonProvided && exportInfo.provided !== true) {\n        exportInfo.setUsedName(name);\n        usedNames.add(name);\n      } else {\n        mangleableExports.push(exportInfo);\n      }\n    }\n    if (exportInfo.exportsInfoOwned) {\n      const used = exportInfo.getUsed(undefined);\n      if (used === UsageState.OnlyPropertiesUsed || used === UsageState.Unused) {\n        mangleExportsInfo(deterministic, exportInfo.exportsInfo, false);\n      }\n    }\n  }\n  if (deterministic) {\n    assignDeterministicIds(mangleableExports, e => e.name, comparator, (e, id) => {\n      const name = numberToIdentifier(id);\n      const size = usedNames.size;\n      usedNames.add(name);\n      if (size === usedNames.size) return false;\n      e.setUsedName(name);\n      return true;\n    }, [NUMBER_OF_IDENTIFIER_START_CHARS, NUMBER_OF_IDENTIFIER_START_CHARS * NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS], NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS, usedNames.size);\n  } else {\n    const usedExports = [];\n    const unusedExports = [];\n    for (const exportInfo of mangleableExports) {\n      if (exportInfo.getUsed(undefined) === UsageState.Unused) {\n        unusedExports.push(exportInfo);\n      } else {\n        usedExports.push(exportInfo);\n      }\n    }\n    usedExports.sort(comparator);\n    unusedExports.sort(comparator);\n    let i = 0;\n    for (const list of [usedExports, unusedExports]) {\n      for (const exportInfo of list) {\n        let name;\n        do {\n          name = numberToIdentifier(i++);\n        } while (usedNames.has(name));\n        exportInfo.setUsedName(name);\n      }\n    }\n  }\n};\nclass MangleExportsPlugin {\n  /**\r\n   * @param {boolean} deterministic use deterministic names\r\n   */\n  constructor(deterministic) {\n    this._deterministic = deterministic;\n  }\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    const {\n      _deterministic: deterministic\n    } = this;\n    compiler.hooks.compilation.tap(\"MangleExportsPlugin\", compilation => {\n      const moduleGraph = compilation.moduleGraph;\n      compilation.hooks.optimizeCodeGeneration.tap(\"MangleExportsPlugin\", modules => {\n        if (compilation.moduleMemCaches) {\n          throw new Error(\"optimization.mangleExports can't be used with cacheUnaffected as export mangling is a global effect\");\n        }\n        for (const module of modules) {\n          const isNamespace = module.buildMeta && module.buildMeta.exportsType === \"namespace\";\n          const exportsInfo = moduleGraph.getExportsInfo(module);\n          mangleExportsInfo(deterministic, exportsInfo, isNamespace);\n        }\n      });\n    });\n  }\n}\nmodule.exports = MangleExportsPlugin;","map":{"version":3,"names":["UsageState","require","numberToIdentifier","NUMBER_OF_IDENTIFIER_START_CHARS","NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS","assignDeterministicIds","compareSelect","compareStringsNumeric","canMangle","exportsInfo","otherExportsInfo","getUsed","undefined","Unused","hasSomethingToMangle","exportInfo","exports","comparator","e","name","mangleExportsInfo","deterministic","isNamespace","usedNames","Set","mangleableExports","avoidMangleNonProvided","ownedExports","provided","hasUsedName","length","test","setUsedName","add","push","exportsInfoOwned","used","OnlyPropertiesUsed","id","size","usedExports","unusedExports","sort","i","list","has","MangleExportsPlugin","constructor","_deterministic","apply","compiler","hooks","compilation","tap","moduleGraph","optimizeCodeGeneration","modules","moduleMemCaches","Error","module","buildMeta","exportsType","getExportsInfo"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/optimize/MangleExportsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { UsageState } = require(\"../ExportsInfo\");\r\nconst {\r\n\tnumberToIdentifier,\r\n\tNUMBER_OF_IDENTIFIER_START_CHARS,\r\n\tNUMBER_OF_IDENTIFIER_CONTINUATION_CHARS\r\n} = require(\"../Template\");\r\nconst { assignDeterministicIds } = require(\"../ids/IdHelpers\");\r\nconst { compareSelect, compareStringsNumeric } = require(\"../util/comparators\");\r\n\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\r\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\r\n\r\n/**\r\n * @param {ExportsInfo} exportsInfo exports info\r\n * @returns {boolean} mangle is possible\r\n */\r\nconst canMangle = exportsInfo => {\r\n\tif (exportsInfo.otherExportsInfo.getUsed(undefined) !== UsageState.Unused)\r\n\t\treturn false;\r\n\tlet hasSomethingToMangle = false;\r\n\tfor (const exportInfo of exportsInfo.exports) {\r\n\t\tif (exportInfo.canMangle === true) {\r\n\t\t\thasSomethingToMangle = true;\r\n\t\t}\r\n\t}\r\n\treturn hasSomethingToMangle;\r\n};\r\n\r\n// Sort by name\r\nconst comparator = compareSelect(e => e.name, compareStringsNumeric);\r\n/**\r\n * @param {boolean} deterministic use deterministic names\r\n * @param {ExportsInfo} exportsInfo exports info\r\n * @param {boolean} isNamespace is namespace object\r\n * @returns {void}\r\n */\r\nconst mangleExportsInfo = (deterministic, exportsInfo, isNamespace) => {\r\n\tif (!canMangle(exportsInfo)) return;\r\n\tconst usedNames = new Set();\r\n\t/** @type {ExportInfo[]} */\r\n\tconst mangleableExports = [];\r\n\r\n\t// Avoid to renamed exports that are not provided when\r\n\t// 1. it's not a namespace export: non-provided exports can be found in prototype chain\r\n\t// 2. there are other provided exports and deterministic mode is chosen:\r\n\t//    non-provided exports would break the determinism\r\n\tlet avoidMangleNonProvided = !isNamespace;\r\n\tif (!avoidMangleNonProvided && deterministic) {\r\n\t\tfor (const exportInfo of exportsInfo.ownedExports) {\r\n\t\t\tif (exportInfo.provided !== false) {\r\n\t\t\t\tavoidMangleNonProvided = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (const exportInfo of exportsInfo.ownedExports) {\r\n\t\tconst name = exportInfo.name;\r\n\t\tif (!exportInfo.hasUsedName()) {\r\n\t\t\tif (\r\n\t\t\t\t// Can the export be mangled?\r\n\t\t\t\texportInfo.canMangle !== true ||\r\n\t\t\t\t// Never rename 1 char exports\r\n\t\t\t\t(name.length === 1 && /^[a-zA-Z0-9_$]/.test(name)) ||\r\n\t\t\t\t// Don't rename 2 char exports in deterministic mode\r\n\t\t\t\t(deterministic &&\r\n\t\t\t\t\tname.length === 2 &&\r\n\t\t\t\t\t/^[a-zA-Z_$][a-zA-Z0-9_$]|^[1-9][0-9]/.test(name)) ||\r\n\t\t\t\t// Don't rename exports that are not provided\r\n\t\t\t\t(avoidMangleNonProvided && exportInfo.provided !== true)\r\n\t\t\t) {\r\n\t\t\t\texportInfo.setUsedName(name);\r\n\t\t\t\tusedNames.add(name);\r\n\t\t\t} else {\r\n\t\t\t\tmangleableExports.push(exportInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (exportInfo.exportsInfoOwned) {\r\n\t\t\tconst used = exportInfo.getUsed(undefined);\r\n\t\t\tif (\r\n\t\t\t\tused === UsageState.OnlyPropertiesUsed ||\r\n\t\t\t\tused === UsageState.Unused\r\n\t\t\t) {\r\n\t\t\t\tmangleExportsInfo(deterministic, exportInfo.exportsInfo, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (deterministic) {\r\n\t\tassignDeterministicIds(\r\n\t\t\tmangleableExports,\r\n\t\t\te => e.name,\r\n\t\t\tcomparator,\r\n\t\t\t(e, id) => {\r\n\t\t\t\tconst name = numberToIdentifier(id);\r\n\t\t\t\tconst size = usedNames.size;\r\n\t\t\t\tusedNames.add(name);\r\n\t\t\t\tif (size === usedNames.size) return false;\r\n\t\t\t\te.setUsedName(name);\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\t[\r\n\t\t\t\tNUMBER_OF_IDENTIFIER_START_CHARS,\r\n\t\t\t\tNUMBER_OF_IDENTIFIER_START_CHARS *\r\n\t\t\t\t\tNUMBER_OF_IDENTIFIER_CONTINUATION_CHARS\r\n\t\t\t],\r\n\t\t\tNUMBER_OF_IDENTIFIER_CONTINUATION_CHARS,\r\n\t\t\tusedNames.size\r\n\t\t);\r\n\t} else {\r\n\t\tconst usedExports = [];\r\n\t\tconst unusedExports = [];\r\n\t\tfor (const exportInfo of mangleableExports) {\r\n\t\t\tif (exportInfo.getUsed(undefined) === UsageState.Unused) {\r\n\t\t\t\tunusedExports.push(exportInfo);\r\n\t\t\t} else {\r\n\t\t\t\tusedExports.push(exportInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t\tusedExports.sort(comparator);\r\n\t\tunusedExports.sort(comparator);\r\n\t\tlet i = 0;\r\n\t\tfor (const list of [usedExports, unusedExports]) {\r\n\t\t\tfor (const exportInfo of list) {\r\n\t\t\t\tlet name;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tname = numberToIdentifier(i++);\r\n\t\t\t\t} while (usedNames.has(name));\r\n\t\t\t\texportInfo.setUsedName(name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nclass MangleExportsPlugin {\r\n\t/**\r\n\t * @param {boolean} deterministic use deterministic names\r\n\t */\r\n\tconstructor(deterministic) {\r\n\t\tthis._deterministic = deterministic;\r\n\t}\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tconst { _deterministic: deterministic } = this;\r\n\t\tcompiler.hooks.compilation.tap(\"MangleExportsPlugin\", compilation => {\r\n\t\t\tconst moduleGraph = compilation.moduleGraph;\r\n\t\t\tcompilation.hooks.optimizeCodeGeneration.tap(\r\n\t\t\t\t\"MangleExportsPlugin\",\r\n\t\t\t\tmodules => {\r\n\t\t\t\t\tif (compilation.moduleMemCaches) {\r\n\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\"optimization.mangleExports can't be used with cacheUnaffected as export mangling is a global effect\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (const module of modules) {\r\n\t\t\t\t\t\tconst isNamespace =\r\n\t\t\t\t\t\t\tmodule.buildMeta && module.buildMeta.exportsType === \"namespace\";\r\n\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\r\n\t\t\t\t\t\tmangleExportsInfo(deterministic, exportsInfo, isNamespace);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = MangleExportsPlugin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}