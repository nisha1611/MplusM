{"ast":null,"code":"'use strict';\n\nconst isOperator = require('./isOperator');\nmodule.exports = function castFilterPath(query, schematype, val) {\n  const ctx = query;\n  const any$conditionals = Object.keys(val).some(isOperator);\n  if (!any$conditionals) {\n    return schematype.castForQueryWrapper({\n      val: val,\n      context: ctx\n    });\n  }\n  const ks = Object.keys(val);\n  let k = ks.length;\n  while (k--) {\n    const $cond = ks[k];\n    const nested = val[$cond];\n    if ($cond === '$not') {\n      if (nested && schematype && !schematype.caster) {\n        const _keys = Object.keys(nested);\n        if (_keys.length && isOperator(_keys[0])) {\n          for (const key of Object.keys(nested)) {\n            nested[key] = schematype.castForQueryWrapper({\n              $conditional: key,\n              val: nested[key],\n              context: ctx\n            });\n          }\n        } else {\n          val[$cond] = schematype.castForQueryWrapper({\n            $conditional: $cond,\n            val: nested,\n            context: ctx\n          });\n        }\n        continue;\n      }\n    } else {\n      val[$cond] = schematype.castForQueryWrapper({\n        $conditional: $cond,\n        val: nested,\n        context: ctx\n      });\n    }\n  }\n  return val;\n};","map":{"version":3,"names":["isOperator","require","module","exports","castFilterPath","query","schematype","val","ctx","any$conditionals","Object","keys","some","castForQueryWrapper","context","ks","k","length","$cond","nested","caster","_keys","key","$conditional"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/query/castFilterPath.js"],"sourcesContent":["'use strict';\r\n\r\nconst isOperator = require('./isOperator');\r\n\r\nmodule.exports = function castFilterPath(query, schematype, val) {\r\n  const ctx = query;\r\n  const any$conditionals = Object.keys(val).some(isOperator);\r\n\r\n  if (!any$conditionals) {\r\n    return schematype.castForQueryWrapper({\r\n      val: val,\r\n      context: ctx\r\n    });\r\n  }\r\n\r\n  const ks = Object.keys(val);\r\n\r\n  let k = ks.length;\r\n\r\n  while (k--) {\r\n    const $cond = ks[k];\r\n    const nested = val[$cond];\r\n\r\n    if ($cond === '$not') {\r\n      if (nested && schematype && !schematype.caster) {\r\n        const _keys = Object.keys(nested);\r\n        if (_keys.length && isOperator(_keys[0])) {\r\n          for (const key of Object.keys(nested)) {\r\n            nested[key] = schematype.castForQueryWrapper({\r\n              $conditional: key,\r\n              val: nested[key],\r\n              context: ctx\r\n            });\r\n          }\r\n        } else {\r\n          val[$cond] = schematype.castForQueryWrapper({\r\n            $conditional: $cond,\r\n            val: nested,\r\n            context: ctx\r\n          });\r\n        }\r\n        continue;\r\n      }\r\n    } else {\r\n      val[$cond] = schematype.castForQueryWrapper({\r\n        $conditional: $cond,\r\n        val: nested,\r\n        context: ctx\r\n      });\r\n    }\r\n  }\r\n\r\n  return val;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAE1CC,MAAM,CAACC,OAAO,GAAG,SAASC,cAAc,CAACC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAE;EAC/D,MAAMC,GAAG,GAAGH,KAAK;EACjB,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,IAAI,CAACZ,UAAU,CAAC;EAE1D,IAAI,CAACS,gBAAgB,EAAE;IACrB,OAAOH,UAAU,CAACO,mBAAmB,CAAC;MACpCN,GAAG,EAAEA,GAAG;MACRO,OAAO,EAAEN;IACX,CAAC,CAAC;EACJ;EAEA,MAAMO,EAAE,GAAGL,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC;EAE3B,IAAIS,CAAC,GAAGD,EAAE,CAACE,MAAM;EAEjB,OAAOD,CAAC,EAAE,EAAE;IACV,MAAME,KAAK,GAAGH,EAAE,CAACC,CAAC,CAAC;IACnB,MAAMG,MAAM,GAAGZ,GAAG,CAACW,KAAK,CAAC;IAEzB,IAAIA,KAAK,KAAK,MAAM,EAAE;MACpB,IAAIC,MAAM,IAAIb,UAAU,IAAI,CAACA,UAAU,CAACc,MAAM,EAAE;QAC9C,MAAMC,KAAK,GAAGX,MAAM,CAACC,IAAI,CAACQ,MAAM,CAAC;QACjC,IAAIE,KAAK,CAACJ,MAAM,IAAIjB,UAAU,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;UACxC,KAAK,MAAMC,GAAG,IAAIZ,MAAM,CAACC,IAAI,CAACQ,MAAM,CAAC,EAAE;YACrCA,MAAM,CAACG,GAAG,CAAC,GAAGhB,UAAU,CAACO,mBAAmB,CAAC;cAC3CU,YAAY,EAAED,GAAG;cACjBf,GAAG,EAAEY,MAAM,CAACG,GAAG,CAAC;cAChBR,OAAO,EAAEN;YACX,CAAC,CAAC;UACJ;QACF,CAAC,MAAM;UACLD,GAAG,CAACW,KAAK,CAAC,GAAGZ,UAAU,CAACO,mBAAmB,CAAC;YAC1CU,YAAY,EAAEL,KAAK;YACnBX,GAAG,EAAEY,MAAM;YACXL,OAAO,EAAEN;UACX,CAAC,CAAC;QACJ;QACA;MACF;IACF,CAAC,MAAM;MACLD,GAAG,CAACW,KAAK,CAAC,GAAGZ,UAAU,CAACO,mBAAmB,CAAC;QAC1CU,YAAY,EAAEL,KAAK;QACnBX,GAAG,EAAEY,MAAM;QACXL,OAAO,EAAEN;MACX,CAAC,CAAC;IACJ;EACF;EAEA,OAAOD,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}