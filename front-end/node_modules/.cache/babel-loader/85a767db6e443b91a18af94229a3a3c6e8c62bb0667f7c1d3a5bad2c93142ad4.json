{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Ivan Kopeykin @vankop\r\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Entrypoint\")} Entrypoint */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WorkerDependency extends ModuleDependency {\n  /**\r\n   * @param {string} request request\r\n   * @param {[number, number]} range range\r\n   */\n  constructor(request, range) {\n    super(request);\n    this.range = range;\n  }\n\n  /**\r\n   * Returns list of exports referenced by this dependency\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    return Dependency.NO_EXPORTS_REFERENCED;\n  }\n  get type() {\n    return \"new Worker()\";\n  }\n  get category() {\n    return \"worker\";\n  }\n}\nWorkerDependency.Template = class WorkerDependencyTemplate extends ModuleDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, templateContext) {\n    const {\n      chunkGraph,\n      moduleGraph,\n      runtimeRequirements\n    } = templateContext;\n    const dep = /** @type {WorkerDependency} */dependency;\n    const block = /** @type {AsyncDependenciesBlock} */\n    moduleGraph.getParentBlock(dependency);\n    const entrypoint = /** @type {Entrypoint} */\n    chunkGraph.getBlockChunkGroup(block);\n    const chunk = entrypoint.getEntrypointChunk();\n    runtimeRequirements.add(RuntimeGlobals.publicPath);\n    runtimeRequirements.add(RuntimeGlobals.baseURI);\n    runtimeRequirements.add(RuntimeGlobals.getChunkScriptFilename);\n    source.replace(dep.range[0], dep.range[1] - 1, `/* worker import */ ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(${JSON.stringify(chunk.id)}), ${RuntimeGlobals.baseURI}`);\n  }\n};\nmakeSerializable(WorkerDependency, \"webpack/lib/dependencies/WorkerDependency\");\nmodule.exports = WorkerDependency;","map":{"version":3,"names":["Dependency","require","RuntimeGlobals","makeSerializable","ModuleDependency","WorkerDependency","constructor","request","range","getReferencedExports","moduleGraph","runtime","NO_EXPORTS_REFERENCED","type","category","Template","WorkerDependencyTemplate","apply","dependency","source","templateContext","chunkGraph","runtimeRequirements","dep","block","getParentBlock","entrypoint","getBlockChunkGroup","chunk","getEntrypointChunk","add","publicPath","baseURI","getChunkScriptFilename","replace","JSON","stringify","id","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/WorkerDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Ivan Kopeykin @vankop\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Dependency = require(\"../Dependency\");\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../AsyncDependenciesBlock\")} AsyncDependenciesBlock */\r\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../Entrypoint\")} Entrypoint */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../util/Hash\")} Hash */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\nclass WorkerDependency extends ModuleDependency {\r\n\t/**\r\n\t * @param {string} request request\r\n\t * @param {[number, number]} range range\r\n\t */\r\n\tconstructor(request, range) {\r\n\t\tsuper(request);\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of exports referenced by this dependency\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n\t */\r\n\tgetReferencedExports(moduleGraph, runtime) {\r\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"new Worker()\";\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"worker\";\r\n\t}\r\n}\r\n\r\nWorkerDependency.Template = class WorkerDependencyTemplate extends (\r\n\tModuleDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(dependency, source, templateContext) {\r\n\t\tconst { chunkGraph, moduleGraph, runtimeRequirements } = templateContext;\r\n\t\tconst dep = /** @type {WorkerDependency} */ (dependency);\r\n\t\tconst block = /** @type {AsyncDependenciesBlock} */ (\r\n\t\t\tmoduleGraph.getParentBlock(dependency)\r\n\t\t);\r\n\t\tconst entrypoint = /** @type {Entrypoint} */ (\r\n\t\t\tchunkGraph.getBlockChunkGroup(block)\r\n\t\t);\r\n\t\tconst chunk = entrypoint.getEntrypointChunk();\r\n\r\n\t\truntimeRequirements.add(RuntimeGlobals.publicPath);\r\n\t\truntimeRequirements.add(RuntimeGlobals.baseURI);\r\n\t\truntimeRequirements.add(RuntimeGlobals.getChunkScriptFilename);\r\n\r\n\t\tsource.replace(\r\n\t\t\tdep.range[0],\r\n\t\t\tdep.range[1] - 1,\r\n\t\t\t`/* worker import */ ${RuntimeGlobals.publicPath} + ${\r\n\t\t\t\tRuntimeGlobals.getChunkScriptFilename\r\n\t\t\t}(${JSON.stringify(chunk.id)}), ${RuntimeGlobals.baseURI}`\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmakeSerializable(WorkerDependency, \"webpack/lib/dependencies/WorkerDependency\");\r\n\r\nmodule.exports = WorkerDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,cAAc,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAME,gBAAgB,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,gBAAgB,SAASD,gBAAgB,CAAC;EAC/C;AACD;AACA;AACA;EACCE,WAAW,CAACC,OAAO,EAAEC,KAAK,EAAE;IAC3B,KAAK,CAACD,OAAO,CAAC;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;EACnB;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCC,oBAAoB,CAACC,WAAW,EAAEC,OAAO,EAAE;IAC1C,OAAOX,UAAU,CAACY,qBAAqB;EACxC;EAEA,IAAIC,IAAI,GAAG;IACV,OAAO,cAAc;EACtB;EAEA,IAAIC,QAAQ,GAAG;IACd,OAAO,QAAQ;EAChB;AACD;AAEAT,gBAAgB,CAACU,QAAQ,GAAG,MAAMC,wBAAwB,SACzDZ,gBAAgB,CAACW,QAAQ,CACxB;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAK,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;IAC1C,MAAM;MAAEC,UAAU;MAAEX,WAAW;MAAEY;IAAoB,CAAC,GAAGF,eAAe;IACxE,MAAMG,GAAG,GAAG,+BAAiCL,UAAW;IACxD,MAAMM,KAAK,GAAG;IACbd,WAAW,CAACe,cAAc,CAACP,UAAU,CACrC;IACD,MAAMQ,UAAU,GAAG;IAClBL,UAAU,CAACM,kBAAkB,CAACH,KAAK,CACnC;IACD,MAAMI,KAAK,GAAGF,UAAU,CAACG,kBAAkB,EAAE;IAE7CP,mBAAmB,CAACQ,GAAG,CAAC5B,cAAc,CAAC6B,UAAU,CAAC;IAClDT,mBAAmB,CAACQ,GAAG,CAAC5B,cAAc,CAAC8B,OAAO,CAAC;IAC/CV,mBAAmB,CAACQ,GAAG,CAAC5B,cAAc,CAAC+B,sBAAsB,CAAC;IAE9Dd,MAAM,CAACe,OAAO,CACbX,GAAG,CAACf,KAAK,CAAC,CAAC,CAAC,EACZe,GAAG,CAACf,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EACf,uBAAsBN,cAAc,CAAC6B,UAAW,MAChD7B,cAAc,CAAC+B,sBACf,IAAGE,IAAI,CAACC,SAAS,CAACR,KAAK,CAACS,EAAE,CAAE,MAAKnC,cAAc,CAAC8B,OAAQ,EAAC,CAC1D;EACF;AACD,CAAC;AAED7B,gBAAgB,CAACE,gBAAgB,EAAE,2CAA2C,CAAC;AAE/EiC,MAAM,CAACC,OAAO,GAAGlC,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}