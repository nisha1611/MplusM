{"ast":null,"code":"'use strict';\n\nconst bitfield = require('sparse-bitfield');\nconst codePoints = require('./lib/code-points');\nconst unassigned_code_points = bitfield();\nconst commonly_mapped_to_nothing = bitfield();\nconst non_ascii_space_characters = bitfield();\nconst prohibited_characters = bitfield();\nconst bidirectional_r_al = bitfield();\nconst bidirectional_l = bitfield();\n\n/**\r\n * Iterare over code points and\r\n * convert it into an buffer.\r\n * @param {bitfield} bits\r\n * @param {Array} src\r\n * @returns {Buffer}\r\n */\nfunction traverse(bits, src) {\n  for (const code of src.keys()) {\n    bits.set(code, true);\n  }\n  const buffer = bits.toBuffer();\n  return Buffer.concat([createSize(buffer), buffer]);\n}\n\n/**\r\n * @param {Buffer} buffer\r\n * @returns {Buffer}\r\n */\nfunction createSize(buffer) {\n  const buf = Buffer.alloc(4);\n  buf.writeUInt32BE(buffer.length);\n  return buf;\n}\nconst memory = [];\nmemory.push(traverse(unassigned_code_points, codePoints.unassigned_code_points), traverse(commonly_mapped_to_nothing, codePoints.commonly_mapped_to_nothing), traverse(non_ascii_space_characters, codePoints.non_ASCII_space_characters), traverse(prohibited_characters, codePoints.prohibited_characters), traverse(bidirectional_r_al, codePoints.bidirectional_r_al), traverse(bidirectional_l, codePoints.bidirectional_l));\nprocess.stdout.write(Buffer.concat(memory));","map":{"version":3,"names":["bitfield","require","codePoints","unassigned_code_points","commonly_mapped_to_nothing","non_ascii_space_characters","prohibited_characters","bidirectional_r_al","bidirectional_l","traverse","bits","src","code","keys","set","buffer","toBuffer","Buffer","concat","createSize","buf","alloc","writeUInt32BE","length","memory","push","non_ASCII_space_characters","process","stdout","write"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/saslprep/generate-code-points.js"],"sourcesContent":["'use strict';\r\n\r\nconst bitfield = require('sparse-bitfield');\r\nconst codePoints = require('./lib/code-points');\r\n\r\nconst unassigned_code_points = bitfield();\r\nconst commonly_mapped_to_nothing = bitfield();\r\nconst non_ascii_space_characters = bitfield();\r\nconst prohibited_characters = bitfield();\r\nconst bidirectional_r_al = bitfield();\r\nconst bidirectional_l = bitfield();\r\n\r\n/**\r\n * Iterare over code points and\r\n * convert it into an buffer.\r\n * @param {bitfield} bits\r\n * @param {Array} src\r\n * @returns {Buffer}\r\n */\r\nfunction traverse(bits, src) {\r\n  for (const code of src.keys()) {\r\n    bits.set(code, true);\r\n  }\r\n\r\n  const buffer = bits.toBuffer();\r\n  return Buffer.concat([createSize(buffer), buffer]);\r\n}\r\n\r\n/**\r\n * @param {Buffer} buffer\r\n * @returns {Buffer}\r\n */\r\nfunction createSize(buffer) {\r\n  const buf = Buffer.alloc(4);\r\n  buf.writeUInt32BE(buffer.length);\r\n\r\n  return buf;\r\n}\r\n\r\nconst memory = [];\r\n\r\nmemory.push(\r\n  traverse(unassigned_code_points, codePoints.unassigned_code_points),\r\n  traverse(commonly_mapped_to_nothing, codePoints.commonly_mapped_to_nothing),\r\n  traverse(non_ascii_space_characters, codePoints.non_ASCII_space_characters),\r\n  traverse(prohibited_characters, codePoints.prohibited_characters),\r\n  traverse(bidirectional_r_al, codePoints.bidirectional_r_al),\r\n  traverse(bidirectional_l, codePoints.bidirectional_l)\r\n);\r\n\r\nprocess.stdout.write(Buffer.concat(memory));\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC3C,MAAMC,UAAU,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE/C,MAAME,sBAAsB,GAAGH,QAAQ,EAAE;AACzC,MAAMI,0BAA0B,GAAGJ,QAAQ,EAAE;AAC7C,MAAMK,0BAA0B,GAAGL,QAAQ,EAAE;AAC7C,MAAMM,qBAAqB,GAAGN,QAAQ,EAAE;AACxC,MAAMO,kBAAkB,GAAGP,QAAQ,EAAE;AACrC,MAAMQ,eAAe,GAAGR,QAAQ,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,QAAQ,CAACC,IAAI,EAAEC,GAAG,EAAE;EAC3B,KAAK,MAAMC,IAAI,IAAID,GAAG,CAACE,IAAI,EAAE,EAAE;IAC7BH,IAAI,CAACI,GAAG,CAACF,IAAI,EAAE,IAAI,CAAC;EACtB;EAEA,MAAMG,MAAM,GAAGL,IAAI,CAACM,QAAQ,EAAE;EAC9B,OAAOC,MAAM,CAACC,MAAM,CAAC,CAACC,UAAU,CAACJ,MAAM,CAAC,EAAEA,MAAM,CAAC,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA,SAASI,UAAU,CAACJ,MAAM,EAAE;EAC1B,MAAMK,GAAG,GAAGH,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;EAC3BD,GAAG,CAACE,aAAa,CAACP,MAAM,CAACQ,MAAM,CAAC;EAEhC,OAAOH,GAAG;AACZ;AAEA,MAAMI,MAAM,GAAG,EAAE;AAEjBA,MAAM,CAACC,IAAI,CACThB,QAAQ,CAACN,sBAAsB,EAAED,UAAU,CAACC,sBAAsB,CAAC,EACnEM,QAAQ,CAACL,0BAA0B,EAAEF,UAAU,CAACE,0BAA0B,CAAC,EAC3EK,QAAQ,CAACJ,0BAA0B,EAAEH,UAAU,CAACwB,0BAA0B,CAAC,EAC3EjB,QAAQ,CAACH,qBAAqB,EAAEJ,UAAU,CAACI,qBAAqB,CAAC,EACjEG,QAAQ,CAACF,kBAAkB,EAAEL,UAAU,CAACK,kBAAkB,CAAC,EAC3DE,QAAQ,CAACD,eAAe,EAAEN,UAAU,CAACM,eAAe,CAAC,CACtD;AAEDmB,OAAO,CAACC,MAAM,CAACC,KAAK,CAACZ,MAAM,CAACC,MAAM,CAACM,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}