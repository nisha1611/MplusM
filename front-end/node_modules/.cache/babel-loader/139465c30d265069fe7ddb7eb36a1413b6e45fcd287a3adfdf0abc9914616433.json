{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst memoize = require(\"../util/memoize\");\nconst getBrowserslistTargetHandler = memoize(() => require(\"./browserslistTargetHandler\"));\n\n/**\r\n * @param {string} context the context directory\r\n * @returns {string} default target\r\n */\nconst getDefaultTarget = context => {\n  const browsers = getBrowserslistTargetHandler().load(null, context);\n  return browsers ? \"browserslist\" : \"web\";\n};\n\n/**\r\n * @typedef {Object} PlatformTargetProperties\r\n * @property {boolean | null} web web platform, importing of http(s) and std: is available\r\n * @property {boolean | null} browser browser platform, running in a normal web browser\r\n * @property {boolean | null} webworker (Web)Worker platform, running in a web/shared/service worker\r\n * @property {boolean | null} node node platform, require of node built-in modules is available\r\n * @property {boolean | null} nwjs nwjs platform, require of legacy nw.gui is available\r\n * @property {boolean | null} electron electron platform, require of some electron built-in modules is available\r\n */\n\n/**\r\n * @typedef {Object} ElectronContextTargetProperties\r\n * @property {boolean | null} electronMain in main context\r\n * @property {boolean | null} electronPreload in preload context\r\n * @property {boolean | null} electronRenderer in renderer context with node integration\r\n */\n\n/**\r\n * @typedef {Object} ApiTargetProperties\r\n * @property {boolean | null} require has require function available\r\n * @property {boolean | null} nodeBuiltins has node.js built-in modules available\r\n * @property {boolean | null} document has document available (allows script tags)\r\n * @property {boolean | null} importScripts has importScripts available\r\n * @property {boolean | null} importScriptsInWorker has importScripts available when creating a worker\r\n * @property {boolean | null} fetchWasm has fetch function available for WebAssembly\r\n * @property {boolean | null} global has global variable available\r\n */\n\n/**\r\n * @typedef {Object} EcmaTargetProperties\r\n * @property {boolean | null} globalThis has globalThis variable available\r\n * @property {boolean | null} bigIntLiteral big int literal syntax is available\r\n * @property {boolean | null} const const and let variable declarations are available\r\n * @property {boolean | null} arrowFunction arrow functions are available\r\n * @property {boolean | null} forOf for of iteration is available\r\n * @property {boolean | null} destructuring destructuring is available\r\n * @property {boolean | null} dynamicImport async import() is available\r\n * @property {boolean | null} dynamicImportInWorker async import() is available when creating a worker\r\n * @property {boolean | null} module ESM syntax is available (when in module)\r\n * @property {boolean | null} optionalChaining optional chaining is available\r\n * @property {boolean | null} templateLiteral template literal is available\r\n */\n\n///** @typedef {PlatformTargetProperties | ApiTargetProperties | EcmaTargetProperties | PlatformTargetProperties & ApiTargetProperties | PlatformTargetProperties & EcmaTargetProperties | ApiTargetProperties & EcmaTargetProperties} TargetProperties */\n/** @template T @typedef {{ [P in keyof T]?: never }} Never<T> */\n/** @template A @template B @typedef {(A & Never<B>) | (Never<A> & B) | (A & B)} Mix<A,B> */\n/** @typedef {Mix<Mix<PlatformTargetProperties, ElectronContextTargetProperties>, Mix<ApiTargetProperties, EcmaTargetProperties>>} TargetProperties */\n\nconst versionDependent = (major, minor) => {\n  if (!major) return () => /** @type {undefined} */undefined;\n  major = +major;\n  minor = minor ? +minor : 0;\n  return function (vMajor) {\n    let vMinor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return major > vMajor || major === vMajor && minor >= vMinor;\n  };\n};\n\n/** @type {[string, string, RegExp, (...args: string[]) => TargetProperties | false][]} */\nconst TARGETS = [[\"browserslist / browserslist:env / browserslist:query / browserslist:path-to-config / browserslist:path-to-config:env\", \"Resolve features from browserslist. Will resolve browserslist config automatically. Only browser or node queries are supported (electron is not supported). Examples: 'browserslist:modern' to use 'modern' environment from browserslist config\", /^browserslist(?::(.+))?$/, (rest, context) => {\n  const browserslistTargetHandler = getBrowserslistTargetHandler();\n  const browsers = browserslistTargetHandler.load(rest ? rest.trim() : null, context);\n  if (!browsers) {\n    throw new Error(`No browserslist config found to handle the 'browserslist' target.\nSee https://github.com/browserslist/browserslist#queries for possible ways to provide a config.\nThe recommended way is to add a 'browserslist' key to your package.json and list supported browsers (resp. node.js versions).\nYou can also more options via the 'target' option: 'browserslist' / 'browserslist:env' / 'browserslist:query' / 'browserslist:path-to-config' / 'browserslist:path-to-config:env'`);\n  }\n  return browserslistTargetHandler.resolve(browsers);\n}], [\"web\", \"Web browser.\", /^web$/, () => {\n  return {\n    web: true,\n    browser: true,\n    webworker: null,\n    node: false,\n    electron: false,\n    nwjs: false,\n    document: true,\n    importScriptsInWorker: true,\n    fetchWasm: true,\n    nodeBuiltins: false,\n    importScripts: false,\n    require: false,\n    global: false\n  };\n}], [\"webworker\", \"Web Worker, SharedWorker or Service Worker.\", /^webworker$/, () => {\n  return {\n    web: true,\n    browser: true,\n    webworker: true,\n    node: false,\n    electron: false,\n    nwjs: false,\n    importScripts: true,\n    importScriptsInWorker: true,\n    fetchWasm: true,\n    nodeBuiltins: false,\n    require: false,\n    document: false,\n    global: false\n  };\n}], [\"[async-]node[X[.Y]]\", \"Node.js in version X.Y. The 'async-' prefix will load chunks asynchronously via 'fs' and 'vm' instead of 'require()'. Examples: node14.5, async-node10.\", /^(async-)?node(\\d+(?:\\.(\\d+))?)?$/, (asyncFlag, major, minor) => {\n  const v = versionDependent(major, minor);\n  // see https://node.green/\n  return {\n    node: true,\n    electron: false,\n    nwjs: false,\n    web: false,\n    webworker: false,\n    browser: false,\n    require: !asyncFlag,\n    nodeBuiltins: true,\n    global: true,\n    document: false,\n    fetchWasm: false,\n    importScripts: false,\n    importScriptsInWorker: false,\n    globalThis: v(12),\n    const: v(6),\n    templateLiteral: v(4),\n    optionalChaining: v(14),\n    arrowFunction: v(6),\n    forOf: v(5),\n    destructuring: v(6),\n    bigIntLiteral: v(10, 4),\n    dynamicImport: v(12, 17),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(12, 17)\n  };\n}], [\"electron[X[.Y]]-main/preload/renderer\", \"Electron in version X.Y. Script is running in main, preload resp. renderer context.\", /^electron(\\d+(?:\\.(\\d+))?)?-(main|preload|renderer)$/, (major, minor, context) => {\n  const v = versionDependent(major, minor);\n  // see https://node.green/ + https://github.com/electron/releases\n  return {\n    node: true,\n    electron: true,\n    web: context !== \"main\",\n    webworker: false,\n    browser: false,\n    nwjs: false,\n    electronMain: context === \"main\",\n    electronPreload: context === \"preload\",\n    electronRenderer: context === \"renderer\",\n    global: true,\n    nodeBuiltins: true,\n    require: true,\n    document: context === \"renderer\",\n    fetchWasm: context === \"renderer\",\n    importScripts: false,\n    importScriptsInWorker: true,\n    globalThis: v(5),\n    const: v(1, 1),\n    templateLiteral: v(1, 1),\n    optionalChaining: v(8),\n    arrowFunction: v(1, 1),\n    forOf: v(0, 36),\n    destructuring: v(1, 1),\n    bigIntLiteral: v(4),\n    dynamicImport: v(11),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(11)\n  };\n}], [\"nwjs[X[.Y]] / node-webkit[X[.Y]]\", \"NW.js in version X.Y.\", /^(?:nwjs|node-webkit)(\\d+(?:\\.(\\d+))?)?$/, (major, minor) => {\n  const v = versionDependent(major, minor);\n  // see https://node.green/ + https://github.com/nwjs/nw.js/blob/nw48/CHANGELOG.md\n  return {\n    node: true,\n    web: true,\n    nwjs: true,\n    webworker: null,\n    browser: false,\n    electron: false,\n    global: true,\n    nodeBuiltins: true,\n    document: false,\n    importScriptsInWorker: false,\n    fetchWasm: false,\n    importScripts: false,\n    require: false,\n    globalThis: v(0, 43),\n    const: v(0, 15),\n    templateLiteral: v(0, 13),\n    optionalChaining: v(0, 44),\n    arrowFunction: v(0, 15),\n    forOf: v(0, 13),\n    destructuring: v(0, 15),\n    bigIntLiteral: v(0, 32),\n    dynamicImport: v(0, 43),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(0, 43)\n  };\n}], [\"esX\", \"EcmaScript in this version. Examples: es2020, es5.\", /^es(\\d+)$/, version => {\n  let v = +version;\n  if (v < 1000) v = v + 2009;\n  return {\n    const: v >= 2015,\n    templateLiteral: v >= 2015,\n    optionalChaining: v >= 2020,\n    arrowFunction: v >= 2015,\n    forOf: v >= 2015,\n    destructuring: v >= 2015,\n    module: v >= 2015,\n    globalThis: v >= 2020,\n    bigIntLiteral: v >= 2020,\n    dynamicImport: v >= 2020,\n    dynamicImportInWorker: v >= 2020\n  };\n}]];\n\n/**\r\n * @param {string} target the target\r\n * @param {string} context the context directory\r\n * @returns {TargetProperties} target properties\r\n */\nconst getTargetProperties = (target, context) => {\n  for (const [,, regExp, handler] of TARGETS) {\n    const match = regExp.exec(target);\n    if (match) {\n      const [, ...args] = match;\n      const result = handler(...args, context);\n      if (result) return result;\n    }\n  }\n  throw new Error(`Unknown target '${target}'. The following targets are supported:\\n${TARGETS.map(_ref => {\n    let [name, description] = _ref;\n    return `* ${name}: ${description}`;\n  }).join(\"\\n\")}`);\n};\nconst mergeTargetProperties = targetProperties => {\n  const keys = new Set();\n  for (const tp of targetProperties) {\n    for (const key of Object.keys(tp)) {\n      keys.add(key);\n    }\n  }\n  const result = {};\n  for (const key of keys) {\n    let hasTrue = false;\n    let hasFalse = false;\n    for (const tp of targetProperties) {\n      const value = tp[key];\n      switch (value) {\n        case true:\n          hasTrue = true;\n          break;\n        case false:\n          hasFalse = true;\n          break;\n      }\n    }\n    if (hasTrue || hasFalse) result[key] = hasFalse && hasTrue ? null : hasTrue ? true : false;\n  }\n  return (/** @type {TargetProperties} */result\n  );\n};\n\n/**\r\n * @param {string[]} targets the targets\r\n * @param {string} context the context directory\r\n * @returns {TargetProperties} target properties\r\n */\nconst getTargetsProperties = (targets, context) => {\n  return mergeTargetProperties(targets.map(t => getTargetProperties(t, context)));\n};\nexports.getDefaultTarget = getDefaultTarget;\nexports.getTargetProperties = getTargetProperties;\nexports.getTargetsProperties = getTargetsProperties;","map":{"version":3,"names":["memoize","require","getBrowserslistTargetHandler","getDefaultTarget","context","browsers","load","versionDependent","major","minor","undefined","vMajor","vMinor","TARGETS","rest","browserslistTargetHandler","trim","Error","resolve","web","browser","webworker","node","electron","nwjs","document","importScriptsInWorker","fetchWasm","nodeBuiltins","importScripts","global","asyncFlag","v","globalThis","const","templateLiteral","optionalChaining","arrowFunction","forOf","destructuring","bigIntLiteral","dynamicImport","dynamicImportInWorker","module","electronMain","electronPreload","electronRenderer","version","getTargetProperties","target","regExp","handler","match","exec","args","result","map","name","description","join","mergeTargetProperties","targetProperties","keys","Set","tp","key","Object","add","hasTrue","hasFalse","value","getTargetsProperties","targets","t","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/config/target.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst memoize = require(\"../util/memoize\");\r\n\r\nconst getBrowserslistTargetHandler = memoize(() =>\r\n\trequire(\"./browserslistTargetHandler\")\r\n);\r\n\r\n/**\r\n * @param {string} context the context directory\r\n * @returns {string} default target\r\n */\r\nconst getDefaultTarget = context => {\r\n\tconst browsers = getBrowserslistTargetHandler().load(null, context);\r\n\treturn browsers ? \"browserslist\" : \"web\";\r\n};\r\n\r\n/**\r\n * @typedef {Object} PlatformTargetProperties\r\n * @property {boolean | null} web web platform, importing of http(s) and std: is available\r\n * @property {boolean | null} browser browser platform, running in a normal web browser\r\n * @property {boolean | null} webworker (Web)Worker platform, running in a web/shared/service worker\r\n * @property {boolean | null} node node platform, require of node built-in modules is available\r\n * @property {boolean | null} nwjs nwjs platform, require of legacy nw.gui is available\r\n * @property {boolean | null} electron electron platform, require of some electron built-in modules is available\r\n */\r\n\r\n/**\r\n * @typedef {Object} ElectronContextTargetProperties\r\n * @property {boolean | null} electronMain in main context\r\n * @property {boolean | null} electronPreload in preload context\r\n * @property {boolean | null} electronRenderer in renderer context with node integration\r\n */\r\n\r\n/**\r\n * @typedef {Object} ApiTargetProperties\r\n * @property {boolean | null} require has require function available\r\n * @property {boolean | null} nodeBuiltins has node.js built-in modules available\r\n * @property {boolean | null} document has document available (allows script tags)\r\n * @property {boolean | null} importScripts has importScripts available\r\n * @property {boolean | null} importScriptsInWorker has importScripts available when creating a worker\r\n * @property {boolean | null} fetchWasm has fetch function available for WebAssembly\r\n * @property {boolean | null} global has global variable available\r\n */\r\n\r\n/**\r\n * @typedef {Object} EcmaTargetProperties\r\n * @property {boolean | null} globalThis has globalThis variable available\r\n * @property {boolean | null} bigIntLiteral big int literal syntax is available\r\n * @property {boolean | null} const const and let variable declarations are available\r\n * @property {boolean | null} arrowFunction arrow functions are available\r\n * @property {boolean | null} forOf for of iteration is available\r\n * @property {boolean | null} destructuring destructuring is available\r\n * @property {boolean | null} dynamicImport async import() is available\r\n * @property {boolean | null} dynamicImportInWorker async import() is available when creating a worker\r\n * @property {boolean | null} module ESM syntax is available (when in module)\r\n * @property {boolean | null} optionalChaining optional chaining is available\r\n * @property {boolean | null} templateLiteral template literal is available\r\n */\r\n\r\n///** @typedef {PlatformTargetProperties | ApiTargetProperties | EcmaTargetProperties | PlatformTargetProperties & ApiTargetProperties | PlatformTargetProperties & EcmaTargetProperties | ApiTargetProperties & EcmaTargetProperties} TargetProperties */\r\n/** @template T @typedef {{ [P in keyof T]?: never }} Never<T> */\r\n/** @template A @template B @typedef {(A & Never<B>) | (Never<A> & B) | (A & B)} Mix<A,B> */\r\n/** @typedef {Mix<Mix<PlatformTargetProperties, ElectronContextTargetProperties>, Mix<ApiTargetProperties, EcmaTargetProperties>>} TargetProperties */\r\n\r\nconst versionDependent = (major, minor) => {\r\n\tif (!major) return () => /** @type {undefined} */ (undefined);\r\n\tmajor = +major;\r\n\tminor = minor ? +minor : 0;\r\n\treturn (vMajor, vMinor = 0) => {\r\n\t\treturn major > vMajor || (major === vMajor && minor >= vMinor);\r\n\t};\r\n};\r\n\r\n/** @type {[string, string, RegExp, (...args: string[]) => TargetProperties | false][]} */\r\nconst TARGETS = [\r\n\t[\r\n\t\t\"browserslist / browserslist:env / browserslist:query / browserslist:path-to-config / browserslist:path-to-config:env\",\r\n\t\t\"Resolve features from browserslist. Will resolve browserslist config automatically. Only browser or node queries are supported (electron is not supported). Examples: 'browserslist:modern' to use 'modern' environment from browserslist config\",\r\n\t\t/^browserslist(?::(.+))?$/,\r\n\t\t(rest, context) => {\r\n\t\t\tconst browserslistTargetHandler = getBrowserslistTargetHandler();\r\n\t\t\tconst browsers = browserslistTargetHandler.load(\r\n\t\t\t\trest ? rest.trim() : null,\r\n\t\t\t\tcontext\r\n\t\t\t);\r\n\t\t\tif (!browsers) {\r\n\t\t\t\tthrow new Error(`No browserslist config found to handle the 'browserslist' target.\r\nSee https://github.com/browserslist/browserslist#queries for possible ways to provide a config.\r\nThe recommended way is to add a 'browserslist' key to your package.json and list supported browsers (resp. node.js versions).\r\nYou can also more options via the 'target' option: 'browserslist' / 'browserslist:env' / 'browserslist:query' / 'browserslist:path-to-config' / 'browserslist:path-to-config:env'`);\r\n\t\t\t}\r\n\t\t\treturn browserslistTargetHandler.resolve(browsers);\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t\"web\",\r\n\t\t\"Web browser.\",\r\n\t\t/^web$/,\r\n\t\t() => {\r\n\t\t\treturn {\r\n\t\t\t\tweb: true,\r\n\t\t\t\tbrowser: true,\r\n\t\t\t\twebworker: null,\r\n\t\t\t\tnode: false,\r\n\t\t\t\telectron: false,\r\n\t\t\t\tnwjs: false,\r\n\r\n\t\t\t\tdocument: true,\r\n\t\t\t\timportScriptsInWorker: true,\r\n\t\t\t\tfetchWasm: true,\r\n\t\t\t\tnodeBuiltins: false,\r\n\t\t\t\timportScripts: false,\r\n\t\t\t\trequire: false,\r\n\t\t\t\tglobal: false\r\n\t\t\t};\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t\"webworker\",\r\n\t\t\"Web Worker, SharedWorker or Service Worker.\",\r\n\t\t/^webworker$/,\r\n\t\t() => {\r\n\t\t\treturn {\r\n\t\t\t\tweb: true,\r\n\t\t\t\tbrowser: true,\r\n\t\t\t\twebworker: true,\r\n\t\t\t\tnode: false,\r\n\t\t\t\telectron: false,\r\n\t\t\t\tnwjs: false,\r\n\r\n\t\t\t\timportScripts: true,\r\n\t\t\t\timportScriptsInWorker: true,\r\n\t\t\t\tfetchWasm: true,\r\n\t\t\t\tnodeBuiltins: false,\r\n\t\t\t\trequire: false,\r\n\t\t\t\tdocument: false,\r\n\t\t\t\tglobal: false\r\n\t\t\t};\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t\"[async-]node[X[.Y]]\",\r\n\t\t\"Node.js in version X.Y. The 'async-' prefix will load chunks asynchronously via 'fs' and 'vm' instead of 'require()'. Examples: node14.5, async-node10.\",\r\n\t\t/^(async-)?node(\\d+(?:\\.(\\d+))?)?$/,\r\n\t\t(asyncFlag, major, minor) => {\r\n\t\t\tconst v = versionDependent(major, minor);\r\n\t\t\t// see https://node.green/\r\n\t\t\treturn {\r\n\t\t\t\tnode: true,\r\n\t\t\t\telectron: false,\r\n\t\t\t\tnwjs: false,\r\n\t\t\t\tweb: false,\r\n\t\t\t\twebworker: false,\r\n\t\t\t\tbrowser: false,\r\n\r\n\t\t\t\trequire: !asyncFlag,\r\n\t\t\t\tnodeBuiltins: true,\r\n\t\t\t\tglobal: true,\r\n\t\t\t\tdocument: false,\r\n\t\t\t\tfetchWasm: false,\r\n\t\t\t\timportScripts: false,\r\n\t\t\t\timportScriptsInWorker: false,\r\n\r\n\t\t\t\tglobalThis: v(12),\r\n\t\t\t\tconst: v(6),\r\n\t\t\t\ttemplateLiteral: v(4),\r\n\t\t\t\toptionalChaining: v(14),\r\n\t\t\t\tarrowFunction: v(6),\r\n\t\t\t\tforOf: v(5),\r\n\t\t\t\tdestructuring: v(6),\r\n\t\t\t\tbigIntLiteral: v(10, 4),\r\n\t\t\t\tdynamicImport: v(12, 17),\r\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\r\n\t\t\t\tmodule: v(12, 17)\r\n\t\t\t};\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t\"electron[X[.Y]]-main/preload/renderer\",\r\n\t\t\"Electron in version X.Y. Script is running in main, preload resp. renderer context.\",\r\n\t\t/^electron(\\d+(?:\\.(\\d+))?)?-(main|preload|renderer)$/,\r\n\t\t(major, minor, context) => {\r\n\t\t\tconst v = versionDependent(major, minor);\r\n\t\t\t// see https://node.green/ + https://github.com/electron/releases\r\n\t\t\treturn {\r\n\t\t\t\tnode: true,\r\n\t\t\t\telectron: true,\r\n\t\t\t\tweb: context !== \"main\",\r\n\t\t\t\twebworker: false,\r\n\t\t\t\tbrowser: false,\r\n\t\t\t\tnwjs: false,\r\n\r\n\t\t\t\telectronMain: context === \"main\",\r\n\t\t\t\telectronPreload: context === \"preload\",\r\n\t\t\t\telectronRenderer: context === \"renderer\",\r\n\r\n\t\t\t\tglobal: true,\r\n\t\t\t\tnodeBuiltins: true,\r\n\t\t\t\trequire: true,\r\n\t\t\t\tdocument: context === \"renderer\",\r\n\t\t\t\tfetchWasm: context === \"renderer\",\r\n\t\t\t\timportScripts: false,\r\n\t\t\t\timportScriptsInWorker: true,\r\n\r\n\t\t\t\tglobalThis: v(5),\r\n\t\t\t\tconst: v(1, 1),\r\n\t\t\t\ttemplateLiteral: v(1, 1),\r\n\t\t\t\toptionalChaining: v(8),\r\n\t\t\t\tarrowFunction: v(1, 1),\r\n\t\t\t\tforOf: v(0, 36),\r\n\t\t\t\tdestructuring: v(1, 1),\r\n\t\t\t\tbigIntLiteral: v(4),\r\n\t\t\t\tdynamicImport: v(11),\r\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\r\n\t\t\t\tmodule: v(11)\r\n\t\t\t};\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t\"nwjs[X[.Y]] / node-webkit[X[.Y]]\",\r\n\t\t\"NW.js in version X.Y.\",\r\n\t\t/^(?:nwjs|node-webkit)(\\d+(?:\\.(\\d+))?)?$/,\r\n\t\t(major, minor) => {\r\n\t\t\tconst v = versionDependent(major, minor);\r\n\t\t\t// see https://node.green/ + https://github.com/nwjs/nw.js/blob/nw48/CHANGELOG.md\r\n\t\t\treturn {\r\n\t\t\t\tnode: true,\r\n\t\t\t\tweb: true,\r\n\t\t\t\tnwjs: true,\r\n\t\t\t\twebworker: null,\r\n\t\t\t\tbrowser: false,\r\n\t\t\t\telectron: false,\r\n\r\n\t\t\t\tglobal: true,\r\n\t\t\t\tnodeBuiltins: true,\r\n\t\t\t\tdocument: false,\r\n\t\t\t\timportScriptsInWorker: false,\r\n\t\t\t\tfetchWasm: false,\r\n\t\t\t\timportScripts: false,\r\n\t\t\t\trequire: false,\r\n\r\n\t\t\t\tglobalThis: v(0, 43),\r\n\t\t\t\tconst: v(0, 15),\r\n\t\t\t\ttemplateLiteral: v(0, 13),\r\n\t\t\t\toptionalChaining: v(0, 44),\r\n\t\t\t\tarrowFunction: v(0, 15),\r\n\t\t\t\tforOf: v(0, 13),\r\n\t\t\t\tdestructuring: v(0, 15),\r\n\t\t\t\tbigIntLiteral: v(0, 32),\r\n\t\t\t\tdynamicImport: v(0, 43),\r\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\r\n\t\t\t\tmodule: v(0, 43)\r\n\t\t\t};\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t\"esX\",\r\n\t\t\"EcmaScript in this version. Examples: es2020, es5.\",\r\n\t\t/^es(\\d+)$/,\r\n\t\tversion => {\r\n\t\t\tlet v = +version;\r\n\t\t\tif (v < 1000) v = v + 2009;\r\n\t\t\treturn {\r\n\t\t\t\tconst: v >= 2015,\r\n\t\t\t\ttemplateLiteral: v >= 2015,\r\n\t\t\t\toptionalChaining: v >= 2020,\r\n\t\t\t\tarrowFunction: v >= 2015,\r\n\t\t\t\tforOf: v >= 2015,\r\n\t\t\t\tdestructuring: v >= 2015,\r\n\t\t\t\tmodule: v >= 2015,\r\n\t\t\t\tglobalThis: v >= 2020,\r\n\t\t\t\tbigIntLiteral: v >= 2020,\r\n\t\t\t\tdynamicImport: v >= 2020,\r\n\t\t\t\tdynamicImportInWorker: v >= 2020\r\n\t\t\t};\r\n\t\t}\r\n\t]\r\n];\r\n\r\n/**\r\n * @param {string} target the target\r\n * @param {string} context the context directory\r\n * @returns {TargetProperties} target properties\r\n */\r\nconst getTargetProperties = (target, context) => {\r\n\tfor (const [, , regExp, handler] of TARGETS) {\r\n\t\tconst match = regExp.exec(target);\r\n\t\tif (match) {\r\n\t\t\tconst [, ...args] = match;\r\n\t\t\tconst result = handler(...args, context);\r\n\t\t\tif (result) return result;\r\n\t\t}\r\n\t}\r\n\tthrow new Error(\r\n\t\t`Unknown target '${target}'. The following targets are supported:\\n${TARGETS.map(\r\n\t\t\t([name, description]) => `* ${name}: ${description}`\r\n\t\t).join(\"\\n\")}`\r\n\t);\r\n};\r\n\r\nconst mergeTargetProperties = targetProperties => {\r\n\tconst keys = new Set();\r\n\tfor (const tp of targetProperties) {\r\n\t\tfor (const key of Object.keys(tp)) {\r\n\t\t\tkeys.add(key);\r\n\t\t}\r\n\t}\r\n\tconst result = {};\r\n\tfor (const key of keys) {\r\n\t\tlet hasTrue = false;\r\n\t\tlet hasFalse = false;\r\n\t\tfor (const tp of targetProperties) {\r\n\t\t\tconst value = tp[key];\r\n\t\t\tswitch (value) {\r\n\t\t\t\tcase true:\r\n\t\t\t\t\thasTrue = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase false:\r\n\t\t\t\t\thasFalse = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasTrue || hasFalse)\r\n\t\t\tresult[key] = hasFalse && hasTrue ? null : hasTrue ? true : false;\r\n\t}\r\n\treturn /** @type {TargetProperties} */ (result);\r\n};\r\n\r\n/**\r\n * @param {string[]} targets the targets\r\n * @param {string} context the context directory\r\n * @returns {TargetProperties} target properties\r\n */\r\nconst getTargetsProperties = (targets, context) => {\r\n\treturn mergeTargetProperties(\r\n\t\ttargets.map(t => getTargetProperties(t, context))\r\n\t);\r\n};\r\n\r\nexports.getDefaultTarget = getDefaultTarget;\r\nexports.getTargetProperties = getTargetProperties;\r\nexports.getTargetsProperties = getTargetsProperties;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}