{"ast":null,"code":"import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\nexport default [/* Roku */\n{\n  test: [/Roku\\/DVP/],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n    return {\n      name: OS_MAP.Roku,\n      version\n    };\n  }\n}, /* Windows Phone */\n{\n  test: [/windows phone/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n    return {\n      name: OS_MAP.WindowsPhone,\n      version\n    };\n  }\n}, /* Windows */\n{\n  test: [/windows /i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n    const versionName = Utils.getWindowsVersionName(version);\n    return {\n      name: OS_MAP.Windows,\n      version,\n      versionName\n    };\n  }\n}, /* Firefox on iPad */\n{\n  test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n  describe(ua) {\n    const result = {\n      name: OS_MAP.iOS\n    };\n    const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n    if (version) {\n      result.version = version;\n    }\n    return result;\n  }\n}, /* macOS */\n{\n  test: [/macintosh/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n    const versionName = Utils.getMacOSVersionName(version);\n    const os = {\n      name: OS_MAP.MacOS,\n      version\n    };\n    if (versionName) {\n      os.versionName = versionName;\n    }\n    return os;\n  }\n}, /* iOS */\n{\n  test: [/(ipod|iphone|ipad)/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n    return {\n      name: OS_MAP.iOS,\n      version\n    };\n  }\n}, /* Android */\n{\n  test(parser) {\n    const notLikeAndroid = !parser.test(/like android/i);\n    const butAndroid = parser.test(/android/i);\n    return notLikeAndroid && butAndroid;\n  },\n  describe(ua) {\n    const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n    const versionName = Utils.getAndroidVersionName(version);\n    const os = {\n      name: OS_MAP.Android,\n      version\n    };\n    if (versionName) {\n      os.versionName = versionName;\n    }\n    return os;\n  }\n}, /* WebOS */\n{\n  test: [/(web|hpw)[o0]s/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n    const os = {\n      name: OS_MAP.WebOS\n    };\n    if (version && version.length) {\n      os.version = version;\n    }\n    return os;\n  }\n}, /* BlackBerry */\n{\n  test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua) || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua) || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n    return {\n      name: OS_MAP.BlackBerry,\n      version\n    };\n  }\n}, /* Bada */\n{\n  test: [/bada/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n    return {\n      name: OS_MAP.Bada,\n      version\n    };\n  }\n}, /* Tizen */\n{\n  test: [/tizen/i],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n    return {\n      name: OS_MAP.Tizen,\n      version\n    };\n  }\n}, /* Linux */\n{\n  test: [/linux/i],\n  describe() {\n    return {\n      name: OS_MAP.Linux\n    };\n  }\n}, /* Chrome OS */\n{\n  test: [/CrOS/],\n  describe() {\n    return {\n      name: OS_MAP.ChromeOS\n    };\n  }\n}, /* Playstation 4 */\n{\n  test: [/PlayStation 4/],\n  describe(ua) {\n    const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n    return {\n      name: OS_MAP.PlayStation4,\n      version\n    };\n  }\n}];","map":{"version":3,"names":["Utils","OS_MAP","test","describe","ua","version","getFirstMatch","name","Roku","WindowsPhone","versionName","getWindowsVersionName","Windows","result","iOS","getSecondMatch","replace","getMacOSVersionName","os","MacOS","parser","notLikeAndroid","butAndroid","getAndroidVersionName","Android","WebOS","length","BlackBerry","Bada","Tizen","Linux","ChromeOS","PlayStation4"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/bowser/src/parser-os.js"],"sourcesContent":["import Utils from './utils.js';\r\nimport { OS_MAP } from './constants.js';\r\n\r\nexport default [\r\n  /* Roku */\r\n  {\r\n    test: [/Roku\\/DVP/],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\r\n      return {\r\n        name: OS_MAP.Roku,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Windows Phone */\r\n  {\r\n    test: [/windows phone/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\r\n      return {\r\n        name: OS_MAP.WindowsPhone,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Windows */\r\n  {\r\n    test: [/windows /i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\r\n      const versionName = Utils.getWindowsVersionName(version);\r\n\r\n      return {\r\n        name: OS_MAP.Windows,\r\n        version,\r\n        versionName,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Firefox on iPad */\r\n  {\r\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\r\n    describe(ua) {\r\n      const result = {\r\n        name: OS_MAP.iOS,\r\n      };\r\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\r\n      if (version) {\r\n        result.version = version;\r\n      }\r\n      return result;\r\n    },\r\n  },\r\n\r\n  /* macOS */\r\n  {\r\n    test: [/macintosh/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\r\n      const versionName = Utils.getMacOSVersionName(version);\r\n\r\n      const os = {\r\n        name: OS_MAP.MacOS,\r\n        version,\r\n      };\r\n      if (versionName) {\r\n        os.versionName = versionName;\r\n      }\r\n      return os;\r\n    },\r\n  },\r\n\r\n  /* iOS */\r\n  {\r\n    test: [/(ipod|iphone|ipad)/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\r\n\r\n      return {\r\n        name: OS_MAP.iOS,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Android */\r\n  {\r\n    test(parser) {\r\n      const notLikeAndroid = !parser.test(/like android/i);\r\n      const butAndroid = parser.test(/android/i);\r\n      return notLikeAndroid && butAndroid;\r\n    },\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\r\n      const versionName = Utils.getAndroidVersionName(version);\r\n      const os = {\r\n        name: OS_MAP.Android,\r\n        version,\r\n      };\r\n      if (versionName) {\r\n        os.versionName = versionName;\r\n      }\r\n      return os;\r\n    },\r\n  },\r\n\r\n  /* WebOS */\r\n  {\r\n    test: [/(web|hpw)[o0]s/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\r\n      const os = {\r\n        name: OS_MAP.WebOS,\r\n      };\r\n\r\n      if (version && version.length) {\r\n        os.version = version;\r\n      }\r\n      return os;\r\n    },\r\n  },\r\n\r\n  /* BlackBerry */\r\n  {\r\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\r\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\r\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\r\n\r\n      return {\r\n        name: OS_MAP.BlackBerry,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Bada */\r\n  {\r\n    test: [/bada/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\r\n\r\n      return {\r\n        name: OS_MAP.Bada,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Tizen */\r\n  {\r\n    test: [/tizen/i],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\r\n\r\n      return {\r\n        name: OS_MAP.Tizen,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Linux */\r\n  {\r\n    test: [/linux/i],\r\n    describe() {\r\n      return {\r\n        name: OS_MAP.Linux,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Chrome OS */\r\n  {\r\n    test: [/CrOS/],\r\n    describe() {\r\n      return {\r\n        name: OS_MAP.ChromeOS,\r\n      };\r\n    },\r\n  },\r\n\r\n  /* Playstation 4 */\r\n  {\r\n    test: [/PlayStation 4/],\r\n    describe(ua) {\r\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\r\n      return {\r\n        name: OS_MAP.PlayStation4,\r\n        version,\r\n      };\r\n    },\r\n  },\r\n];\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;AAC9B,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,eAAe,CACb;AACA;EACEC,IAAI,EAAE,CAAC,WAAW,CAAC;EACnBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,uBAAuB,EAAEF,EAAE,CAAC;IAChE,OAAO;MACLG,IAAI,EAAEN,MAAM,CAACO,IAAI;MACjBH;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACEH,IAAI,EAAE,CAAC,gBAAgB,CAAC;EACxBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,wCAAwC,EAAEF,EAAE,CAAC;IACjF,OAAO;MACLG,IAAI,EAAEN,MAAM,CAACQ,YAAY;MACzBJ;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACEH,IAAI,EAAE,CAAC,WAAW,CAAC;EACnBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,gCAAgC,EAAEF,EAAE,CAAC;IACzE,MAAMM,WAAW,GAAGV,KAAK,CAACW,qBAAqB,CAACN,OAAO,CAAC;IAExD,OAAO;MACLE,IAAI,EAAEN,MAAM,CAACW,OAAO;MACpBP,OAAO;MACPK;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACER,IAAI,EAAE,CAAC,6BAA6B,CAAC;EACrCC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMS,MAAM,GAAG;MACbN,IAAI,EAAEN,MAAM,CAACa;IACf,CAAC;IACD,MAAMT,OAAO,GAAGL,KAAK,CAACe,cAAc,CAAC,uBAAuB,EAAEX,EAAE,CAAC;IACjE,IAAIC,OAAO,EAAE;MACXQ,MAAM,CAACR,OAAO,GAAGA,OAAO;IAC1B;IACA,OAAOQ,MAAM;EACf;AACF,CAAC,EAED;AACA;EACEX,IAAI,EAAE,CAAC,YAAY,CAAC;EACpBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,4BAA4B,EAAEF,EAAE,CAAC,CAACY,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC5F,MAAMN,WAAW,GAAGV,KAAK,CAACiB,mBAAmB,CAACZ,OAAO,CAAC;IAEtD,MAAMa,EAAE,GAAG;MACTX,IAAI,EAAEN,MAAM,CAACkB,KAAK;MAClBd;IACF,CAAC;IACD,IAAIK,WAAW,EAAE;MACfQ,EAAE,CAACR,WAAW,GAAGA,WAAW;IAC9B;IACA,OAAOQ,EAAE;EACX;AACF,CAAC,EAED;AACA;EACEhB,IAAI,EAAE,CAAC,qBAAqB,CAAC;EAC7BC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,oCAAoC,EAAEF,EAAE,CAAC,CAACY,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;IAEpG,OAAO;MACLT,IAAI,EAAEN,MAAM,CAACa,GAAG;MAChBT;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACEH,IAAI,CAACkB,MAAM,EAAE;IACX,MAAMC,cAAc,GAAG,CAACD,MAAM,CAAClB,IAAI,CAAC,eAAe,CAAC;IACpD,MAAMoB,UAAU,GAAGF,MAAM,CAAClB,IAAI,CAAC,UAAU,CAAC;IAC1C,OAAOmB,cAAc,IAAIC,UAAU;EACrC,CAAC;EACDnB,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,6BAA6B,EAAEF,EAAE,CAAC;IACtE,MAAMM,WAAW,GAAGV,KAAK,CAACuB,qBAAqB,CAAClB,OAAO,CAAC;IACxD,MAAMa,EAAE,GAAG;MACTX,IAAI,EAAEN,MAAM,CAACuB,OAAO;MACpBnB;IACF,CAAC;IACD,IAAIK,WAAW,EAAE;MACfQ,EAAE,CAACR,WAAW,GAAGA,WAAW;IAC9B;IACA,OAAOQ,EAAE;EACX;AACF,CAAC,EAED;AACA;EACEhB,IAAI,EAAE,CAAC,iBAAiB,CAAC;EACzBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,kCAAkC,EAAEF,EAAE,CAAC;IAC3E,MAAMc,EAAE,GAAG;MACTX,IAAI,EAAEN,MAAM,CAACwB;IACf,CAAC;IAED,IAAIpB,OAAO,IAAIA,OAAO,CAACqB,MAAM,EAAE;MAC7BR,EAAE,CAACb,OAAO,GAAGA,OAAO;IACtB;IACA,OAAOa,EAAE;EACX;AACF,CAAC,EAED;AACA;EACEhB,IAAI,EAAE,CAAC,qBAAqB,EAAE,cAAc,CAAC;EAC7CC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,iCAAiC,EAAEF,EAAE,CAAC,IACrEJ,KAAK,CAACM,aAAa,CAAC,kCAAkC,EAAEF,EAAE,CAAC,IAC3DJ,KAAK,CAACM,aAAa,CAAC,YAAY,EAAEF,EAAE,CAAC;IAE1C,OAAO;MACLG,IAAI,EAAEN,MAAM,CAAC0B,UAAU;MACvBtB;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACEH,IAAI,EAAE,CAAC,OAAO,CAAC;EACfC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,sBAAsB,EAAEF,EAAE,CAAC;IAE/D,OAAO;MACLG,IAAI,EAAEN,MAAM,CAAC2B,IAAI;MACjBvB;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACEH,IAAI,EAAE,CAAC,QAAQ,CAAC;EAChBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,0BAA0B,EAAEF,EAAE,CAAC;IAEnE,OAAO;MACLG,IAAI,EAAEN,MAAM,CAAC4B,KAAK;MAClBxB;IACF,CAAC;EACH;AACF,CAAC,EAED;AACA;EACEH,IAAI,EAAE,CAAC,QAAQ,CAAC;EAChBC,QAAQ,GAAG;IACT,OAAO;MACLI,IAAI,EAAEN,MAAM,CAAC6B;IACf,CAAC;EACH;AACF,CAAC,EAED;AACA;EACE5B,IAAI,EAAE,CAAC,MAAM,CAAC;EACdC,QAAQ,GAAG;IACT,OAAO;MACLI,IAAI,EAAEN,MAAM,CAAC8B;IACf,CAAC;EACH;AACF,CAAC,EAED;AACA;EACE7B,IAAI,EAAE,CAAC,eAAe,CAAC;EACvBC,QAAQ,CAACC,EAAE,EAAE;IACX,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAAC,kCAAkC,EAAEF,EAAE,CAAC;IAC3E,OAAO;MACLG,IAAI,EAAEN,MAAM,CAAC+B,YAAY;MACzB3B;IACF,CAAC;EACH;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}