{"ast":null,"code":"/*!\r\n * Module requirements\r\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst getConstructorName = require('../helpers/getConstructorName');\nconst util = require('util');\nconst combinePathErrors = require('../helpers/error/combinePathErrors');\nclass ValidationError extends MongooseError {\n  /**\r\n   * Document Validation Error\r\n   *\r\n   * @api private\r\n   * @param {Document} [instance]\r\n   * @inherits MongooseError\r\n   */\n  constructor(instance) {\n    let _message;\n    if (getConstructorName(instance) === 'model') {\n      _message = instance.constructor.modelName + ' validation failed';\n    } else {\n      _message = 'Validation failed';\n    }\n    super(_message);\n    this.errors = {};\n    this._message = _message;\n    if (instance) {\n      instance.$errors = this.errors;\n    }\n  }\n\n  /**\r\n   * Console.log helper\r\n   */\n  toString() {\n    return this.name + ': ' + combinePathErrors(this);\n  }\n\n  /**\r\n   * inspect helper\r\n   * @api private\r\n   */\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  /**\r\n  * add message\r\n  * @param {String} path\r\n  * @param {String|Error} error\r\n  * @api private\r\n  */\n  addError(path, error) {\n    if (error instanceof ValidationError) {\n      const {\n        errors\n      } = error;\n      for (const errorPath of Object.keys(errors)) {\n        this.addError(`${path}.${errorPath}`, errors[errorPath]);\n      }\n      return;\n    }\n    this.errors[path] = error;\n    this.message = this._message + ': ' + combinePathErrors(this);\n  }\n}\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  ValidationError.prototype[util.inspect.custom] = ValidationError.prototype.inspect;\n}\n\n/**\r\n * Helper for JSON.stringify\r\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\r\n * @api private\r\n */\nObject.defineProperty(ValidationError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function () {\n    return Object.assign({}, this, {\n      name: this.name,\n      message: this.message\n    });\n  }\n});\nObject.defineProperty(ValidationError.prototype, 'name', {\n  value: 'ValidationError'\n});\n\n/*!\r\n * Module exports\r\n */\n\nmodule.exports = ValidationError;","map":{"version":3,"names":["MongooseError","require","getConstructorName","util","combinePathErrors","ValidationError","constructor","instance","_message","modelName","errors","$errors","toString","name","inspect","Object","assign","Error","message","addError","path","error","errorPath","keys","custom","prototype","defineProperty","enumerable","writable","configurable","value","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/error/validation.js"],"sourcesContent":["/*!\r\n * Module requirements\r\n */\r\n\r\n'use strict';\r\n\r\nconst MongooseError = require('./mongooseError');\r\nconst getConstructorName = require('../helpers/getConstructorName');\r\nconst util = require('util');\r\nconst combinePathErrors = require('../helpers/error/combinePathErrors');\r\n\r\nclass ValidationError extends MongooseError {\r\n  /**\r\n   * Document Validation Error\r\n   *\r\n   * @api private\r\n   * @param {Document} [instance]\r\n   * @inherits MongooseError\r\n   */\r\n  constructor(instance) {\r\n    let _message;\r\n    if (getConstructorName(instance) === 'model') {\r\n      _message = instance.constructor.modelName + ' validation failed';\r\n    } else {\r\n      _message = 'Validation failed';\r\n    }\r\n\r\n    super(_message);\r\n\r\n    this.errors = {};\r\n    this._message = _message;\r\n\r\n    if (instance) {\r\n      instance.$errors = this.errors;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Console.log helper\r\n   */\r\n  toString() {\r\n    return this.name + ': ' + combinePathErrors(this);\r\n  }\r\n\r\n  /**\r\n   * inspect helper\r\n   * @api private\r\n   */\r\n  inspect() {\r\n    return Object.assign(new Error(this.message), this);\r\n  }\r\n\r\n  /**\r\n  * add message\r\n  * @param {String} path\r\n  * @param {String|Error} error\r\n  * @api private\r\n  */\r\n  addError(path, error) {\r\n    if (error instanceof ValidationError) {\r\n      const { errors } = error;\r\n      for (const errorPath of Object.keys(errors)) {\r\n        this.addError(`${path}.${errorPath}`, errors[errorPath]);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.errors[path] = error;\r\n    this.message = this._message + ': ' + combinePathErrors(this);\r\n  }\r\n}\r\n\r\n\r\nif (util.inspect.custom) {\r\n  // Avoid Node deprecation warning DEP0079\r\n  ValidationError.prototype[util.inspect.custom] = ValidationError.prototype.inspect;\r\n}\r\n\r\n/**\r\n * Helper for JSON.stringify\r\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\r\n * @api private\r\n */\r\nObject.defineProperty(ValidationError.prototype, 'toJSON', {\r\n  enumerable: false,\r\n  writable: false,\r\n  configurable: true,\r\n  value: function() {\r\n    return Object.assign({}, this, { name: this.name, message: this.message });\r\n  }\r\n});\r\n\r\n\r\nObject.defineProperty(ValidationError.prototype, 'name', {\r\n  value: 'ValidationError'\r\n});\r\n\r\n/*!\r\n * Module exports\r\n */\r\n\r\nmodule.exports = ValidationError;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AACnE,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,oCAAoC,CAAC;AAEvE,MAAMI,eAAe,SAASL,aAAa,CAAC;EAC1C;AACF;AACA;AACA;AACA;AACA;AACA;EACEM,WAAW,CAACC,QAAQ,EAAE;IACpB,IAAIC,QAAQ;IACZ,IAAIN,kBAAkB,CAACK,QAAQ,CAAC,KAAK,OAAO,EAAE;MAC5CC,QAAQ,GAAGD,QAAQ,CAACD,WAAW,CAACG,SAAS,GAAG,oBAAoB;IAClE,CAAC,MAAM;MACLD,QAAQ,GAAG,mBAAmB;IAChC;IAEA,KAAK,CAACA,QAAQ,CAAC;IAEf,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IAExB,IAAID,QAAQ,EAAE;MACZA,QAAQ,CAACI,OAAO,GAAG,IAAI,CAACD,MAAM;IAChC;EACF;;EAEA;AACF;AACA;EACEE,QAAQ,GAAG;IACT,OAAO,IAAI,CAACC,IAAI,GAAG,IAAI,GAAGT,iBAAiB,CAAC,IAAI,CAAC;EACnD;;EAEA;AACF;AACA;AACA;EACEU,OAAO,GAAG;IACR,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,IAAI,CAACC,OAAO,CAAC,EAAE,IAAI,CAAC;EACrD;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQ,CAACC,IAAI,EAAEC,KAAK,EAAE;IACpB,IAAIA,KAAK,YAAYhB,eAAe,EAAE;MACpC,MAAM;QAAEK;MAAO,CAAC,GAAGW,KAAK;MACxB,KAAK,MAAMC,SAAS,IAAIP,MAAM,CAACQ,IAAI,CAACb,MAAM,CAAC,EAAE;QAC3C,IAAI,CAACS,QAAQ,CAAE,GAAEC,IAAK,IAAGE,SAAU,EAAC,EAAEZ,MAAM,CAACY,SAAS,CAAC,CAAC;MAC1D;MAEA;IACF;IAEA,IAAI,CAACZ,MAAM,CAACU,IAAI,CAAC,GAAGC,KAAK;IACzB,IAAI,CAACH,OAAO,GAAG,IAAI,CAACV,QAAQ,GAAG,IAAI,GAAGJ,iBAAiB,CAAC,IAAI,CAAC;EAC/D;AACF;AAGA,IAAID,IAAI,CAACW,OAAO,CAACU,MAAM,EAAE;EACvB;EACAnB,eAAe,CAACoB,SAAS,CAACtB,IAAI,CAACW,OAAO,CAACU,MAAM,CAAC,GAAGnB,eAAe,CAACoB,SAAS,CAACX,OAAO;AACpF;;AAEA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACW,cAAc,CAACrB,eAAe,CAACoB,SAAS,EAAE,QAAQ,EAAE;EACzDE,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,YAAW;IAChB,OAAOf,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;MAAEH,IAAI,EAAE,IAAI,CAACA,IAAI;MAAEK,OAAO,EAAE,IAAI,CAACA;IAAQ,CAAC,CAAC;EAC5E;AACF,CAAC,CAAC;AAGFH,MAAM,CAACW,cAAc,CAACrB,eAAe,CAACoB,SAAS,EAAE,MAAM,EAAE;EACvDK,KAAK,EAAE;AACT,CAAC,CAAC;;AAEF;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG3B,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}