{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Ivan Kopeykin @vankop\r\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst CssLocalIdentifierDependency = require(\"./CssLocalIdentifierDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CssSelfLocalIdentifierDependency extends CssLocalIdentifierDependency {\n  /**\r\n   * @param {string} name name\r\n   * @param {[number, number]} range range\r\n   * @param {string=} prefix prefix\r\n   * @param {Set<string>=} declaredSet set of declared names (will only be active when in declared set)\r\n   */\n  constructor(name, range) {\n    let prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    let declaredSet = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    super(name, range, prefix);\n    this.declaredSet = declaredSet;\n  }\n  get type() {\n    return \"css self local identifier\";\n  }\n  get category() {\n    return \"self\";\n  }\n\n  /**\r\n   * @returns {string | null} an identifier to merge equal requests\r\n   */\n  getResourceIdentifier() {\n    return `self`;\n  }\n  /**\r\n   * Returns the exported names\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {ExportsSpec | undefined} export names\r\n   */\n  getExports(moduleGraph) {\n    if (this.declaredSet && !this.declaredSet.has(this.name)) return;\n    return super.getExports(moduleGraph);\n  }\n\n  /**\r\n   * Returns list of exports referenced by this dependency\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    if (this.declaredSet && !this.declaredSet.has(this.name)) return Dependency.NO_EXPORTS_REFERENCED;\n    return [[this.name]];\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.declaredSet);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.declaredSet = read();\n    super.deserialize(context);\n  }\n}\nCssSelfLocalIdentifierDependency.Template = class CssSelfLocalIdentifierDependencyTemplate extends CssLocalIdentifierDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, templateContext) {\n    const dep = /** @type {CssSelfLocalIdentifierDependency} */dependency;\n    if (dep.declaredSet && !dep.declaredSet.has(dep.name)) return;\n    super.apply(dependency, source, templateContext);\n  }\n};\nmakeSerializable(CssSelfLocalIdentifierDependency, \"webpack/lib/dependencies/CssSelfLocalIdentifierDependency\");\nmodule.exports = CssSelfLocalIdentifierDependency;","map":{"version":3,"names":["Dependency","require","makeSerializable","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","constructor","name","range","prefix","declaredSet","undefined","type","category","getResourceIdentifier","getExports","moduleGraph","has","getReferencedExports","runtime","NO_EXPORTS_REFERENCED","serialize","context","write","deserialize","read","Template","CssSelfLocalIdentifierDependencyTemplate","apply","dependency","source","templateContext","dep","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/CssSelfLocalIdentifierDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Ivan Kopeykin @vankop\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Dependency = require(\"../Dependency\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst CssLocalIdentifierDependency = require(\"./CssLocalIdentifierDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\nclass CssSelfLocalIdentifierDependency extends CssLocalIdentifierDependency {\r\n\t/**\r\n\t * @param {string} name name\r\n\t * @param {[number, number]} range range\r\n\t * @param {string=} prefix prefix\r\n\t * @param {Set<string>=} declaredSet set of declared names (will only be active when in declared set)\r\n\t */\r\n\tconstructor(name, range, prefix = \"\", declaredSet = undefined) {\r\n\t\tsuper(name, range, prefix);\r\n\t\tthis.declaredSet = declaredSet;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"css self local identifier\";\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"self\";\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string | null} an identifier to merge equal requests\r\n\t */\r\n\tgetResourceIdentifier() {\r\n\t\treturn `self`;\r\n\t}\r\n\t/**\r\n\t * Returns the exported names\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {ExportsSpec | undefined} export names\r\n\t */\r\n\tgetExports(moduleGraph) {\r\n\t\tif (this.declaredSet && !this.declaredSet.has(this.name)) return;\r\n\t\treturn super.getExports(moduleGraph);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of exports referenced by this dependency\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n\t */\r\n\tgetReferencedExports(moduleGraph, runtime) {\r\n\t\tif (this.declaredSet && !this.declaredSet.has(this.name))\r\n\t\t\treturn Dependency.NO_EXPORTS_REFERENCED;\r\n\t\treturn [[this.name]];\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.declaredSet);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.declaredSet = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nCssSelfLocalIdentifierDependency.Template = class CssSelfLocalIdentifierDependencyTemplate extends (\r\n\tCssLocalIdentifierDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(dependency, source, templateContext) {\r\n\t\tconst dep = /** @type {CssSelfLocalIdentifierDependency} */ (dependency);\r\n\t\tif (dep.declaredSet && !dep.declaredSet.has(dep.name)) return;\r\n\t\tsuper.apply(dependency, source, templateContext);\r\n\t}\r\n};\r\n\r\nmakeSerializable(\r\n\tCssSelfLocalIdentifierDependency,\r\n\t\"webpack/lib/dependencies/CssSelfLocalIdentifierDependency\"\r\n);\r\n\r\nmodule.exports = CssSelfLocalIdentifierDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAME,4BAA4B,GAAGF,OAAO,CAAC,gCAAgC,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,gCAAgC,SAASD,4BAA4B,CAAC;EAC3E;AACD;AACA;AACA;AACA;AACA;EACCE,WAAW,CAACC,IAAI,EAAEC,KAAK,EAAwC;IAAA,IAAtCC,MAAM,uEAAG,EAAE;IAAA,IAAEC,WAAW,uEAAGC,SAAS;IAC5D,KAAK,CAACJ,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAC;IAC1B,IAAI,CAACC,WAAW,GAAGA,WAAW;EAC/B;EAEA,IAAIE,IAAI,GAAG;IACV,OAAO,2BAA2B;EACnC;EAEA,IAAIC,QAAQ,GAAG;IACd,OAAO,MAAM;EACd;;EAEA;AACD;AACA;EACCC,qBAAqB,GAAG;IACvB,OAAQ,MAAK;EACd;EACA;AACD;AACA;AACA;AACA;EACCC,UAAU,CAACC,WAAW,EAAE;IACvB,IAAI,IAAI,CAACN,WAAW,IAAI,CAAC,IAAI,CAACA,WAAW,CAACO,GAAG,CAAC,IAAI,CAACV,IAAI,CAAC,EAAE;IAC1D,OAAO,KAAK,CAACQ,UAAU,CAACC,WAAW,CAAC;EACrC;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCE,oBAAoB,CAACF,WAAW,EAAEG,OAAO,EAAE;IAC1C,IAAI,IAAI,CAACT,WAAW,IAAI,CAAC,IAAI,CAACA,WAAW,CAACO,GAAG,CAAC,IAAI,CAACV,IAAI,CAAC,EACvD,OAAON,UAAU,CAACmB,qBAAqB;IACxC,OAAO,CAAC,CAAC,IAAI,CAACb,IAAI,CAAC,CAAC;EACrB;EAEAc,SAAS,CAACC,OAAO,EAAE;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGD,OAAO;IACzBC,KAAK,CAAC,IAAI,CAACb,WAAW,CAAC;IACvB,KAAK,CAACW,SAAS,CAACC,OAAO,CAAC;EACzB;EAEAE,WAAW,CAACF,OAAO,EAAE;IACpB,MAAM;MAAEG;IAAK,CAAC,GAAGH,OAAO;IACxB,IAAI,CAACZ,WAAW,GAAGe,IAAI,EAAE;IACzB,KAAK,CAACD,WAAW,CAACF,OAAO,CAAC;EAC3B;AACD;AAEAjB,gCAAgC,CAACqB,QAAQ,GAAG,MAAMC,wCAAwC,SACzFvB,4BAA4B,CAACsB,QAAQ,CACpC;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAK,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;IAC1C,MAAMC,GAAG,GAAG,+CAAiDH,UAAW;IACxE,IAAIG,GAAG,CAACtB,WAAW,IAAI,CAACsB,GAAG,CAACtB,WAAW,CAACO,GAAG,CAACe,GAAG,CAACzB,IAAI,CAAC,EAAE;IACvD,KAAK,CAACqB,KAAK,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,CAAC;EACjD;AACD,CAAC;AAED5B,gBAAgB,CACfE,gCAAgC,EAChC,2DAA2D,CAC3D;AAED4B,MAAM,CAACC,OAAO,GAAG7B,gCAAgC"},"metadata":{},"sourceType":"script","externalDependencies":[]}