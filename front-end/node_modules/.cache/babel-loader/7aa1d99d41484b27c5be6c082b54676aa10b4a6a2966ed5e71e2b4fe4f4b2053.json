{"ast":null,"code":"const {\n  application\n} = require('express');\nconst express = require('express');\nconst router = express.Router();\nconst Pharmacist = require('../models/pharmacist');\nconst upload = require('../middleware/upload');\nconst prescriptionUpload = require('../middleware/prescriptionUpload');\nconst Order = require('../models/order');\nrouter.use(express.json());\nrouter.get('/list', async function (req, res) {\n  try {\n    console.log(\"Get request\");\n    const pharmacist = await Pharmacist.find();\n    res.json(pharmacist);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/signup\", upload.single('license'), async function (req, res) {\n  console.log(\"post api\");\n  console.log(req.body.pharmacyName);\n  //console.log(\"req.body.license\"+req.file.filename)\n  //const url = req.protocol + '://' + req.get('host')\n  let pharmacist = new Pharmacist({\n    pharmacyName: req.body.pharmacyName,\n    address: req.body.address,\n    pharmacyOwnerName: req.body.pharmacyOwnerName,\n    aadharNo: req.body.aadharNo,\n    panNo: req.body.panNo,\n    email: req.body.email,\n    contact: req.body.contact,\n    GSTNo: req.body.GSTNo,\n    licenseNo: req.body.licenseNo,\n    license: req.file.filename,\n    //originalname\n    //license: url + '/uploads/' + req.file.filename,\n    password: req.body.password,\n    status: req.body.status\n  });\n  var licenseData = Pharmacist.license.find();\n  var success = req.file.filename + \"uploaded successfully\";\n  if (req.file) {\n    pharmacist.license = req.file.path;\n    console.log(\"file chosen\");\n  }\n  try {\n    let result = await pharmacist.save();\n    licenseData.exec(function (err, data) {\n      if (err) throw err;\n      res.send('upload-file', {\n        title: 'Upload-file',\n        records: data,\n        success: success\n      });\n    });\n    res.send(result);\n    console.log(\"result:\" + result);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n  console.log(\"details received\" + pharmacist);\n  console.log(\"req.body.license\" + req.file.originalname);\n  // try{\n  //     const a1 = await pharmacist.save()\n  //     //res.json(a1)\n  // }catch(err){\n  //     res.send(\"Error: \"+err) \n  // }\n});\n\nrouter.post(\"/login\", function (req, res) {\n  Pharmacist.findOne({\n    email: req.body.email\n  }, function (err, pharmacyUser) {\n    console.log(\"api reached\");\n    if (pharmacyUser) {\n      console.log(\"First function call : \", pharmacyUser);\n      res.json(pharmacyUser);\n      const userPassword = req.body.password;\n      if (pharmacyUser.password == userPassword) {\n        console.log(\"user verified\");\n      } else {\n        console.log(\"wrong credentials\");\n      }\n    } else {\n      console.log(\"Error : \", err);\n    }\n  }).clone().catch(function (err) {\n    console.log(err);\n  });\n});\nrouter.get('/approvedList', async function (req, res) {\n  try {\n    console.log(\"Get request\");\n    const pharmacy = await Pharmacist.find({\n      status: \"approved\"\n    });\n    res.json(pharmacy);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/approvePharmacy\", async function (req, res) {\n  try {\n    const pharmacy = await Pharmacist.findOneAndUpdate({\n      _id: req.body._id\n    }, {\n      status: \"approved\"\n    }, {\n      new: true\n    });\n    res.send(pharmacy);\n  } catch (error) {\n    res.send(\"Error\");\n  }\n});\nrouter.get('/rejectedList', async function (req, res) {\n  try {\n    console.log(\"Get request\");\n    const pharmacy = await Pharmacist.find({\n      status: \"rejected\"\n    });\n    res.json(pharmacy);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/rejectPharmacy\", async function (req, res) {\n  try {\n    const pharmacy = await Pharmacist.findOneAndUpdate({\n      _id: req.body._id\n    }, {\n      status: \"rejected\"\n    }, {\n      new: true\n    });\n    res.send(pharmacy);\n  } catch (error) {\n    res.send(\"Error\");\n  }\n});\nrouter.get('/orderList', async function (req, res) {\n  try {\n    console.log(\"Get request\");\n    const order = await Order.find();\n    res.json(order);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post('/order', prescriptionUpload.single('prescription'), async function (req, res) {\n  const order = new Order({\n    customerName: req.body.customerName,\n    status: req.body.status,\n    pharmacyName: req.body.pharmacyName,\n    products: req.body.products,\n    prescription: req.file.filename\n  });\n  if (req.file) {\n    order.prescription = req.file.path;\n    console.log(\"file chosen\");\n  }\n  try {\n    let result = await order.save();\n    res.send(result);\n    console.log(\"result:\" + result);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/approveOrder\", async function (req, res) {\n  try {\n    const orders = await Order.findOneAndUpdate({\n      _id: req.body._id\n    }, {\n      status: \"approved\"\n    }, {\n      new: true\n    });\n    res.send(orders);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/dispatchOrder\", async function (req, res) {\n  try {\n    const orders = await Order.findOneAndUpdate({\n      _id: req.body._id\n    }, {\n      status: \"dispatched\"\n    }, {\n      new: true\n    });\n    res.send(orders);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/deliverOrder\", async function (req, res) {\n  try {\n    const orders = await Order.findOneAndUpdate({\n      _id: req.body._id\n    }, {\n      status: \"delivered\"\n    }, {\n      new: true\n    });\n    res.send(orders);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nrouter.post(\"/rejectOrder\", async function (req, res) {\n  try {\n    const orders = await Order.findOneAndUpdate({\n      _id: req.body._id\n    }, {\n      status: \"rejected\"\n    }, {\n      new: true\n    });\n    res.send(orders);\n  } catch (err) {\n    res.send(\"Error: \" + err);\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["application","require","express","router","Router","Pharmacist","upload","prescriptionUpload","Order","use","json","get","req","res","console","log","pharmacist","find","err","send","post","single","body","pharmacyName","address","pharmacyOwnerName","aadharNo","panNo","email","contact","GSTNo","licenseNo","license","file","filename","password","status","licenseData","success","path","result","save","exec","data","title","records","originalname","findOne","pharmacyUser","userPassword","clone","catch","pharmacy","findOneAndUpdate","_id","new","error","order","customerName","products","prescription","orders","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/routes/pharmacist.js"],"sourcesContent":["const { application } = require('express')\r\nconst express = require('express')\r\nconst router = express.Router()\r\nconst Pharmacist = require('../models/pharmacist')\r\nconst upload = require('../middleware/upload')\r\nconst prescriptionUpload= require('../middleware/prescriptionUpload')\r\nconst Order=require('../models/order')\r\n\r\n\r\n\r\n\r\nrouter.use(express.json())\r\nrouter.get('/list', async function(req, res){\r\n    try{\r\n        console.log(\"Get request\")\r\n        const pharmacist = await Pharmacist.find()\r\n        res.json(pharmacist)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\nrouter.post(\"/signup\",upload.single('license') ,async function(req,res){\r\n    console.log(\"post api\")\r\n    console.log(req.body.pharmacyName)\r\n    //console.log(\"req.body.license\"+req.file.filename)\r\n    //const url = req.protocol + '://' + req.get('host')\r\n    let pharmacist = new Pharmacist({\r\n        pharmacyName: req.body.pharmacyName,\r\n        address:req.body.address,\r\n        pharmacyOwnerName:req.body.pharmacyOwnerName,\r\n        aadharNo:req.body.aadharNo,\r\n        panNo:req.body.panNo,\r\n        email:req.body.email,\r\n        contact:req.body.contact,\r\n        GSTNo:req.body.GSTNo,\r\n        licenseNo:req.body.licenseNo,\r\n        license:req.file.filename, //originalname\r\n        //license: url + '/uploads/' + req.file.filename,\r\n        password: req.body.password,\r\n        status:req.body.status\r\n        \r\n\r\n       \r\n    })\r\n    var licenseData=Pharmacist.license.find()\r\n    var success = req.file.filename+\"uploaded successfully\";\r\n    \r\n    if(req.file){\r\n        pharmacist.license=req.file.path\r\n        console.log(\"file chosen\")\r\n    }\r\n    try{\r\n        let result = await pharmacist.save();\r\n        licenseData.exec(function(err,data){\r\n            if(err) throw err;\r\n            res.send('upload-file',{title:'Upload-file',records:data, success:success})\r\n\r\n        })\r\n        res.send(result)\r\n        console.log(\"result:\"+result)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err) \r\n    }\r\n    console.log(\"details received\" + pharmacist)\r\n    console.log(\"req.body.license\"+req.file.originalname)\r\n    // try{\r\n    //     const a1 = await pharmacist.save()\r\n    //     //res.json(a1)\r\n    // }catch(err){\r\n    //     res.send(\"Error: \"+err) \r\n    // }\r\n    \r\n})\r\n\r\nrouter.post(\"/login\",  function(req,res){\r\n   \r\n  \r\n    Pharmacist.findOne({email:req.body.email},function(err,pharmacyUser){\r\n         console.log(\"api reached\")\r\n         if (pharmacyUser){\r\n            \r\n             console.log(\"First function call : \", pharmacyUser);\r\n             res.json(pharmacyUser)\r\n             const userPassword=req.body.password\r\n             if(pharmacyUser.password==userPassword){\r\n                console.log(\"user verified\")\r\n             }else{\r\n                console.log(\"wrong credentials\")\r\n             }\r\n         }\r\n         else{\r\n            console.log(\"Error : \",err);\r\n            \r\n         }\r\n     }).clone().catch(function(err){ console.log(err)})\r\n });\r\n\r\n\r\n \r\n router.get('/approvedList', async function(req, res){\r\n    try{\r\n        console.log(\"Get request\")\r\n        const pharmacy = await Pharmacist.find({status:\"approved\"})\r\n        res.json(pharmacy)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\nrouter.post(\"/approvePharmacy\", async function(req,res){\r\n    \r\n    try{\r\n        const pharmacy=await Pharmacist.findOneAndUpdate({_id:req.body._id},{status:\"approved\"},{new:true})\r\n        res.send(pharmacy)\r\n    }catch(error){\r\n        res.send(\"Error\")\r\n    }\r\n\r\n   \r\n      \r\n})\r\n\r\nrouter.get('/rejectedList', async function(req, res){\r\n    try{\r\n        console.log(\"Get request\")\r\n        const pharmacy = await Pharmacist.find({status:\"rejected\"})\r\n        res.json(pharmacy)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\nrouter.post(\"/rejectPharmacy\", async function(req,res){\r\n    \r\n    try{\r\n        const pharmacy=await Pharmacist.findOneAndUpdate({_id:req.body._id},{status:\"rejected\"},{new:true})\r\n        res.send(pharmacy)\r\n    }catch(error){\r\n        res.send(\"Error\")\r\n    }\r\n\r\n   \r\n      \r\n})\r\n\r\nrouter.get('/orderList', async function(req, res){\r\n    try{\r\n        console.log(\"Get request\")\r\n        const order = await Order.find()\r\n        res.json(order)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\nrouter.post('/order',prescriptionUpload.single('prescription'), async function(req, res){\r\n    const order = new Order({\r\n        customerName:req.body.customerName,\r\n        status:req.body.status,\r\n        pharmacyName:req.body.pharmacyName,\r\n        products:req.body.products,\r\n        prescription: req.file.filename\r\n\r\n        \r\n    })\r\n\r\n    if(req.file){\r\n        order.prescription=req.file.path\r\n        console.log(\"file chosen\")\r\n    }\r\n    try{\r\n        let result = await order.save();\r\n        res.send(result)\r\n        console.log(\"result:\"+result)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err) \r\n    }\r\n    \r\n})\r\nrouter.post(\"/approveOrder\", async function(req, res){\r\n    try{\r\n        const orders = await Order.findOneAndUpdate({_id: req.body._id},{status:\"approved\"},{new: true})\r\n        res.send(orders)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\n\r\nrouter.post(\"/dispatchOrder\", async function(req,res){\r\n    try{\r\n        const orders = await Order.findOneAndUpdate({_id: req.body._id}, {status:\"dispatched\"},{new:true})\r\n        res.send(orders)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\nrouter.post(\"/deliverOrder\", async function(req,res){\r\n    try{\r\n        const orders = await Order.findOneAndUpdate({_id:req.body._id},{status:\"delivered\"},{new:true})\r\n        res.send(orders)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\nrouter.post(\"/rejectOrder\", async function(req, res){\r\n    try{\r\n        const orders = await Order.findOneAndUpdate({_id: req.body._id},{status:\"rejected\"},{new:true})\r\n        res.send(orders)\r\n    }catch(err){\r\n        res.send(\"Error: \"+err)\r\n    }\r\n})\r\n\r\n\r\nmodule.exports = router;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}