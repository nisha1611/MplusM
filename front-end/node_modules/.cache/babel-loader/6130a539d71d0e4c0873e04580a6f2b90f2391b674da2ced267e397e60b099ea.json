{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveRegionConfig = void 0;\nconst getRealRegion_1 = require(\"./getRealRegion\");\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst resolveRegionConfig = input => {\n  const {\n    region,\n    useFipsEndpoint\n  } = input;\n  if (!region) {\n    throw new Error(\"Region is missing\");\n  }\n  return {\n    ...input,\n    region: async () => {\n      if (typeof region === \"string\") {\n        return (0, getRealRegion_1.getRealRegion)(region);\n      }\n      const providedRegion = await region();\n      return (0, getRealRegion_1.getRealRegion)(providedRegion);\n    },\n    useFipsEndpoint: async () => {\n      const providedRegion = typeof region === \"string\" ? region : await region();\n      if ((0, isFipsRegion_1.isFipsRegion)(providedRegion)) {\n        return true;\n      }\n      return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n    }\n  };\n};\nexports.resolveRegionConfig = resolveRegionConfig;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveRegionConfig","getRealRegion_1","require","isFipsRegion_1","input","region","useFipsEndpoint","Error","getRealRegion","providedRegion","isFipsRegion","Promise","resolve"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/resolveRegionConfig.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveRegionConfig = void 0;\r\nconst getRealRegion_1 = require(\"./getRealRegion\");\r\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\r\nconst resolveRegionConfig = (input) => {\r\n    const { region, useFipsEndpoint } = input;\r\n    if (!region) {\r\n        throw new Error(\"Region is missing\");\r\n    }\r\n    return {\r\n        ...input,\r\n        region: async () => {\r\n            if (typeof region === \"string\") {\r\n                return (0, getRealRegion_1.getRealRegion)(region);\r\n            }\r\n            const providedRegion = await region();\r\n            return (0, getRealRegion_1.getRealRegion)(providedRegion);\r\n        },\r\n        useFipsEndpoint: async () => {\r\n            const providedRegion = typeof region === \"string\" ? region : await region();\r\n            if ((0, isFipsRegion_1.isFipsRegion)(providedRegion)) {\r\n                return true;\r\n            }\r\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\r\n        },\r\n    };\r\n};\r\nexports.resolveRegionConfig = resolveRegionConfig;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,eAAe,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAMC,cAAc,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAChD,MAAMF,mBAAmB,GAAII,KAAK,IAAK;EACnC,MAAM;IAAEC,MAAM;IAAEC;EAAgB,CAAC,GAAGF,KAAK;EACzC,IAAI,CAACC,MAAM,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,mBAAmB,CAAC;EACxC;EACA,OAAO;IACH,GAAGH,KAAK;IACRC,MAAM,EAAE,YAAY;MAChB,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC5B,OAAO,CAAC,CAAC,EAAEJ,eAAe,CAACO,aAAa,EAAEH,MAAM,CAAC;MACrD;MACA,MAAMI,cAAc,GAAG,MAAMJ,MAAM,EAAE;MACrC,OAAO,CAAC,CAAC,EAAEJ,eAAe,CAACO,aAAa,EAAEC,cAAc,CAAC;IAC7D,CAAC;IACDH,eAAe,EAAE,YAAY;MACzB,MAAMG,cAAc,GAAG,OAAOJ,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG,MAAMA,MAAM,EAAE;MAC3E,IAAI,CAAC,CAAC,EAAEF,cAAc,CAACO,YAAY,EAAED,cAAc,CAAC,EAAE;QAClD,OAAO,IAAI;MACf;MACA,OAAO,OAAOH,eAAe,KAAK,UAAU,GAAGK,OAAO,CAACC,OAAO,CAAC,CAAC,CAACN,eAAe,CAAC,GAAGA,eAAe,EAAE;IACzG;EACJ,CAAC;AACL,CAAC;AACDR,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}