{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  join,\n  dirname\n} = require(\"./util/fs\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {function(TODO): void} ModuleReplacer */\n\nclass NormalModuleReplacementPlugin {\n  /**\r\n   * Create an instance of the plugin\r\n   * @param {RegExp} resourceRegExp the resource matcher\r\n   * @param {string|ModuleReplacer} newResource the resource replacement\r\n   */\n  constructor(resourceRegExp, newResource) {\n    this.resourceRegExp = resourceRegExp;\n    this.newResource = newResource;\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    const resourceRegExp = this.resourceRegExp;\n    const newResource = this.newResource;\n    compiler.hooks.normalModuleFactory.tap(\"NormalModuleReplacementPlugin\", nmf => {\n      nmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n        if (resourceRegExp.test(result.request)) {\n          if (typeof newResource === \"function\") {\n            newResource(result);\n          } else {\n            result.request = newResource;\n          }\n        }\n      });\n      nmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n        const createData = result.createData;\n        if (resourceRegExp.test(createData.resource)) {\n          if (typeof newResource === \"function\") {\n            newResource(result);\n          } else {\n            const fs = compiler.inputFileSystem;\n            if (newResource.startsWith(\"/\") || newResource.length > 1 && newResource[1] === \":\") {\n              createData.resource = newResource;\n            } else {\n              createData.resource = join(fs, dirname(fs, createData.resource), newResource);\n            }\n          }\n        }\n      });\n    });\n  }\n}\nmodule.exports = NormalModuleReplacementPlugin;","map":{"version":3,"names":["join","dirname","require","NormalModuleReplacementPlugin","constructor","resourceRegExp","newResource","apply","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","result","test","request","afterResolve","createData","resource","fs","inputFileSystem","startsWith","length","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/NormalModuleReplacementPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { join, dirname } = require(\"./util/fs\");\r\n\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n/** @typedef {function(TODO): void} ModuleReplacer */\r\n\r\nclass NormalModuleReplacementPlugin {\r\n\t/**\r\n\t * Create an instance of the plugin\r\n\t * @param {RegExp} resourceRegExp the resource matcher\r\n\t * @param {string|ModuleReplacer} newResource the resource replacement\r\n\t */\r\n\tconstructor(resourceRegExp, newResource) {\r\n\t\tthis.resourceRegExp = resourceRegExp;\r\n\t\tthis.newResource = newResource;\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tconst resourceRegExp = this.resourceRegExp;\r\n\t\tconst newResource = this.newResource;\r\n\t\tcompiler.hooks.normalModuleFactory.tap(\r\n\t\t\t\"NormalModuleReplacementPlugin\",\r\n\t\t\tnmf => {\r\n\t\t\t\tnmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\r\n\t\t\t\t\tif (resourceRegExp.test(result.request)) {\r\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\r\n\t\t\t\t\t\t\tnewResource(result);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult.request = newResource;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tnmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\r\n\t\t\t\t\tconst createData = result.createData;\r\n\t\t\t\t\tif (resourceRegExp.test(createData.resource)) {\r\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\r\n\t\t\t\t\t\t\tnewResource(result);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst fs = compiler.inputFileSystem;\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tnewResource.startsWith(\"/\") ||\r\n\t\t\t\t\t\t\t\t(newResource.length > 1 && newResource[1] === \":\")\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tcreateData.resource = newResource;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcreateData.resource = join(\r\n\t\t\t\t\t\t\t\t\tfs,\r\n\t\t\t\t\t\t\t\t\tdirname(fs, createData.resource),\r\n\t\t\t\t\t\t\t\t\tnewResource\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nmodule.exports = NormalModuleReplacementPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA,IAAI;EAAEC;AAAQ,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAE9C;AACA;;AAEA,MAAMC,6BAA6B,CAAC;EACnC;AACD;AACA;AACA;AACA;EACCC,WAAW,CAACC,cAAc,EAAEC,WAAW,EAAE;IACxC,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,WAAW,GAAGA,WAAW;EAC/B;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACf,MAAMH,cAAc,GAAG,IAAI,CAACA,cAAc;IAC1C,MAAMC,WAAW,GAAG,IAAI,CAACA,WAAW;IACpCE,QAAQ,CAACC,KAAK,CAACC,mBAAmB,CAACC,GAAG,CACrC,+BAA+B,EAC/BC,GAAG,IAAI;MACNA,GAAG,CAACH,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,+BAA+B,EAAEG,MAAM,IAAI;QACtE,IAAIT,cAAc,CAACU,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,EAAE;UACxC,IAAI,OAAOV,WAAW,KAAK,UAAU,EAAE;YACtCA,WAAW,CAACQ,MAAM,CAAC;UACpB,CAAC,MAAM;YACNA,MAAM,CAACE,OAAO,GAAGV,WAAW;UAC7B;QACD;MACD,CAAC,CAAC;MACFM,GAAG,CAACH,KAAK,CAACQ,YAAY,CAACN,GAAG,CAAC,+BAA+B,EAAEG,MAAM,IAAI;QACrE,MAAMI,UAAU,GAAGJ,MAAM,CAACI,UAAU;QACpC,IAAIb,cAAc,CAACU,IAAI,CAACG,UAAU,CAACC,QAAQ,CAAC,EAAE;UAC7C,IAAI,OAAOb,WAAW,KAAK,UAAU,EAAE;YACtCA,WAAW,CAACQ,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMM,EAAE,GAAGZ,QAAQ,CAACa,eAAe;YACnC,IACCf,WAAW,CAACgB,UAAU,CAAC,GAAG,CAAC,IAC1BhB,WAAW,CAACiB,MAAM,GAAG,CAAC,IAAIjB,WAAW,CAAC,CAAC,CAAC,KAAK,GAAI,EACjD;cACDY,UAAU,CAACC,QAAQ,GAAGb,WAAW;YAClC,CAAC,MAAM;cACNY,UAAU,CAACC,QAAQ,GAAGnB,IAAI,CACzBoB,EAAE,EACFnB,OAAO,CAACmB,EAAE,EAAEF,UAAU,CAACC,QAAQ,CAAC,EAChCb,WAAW,CACX;YACF;UACD;QACD;MACD,CAAC,CAAC;IACH,CAAC,CACD;EACF;AACD;AAEAkB,MAAM,CAACC,OAAO,GAAGtB,6BAA6B"},"metadata":{},"sourceType":"script","externalDependencies":[]}