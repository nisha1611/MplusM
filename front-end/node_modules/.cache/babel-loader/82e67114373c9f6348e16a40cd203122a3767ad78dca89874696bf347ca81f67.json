{"ast":null,"code":"import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","map":{"version":3,"names":["crypto","rnds8Pool","Uint8Array","poolPtr","length","rng","randomFillSync","slice"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/uuid/dist/esm-node/rng.js"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;;AAEvC,IAAIC,OAAO,GAAGF,SAAS,CAACG,MAAM;AAC9B,eAAe,SAASC,GAAG,GAAG;EAC5B,IAAIF,OAAO,GAAGF,SAAS,CAACG,MAAM,GAAG,EAAE,EAAE;IACnCJ,MAAM,CAACM,cAAc,CAACL,SAAS,CAAC;IAChCE,OAAO,GAAG,CAAC;EACb;EAEA,OAAOF,SAAS,CAACM,KAAK,CAACJ,OAAO,EAAEA,OAAO,IAAI,EAAE,CAAC;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}