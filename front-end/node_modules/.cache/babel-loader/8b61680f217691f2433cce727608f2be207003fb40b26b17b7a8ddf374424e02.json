{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst NormalModule = require(\"./NormalModule\");\nconst createHash = require(\"./util/createHash\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {typeof import(\"./util/Hash\")} Hash */\n\nconst ModuleFilenameHelpers = exports;\n\n// TODO webpack 6: consider removing these\nModuleFilenameHelpers.ALL_LOADERS_RESOURCE = \"[all-loaders][resource]\";\nModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE = /\\[all-?loaders\\]\\[resource\\]/gi;\nModuleFilenameHelpers.LOADERS_RESOURCE = \"[loaders][resource]\";\nModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE = /\\[loaders\\]\\[resource\\]/gi;\nModuleFilenameHelpers.RESOURCE = \"[resource]\";\nModuleFilenameHelpers.REGEXP_RESOURCE = /\\[resource\\]/gi;\nModuleFilenameHelpers.ABSOLUTE_RESOURCE_PATH = \"[absolute-resource-path]\";\n// cSpell:words olute\nModuleFilenameHelpers.REGEXP_ABSOLUTE_RESOURCE_PATH = /\\[abs(olute)?-?resource-?path\\]/gi;\nModuleFilenameHelpers.RESOURCE_PATH = \"[resource-path]\";\nModuleFilenameHelpers.REGEXP_RESOURCE_PATH = /\\[resource-?path\\]/gi;\nModuleFilenameHelpers.ALL_LOADERS = \"[all-loaders]\";\nModuleFilenameHelpers.REGEXP_ALL_LOADERS = /\\[all-?loaders\\]/gi;\nModuleFilenameHelpers.LOADERS = \"[loaders]\";\nModuleFilenameHelpers.REGEXP_LOADERS = /\\[loaders\\]/gi;\nModuleFilenameHelpers.QUERY = \"[query]\";\nModuleFilenameHelpers.REGEXP_QUERY = /\\[query\\]/gi;\nModuleFilenameHelpers.ID = \"[id]\";\nModuleFilenameHelpers.REGEXP_ID = /\\[id\\]/gi;\nModuleFilenameHelpers.HASH = \"[hash]\";\nModuleFilenameHelpers.REGEXP_HASH = /\\[hash\\]/gi;\nModuleFilenameHelpers.NAMESPACE = \"[namespace]\";\nModuleFilenameHelpers.REGEXP_NAMESPACE = /\\[namespace\\]/gi;\nconst getAfter = (strFn, token) => {\n  return () => {\n    const str = strFn();\n    const idx = str.indexOf(token);\n    return idx < 0 ? \"\" : str.slice(idx);\n  };\n};\nconst getBefore = (strFn, token) => {\n  return () => {\n    const str = strFn();\n    const idx = str.lastIndexOf(token);\n    return idx < 0 ? \"\" : str.slice(0, idx);\n  };\n};\nconst getHash = (strFn, hashFunction) => {\n  return () => {\n    const hash = createHash(hashFunction);\n    hash.update(strFn());\n    const digest = /** @type {string} */hash.digest(\"hex\");\n    return digest.slice(0, 4);\n  };\n};\nconst asRegExp = test => {\n  if (typeof test === \"string\") {\n    test = new RegExp(\"^\" + test.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"));\n  }\n  return test;\n};\nconst lazyObject = obj => {\n  const newObj = {};\n  for (const key of Object.keys(obj)) {\n    const fn = obj[key];\n    Object.defineProperty(newObj, key, {\n      get: () => fn(),\n      set: v => {\n        Object.defineProperty(newObj, key, {\n          value: v,\n          enumerable: true,\n          writable: true\n        });\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return newObj;\n};\nconst REGEXP = /\\[\\\\*([\\w-]+)\\\\*\\]/gi;\n\n/**\r\n *\r\n * @param {Module | string} module the module\r\n * @param {TODO} options options\r\n * @param {Object} contextInfo context info\r\n * @param {RequestShortener} contextInfo.requestShortener requestShortener\r\n * @param {ChunkGraph} contextInfo.chunkGraph chunk graph\r\n * @param {string | Hash} contextInfo.hashFunction the hash function to use\r\n * @returns {string} the filename\r\n */\nModuleFilenameHelpers.createFilename = function () {\n  let module = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let options = arguments.length > 1 ? arguments[1] : undefined;\n  let {\n    requestShortener,\n    chunkGraph,\n    hashFunction = \"md4\"\n  } = arguments.length > 2 ? arguments[2] : undefined;\n  const opts = {\n    namespace: \"\",\n    moduleFilenameTemplate: \"\",\n    ...(typeof options === \"object\" ? options : {\n      moduleFilenameTemplate: options\n    })\n  };\n  let absoluteResourcePath;\n  let hash;\n  let identifier;\n  let moduleId;\n  let shortIdentifier;\n  if (typeof module === \"string\") {\n    shortIdentifier = memoize(() => requestShortener.shorten(module));\n    identifier = shortIdentifier;\n    moduleId = () => \"\";\n    absoluteResourcePath = () => module.split(\"!\").pop();\n    hash = getHash(identifier, hashFunction);\n  } else {\n    shortIdentifier = memoize(() => module.readableIdentifier(requestShortener));\n    identifier = memoize(() => requestShortener.shorten(module.identifier()));\n    moduleId = () => chunkGraph.getModuleId(module);\n    absoluteResourcePath = () => module instanceof NormalModule ? module.resource : module.identifier().split(\"!\").pop();\n    hash = getHash(identifier, hashFunction);\n  }\n  const resource = memoize(() => shortIdentifier().split(\"!\").pop());\n  const loaders = getBefore(shortIdentifier, \"!\");\n  const allLoaders = getBefore(identifier, \"!\");\n  const query = getAfter(resource, \"?\");\n  const resourcePath = () => {\n    const q = query().length;\n    return q === 0 ? resource() : resource().slice(0, -q);\n  };\n  if (typeof opts.moduleFilenameTemplate === \"function\") {\n    return opts.moduleFilenameTemplate(lazyObject({\n      identifier: identifier,\n      shortIdentifier: shortIdentifier,\n      resource: resource,\n      resourcePath: memoize(resourcePath),\n      absoluteResourcePath: memoize(absoluteResourcePath),\n      allLoaders: memoize(allLoaders),\n      query: memoize(query),\n      moduleId: memoize(moduleId),\n      hash: memoize(hash),\n      namespace: () => opts.namespace\n    }));\n  }\n\n  // TODO webpack 6: consider removing alternatives without dashes\n  /** @type {Map<string, function(): string>} */\n  const replacements = new Map([[\"identifier\", identifier], [\"short-identifier\", shortIdentifier], [\"resource\", resource], [\"resource-path\", resourcePath],\n  // cSpell:words resourcepath\n  [\"resourcepath\", resourcePath], [\"absolute-resource-path\", absoluteResourcePath], [\"abs-resource-path\", absoluteResourcePath],\n  // cSpell:words absoluteresource\n  [\"absoluteresource-path\", absoluteResourcePath],\n  // cSpell:words absresource\n  [\"absresource-path\", absoluteResourcePath],\n  // cSpell:words resourcepath\n  [\"absolute-resourcepath\", absoluteResourcePath],\n  // cSpell:words resourcepath\n  [\"abs-resourcepath\", absoluteResourcePath],\n  // cSpell:words absoluteresourcepath\n  [\"absoluteresourcepath\", absoluteResourcePath],\n  // cSpell:words absresourcepath\n  [\"absresourcepath\", absoluteResourcePath], [\"all-loaders\", allLoaders],\n  // cSpell:words allloaders\n  [\"allloaders\", allLoaders], [\"loaders\", loaders], [\"query\", query], [\"id\", moduleId], [\"hash\", hash], [\"namespace\", () => opts.namespace]]);\n\n  // TODO webpack 6: consider removing weird double placeholders\n  return opts.moduleFilenameTemplate.replace(ModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE, \"[identifier]\").replace(ModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE, \"[short-identifier]\").replace(REGEXP, (match, content) => {\n    if (content.length + 2 === match.length) {\n      const replacement = replacements.get(content.toLowerCase());\n      if (replacement !== undefined) {\n        return replacement();\n      }\n    } else if (match.startsWith(\"[\\\\\") && match.endsWith(\"\\\\]\")) {\n      return `[${match.slice(2, -2)}]`;\n    }\n    return match;\n  });\n};\nModuleFilenameHelpers.replaceDuplicates = (array, fn, comparator) => {\n  const countMap = Object.create(null);\n  const posMap = Object.create(null);\n  array.forEach((item, idx) => {\n    countMap[item] = countMap[item] || [];\n    countMap[item].push(idx);\n    posMap[item] = 0;\n  });\n  if (comparator) {\n    Object.keys(countMap).forEach(item => {\n      countMap[item].sort(comparator);\n    });\n  }\n  return array.map((item, i) => {\n    if (countMap[item].length > 1) {\n      if (comparator && countMap[item][0] === i) return item;\n      return fn(item, i, posMap[item]++);\n    } else {\n      return item;\n    }\n  });\n};\nModuleFilenameHelpers.matchPart = (str, test) => {\n  if (!test) return true;\n  test = asRegExp(test);\n  if (Array.isArray(test)) {\n    return test.map(asRegExp).some(regExp => regExp.test(str));\n  } else {\n    return test.test(str);\n  }\n};\nModuleFilenameHelpers.matchObject = (obj, str) => {\n  if (obj.test) {\n    if (!ModuleFilenameHelpers.matchPart(str, obj.test)) {\n      return false;\n    }\n  }\n  if (obj.include) {\n    if (!ModuleFilenameHelpers.matchPart(str, obj.include)) {\n      return false;\n    }\n  }\n  if (obj.exclude) {\n    if (ModuleFilenameHelpers.matchPart(str, obj.exclude)) {\n      return false;\n    }\n  }\n  return true;\n};","map":{"version":3,"names":["NormalModule","require","createHash","memoize","ModuleFilenameHelpers","exports","ALL_LOADERS_RESOURCE","REGEXP_ALL_LOADERS_RESOURCE","LOADERS_RESOURCE","REGEXP_LOADERS_RESOURCE","RESOURCE","REGEXP_RESOURCE","ABSOLUTE_RESOURCE_PATH","REGEXP_ABSOLUTE_RESOURCE_PATH","RESOURCE_PATH","REGEXP_RESOURCE_PATH","ALL_LOADERS","REGEXP_ALL_LOADERS","LOADERS","REGEXP_LOADERS","QUERY","REGEXP_QUERY","ID","REGEXP_ID","HASH","REGEXP_HASH","NAMESPACE","REGEXP_NAMESPACE","getAfter","strFn","token","str","idx","indexOf","slice","getBefore","lastIndexOf","getHash","hashFunction","hash","update","digest","asRegExp","test","RegExp","replace","lazyObject","obj","newObj","key","Object","keys","fn","defineProperty","get","set","v","value","enumerable","writable","configurable","REGEXP","createFilename","module","options","requestShortener","chunkGraph","opts","namespace","moduleFilenameTemplate","absoluteResourcePath","identifier","moduleId","shortIdentifier","shorten","split","pop","readableIdentifier","getModuleId","resource","loaders","allLoaders","query","resourcePath","q","length","replacements","Map","match","content","replacement","toLowerCase","undefined","startsWith","endsWith","replaceDuplicates","array","comparator","countMap","create","posMap","forEach","item","push","sort","map","i","matchPart","Array","isArray","some","regExp","matchObject","include","exclude"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/ModuleFilenameHelpers.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst NormalModule = require(\"./NormalModule\");\r\nconst createHash = require(\"./util/createHash\");\r\nconst memoize = require(\"./util/memoize\");\r\n\r\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"./Module\")} Module */\r\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\r\n/** @typedef {typeof import(\"./util/Hash\")} Hash */\r\n\r\nconst ModuleFilenameHelpers = exports;\r\n\r\n// TODO webpack 6: consider removing these\r\nModuleFilenameHelpers.ALL_LOADERS_RESOURCE = \"[all-loaders][resource]\";\r\nModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE =\r\n\t/\\[all-?loaders\\]\\[resource\\]/gi;\r\nModuleFilenameHelpers.LOADERS_RESOURCE = \"[loaders][resource]\";\r\nModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE = /\\[loaders\\]\\[resource\\]/gi;\r\nModuleFilenameHelpers.RESOURCE = \"[resource]\";\r\nModuleFilenameHelpers.REGEXP_RESOURCE = /\\[resource\\]/gi;\r\nModuleFilenameHelpers.ABSOLUTE_RESOURCE_PATH = \"[absolute-resource-path]\";\r\n// cSpell:words olute\r\nModuleFilenameHelpers.REGEXP_ABSOLUTE_RESOURCE_PATH =\r\n\t/\\[abs(olute)?-?resource-?path\\]/gi;\r\nModuleFilenameHelpers.RESOURCE_PATH = \"[resource-path]\";\r\nModuleFilenameHelpers.REGEXP_RESOURCE_PATH = /\\[resource-?path\\]/gi;\r\nModuleFilenameHelpers.ALL_LOADERS = \"[all-loaders]\";\r\nModuleFilenameHelpers.REGEXP_ALL_LOADERS = /\\[all-?loaders\\]/gi;\r\nModuleFilenameHelpers.LOADERS = \"[loaders]\";\r\nModuleFilenameHelpers.REGEXP_LOADERS = /\\[loaders\\]/gi;\r\nModuleFilenameHelpers.QUERY = \"[query]\";\r\nModuleFilenameHelpers.REGEXP_QUERY = /\\[query\\]/gi;\r\nModuleFilenameHelpers.ID = \"[id]\";\r\nModuleFilenameHelpers.REGEXP_ID = /\\[id\\]/gi;\r\nModuleFilenameHelpers.HASH = \"[hash]\";\r\nModuleFilenameHelpers.REGEXP_HASH = /\\[hash\\]/gi;\r\nModuleFilenameHelpers.NAMESPACE = \"[namespace]\";\r\nModuleFilenameHelpers.REGEXP_NAMESPACE = /\\[namespace\\]/gi;\r\n\r\nconst getAfter = (strFn, token) => {\r\n\treturn () => {\r\n\t\tconst str = strFn();\r\n\t\tconst idx = str.indexOf(token);\r\n\t\treturn idx < 0 ? \"\" : str.slice(idx);\r\n\t};\r\n};\r\n\r\nconst getBefore = (strFn, token) => {\r\n\treturn () => {\r\n\t\tconst str = strFn();\r\n\t\tconst idx = str.lastIndexOf(token);\r\n\t\treturn idx < 0 ? \"\" : str.slice(0, idx);\r\n\t};\r\n};\r\n\r\nconst getHash = (strFn, hashFunction) => {\r\n\treturn () => {\r\n\t\tconst hash = createHash(hashFunction);\r\n\t\thash.update(strFn());\r\n\t\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\r\n\t\treturn digest.slice(0, 4);\r\n\t};\r\n};\r\n\r\nconst asRegExp = test => {\r\n\tif (typeof test === \"string\") {\r\n\t\ttest = new RegExp(\"^\" + test.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"));\r\n\t}\r\n\treturn test;\r\n};\r\n\r\nconst lazyObject = obj => {\r\n\tconst newObj = {};\r\n\tfor (const key of Object.keys(obj)) {\r\n\t\tconst fn = obj[key];\r\n\t\tObject.defineProperty(newObj, key, {\r\n\t\t\tget: () => fn(),\r\n\t\t\tset: v => {\r\n\t\t\t\tObject.defineProperty(newObj, key, {\r\n\t\t\t\t\tvalue: v,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\twritable: true\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t}\r\n\treturn newObj;\r\n};\r\n\r\nconst REGEXP = /\\[\\\\*([\\w-]+)\\\\*\\]/gi;\r\n\r\n/**\r\n *\r\n * @param {Module | string} module the module\r\n * @param {TODO} options options\r\n * @param {Object} contextInfo context info\r\n * @param {RequestShortener} contextInfo.requestShortener requestShortener\r\n * @param {ChunkGraph} contextInfo.chunkGraph chunk graph\r\n * @param {string | Hash} contextInfo.hashFunction the hash function to use\r\n * @returns {string} the filename\r\n */\r\nModuleFilenameHelpers.createFilename = (\r\n\tmodule = \"\",\r\n\toptions,\r\n\t{ requestShortener, chunkGraph, hashFunction = \"md4\" }\r\n) => {\r\n\tconst opts = {\r\n\t\tnamespace: \"\",\r\n\t\tmoduleFilenameTemplate: \"\",\r\n\t\t...(typeof options === \"object\"\r\n\t\t\t? options\r\n\t\t\t: {\r\n\t\t\t\t\tmoduleFilenameTemplate: options\r\n\t\t\t  })\r\n\t};\r\n\r\n\tlet absoluteResourcePath;\r\n\tlet hash;\r\n\tlet identifier;\r\n\tlet moduleId;\r\n\tlet shortIdentifier;\r\n\tif (typeof module === \"string\") {\r\n\t\tshortIdentifier = memoize(() => requestShortener.shorten(module));\r\n\t\tidentifier = shortIdentifier;\r\n\t\tmoduleId = () => \"\";\r\n\t\tabsoluteResourcePath = () => module.split(\"!\").pop();\r\n\t\thash = getHash(identifier, hashFunction);\r\n\t} else {\r\n\t\tshortIdentifier = memoize(() =>\r\n\t\t\tmodule.readableIdentifier(requestShortener)\r\n\t\t);\r\n\t\tidentifier = memoize(() => requestShortener.shorten(module.identifier()));\r\n\t\tmoduleId = () => chunkGraph.getModuleId(module);\r\n\t\tabsoluteResourcePath = () =>\r\n\t\t\tmodule instanceof NormalModule\r\n\t\t\t\t? module.resource\r\n\t\t\t\t: module.identifier().split(\"!\").pop();\r\n\t\thash = getHash(identifier, hashFunction);\r\n\t}\r\n\tconst resource = memoize(() => shortIdentifier().split(\"!\").pop());\r\n\r\n\tconst loaders = getBefore(shortIdentifier, \"!\");\r\n\tconst allLoaders = getBefore(identifier, \"!\");\r\n\tconst query = getAfter(resource, \"?\");\r\n\tconst resourcePath = () => {\r\n\t\tconst q = query().length;\r\n\t\treturn q === 0 ? resource() : resource().slice(0, -q);\r\n\t};\r\n\tif (typeof opts.moduleFilenameTemplate === \"function\") {\r\n\t\treturn opts.moduleFilenameTemplate(\r\n\t\t\tlazyObject({\r\n\t\t\t\tidentifier: identifier,\r\n\t\t\t\tshortIdentifier: shortIdentifier,\r\n\t\t\t\tresource: resource,\r\n\t\t\t\tresourcePath: memoize(resourcePath),\r\n\t\t\t\tabsoluteResourcePath: memoize(absoluteResourcePath),\r\n\t\t\t\tallLoaders: memoize(allLoaders),\r\n\t\t\t\tquery: memoize(query),\r\n\t\t\t\tmoduleId: memoize(moduleId),\r\n\t\t\t\thash: memoize(hash),\r\n\t\t\t\tnamespace: () => opts.namespace\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO webpack 6: consider removing alternatives without dashes\r\n\t/** @type {Map<string, function(): string>} */\r\n\tconst replacements = new Map([\r\n\t\t[\"identifier\", identifier],\r\n\t\t[\"short-identifier\", shortIdentifier],\r\n\t\t[\"resource\", resource],\r\n\t\t[\"resource-path\", resourcePath],\r\n\t\t// cSpell:words resourcepath\r\n\t\t[\"resourcepath\", resourcePath],\r\n\t\t[\"absolute-resource-path\", absoluteResourcePath],\r\n\t\t[\"abs-resource-path\", absoluteResourcePath],\r\n\t\t// cSpell:words absoluteresource\r\n\t\t[\"absoluteresource-path\", absoluteResourcePath],\r\n\t\t// cSpell:words absresource\r\n\t\t[\"absresource-path\", absoluteResourcePath],\r\n\t\t// cSpell:words resourcepath\r\n\t\t[\"absolute-resourcepath\", absoluteResourcePath],\r\n\t\t// cSpell:words resourcepath\r\n\t\t[\"abs-resourcepath\", absoluteResourcePath],\r\n\t\t// cSpell:words absoluteresourcepath\r\n\t\t[\"absoluteresourcepath\", absoluteResourcePath],\r\n\t\t// cSpell:words absresourcepath\r\n\t\t[\"absresourcepath\", absoluteResourcePath],\r\n\t\t[\"all-loaders\", allLoaders],\r\n\t\t// cSpell:words allloaders\r\n\t\t[\"allloaders\", allLoaders],\r\n\t\t[\"loaders\", loaders],\r\n\t\t[\"query\", query],\r\n\t\t[\"id\", moduleId],\r\n\t\t[\"hash\", hash],\r\n\t\t[\"namespace\", () => opts.namespace]\r\n\t]);\r\n\r\n\t// TODO webpack 6: consider removing weird double placeholders\r\n\treturn opts.moduleFilenameTemplate\r\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE, \"[identifier]\")\r\n\t\t.replace(\r\n\t\t\tModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE,\r\n\t\t\t\"[short-identifier]\"\r\n\t\t)\r\n\t\t.replace(REGEXP, (match, content) => {\r\n\t\t\tif (content.length + 2 === match.length) {\r\n\t\t\t\tconst replacement = replacements.get(content.toLowerCase());\r\n\t\t\t\tif (replacement !== undefined) {\r\n\t\t\t\t\treturn replacement();\r\n\t\t\t\t}\r\n\t\t\t} else if (match.startsWith(\"[\\\\\") && match.endsWith(\"\\\\]\")) {\r\n\t\t\t\treturn `[${match.slice(2, -2)}]`;\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t});\r\n};\r\n\r\nModuleFilenameHelpers.replaceDuplicates = (array, fn, comparator) => {\r\n\tconst countMap = Object.create(null);\r\n\tconst posMap = Object.create(null);\r\n\tarray.forEach((item, idx) => {\r\n\t\tcountMap[item] = countMap[item] || [];\r\n\t\tcountMap[item].push(idx);\r\n\t\tposMap[item] = 0;\r\n\t});\r\n\tif (comparator) {\r\n\t\tObject.keys(countMap).forEach(item => {\r\n\t\t\tcountMap[item].sort(comparator);\r\n\t\t});\r\n\t}\r\n\treturn array.map((item, i) => {\r\n\t\tif (countMap[item].length > 1) {\r\n\t\t\tif (comparator && countMap[item][0] === i) return item;\r\n\t\t\treturn fn(item, i, posMap[item]++);\r\n\t\t} else {\r\n\t\t\treturn item;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nModuleFilenameHelpers.matchPart = (str, test) => {\r\n\tif (!test) return true;\r\n\ttest = asRegExp(test);\r\n\tif (Array.isArray(test)) {\r\n\t\treturn test.map(asRegExp).some(regExp => regExp.test(str));\r\n\t} else {\r\n\t\treturn test.test(str);\r\n\t}\r\n};\r\n\r\nModuleFilenameHelpers.matchObject = (obj, str) => {\r\n\tif (obj.test) {\r\n\t\tif (!ModuleFilenameHelpers.matchPart(str, obj.test)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tif (obj.include) {\r\n\t\tif (!ModuleFilenameHelpers.matchPart(str, obj.include)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tif (obj.exclude) {\r\n\t\tif (ModuleFilenameHelpers.matchPart(str, obj.exclude)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}