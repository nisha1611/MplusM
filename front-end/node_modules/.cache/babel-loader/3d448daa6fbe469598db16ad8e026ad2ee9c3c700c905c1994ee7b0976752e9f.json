{"ast":null,"code":"'use strict';\n\n/**\r\n * Test dependencies.\r\n */\nconst mpath = require('../');\nconst assert = require('assert');\n\n/**\r\n * logging helper\r\n */\n\nfunction log(o) {\n  console.log();\n  console.log(require('util').inspect(o, false, 1000));\n}\n\n/**\r\n * special path for override tests\r\n */\n\nconst special = '_doc';\n\n/**\r\n * Tests\r\n */\n\ndescribe('mpath', function () {\n  /**\r\n   * test doc creator\r\n   */\n\n  function doc() {\n    const o = {\n      first: {\n        second: {\n          third: [3, {\n            name: 'aaron'\n          }, 9]\n        }\n      }\n    };\n    o.comments = [{\n      name: 'one'\n    }, {\n      name: 'two',\n      _doc: {\n        name: '2'\n      }\n    }, {\n      name: 'three',\n      comments: [{}, {\n        comments: [{\n          val: 'twoo'\n        }]\n      }],\n      _doc: {\n        name: '3',\n        comments: [{}, {\n          _doc: {\n            comments: [{\n              val: 2\n            }]\n          }\n        }]\n      }\n    }];\n    o.name = 'jiro';\n    o.array = [{\n      o: {\n        array: [{\n          x: {\n            b: [4, 6, 8]\n          }\n        }, {\n          y: 10\n        }]\n      }\n    }, {\n      o: {\n        array: [{\n          x: {\n            b: [1, 2, 3]\n          }\n        }, {\n          x: {\n            z: 10\n          }\n        }, {\n          x: {\n            b: 'hi'\n          }\n        }]\n      }\n    }, {\n      o: {\n        array: [{\n          x: {\n            b: null\n          }\n        }, {\n          x: {\n            b: [null, 1]\n          }\n        }]\n      }\n    }, {\n      o: {\n        array: [{\n          x: null\n        }]\n      }\n    }, {\n      o: {\n        array: [{\n          y: 3\n        }]\n      }\n    }, {\n      o: {\n        array: [3, 0, null]\n      }\n    }, {\n      o: {\n        name: 'ha'\n      }\n    }];\n    o.arr = [{\n      arr: [{\n        a: {\n          b: 47\n        }\n      }, {\n        a: {\n          c: 48\n        }\n      }, {\n        d: 'yep'\n      }]\n    }, {\n      yep: true\n    }];\n    return o;\n  }\n  describe('get', function () {\n    const o = doc();\n    it('`path` must be a string or array', function (done) {\n      assert.throws(function () {\n        mpath.get({}, o);\n      }, /Must be either string or array/);\n      assert.throws(function () {\n        mpath.get(4, o);\n      }, /Must be either string or array/);\n      assert.throws(function () {\n        mpath.get(function () {}, o);\n      }, /Must be either string or array/);\n      assert.throws(function () {\n        mpath.get(/asdf/, o);\n      }, /Must be either string or array/);\n      assert.throws(function () {\n        mpath.get(Math, o);\n      }, /Must be either string or array/);\n      assert.throws(function () {\n        mpath.get(Buffer, o);\n      }, /Must be either string or array/);\n      assert.doesNotThrow(function () {\n        mpath.get('string', o);\n      });\n      assert.doesNotThrow(function () {\n        mpath.get([], o);\n      });\n      done();\n    });\n    describe('without `special`', function () {\n      it('works', function (done) {\n        assert.equal('jiro', mpath.get('name', o));\n        assert.deepEqual({\n          second: {\n            third: [3, {\n              name: 'aaron'\n            }, 9]\n          }\n        }, mpath.get('first', o));\n        assert.deepEqual({\n          third: [3, {\n            name: 'aaron'\n          }, 9]\n        }, mpath.get('first.second', o));\n        assert.deepEqual([3, {\n          name: 'aaron'\n        }, 9], mpath.get('first.second.third', o));\n        assert.deepEqual(3, mpath.get('first.second.third.0', o));\n        assert.deepEqual(9, mpath.get('first.second.third.2', o));\n        assert.deepEqual({\n          name: 'aaron'\n        }, mpath.get('first.second.third.1', o));\n        assert.deepEqual('aaron', mpath.get('first.second.third.1.name', o));\n        assert.deepEqual([{\n          name: 'one'\n        }, {\n          name: 'two',\n          _doc: {\n            name: '2'\n          }\n        }, {\n          name: 'three',\n          comments: [{}, {\n            comments: [{\n              val: 'twoo'\n            }]\n          }],\n          _doc: {\n            name: '3',\n            comments: [{}, {\n              _doc: {\n                comments: [{\n                  val: 2\n                }]\n              }\n            }]\n          }\n        }], mpath.get('comments', o));\n        assert.deepEqual({\n          name: 'one'\n        }, mpath.get('comments.0', o));\n        assert.deepEqual('one', mpath.get('comments.0.name', o));\n        assert.deepEqual('two', mpath.get('comments.1.name', o));\n        assert.deepEqual('three', mpath.get('comments.2.name', o));\n        assert.deepEqual([{}, {\n          comments: [{\n            val: 'twoo'\n          }]\n        }], mpath.get('comments.2.comments', o));\n        assert.deepEqual({\n          comments: [{\n            val: 'twoo'\n          }]\n        }, mpath.get('comments.2.comments.1', o));\n        assert.deepEqual('twoo', mpath.get('comments.2.comments.1.comments.0.val', o));\n        done();\n      });\n      it('handles array.property dot-notation', function (done) {\n        assert.deepEqual(['one', 'two', 'three'], mpath.get('comments.name', o));\n        done();\n      });\n      it('handles array.array notation', function (done) {\n        assert.deepEqual([undefined, undefined, [{}, {\n          comments: [{\n            val: 'twoo'\n          }]\n        }]], mpath.get('comments.comments', o));\n        done();\n      });\n      it('handles prop.prop.prop.arrayProperty notation', function (done) {\n        assert.deepEqual([undefined, 'aaron', undefined], mpath.get('first.second.third.name', o));\n        assert.deepEqual([1, 'aaron', 1], mpath.get('first.second.third.name', o, function (v) {\n          return undefined === v ? 1 : v;\n        }));\n        done();\n      });\n      it('handles array.prop.array', function (done) {\n        assert.deepEqual([[{\n          x: {\n            b: [4, 6, 8]\n          }\n        }, {\n          y: 10\n        }], [{\n          x: {\n            b: [1, 2, 3]\n          }\n        }, {\n          x: {\n            z: 10\n          }\n        }, {\n          x: {\n            b: 'hi'\n          }\n        }], [{\n          x: {\n            b: null\n          }\n        }, {\n          x: {\n            b: [null, 1]\n          }\n        }], [{\n          x: null\n        }], [{\n          y: 3\n        }], [3, 0, null], undefined], mpath.get('array.o.array', o));\n        done();\n      });\n      it('handles array.prop.array.index', function (done) {\n        assert.deepEqual([{\n          x: {\n            b: [4, 6, 8]\n          }\n        }, {\n          x: {\n            b: [1, 2, 3]\n          }\n        }, {\n          x: {\n            b: null\n          }\n        }, {\n          x: null\n        }, {\n          y: 3\n        }, 3, undefined], mpath.get('array.o.array.0', o));\n        done();\n      });\n      it('handles array.prop.array.index.prop', function (done) {\n        assert.deepEqual([{\n          b: [4, 6, 8]\n        }, {\n          b: [1, 2, 3]\n        }, {\n          b: null\n        }, null, undefined, undefined, undefined], mpath.get('array.o.array.0.x', o));\n        done();\n      });\n      it('handles array.prop.array.prop', function (done) {\n        assert.deepEqual([[undefined, 10], [undefined, undefined, undefined], [undefined, undefined], [undefined], [3], [undefined, undefined, undefined], undefined], mpath.get('array.o.array.y', o));\n        assert.deepEqual([[{\n          b: [4, 6, 8]\n        }, undefined], [{\n          b: [1, 2, 3]\n        }, {\n          z: 10\n        }, {\n          b: 'hi'\n        }], [{\n          b: null\n        }, {\n          b: [null, 1]\n        }], [null], [undefined], [undefined, undefined, undefined], undefined], mpath.get('array.o.array.x', o));\n        done();\n      });\n      it('handles array.prop.array.prop.prop', function (done) {\n        assert.deepEqual([[[4, 6, 8], undefined], [[1, 2, 3], undefined, 'hi'], [null, [null, 1]], [null], [undefined], [undefined, undefined, undefined], undefined], mpath.get('array.o.array.x.b', o));\n        done();\n      });\n      it('handles array.prop.array.prop.prop.index', function (done) {\n        assert.deepEqual([[6, undefined], [2, undefined, 'i'],\n        // undocumented feature (string indexing)\n        [null, 1], [null], [undefined], [undefined, undefined, undefined], undefined], mpath.get('array.o.array.x.b.1', o));\n        assert.deepEqual([[6, 0], [2, 0, 'i'],\n        // undocumented feature (string indexing)\n        [null, 1], [null], [0], [0, 0, 0], 0], mpath.get('array.o.array.x.b.1', o, function (v) {\n          return undefined === v ? 0 : v;\n        }));\n        done();\n      });\n      it('handles array.index.prop.prop', function (done) {\n        assert.deepEqual([{\n          x: {\n            b: [1, 2, 3]\n          }\n        }, {\n          x: {\n            z: 10\n          }\n        }, {\n          x: {\n            b: 'hi'\n          }\n        }], mpath.get('array.1.o.array', o));\n        assert.deepEqual(['hi', 'hi', 'hi'], mpath.get('array.1.o.array', o, function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (val) {\n              return 'hi';\n            });\n          }\n          return v;\n        }));\n        done();\n      });\n      it('handles array.array.index', function (done) {\n        assert.deepEqual([{\n          a: {\n            c: 48\n          }\n        }, undefined], mpath.get('arr.arr.1', o));\n        assert.deepEqual(['woot', undefined], mpath.get('arr.arr.1', o, function (v) {\n          if (v && v.a && v.a.c) return 'woot';\n          return v;\n        }));\n        done();\n      });\n      it('handles array.array.index.prop', function (done) {\n        assert.deepEqual([{\n          c: 48\n        }, 'woot'], mpath.get('arr.arr.1.a', o, function (v) {\n          if (undefined === v) return 'woot';\n          return v;\n        }));\n        assert.deepEqual([{\n          c: 48\n        }, undefined], mpath.get('arr.arr.1.a', o));\n        mpath.set('arr.arr.1.a', [{\n          c: 49\n        }, undefined], o);\n        assert.deepEqual([{\n          c: 49\n        }, undefined], mpath.get('arr.arr.1.a', o));\n        mpath.set('arr.arr.1.a', [{\n          c: 48\n        }, undefined], o);\n        done();\n      });\n      it('handles array.array.index.prop.prop', function (done) {\n        assert.deepEqual([48, undefined], mpath.get('arr.arr.1.a.c', o));\n        assert.deepEqual([48, 'woot'], mpath.get('arr.arr.1.a.c', o, function (v) {\n          if (undefined === v) return 'woot';\n          return v;\n        }));\n        done();\n      });\n    });\n    describe('with `special`', function () {\n      describe('that is a string', function () {\n        it('works', function (done) {\n          assert.equal('jiro', mpath.get('name', o, special));\n          assert.deepEqual({\n            second: {\n              third: [3, {\n                name: 'aaron'\n              }, 9]\n            }\n          }, mpath.get('first', o, special));\n          assert.deepEqual({\n            third: [3, {\n              name: 'aaron'\n            }, 9]\n          }, mpath.get('first.second', o, special));\n          assert.deepEqual([3, {\n            name: 'aaron'\n          }, 9], mpath.get('first.second.third', o, special));\n          assert.deepEqual(3, mpath.get('first.second.third.0', o, special));\n          assert.deepEqual(4, mpath.get('first.second.third.0', o, special, function (v) {\n            return 3 === v ? 4 : v;\n          }));\n          assert.deepEqual(9, mpath.get('first.second.third.2', o, special));\n          assert.deepEqual({\n            name: 'aaron'\n          }, mpath.get('first.second.third.1', o, special));\n          assert.deepEqual('aaron', mpath.get('first.second.third.1.name', o, special));\n          assert.deepEqual([{\n            name: 'one'\n          }, {\n            name: 'two',\n            _doc: {\n              name: '2'\n            }\n          }, {\n            name: 'three',\n            comments: [{}, {\n              comments: [{\n                val: 'twoo'\n              }]\n            }],\n            _doc: {\n              name: '3',\n              comments: [{}, {\n                _doc: {\n                  comments: [{\n                    val: 2\n                  }]\n                }\n              }]\n            }\n          }], mpath.get('comments', o, special));\n          assert.deepEqual({\n            name: 'one'\n          }, mpath.get('comments.0', o, special));\n          assert.deepEqual('one', mpath.get('comments.0.name', o, special));\n          assert.deepEqual('2', mpath.get('comments.1.name', o, special));\n          assert.deepEqual('3', mpath.get('comments.2.name', o, special));\n          assert.deepEqual('nice', mpath.get('comments.2.name', o, special, function (v) {\n            return '3' === v ? 'nice' : v;\n          }));\n          assert.deepEqual([{}, {\n            _doc: {\n              comments: [{\n                val: 2\n              }]\n            }\n          }], mpath.get('comments.2.comments', o, special));\n          assert.deepEqual({\n            _doc: {\n              comments: [{\n                val: 2\n              }]\n            }\n          }, mpath.get('comments.2.comments.1', o, special));\n          assert.deepEqual(2, mpath.get('comments.2.comments.1.comments.0.val', o, special));\n          done();\n        });\n        it('handles array.property dot-notation', function (done) {\n          assert.deepEqual(['one', '2', '3'], mpath.get('comments.name', o, special));\n          assert.deepEqual(['one', 2, '3'], mpath.get('comments.name', o, special, function (v) {\n            return '2' === v ? 2 : v;\n          }));\n          done();\n        });\n        it('handles array.array notation', function (done) {\n          assert.deepEqual([undefined, undefined, [{}, {\n            _doc: {\n              comments: [{\n                val: 2\n              }]\n            }\n          }]], mpath.get('comments.comments', o, special));\n          done();\n        });\n        it('handles array.array.index.array', function (done) {\n          assert.deepEqual([undefined, undefined, [{\n            val: 2\n          }]], mpath.get('comments.comments.1.comments', o, special));\n          done();\n        });\n        it('handles array.array.index.array.prop', function (done) {\n          assert.deepEqual([undefined, undefined, [2]], mpath.get('comments.comments.1.comments.val', o, special));\n          assert.deepEqual(['nil', 'nil', [2]], mpath.get('comments.comments.1.comments.val', o, special, function (v) {\n            return undefined === v ? 'nil' : v;\n          }));\n          done();\n        });\n      });\n      describe('that is a function', function () {\n        const special = function (obj, key) {\n          return obj[key];\n        };\n        it('works', function (done) {\n          assert.equal('jiro', mpath.get('name', o, special));\n          assert.deepEqual({\n            second: {\n              third: [3, {\n                name: 'aaron'\n              }, 9]\n            }\n          }, mpath.get('first', o, special));\n          assert.deepEqual({\n            third: [3, {\n              name: 'aaron'\n            }, 9]\n          }, mpath.get('first.second', o, special));\n          assert.deepEqual([3, {\n            name: 'aaron'\n          }, 9], mpath.get('first.second.third', o, special));\n          assert.deepEqual(3, mpath.get('first.second.third.0', o, special));\n          assert.deepEqual(4, mpath.get('first.second.third.0', o, special, function (v) {\n            return 3 === v ? 4 : v;\n          }));\n          assert.deepEqual(9, mpath.get('first.second.third.2', o, special));\n          assert.deepEqual({\n            name: 'aaron'\n          }, mpath.get('first.second.third.1', o, special));\n          assert.deepEqual('aaron', mpath.get('first.second.third.1.name', o, special));\n          assert.deepEqual([{\n            name: 'one'\n          }, {\n            name: 'two',\n            _doc: {\n              name: '2'\n            }\n          }, {\n            name: 'three',\n            comments: [{}, {\n              comments: [{\n                val: 'twoo'\n              }]\n            }],\n            _doc: {\n              name: '3',\n              comments: [{}, {\n                _doc: {\n                  comments: [{\n                    val: 2\n                  }]\n                }\n              }]\n            }\n          }], mpath.get('comments', o, special));\n          assert.deepEqual({\n            name: 'one'\n          }, mpath.get('comments.0', o, special));\n          assert.deepEqual('one', mpath.get('comments.0.name', o, special));\n          assert.deepEqual('two', mpath.get('comments.1.name', o, special));\n          assert.deepEqual('three', mpath.get('comments.2.name', o, special));\n          assert.deepEqual('nice', mpath.get('comments.2.name', o, special, function (v) {\n            return 'three' === v ? 'nice' : v;\n          }));\n          assert.deepEqual([{}, {\n            comments: [{\n              val: 'twoo'\n            }]\n          }], mpath.get('comments.2.comments', o, special));\n          assert.deepEqual({\n            comments: [{\n              val: 'twoo'\n            }]\n          }, mpath.get('comments.2.comments.1', o, special));\n          assert.deepEqual('twoo', mpath.get('comments.2.comments.1.comments.0.val', o, special));\n          let overide = false;\n          assert.deepEqual('twoo', mpath.get('comments.8.comments.1.comments.0.val', o, function (obj, path) {\n            if (Array.isArray(obj) && 8 == path) {\n              overide = true;\n              return obj[2];\n            }\n            return obj[path];\n          }));\n          assert.ok(overide);\n          done();\n        });\n        it('in combination with map', function (done) {\n          const special = function (obj, key) {\n            if (Array.isArray(obj)) return obj[key];\n            return obj.mpath;\n          };\n          const map = function (val) {\n            return 'convert' == val ? 'mpath' : val;\n          };\n          const o = {\n            mpath: [{\n              mpath: 'converse'\n            }, {\n              mpath: 'convert'\n            }]\n          };\n          assert.equal('mpath', mpath.get('something.1.kewl', o, special, map));\n          done();\n        });\n      });\n    });\n  });\n  describe('set', function () {\n    it('prevents writing to __proto__', function () {\n      const obj = {};\n      mpath.set('__proto__.x', 'foobar', obj);\n      assert.ok(!{}.x);\n      mpath.set('constructor.prototype.x', 'foobar', obj);\n      assert.ok(!{}.x);\n    });\n    describe('without `special`', function () {\n      const o = doc();\n      it('works', function (done) {\n        mpath.set('name', 'a new val', o, function (v) {\n          return 'a new val' === v ? 'changed' : v;\n        });\n        assert.deepEqual('changed', o.name);\n        mpath.set('name', 'changed', o);\n        assert.deepEqual('changed', o.name);\n        mpath.set('first.second.third', [1, {\n          name: 'x'\n        }, 9], o);\n        assert.deepEqual([1, {\n          name: 'x'\n        }, 9], o.first.second.third);\n        mpath.set('first.second.third.1.name', 'y', o);\n        assert.deepEqual([1, {\n          name: 'y'\n        }, 9], o.first.second.third);\n        mpath.set('comments.1.name', 'ttwwoo', o);\n        assert.deepEqual({\n          name: 'ttwwoo',\n          _doc: {\n            name: '2'\n          }\n        }, o.comments[1]);\n        mpath.set('comments.2.comments.1.comments.0.expand', 'added', o);\n        assert.deepEqual({\n          val: 'twoo',\n          expand: 'added'\n        }, o.comments[2].comments[1].comments[0]);\n        mpath.set('comments.2.comments.1.comments.2', 'added', o);\n        assert.equal(3, o.comments[2].comments[1].comments.length);\n        assert.deepEqual({\n          val: 'twoo',\n          expand: 'added'\n        }, o.comments[2].comments[1].comments[0]);\n        assert.deepEqual(undefined, o.comments[2].comments[1].comments[1]);\n        assert.deepEqual('added', o.comments[2].comments[1].comments[2]);\n        done();\n      });\n      describe('array.path', function () {\n        describe('with single non-array value', function () {\n          it('works', function (done) {\n            mpath.set('arr.yep', false, o, function (v) {\n              return false === v ? true : v;\n            });\n            assert.deepEqual([{\n              yep: true,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true\n            }], o.arr);\n            mpath.set('arr.yep', false, o);\n            assert.deepEqual([{\n              yep: false,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: false\n            }], o.arr);\n            done();\n          });\n        });\n        describe('with array of values', function () {\n          it('that are equal in length', function (done) {\n            mpath.set('arr.yep', ['one', 2], o, function (v) {\n              return 'one' === v ? 1 : v;\n            });\n            assert.deepEqual([{\n              yep: 1,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 2\n            }], o.arr);\n            mpath.set('arr.yep', ['one', 2], o);\n            assert.deepEqual([{\n              yep: 'one',\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 2\n            }], o.arr);\n            done();\n          });\n          it('that is less than length', function (done) {\n            mpath.set('arr.yep', [47], o, function (v) {\n              return 47 === v ? 4 : v;\n            });\n            assert.deepEqual([{\n              yep: 4,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 2\n            }], o.arr);\n            mpath.set('arr.yep', [47], o);\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 2\n            }], o.arr);\n            done();\n          });\n          it('that is greater than length', function (done) {\n            mpath.set('arr.yep', [5, 6, 7], o, function (v) {\n              return 5 === v ? 'five' : v;\n            });\n            assert.deepEqual([{\n              yep: 'five',\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 6\n            }], o.arr);\n            mpath.set('arr.yep', [5, 6, 7], o);\n            assert.deepEqual([{\n              yep: 5,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 6\n            }], o.arr);\n            done();\n          });\n        });\n      });\n      describe('array.$.path', function () {\n        describe('with single non-array value', function () {\n          it('copies the value to each item in array', function (done) {\n            mpath.set('arr.$.yep', {\n              xtra: 'double good'\n            }, o, function (v) {\n              return v && v.xtra ? 'hi' : v;\n            });\n            assert.deepEqual([{\n              yep: 'hi',\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: 'hi'\n            }], o.arr);\n            mpath.set('arr.$.yep', {\n              xtra: 'double good'\n            }, o);\n            assert.deepEqual([{\n              yep: {\n                xtra: 'double good'\n              },\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: {\n                xtra: 'double good'\n              }\n            }], o.arr);\n            done();\n          });\n        });\n        describe('with array of values', function () {\n          it('copies the value to each item in array', function (done) {\n            mpath.set('arr.$.yep', [15], o, function (v) {\n              return v.length === 1 ? [] : v;\n            });\n            assert.deepEqual([{\n              yep: [],\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: []\n            }], o.arr);\n            mpath.set('arr.$.yep', [15], o);\n            assert.deepEqual([{\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: [15]\n            }], o.arr);\n            done();\n          });\n        });\n      });\n      describe('array.index.path', function () {\n        it('works', function (done) {\n          mpath.set('arr.1.yep', 0, o, function (v) {\n            return 0 === v ? 'zero' : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }]\n          }, {\n            yep: 'zero'\n          }], o.arr);\n          mpath.set('arr.1.yep', 0, o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.index.array.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.0.arr.e', 35, o, function (v) {\n            return 35 === v ? 3 : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 47\n              },\n              e: 3\n            }, {\n              a: {\n                c: 48\n              },\n              e: 3\n            }, {\n              d: 'yep',\n              e: 3\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.0.arr.e', 35, o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 47\n              },\n              e: 35\n            }, {\n              a: {\n                c: 48\n              },\n              e: 35\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.0.arr.e', ['a', 'b'], o, function (v) {\n            return 'a' === v ? 'x' : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 47\n              },\n              e: 'x'\n            }, {\n              a: {\n                c: 48\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.0.arr.e', ['a', 'b'], o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 47\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.index.array.path.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.0.arr.a.b', 36, o, function (v) {\n            return 36 === v ? 3 : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 3\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: 3\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.0.arr.a.b', 36, o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 36\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: 36\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, function (v) {\n            return 2 === v ? 'two' : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 1\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: 'two'\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 1\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: 2\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.index.array.$.path.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.0.arr.$.a.b', '$', o, function (v) {\n            return '$' === v ? 'dolla billz' : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: 'dolla billz'\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: 'dolla billz'\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.0.arr.$.a.b', '$', o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: '$'\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: '$'\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.0.arr.$.a.b', [1], o, function (v) {\n            return Array.isArray(v) ? {} : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: {}\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: {}\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.0.arr.$.a.b', [1], o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: {\n                b: [1]\n              },\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.array.index.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.arr.0.a', 'single', o, function (v) {\n            return 'single' === v ? 'double' : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 'double',\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.arr.0.a', 'single', o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 'single',\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o, function (v) {\n            return 4 === v ? 3 : v;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 3,\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: false\n          }], o.arr);\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 4,\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: false\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.array.$.index.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.arr.$.0.a', 'singles', o, function (v) {\n            return 0;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 0,\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.arr.$.0.a', 'singles', o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 'singles',\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('$.arr.arr.0.a', 'single', o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 'single',\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o, function (v) {\n            return 'nope';\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: 'nope',\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42],\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.$.arr.0.a', [4, 8, 15, 16, 23, 42, 108], o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108],\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1]\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.array.path.index', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.arr.a.7', 47, o, function (v) {\n            return 1;\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, 1],\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 1\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          mpath.set('arr.arr.a.7', 47, o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, 47],\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 47\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          o.arr[1].arr = [{\n            a: []\n          }, {\n            a: []\n          }, {\n            a: null\n          }];\n          mpath.set('arr.arr.a.7', [[null, 46], [undefined, 'woot']], o);\n          const a1 = [];\n          const a2 = [];\n          a1[7] = undefined;\n          a2[7] = 'woot';\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, null],\n              e: 'a'\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 46\n              },\n              e: 'b'\n            }, {\n              d: 'yep',\n              e: 35\n            }]\n          }, {\n            yep: 0,\n            arr: [{\n              a: a1\n            }, {\n              a: a2\n            }, {\n              a: null\n            }]\n          }], o.arr);\n          done();\n        });\n      });\n      describe('handles array.array.path', function () {\n        it('with single', function (done) {\n          o.arr[1].arr = [{}, {}];\n          assert.deepEqual([{}, {}], o.arr[1].arr);\n          o.arr.push({\n            arr: 'something else'\n          });\n          o.arr.push({\n            arr: ['something else']\n          });\n          o.arr.push({\n            arr: [[]]\n          });\n          o.arr.push({\n            arr: [5]\n          });\n          const weird = [];\n          weird.e = 'xmas';\n\n          // test\n          mpath.set('arr.arr.e', 47, o, function (v) {\n            return 'xmas';\n          });\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, null],\n              e: 'xmas'\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 46\n              },\n              e: 'xmas'\n            }, {\n              d: 'yep',\n              e: 'xmas'\n            }]\n          }, {\n            yep: 0,\n            arr: [{\n              e: 'xmas'\n            }, {\n              e: 'xmas'\n            }]\n          }, {\n            arr: 'something else'\n          }, {\n            arr: ['something else']\n          }, {\n            arr: [weird]\n          }, {\n            arr: [5]\n          }], o.arr);\n          weird.e = 47;\n          mpath.set('arr.arr.e', 47, o);\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, null],\n              e: 47\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 46\n              },\n              e: 47\n            }, {\n              d: 'yep',\n              e: 47\n            }]\n          }, {\n            yep: 0,\n            arr: [{\n              e: 47\n            }, {\n              e: 47\n            }]\n          }, {\n            arr: 'something else'\n          }, {\n            arr: ['something else']\n          }, {\n            arr: [weird]\n          }, {\n            arr: [5]\n          }], o.arr);\n          done();\n        });\n        it('with arrays', function (done) {\n          mpath.set('arr.arr.e', [[1, 2, 3], [4, 5], null, [], [6], [7, 8, 9]], o, function (v) {\n            return 10;\n          });\n          const weird = [];\n          weird.e = 10;\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, null],\n              e: 10\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 46\n              },\n              e: 10\n            }, {\n              d: 'yep',\n              e: 10\n            }]\n          }, {\n            yep: 0,\n            arr: [{\n              e: 10\n            }, {\n              e: 10\n            }]\n          }, {\n            arr: 'something else'\n          }, {\n            arr: ['something else']\n          }, {\n            arr: [weird]\n          }, {\n            arr: [5]\n          }], o.arr);\n          mpath.set('arr.arr.e', [[1, 2, 3], [4, 5], null, [], [6], [7, 8, 9]], o);\n          weird.e = 6;\n          assert.deepEqual([{\n            yep: [15],\n            arr: [{\n              a: [4, 8, 15, 16, 23, 42, 108, null],\n              e: 1\n            }, {\n              a: {\n                c: 48,\n                b: [1],\n                7: 46\n              },\n              e: 2\n            }, {\n              d: 'yep',\n              e: 3\n            }]\n          }, {\n            yep: 0,\n            arr: [{\n              e: 4\n            }, {\n              e: 5\n            }]\n          }, {\n            arr: 'something else'\n          }, {\n            arr: ['something else']\n          }, {\n            arr: [weird]\n          }, {\n            arr: [5]\n          }], o.arr);\n          done();\n        });\n      });\n    });\n    describe('with `special`', function () {\n      const o = doc();\n      it('works', function (done) {\n        mpath.set('name', 'chan', o, special, function (v) {\n          return 'hi';\n        });\n        assert.deepEqual('hi', o.name);\n        mpath.set('name', 'changer', o, special);\n        assert.deepEqual('changer', o.name);\n        mpath.set('first.second.third', [1, {\n          name: 'y'\n        }, 9], o, special);\n        assert.deepEqual([1, {\n          name: 'y'\n        }, 9], o.first.second.third);\n        mpath.set('first.second.third.1.name', 'z', o, special);\n        assert.deepEqual([1, {\n          name: 'z'\n        }, 9], o.first.second.third);\n        mpath.set('comments.1.name', 'ttwwoo', o, special);\n        assert.deepEqual({\n          name: 'two',\n          _doc: {\n            name: 'ttwwoo'\n          }\n        }, o.comments[1]);\n        mpath.set('comments.2.comments.1.comments.0.expander', 'adder', o, special, function (v) {\n          return 'super';\n        });\n        assert.deepEqual({\n          val: 2,\n          expander: 'super'\n        }, o.comments[2]._doc.comments[1]._doc.comments[0]);\n        mpath.set('comments.2.comments.1.comments.0.expander', 'adder', o, special);\n        assert.deepEqual({\n          val: 2,\n          expander: 'adder'\n        }, o.comments[2]._doc.comments[1]._doc.comments[0]);\n        mpath.set('comments.2.comments.1.comments.2', 'set', o, special);\n        assert.equal(3, o.comments[2]._doc.comments[1]._doc.comments.length);\n        assert.deepEqual({\n          val: 2,\n          expander: 'adder'\n        }, o.comments[2]._doc.comments[1]._doc.comments[0]);\n        assert.deepEqual(undefined, o.comments[2]._doc.comments[1]._doc.comments[1]);\n        assert.deepEqual('set', o.comments[2]._doc.comments[1]._doc.comments[2]);\n        done();\n      });\n      describe('array.path', function () {\n        describe('with single non-array value', function () {\n          it('works', function (done) {\n            o.arr[1]._doc = {\n              special: true\n            };\n            mpath.set('arr.yep', false, o, special, function (v) {\n              return 'yes';\n            });\n            assert.deepEqual([{\n              yep: 'yes',\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 'yes'\n              }\n            }], o.arr);\n            mpath.set('arr.yep', false, o, special);\n            assert.deepEqual([{\n              yep: false,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: false\n              }\n            }], o.arr);\n            done();\n          });\n        });\n        describe('with array of values', function () {\n          it('that are equal in length', function (done) {\n            mpath.set('arr.yep', ['one', 2], o, special, function (v) {\n              return 2 === v ? 20 : v;\n            });\n            assert.deepEqual([{\n              yep: 'one',\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 20\n              }\n            }], o.arr);\n            mpath.set('arr.yep', ['one', 2], o, special);\n            assert.deepEqual([{\n              yep: 'one',\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 2\n              }\n            }], o.arr);\n            done();\n          });\n          it('that is less than length', function (done) {\n            mpath.set('arr.yep', [47], o, special, function (v) {\n              return 80;\n            });\n            assert.deepEqual([{\n              yep: 80,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 2\n              }\n            }], o.arr);\n            mpath.set('arr.yep', [47], o, special);\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 2\n              }\n            }], o.arr);\n\n            // add _doc to first element\n            o.arr[0]._doc = {\n              yep: 46,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            };\n            mpath.set('arr.yep', [20], o, special);\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: 20,\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 2\n              }\n            }], o.arr);\n            done();\n          });\n          it('that is greater than length', function (done) {\n            mpath.set('arr.yep', [5, 6, 7], o, special, function () {\n              return 'x';\n            });\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: 'x',\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 'x'\n              }\n            }], o.arr);\n            mpath.set('arr.yep', [5, 6, 7], o, special);\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: 5,\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 6\n              }\n            }], o.arr);\n            done();\n          });\n        });\n      });\n      describe('array.$.path', function () {\n        describe('with single non-array value', function () {\n          it('copies the value to each item in array', function (done) {\n            mpath.set('arr.$.yep', {\n              xtra: 'double good'\n            }, o, special, function (v) {\n              return 9;\n            });\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: 9,\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 9\n              }\n            }], o.arr);\n            mpath.set('arr.$.yep', {\n              xtra: 'double good'\n            }, o, special);\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: {\n                  xtra: 'double good'\n                },\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: {\n                  xtra: 'double good'\n                }\n              }\n            }], o.arr);\n            done();\n          });\n        });\n        describe('with array of values', function () {\n          it('copies the value to each item in array', function (done) {\n            mpath.set('arr.$.yep', [15], o, special, function (v) {\n              return 'array';\n            });\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: 'array',\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: 'array'\n              }\n            }], o.arr);\n            mpath.set('arr.$.yep', [15], o, special);\n            assert.deepEqual([{\n              yep: 47,\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }],\n              _doc: {\n                yep: [15],\n                arr: [{\n                  a: {\n                    b: 47\n                  }\n                }, {\n                  a: {\n                    c: 48\n                  }\n                }, {\n                  d: 'yep'\n                }]\n              }\n            }, {\n              yep: true,\n              _doc: {\n                special: true,\n                yep: [15]\n              }\n            }], o.arr);\n            done();\n          });\n        });\n      });\n      describe('array.index.path', function () {\n        it('works', function (done) {\n          mpath.set('arr.1.yep', 0, o, special, function (v) {\n            return 1;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 1\n            }\n          }], o.arr);\n          mpath.set('arr.1.yep', 0, o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                }\n              }, {\n                a: {\n                  c: 48\n                }\n              }, {\n                d: 'yep'\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.index.array.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.0.arr.e', 35, o, special, function (v) {\n            return 30;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                },\n                e: 30\n              }, {\n                a: {\n                  c: 48\n                },\n                e: 30\n              }, {\n                d: 'yep',\n                e: 30\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.0.arr.e', 35, o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                },\n                e: 35\n              }, {\n                a: {\n                  c: 48\n                },\n                e: 35\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.0.arr.e', ['a', 'b'], o, special, function (v) {\n            return 'a' === v ? 'A' : v;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                },\n                e: 'A'\n              }, {\n                a: {\n                  c: 48\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.0.arr.e', ['a', 'b'], o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 47\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.index.array.path.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.0.arr.a.b', 36, o, special, function (v) {\n            return 20;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 20\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: 20\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.0.arr.a.b', 36, o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 36\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: 36\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, special, function (v) {\n            return v * 2;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 2\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: 4\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 1\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: 2\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.index.array.$.path.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.0.arr.$.a.b', '$', o, special, function (v) {\n            return 'dollaz';\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: 'dollaz'\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: 'dollaz'\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.0.arr.$.a.b', '$', o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: '$'\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: '$'\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.0.arr.$.a.b', [1], o, special, function (v) {\n            return {};\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: {}\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: {}\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.0.arr.$.a.b', [1], o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: {\n                  b: [1]\n                },\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.array.index.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.arr.0.a', 'single', o, special, function (v) {\n            return 88;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 88,\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.arr.0.a', 'single', o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 'single',\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o, special, function (v) {\n            return v * 2;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 8,\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 4,\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.array.$.index.path', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.arr.$.0.a', 'singles', o, special, function (v) {\n            return v.toUpperCase();\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 'SINGLES',\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.arr.$.0.a', 'singles', o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 'singles',\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('$.arr.arr.0.a', 'single', o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: 'single',\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o, special, function (v) {\n            return Array;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: Array,\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42],\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.$.arr.0.a', [4, 8, 15, 16, 23, 42, 108], o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108],\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1]\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('array.array.path.index', function () {\n        it('with single value', function (done) {\n          mpath.set('arr.arr.a.7', 47, o, special, function (v) {\n            return Object;\n          });\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108, Object],\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1],\n                  7: Object\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.arr.a.7', 47, o, special);\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108, 47],\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1],\n                  7: 47\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n        it('with array', function (done) {\n          o.arr[1]._doc.arr = [{\n            a: []\n          }, {\n            a: []\n          }, {\n            a: null\n          }];\n          mpath.set('arr.arr.a.7', [[null, 46], [undefined, 'woot']], o, special, function (v) {\n            return undefined === v ? 'nope' : v;\n          });\n          const a1 = [];\n          const a2 = [];\n          a1[7] = 'nope';\n          a2[7] = 'woot';\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108, null],\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1],\n                  7: 46\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              arr: [{\n                a: a1\n              }, {\n                a: a2\n              }, {\n                a: null\n              }],\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          mpath.set('arr.arr.a.7', [[null, 46], [undefined, 'woot']], o, special);\n          a1[7] = undefined;\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108, null],\n                e: 'a'\n              }, {\n                a: {\n                  c: 48,\n                  b: [1],\n                  7: 46\n                },\n                e: 'b'\n              }, {\n                d: 'yep',\n                e: 35\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              arr: [{\n                a: a1\n              }, {\n                a: a2\n              }, {\n                a: null\n              }],\n              special: true,\n              yep: 0\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('handles array.array.path', function () {\n        it('with single', function (done) {\n          o.arr[1]._doc.arr = [{}, {}];\n          assert.deepEqual([{}, {}], o.arr[1]._doc.arr);\n          o.arr.push({\n            _doc: {\n              arr: 'something else'\n            }\n          });\n          o.arr.push({\n            _doc: {\n              arr: ['something else']\n            }\n          });\n          o.arr.push({\n            _doc: {\n              arr: [[]]\n            }\n          });\n          o.arr.push({\n            _doc: {\n              arr: [5]\n            }\n          });\n\n          // test\n          mpath.set('arr.arr.e', 47, o, special);\n          const weird = [];\n          weird.e = 47;\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108, null],\n                e: 47\n              }, {\n                a: {\n                  c: 48,\n                  b: [1],\n                  7: 46\n                },\n                e: 47\n              }, {\n                d: 'yep',\n                e: 47\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              arr: [{\n                e: 47\n              }, {\n                e: 47\n              }],\n              special: true,\n              yep: 0\n            }\n          }, {\n            _doc: {\n              arr: 'something else'\n            }\n          }, {\n            _doc: {\n              arr: ['something else']\n            }\n          }, {\n            _doc: {\n              arr: [weird]\n            }\n          }, {\n            _doc: {\n              arr: [5]\n            }\n          }], o.arr);\n          done();\n        });\n        it('with arrays', function (done) {\n          mpath.set('arr.arr.e', [[1, 2, 3], [4, 5], null, [], [6], [7, 8, 9]], o, special);\n          const weird = [];\n          weird.e = 6;\n          assert.deepEqual([{\n            yep: 47,\n            arr: [{\n              a: {\n                b: 47\n              }\n            }, {\n              a: {\n                c: 48\n              }\n            }, {\n              d: 'yep'\n            }],\n            _doc: {\n              yep: [15],\n              arr: [{\n                a: [4, 8, 15, 16, 23, 42, 108, null],\n                e: 1\n              }, {\n                a: {\n                  c: 48,\n                  b: [1],\n                  7: 46\n                },\n                e: 2\n              }, {\n                d: 'yep',\n                e: 3\n              }]\n            }\n          }, {\n            yep: true,\n            _doc: {\n              arr: [{\n                e: 4\n              }, {\n                e: 5\n              }],\n              special: true,\n              yep: 0\n            }\n          }, {\n            _doc: {\n              arr: 'something else'\n            }\n          }, {\n            _doc: {\n              arr: ['something else']\n            }\n          }, {\n            _doc: {\n              arr: [weird]\n            }\n          }, {\n            _doc: {\n              arr: [5]\n            }\n          }], o.arr);\n          done();\n        });\n      });\n      describe('that is a function', function () {\n        describe('without map', function () {\n          it('works on array value', function (done) {\n            const o = {\n              hello: {\n                world: [{\n                  how: 'are'\n                }, {\n                  you: '?'\n                }]\n              }\n            };\n            const special = function (obj, key, val) {\n              if (val) {\n                obj[key] = val;\n              } else {\n                return 'thing' == key ? obj.world : obj[key];\n              }\n            };\n            mpath.set('hello.thing.how', 'arrrr', o, special);\n            assert.deepEqual(o, {\n              hello: {\n                world: [{\n                  how: 'arrrr'\n                }, {\n                  you: '?',\n                  how: 'arrrr'\n                }]\n              }\n            });\n            done();\n          });\n          it('works on non-array value', function (done) {\n            const o = {\n              hello: {\n                world: {\n                  how: 'are you'\n                }\n              }\n            };\n            const special = function (obj, key, val) {\n              if (val) {\n                obj[key] = val;\n              } else {\n                return 'thing' == key ? obj.world : obj[key];\n              }\n            };\n            mpath.set('hello.thing.how', 'RU', o, special);\n            assert.deepEqual(o, {\n              hello: {\n                world: {\n                  how: 'RU'\n                }\n              }\n            });\n            done();\n          });\n        });\n        it('works with map', function (done) {\n          const o = {\n            hello: {\n              world: [{\n                how: 'are'\n              }, {\n                you: '?'\n              }]\n            }\n          };\n          const special = function (obj, key, val) {\n            if (val) {\n              obj[key] = val;\n            } else {\n              return 'thing' == key ? obj.world : obj[key];\n            }\n          };\n          const map = function (val) {\n            return 'convert' == val ? 'ºº' : val;\n          };\n          mpath.set('hello.thing.how', 'convert', o, special, map);\n          assert.deepEqual(o, {\n            hello: {\n              world: [{\n                how: 'ºº'\n              }, {\n                you: '?',\n                how: 'ºº'\n              }]\n            }\n          });\n          done();\n        });\n      });\n    });\n    describe('get/set integration', function () {\n      const o = doc();\n      it('works', function (done) {\n        const vals = mpath.get('array.o.array.x.b', o);\n        vals[0][0][2] = 10;\n        vals[1][0][1] = 0;\n        vals[1][1] = 'Rambaldi';\n        vals[1][2] = [12, 14];\n        vals[2] = [{\n          changed: true\n        }, [null, ['changed', 'to', 'array']]];\n        mpath.set('array.o.array.x.b', vals, o);\n        const t = [{\n          o: {\n            array: [{\n              x: {\n                b: [4, 6, 10]\n              }\n            }, {\n              y: 10\n            }]\n          }\n        }, {\n          o: {\n            array: [{\n              x: {\n                b: [1, 0, 3]\n              }\n            }, {\n              x: {\n                b: 'Rambaldi',\n                z: 10\n              }\n            }, {\n              x: {\n                b: [12, 14]\n              }\n            }]\n          }\n        }, {\n          o: {\n            array: [{\n              x: {\n                b: {\n                  changed: true\n                }\n              }\n            }, {\n              x: {\n                b: [null, ['changed', 'to', 'array']]\n              }\n            }]\n          }\n        }, {\n          o: {\n            array: [{\n              x: null\n            }]\n          }\n        }, {\n          o: {\n            array: [{\n              y: 3\n            }]\n          }\n        }, {\n          o: {\n            array: [3, 0, null]\n          }\n        }, {\n          o: {\n            name: 'ha'\n          }\n        }];\n        assert.deepEqual(t, o.array);\n        done();\n      });\n      it('array.prop', function (done) {\n        mpath.set('comments.name', ['this', 'was', 'changed'], o);\n        assert.deepEqual([{\n          name: 'this'\n        }, {\n          name: 'was',\n          _doc: {\n            name: '2'\n          }\n        }, {\n          name: 'changed',\n          comments: [{}, {\n            comments: [{\n              val: 'twoo'\n            }]\n          }],\n          _doc: {\n            name: '3',\n            comments: [{}, {\n              _doc: {\n                comments: [{\n                  val: 2\n                }]\n              }\n            }]\n          }\n        }], o.comments);\n        mpath.set('comments.name', ['also', 'changed', 'this'], o, special);\n        assert.deepEqual([{\n          name: 'also'\n        }, {\n          name: 'was',\n          _doc: {\n            name: 'changed'\n          }\n        }, {\n          name: 'changed',\n          comments: [{}, {\n            comments: [{\n              val: 'twoo'\n            }]\n          }],\n          _doc: {\n            name: 'this',\n            comments: [{}, {\n              _doc: {\n                comments: [{\n                  val: 2\n                }]\n              }\n            }]\n          }\n        }], o.comments);\n        done();\n      });\n      it('nested array', function (done) {\n        const obj = {\n          arr: [[{\n            test: 41\n          }]]\n        };\n        mpath.set('arr.test', [[42]], obj);\n        assert.deepEqual(obj.arr, [[{\n          test: 42\n        }]]);\n        done();\n      });\n    });\n    describe('multiple $ use', function () {\n      const o = doc();\n      it('is ok', function (done) {\n        assert.doesNotThrow(function () {\n          mpath.set('arr.$.arr.$.a', 35, o);\n        });\n        done();\n      });\n    });\n    it('has', function (done) {\n      assert.ok(mpath.has('a', {\n        a: 1\n      }));\n      assert.ok(mpath.has('a', {\n        a: undefined\n      }));\n      assert.ok(!mpath.has('a', {}));\n      assert.ok(!mpath.has('a', null));\n      assert.ok(mpath.has('a.b', {\n        a: {\n          b: 1\n        }\n      }));\n      assert.ok(mpath.has('a.b', {\n        a: {\n          b: undefined\n        }\n      }));\n      assert.ok(!mpath.has('a.b', {\n        a: 1\n      }));\n      assert.ok(!mpath.has('a.b', {\n        a: null\n      }));\n      done();\n    });\n    it('underneath a map', function (done) {\n      if (!global.Map) {\n        done();\n        return;\n      }\n      assert.equal(mpath.get('a.b', {\n        a: new Map([['b', 1]])\n      }), 1);\n      const m = new Map([['b', 1]]);\n      const obj = {\n        a: m\n      };\n      mpath.set('a.c', 2, obj);\n      assert.equal(m.get('c'), 2);\n      done();\n    });\n    it('unset', function (done) {\n      let o = {\n        a: 1\n      };\n      mpath.unset('a', o);\n      assert.deepEqual(o, {});\n      o = {\n        a: {\n          b: 1\n        }\n      };\n      mpath.unset('a.b', o);\n      assert.deepEqual(o, {\n        a: {}\n      });\n      o = {\n        a: null\n      };\n      mpath.unset('a.b', o);\n      assert.deepEqual(o, {\n        a: null\n      });\n      done();\n    });\n    it('unset with __proto__', function (done) {\n      // Should refuse to set __proto__\n      function Clazz() {}\n      Clazz.prototype.foobar = true;\n      mpath.unset('__proto__.foobar', new Clazz());\n      assert.ok(Clazz.prototype.foobar);\n      mpath.unset('constructor.prototype.foobar', new Clazz());\n      assert.ok(Clazz.prototype.foobar);\n      done();\n    });\n    it('get() underneath subclassed array', function (done) {\n      class MyArray extends Array {}\n      const obj = {\n        arr: new MyArray()\n      };\n      obj.arr.push({\n        test: 2\n      });\n      const arr = mpath.get('arr.test', obj);\n      assert.equal(arr.constructor.name, 'Array');\n      assert.ok(!(arr instanceof MyArray));\n      done();\n    });\n    it('ignores setting a nested path that doesnt exist', function (done) {\n      const o = doc();\n      assert.doesNotThrow(function () {\n        mpath.set('thing.that.is.new', 10, o);\n      });\n      done();\n    });\n  });\n});","map":{"version":3,"names":["mpath","require","assert","log","o","console","inspect","special","describe","doc","first","second","third","name","comments","_doc","val","array","x","b","y","z","arr","a","c","d","yep","it","done","throws","get","Math","Buffer","doesNotThrow","equal","deepEqual","undefined","v","Array","isArray","map","set","obj","key","overide","path","ok","expand","length","xtra","e","a1","a2","push","weird","expander","toUpperCase","Object","hello","world","how","you","vals","changed","t","test","has","global","Map","m","unset","Clazz","prototype","foobar","MyArray","constructor"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mpath/test/index.js"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * Test dependencies.\r\n */\r\n\r\nconst mpath = require('../');\r\nconst assert = require('assert');\r\n\r\n/**\r\n * logging helper\r\n */\r\n\r\nfunction log(o) {\r\n  console.log();\r\n  console.log(require('util').inspect(o, false, 1000));\r\n}\r\n\r\n/**\r\n * special path for override tests\r\n */\r\n\r\nconst special = '_doc';\r\n\r\n/**\r\n * Tests\r\n */\r\n\r\ndescribe('mpath', function() {\r\n\r\n  /**\r\n   * test doc creator\r\n   */\r\n\r\n  function doc() {\r\n    const o = { first: { second: { third: [3, { name: 'aaron' }, 9] } } };\r\n    o.comments = [\r\n      { name: 'one' },\r\n      { name: 'two', _doc: { name: '2' } },\r\n      { name: 'three',\r\n        comments: [{}, { comments: [{ val: 'twoo' }] }],\r\n        _doc: { name: '3', comments: [{}, { _doc: { comments: [{ val: 2 }] } }] } }\r\n    ];\r\n    o.name = 'jiro';\r\n    o.array = [\r\n      { o: { array: [{ x: { b: [4, 6, 8] } }, { y: 10 }] } },\r\n      { o: { array: [{ x: { b: [1, 2, 3] } }, { x: { z: 10 } }, { x: { b: 'hi' } }] } },\r\n      { o: { array: [{ x: { b: null } }, { x: { b: [null, 1] } }] } },\r\n      { o: { array: [{ x: null }] } },\r\n      { o: { array: [{ y: 3 }] } },\r\n      { o: { array: [3, 0, null] } },\r\n      { o: { name: 'ha' } }\r\n    ];\r\n    o.arr = [\r\n      { arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n      { yep: true }\r\n    ];\r\n    return o;\r\n  }\r\n\r\n  describe('get', function() {\r\n    const o = doc();\r\n\r\n    it('`path` must be a string or array', function(done) {\r\n      assert.throws(function() {\r\n        mpath.get({}, o);\r\n      }, /Must be either string or array/);\r\n      assert.throws(function() {\r\n        mpath.get(4, o);\r\n      }, /Must be either string or array/);\r\n      assert.throws(function() {\r\n        mpath.get(function() {}, o);\r\n      }, /Must be either string or array/);\r\n      assert.throws(function() {\r\n        mpath.get(/asdf/, o);\r\n      }, /Must be either string or array/);\r\n      assert.throws(function() {\r\n        mpath.get(Math, o);\r\n      }, /Must be either string or array/);\r\n      assert.throws(function() {\r\n        mpath.get(Buffer, o);\r\n      }, /Must be either string or array/);\r\n      assert.doesNotThrow(function() {\r\n        mpath.get('string', o);\r\n      });\r\n      assert.doesNotThrow(function() {\r\n        mpath.get([], o);\r\n      });\r\n      done();\r\n    });\r\n\r\n    describe('without `special`', function() {\r\n      it('works', function(done) {\r\n        assert.equal('jiro', mpath.get('name', o));\r\n\r\n        assert.deepEqual(\r\n          { second: { third: [3, { name: 'aaron' }, 9] } }\r\n          , mpath.get('first', o)\r\n        );\r\n\r\n        assert.deepEqual(\r\n          { third: [3, { name: 'aaron' }, 9] }\r\n          , mpath.get('first.second', o)\r\n        );\r\n\r\n        assert.deepEqual(\r\n          [3, { name: 'aaron' }, 9]\r\n          , mpath.get('first.second.third', o)\r\n        );\r\n\r\n        assert.deepEqual(\r\n          3\r\n          , mpath.get('first.second.third.0', o)\r\n        );\r\n\r\n        assert.deepEqual(\r\n          9\r\n          , mpath.get('first.second.third.2', o)\r\n        );\r\n\r\n        assert.deepEqual(\r\n          { name: 'aaron' }\r\n          , mpath.get('first.second.third.1', o)\r\n        );\r\n\r\n        assert.deepEqual(\r\n          'aaron'\r\n          , mpath.get('first.second.third.1.name', o)\r\n        );\r\n\r\n        assert.deepEqual([\r\n          { name: 'one' },\r\n          { name: 'two', _doc: { name: '2' } },\r\n          { name: 'three',\r\n            comments: [{}, { comments: [{ val: 'twoo' }] }],\r\n            _doc: { name: '3', comments: [{}, { _doc: { comments: [{ val: 2 }] } }] } }],\r\n        mpath.get('comments', o));\r\n\r\n        assert.deepEqual({ name: 'one' }, mpath.get('comments.0', o));\r\n        assert.deepEqual('one', mpath.get('comments.0.name', o));\r\n        assert.deepEqual('two', mpath.get('comments.1.name', o));\r\n        assert.deepEqual('three', mpath.get('comments.2.name', o));\r\n\r\n        assert.deepEqual([{}, { comments: [{ val: 'twoo' }] }]\r\n          , mpath.get('comments.2.comments', o));\r\n\r\n        assert.deepEqual({ comments: [{ val: 'twoo' }] }\r\n          , mpath.get('comments.2.comments.1', o));\r\n\r\n        assert.deepEqual('twoo', mpath.get('comments.2.comments.1.comments.0.val', o));\r\n\r\n        done();\r\n      });\r\n\r\n      it('handles array.property dot-notation', function(done) {\r\n        assert.deepEqual(\r\n          ['one', 'two', 'three']\r\n          , mpath.get('comments.name', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.array notation', function(done) {\r\n        assert.deepEqual(\r\n          [undefined, undefined, [{}, { comments: [{ val: 'twoo' }] }]]\r\n          , mpath.get('comments.comments', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles prop.prop.prop.arrayProperty notation', function(done) {\r\n        assert.deepEqual(\r\n          [undefined, 'aaron', undefined]\r\n          , mpath.get('first.second.third.name', o)\r\n        );\r\n        assert.deepEqual(\r\n          [1, 'aaron', 1]\r\n          , mpath.get('first.second.third.name', o, function(v) {\r\n            return undefined === v ? 1 : v;\r\n          })\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.prop.array', function(done) {\r\n        assert.deepEqual(\r\n          [[{ x: { b: [4, 6, 8] } }, { y: 10 }],\r\n            [{ x: { b: [1, 2, 3] } }, { x: { z: 10 } }, { x: { b: 'hi' } }],\r\n            [{ x: { b: null } }, { x: { b: [null, 1] } }],\r\n            [{ x: null }],\r\n            [{ y: 3 }],\r\n            [3, 0, null],\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.prop.array.index', function(done) {\r\n        assert.deepEqual(\r\n          [{ x: { b: [4, 6, 8] } },\r\n            { x: { b: [1, 2, 3] } },\r\n            { x: { b: null } },\r\n            { x: null },\r\n            { y: 3 },\r\n            3,\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array.0', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.prop.array.index.prop', function(done) {\r\n        assert.deepEqual(\r\n          [{ b: [4, 6, 8] },\r\n            { b: [1, 2, 3] },\r\n            { b: null },\r\n            null,\r\n            undefined,\r\n            undefined,\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array.0.x', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.prop.array.prop', function(done) {\r\n        assert.deepEqual(\r\n          [[undefined, 10],\r\n            [undefined, undefined, undefined],\r\n            [undefined, undefined],\r\n            [undefined],\r\n            [3],\r\n            [undefined, undefined, undefined],\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array.y', o)\r\n        );\r\n        assert.deepEqual(\r\n          [[{ b: [4, 6, 8] }, undefined],\r\n            [{ b: [1, 2, 3] }, { z: 10 }, { b: 'hi' }],\r\n            [{ b: null }, { b: [null, 1] }],\r\n            [null],\r\n            [undefined],\r\n            [undefined, undefined, undefined],\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array.x', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.prop.array.prop.prop', function(done) {\r\n        assert.deepEqual(\r\n          [[[4, 6, 8], undefined],\r\n            [[1, 2, 3], undefined, 'hi'],\r\n            [null, [null, 1]],\r\n            [null],\r\n            [undefined],\r\n            [undefined, undefined, undefined],\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array.x.b', o)\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.prop.array.prop.prop.index', function(done) {\r\n        assert.deepEqual(\r\n          [[6, undefined],\r\n            [2, undefined, 'i'], // undocumented feature (string indexing)\r\n            [null, 1],\r\n            [null],\r\n            [undefined],\r\n            [undefined, undefined, undefined],\r\n            undefined\r\n          ]\r\n          , mpath.get('array.o.array.x.b.1', o)\r\n        );\r\n        assert.deepEqual(\r\n          [[6, 0],\r\n            [2, 0, 'i'], // undocumented feature (string indexing)\r\n            [null, 1],\r\n            [null],\r\n            [0],\r\n            [0, 0, 0],\r\n            0\r\n          ]\r\n          , mpath.get('array.o.array.x.b.1', o, function(v) {\r\n            return undefined === v ? 0 : v;\r\n          })\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.index.prop.prop', function(done) {\r\n        assert.deepEqual(\r\n          [{ x: { b: [1, 2, 3] } }, { x: { z: 10 } }, { x: { b: 'hi' } }]\r\n          , mpath.get('array.1.o.array', o)\r\n        );\r\n        assert.deepEqual(\r\n          ['hi', 'hi', 'hi']\r\n          , mpath.get('array.1.o.array', o, function(v) {\r\n            if (Array.isArray(v)) {\r\n              return v.map(function(val) {\r\n                return 'hi';\r\n              });\r\n            }\r\n            return v;\r\n          })\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.array.index', function(done) {\r\n        assert.deepEqual(\r\n          [{ a: { c: 48 } }, undefined]\r\n          , mpath.get('arr.arr.1', o)\r\n        );\r\n        assert.deepEqual(\r\n          ['woot', undefined]\r\n          , mpath.get('arr.arr.1', o, function(v) {\r\n            if (v && v.a && v.a.c) return 'woot';\r\n            return v;\r\n          })\r\n        );\r\n        done();\r\n      });\r\n\r\n      it('handles array.array.index.prop', function(done) {\r\n        assert.deepEqual(\r\n          [{ c: 48 }, 'woot']\r\n          , mpath.get('arr.arr.1.a', o, function(v) {\r\n            if (undefined === v) return 'woot';\r\n            return v;\r\n          })\r\n        );\r\n        assert.deepEqual(\r\n          [{ c: 48 }, undefined]\r\n          , mpath.get('arr.arr.1.a', o)\r\n        );\r\n        mpath.set('arr.arr.1.a', [{ c: 49 }, undefined], o);\r\n        assert.deepEqual(\r\n          [{ c: 49 }, undefined]\r\n          , mpath.get('arr.arr.1.a', o)\r\n        );\r\n        mpath.set('arr.arr.1.a', [{ c: 48 }, undefined], o);\r\n        done();\r\n      });\r\n\r\n      it('handles array.array.index.prop.prop', function(done) {\r\n        assert.deepEqual(\r\n          [48, undefined]\r\n          , mpath.get('arr.arr.1.a.c', o)\r\n        );\r\n        assert.deepEqual(\r\n          [48, 'woot']\r\n          , mpath.get('arr.arr.1.a.c', o, function(v) {\r\n            if (undefined === v) return 'woot';\r\n            return v;\r\n          })\r\n        );\r\n        done();\r\n      });\r\n\r\n    });\r\n\r\n    describe('with `special`', function() {\r\n      describe('that is a string', function() {\r\n        it('works', function(done) {\r\n          assert.equal('jiro', mpath.get('name', o, special));\r\n\r\n          assert.deepEqual(\r\n            { second: { third: [3, { name: 'aaron' }, 9] } }\r\n            , mpath.get('first', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            { third: [3, { name: 'aaron' }, 9] }\r\n            , mpath.get('first.second', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            [3, { name: 'aaron' }, 9]\r\n            , mpath.get('first.second.third', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            3\r\n            , mpath.get('first.second.third.0', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            4\r\n            , mpath.get('first.second.third.0', o, special, function(v) {\r\n              return 3 === v ? 4 : v;\r\n            })\r\n          );\r\n\r\n          assert.deepEqual(\r\n            9\r\n            , mpath.get('first.second.third.2', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            { name: 'aaron' }\r\n            , mpath.get('first.second.third.1', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            'aaron'\r\n            , mpath.get('first.second.third.1.name', o, special)\r\n          );\r\n\r\n          assert.deepEqual([\r\n            { name: 'one' },\r\n            { name: 'two', _doc: { name: '2' } },\r\n            { name: 'three',\r\n              comments: [{}, { comments: [{ val: 'twoo' }] }],\r\n              _doc: { name: '3', comments: [{}, { _doc: { comments: [{ val: 2 }] } }] } }],\r\n          mpath.get('comments', o, special));\r\n\r\n          assert.deepEqual({ name: 'one' }, mpath.get('comments.0', o, special));\r\n          assert.deepEqual('one', mpath.get('comments.0.name', o, special));\r\n          assert.deepEqual('2', mpath.get('comments.1.name', o, special));\r\n          assert.deepEqual('3', mpath.get('comments.2.name', o, special));\r\n          assert.deepEqual('nice', mpath.get('comments.2.name', o, special, function(v) {\r\n            return '3' === v ? 'nice' : v;\r\n          }));\r\n\r\n          assert.deepEqual([{}, { _doc: { comments: [{ val: 2 }] } }]\r\n            , mpath.get('comments.2.comments', o, special));\r\n\r\n          assert.deepEqual({ _doc: { comments: [{ val: 2 }] } }\r\n            , mpath.get('comments.2.comments.1', o, special));\r\n\r\n          assert.deepEqual(2, mpath.get('comments.2.comments.1.comments.0.val', o, special));\r\n          done();\r\n        });\r\n\r\n        it('handles array.property dot-notation', function(done) {\r\n          assert.deepEqual(\r\n            ['one', '2', '3']\r\n            , mpath.get('comments.name', o, special)\r\n          );\r\n          assert.deepEqual(\r\n            ['one', 2, '3']\r\n            , mpath.get('comments.name', o, special, function(v) {\r\n              return '2' === v ? 2 : v;\r\n            })\r\n          );\r\n          done();\r\n        });\r\n\r\n        it('handles array.array notation', function(done) {\r\n          assert.deepEqual(\r\n            [undefined, undefined, [{}, { _doc: { comments: [{ val: 2 }] } }]]\r\n            , mpath.get('comments.comments', o, special)\r\n          );\r\n          done();\r\n        });\r\n\r\n        it('handles array.array.index.array', function(done) {\r\n          assert.deepEqual(\r\n            [undefined, undefined, [{ val: 2 }]]\r\n            , mpath.get('comments.comments.1.comments', o, special)\r\n          );\r\n          done();\r\n        });\r\n\r\n        it('handles array.array.index.array.prop', function(done) {\r\n          assert.deepEqual(\r\n            [undefined, undefined, [2]]\r\n            , mpath.get('comments.comments.1.comments.val', o, special)\r\n          );\r\n          assert.deepEqual(\r\n            ['nil', 'nil', [2]]\r\n            , mpath.get('comments.comments.1.comments.val', o, special, function(v) {\r\n              return undefined === v ? 'nil' : v;\r\n            })\r\n          );\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('that is a function', function() {\r\n        const special = function(obj, key) {\r\n          return obj[key];\r\n        };\r\n\r\n        it('works', function(done) {\r\n          assert.equal('jiro', mpath.get('name', o, special));\r\n\r\n          assert.deepEqual(\r\n            { second: { third: [3, { name: 'aaron' }, 9] } }\r\n            , mpath.get('first', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            { third: [3, { name: 'aaron' }, 9] }\r\n            , mpath.get('first.second', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            [3, { name: 'aaron' }, 9]\r\n            , mpath.get('first.second.third', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            3\r\n            , mpath.get('first.second.third.0', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            4\r\n            , mpath.get('first.second.third.0', o, special, function(v) {\r\n              return 3 === v ? 4 : v;\r\n            })\r\n          );\r\n\r\n          assert.deepEqual(\r\n            9\r\n            , mpath.get('first.second.third.2', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            { name: 'aaron' }\r\n            , mpath.get('first.second.third.1', o, special)\r\n          );\r\n\r\n          assert.deepEqual(\r\n            'aaron'\r\n            , mpath.get('first.second.third.1.name', o, special)\r\n          );\r\n\r\n          assert.deepEqual([\r\n            { name: 'one' },\r\n            { name: 'two', _doc: { name: '2' } },\r\n            { name: 'three',\r\n              comments: [{}, { comments: [{ val: 'twoo' }] }],\r\n              _doc: { name: '3', comments: [{}, { _doc: { comments: [{ val: 2 }] } }] } }],\r\n          mpath.get('comments', o, special));\r\n\r\n          assert.deepEqual({ name: 'one' }, mpath.get('comments.0', o, special));\r\n          assert.deepEqual('one', mpath.get('comments.0.name', o, special));\r\n          assert.deepEqual('two', mpath.get('comments.1.name', o, special));\r\n          assert.deepEqual('three', mpath.get('comments.2.name', o, special));\r\n          assert.deepEqual('nice', mpath.get('comments.2.name', o, special, function(v) {\r\n            return 'three' === v ? 'nice' : v;\r\n          }));\r\n\r\n          assert.deepEqual([{}, { comments: [{ val: 'twoo' }] }]\r\n            , mpath.get('comments.2.comments', o, special));\r\n\r\n          assert.deepEqual({ comments: [{ val: 'twoo' }] }\r\n            , mpath.get('comments.2.comments.1', o, special));\r\n\r\n          assert.deepEqual('twoo', mpath.get('comments.2.comments.1.comments.0.val', o, special));\r\n\r\n          let overide = false;\r\n          assert.deepEqual('twoo', mpath.get('comments.8.comments.1.comments.0.val', o, function(obj, path) {\r\n            if (Array.isArray(obj) && 8 == path) {\r\n              overide = true;\r\n              return obj[2];\r\n            }\r\n            return obj[path];\r\n          }));\r\n          assert.ok(overide);\r\n\r\n          done();\r\n        });\r\n\r\n        it('in combination with map', function(done) {\r\n          const special = function(obj, key) {\r\n            if (Array.isArray(obj)) return obj[key];\r\n            return obj.mpath;\r\n          };\r\n          const map = function(val) {\r\n            return 'convert' == val\r\n              ? 'mpath'\r\n              : val;\r\n          };\r\n          const o = { mpath: [{ mpath: 'converse' }, { mpath: 'convert' }] };\r\n\r\n          assert.equal('mpath', mpath.get('something.1.kewl', o, special, map));\r\n          done();\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('set', function() {\r\n    it('prevents writing to __proto__', function() {\r\n      const obj = {};\r\n      mpath.set('__proto__.x', 'foobar', obj);\r\n      assert.ok(!({}.x));\r\n\r\n      mpath.set('constructor.prototype.x', 'foobar', obj);\r\n      assert.ok(!({}.x));\r\n    });\r\n\r\n    describe('without `special`', function() {\r\n      const o = doc();\r\n\r\n      it('works', function(done) {\r\n        mpath.set('name', 'a new val', o, function(v) {\r\n          return 'a new val' === v ? 'changed' : v;\r\n        });\r\n        assert.deepEqual('changed', o.name);\r\n\r\n        mpath.set('name', 'changed', o);\r\n        assert.deepEqual('changed', o.name);\r\n\r\n        mpath.set('first.second.third', [1, { name: 'x' }, 9], o);\r\n        assert.deepEqual([1, { name: 'x' }, 9], o.first.second.third);\r\n\r\n        mpath.set('first.second.third.1.name', 'y', o);\r\n        assert.deepEqual([1, { name: 'y' }, 9], o.first.second.third);\r\n\r\n        mpath.set('comments.1.name', 'ttwwoo', o);\r\n        assert.deepEqual({ name: 'ttwwoo', _doc: { name: '2' } }, o.comments[1]);\r\n\r\n        mpath.set('comments.2.comments.1.comments.0.expand', 'added', o);\r\n        assert.deepEqual(\r\n          { val: 'twoo', expand: 'added' }\r\n          , o.comments[2].comments[1].comments[0]);\r\n\r\n        mpath.set('comments.2.comments.1.comments.2', 'added', o);\r\n        assert.equal(3, o.comments[2].comments[1].comments.length);\r\n        assert.deepEqual(\r\n          { val: 'twoo', expand: 'added' }\r\n          , o.comments[2].comments[1].comments[0]);\r\n        assert.deepEqual(\r\n          undefined\r\n          , o.comments[2].comments[1].comments[1]);\r\n        assert.deepEqual(\r\n          'added'\r\n          , o.comments[2].comments[1].comments[2]);\r\n\r\n        done();\r\n      });\r\n\r\n      describe('array.path', function() {\r\n        describe('with single non-array value', function() {\r\n          it('works', function(done) {\r\n            mpath.set('arr.yep', false, o, function(v) {\r\n              return false === v ? true : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: true, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', false, o);\r\n\r\n            assert.deepEqual([\r\n              { yep: false, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: false }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n        describe('with array of values', function() {\r\n          it('that are equal in length', function(done) {\r\n            mpath.set('arr.yep', ['one', 2], o, function(v) {\r\n              return 'one' === v ? 1 : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 1, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 2 }\r\n            ], o.arr);\r\n            mpath.set('arr.yep', ['one', 2], o);\r\n\r\n            assert.deepEqual([\r\n              { yep: 'one', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 2 }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n\r\n          it('that is less than length', function(done) {\r\n            mpath.set('arr.yep', [47], o, function(v) {\r\n              return 47 === v ? 4 : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 4, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 2 }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', [47], o);\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 2 }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n\r\n          it('that is greater than length', function(done) {\r\n            mpath.set('arr.yep', [5, 6, 7], o, function(v) {\r\n              return 5 === v ? 'five' : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 'five', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 6 }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', [5, 6, 7], o);\r\n            assert.deepEqual([\r\n              { yep: 5, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 6 }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n      });\r\n\r\n      describe('array.$.path', function() {\r\n        describe('with single non-array value', function() {\r\n          it('copies the value to each item in array', function(done) {\r\n            mpath.set('arr.$.yep', { xtra: 'double good' }, o, function(v) {\r\n              return v && v.xtra ? 'hi' : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 'hi', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: 'hi' }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.$.yep', { xtra: 'double good' }, o);\r\n            assert.deepEqual([\r\n              { yep: { xtra: 'double good' }, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: { xtra: 'double good' } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n        describe('with array of values', function() {\r\n          it('copies the value to each item in array', function(done) {\r\n            mpath.set('arr.$.yep', [15], o, function(v) {\r\n              return v.length === 1 ? [] : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: [], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: [] }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.$.yep', [15], o);\r\n            assert.deepEqual([\r\n              { yep: [15], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: [15] }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n      });\r\n\r\n      describe('array.index.path', function() {\r\n        it('works', function(done) {\r\n          mpath.set('arr.1.yep', 0, o, function(v) {\r\n            return 0 === v ? 'zero' : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n            { yep: 'zero' }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.1.yep', 0, o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.index.array.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.0.arr.e', 35, o, function(v) {\r\n            return 35 === v ? 3 : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 47 }, e: 3 }, { a: { c: 48 }, e: 3 }, { d: 'yep', e: 3 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.e', 35, o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 47 }, e: 35 }, { a: { c: 48 }, e: 35 }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.0.arr.e', ['a', 'b'], o, function(v) {\r\n            return 'a' === v ? 'x' : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 47 }, e: 'x' }, { a: { c: 48 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.e', ['a', 'b'], o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 47 }, e: 'a' }, { a: { c: 48 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.index.array.path.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.0.arr.a.b', 36, o, function(v) {\r\n            return 36 === v ? 3 : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 3 }, e: 'a' }, { a: { c: 48, b: 3 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.a.b', 36, o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 36 }, e: 'a' }, { a: { c: 48, b: 36 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, function(v) {\r\n            return 2 === v ? 'two' : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 1 }, e: 'a' }, { a: { c: 48, b: 'two' }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 1 }, e: 'a' }, { a: { c: 48, b: 2 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.index.array.$.path.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.0.arr.$.a.b', '$', o, function(v) {\r\n            return '$' === v ? 'dolla billz' : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: 'dolla billz' }, e: 'a' }, { a: { c: 48, b: 'dolla billz' }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.$.a.b', '$', o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: '$' }, e: 'a' }, { a: { c: 48, b: '$' }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.0.arr.$.a.b', [1], o, function(v) {\r\n            return Array.isArray(v) ? {} : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: {} }, e: 'a' }, { a: { c: 48, b: {} }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.$.a.b', [1], o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: { b: [1] }, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.array.index.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.arr.0.a', 'single', o, function(v) {\r\n            return 'single' === v ? 'double' : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 'double', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.0.a', 'single', o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 'single', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o, function(v) {\r\n            return 4 === v ? 3 : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 3, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: false }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 4, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: false }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.array.$.index.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.arr.$.0.a', 'singles', o, function(v) {\r\n            return 0;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 0, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.$.0.a', 'singles', o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 'singles', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('$.arr.arr.0.a', 'single', o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 'single', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o, function(v) {\r\n            return 'nope';\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: 'nope', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42], e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.$.arr.0.a', [4, 8, 15, 16, 23, 42, 108], o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108], e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.array.path.index', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.arr.a.7', 47, o, function(v) {\r\n            return 1;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, 1], e: 'a' }, { a: { c: 48, b: [1], 7: 1 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.a.7', 47, o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, 47], e: 'a' }, { a: { c: 48, b: [1], 7: 47 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0 }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          o.arr[1].arr = [{ a: [] }, { a: [] }, { a: null }];\r\n          mpath.set('arr.arr.a.7', [[null, 46], [undefined, 'woot']], o);\r\n\r\n          const a1 = [];\r\n          const a2 = [];\r\n          a1[7] = undefined;\r\n          a2[7] = 'woot';\r\n\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, null], e: 'a' }, { a: { c: 48, b: [1], 7: 46 }, e: 'b' }, { d: 'yep', e: 35 }] },\r\n            { yep: 0, arr: [{ a: a1 }, { a: a2 }, { a: null }] }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('handles array.array.path', function() {\r\n        it('with single', function(done) {\r\n          o.arr[1].arr = [{}, {}];\r\n          assert.deepEqual([{}, {}], o.arr[1].arr);\r\n          o.arr.push({ arr: 'something else' });\r\n          o.arr.push({ arr: ['something else'] });\r\n          o.arr.push({ arr: [[]] });\r\n          o.arr.push({ arr: [5] });\r\n\r\n          const weird = [];\r\n          weird.e = 'xmas';\r\n\r\n          // test\r\n          mpath.set('arr.arr.e', 47, o, function(v) {\r\n            return 'xmas';\r\n          });\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [\r\n              { a: [4, 8, 15, 16, 23, 42, 108, null], e: 'xmas' },\r\n              { a: { c: 48, b: [1], 7: 46 }, e: 'xmas' },\r\n              { d: 'yep', e: 'xmas' }\r\n            ]\r\n            },\r\n            { yep: 0, arr: [{ e: 'xmas' }, { e: 'xmas' }] },\r\n            { arr: 'something else' },\r\n            { arr: ['something else'] },\r\n            { arr: [weird] },\r\n            { arr: [5] }\r\n          ]\r\n          , o.arr);\r\n\r\n          weird.e = 47;\r\n\r\n          mpath.set('arr.arr.e', 47, o);\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [\r\n              { a: [4, 8, 15, 16, 23, 42, 108, null], e: 47 },\r\n              { a: { c: 48, b: [1], 7: 46 }, e: 47 },\r\n              { d: 'yep', e: 47 }\r\n            ]\r\n            },\r\n            { yep: 0, arr: [{ e: 47 }, { e: 47 }] },\r\n            { arr: 'something else' },\r\n            { arr: ['something else'] },\r\n            { arr: [weird] },\r\n            { arr: [5] }\r\n          ]\r\n          , o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with arrays', function(done) {\r\n          mpath.set('arr.arr.e', [[1, 2, 3], [4, 5], null, [], [6], [7, 8, 9]], o, function(v) {\r\n            return 10;\r\n          });\r\n\r\n          const weird = [];\r\n          weird.e = 10;\r\n\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [\r\n              { a: [4, 8, 15, 16, 23, 42, 108, null], e: 10 },\r\n              { a: { c: 48, b: [1], 7: 46 }, e: 10 },\r\n              { d: 'yep', e: 10 }\r\n            ]\r\n            },\r\n            { yep: 0, arr: [{ e: 10 }, { e: 10 }] },\r\n            { arr: 'something else' },\r\n            { arr: ['something else'] },\r\n            { arr: [weird] },\r\n            { arr: [5] }\r\n          ]\r\n          , o.arr);\r\n\r\n          mpath.set('arr.arr.e', [[1, 2, 3], [4, 5], null, [], [6], [7, 8, 9]], o);\r\n\r\n          weird.e = 6;\r\n\r\n          assert.deepEqual([\r\n            { yep: [15], arr: [\r\n              { a: [4, 8, 15, 16, 23, 42, 108, null], e: 1 },\r\n              { a: { c: 48, b: [1], 7: 46 }, e: 2 },\r\n              { d: 'yep', e: 3 }\r\n            ]\r\n            },\r\n            { yep: 0, arr: [{ e: 4 }, { e: 5 }] },\r\n            { arr: 'something else' },\r\n            { arr: ['something else'] },\r\n            { arr: [weird] },\r\n            { arr: [5] }\r\n          ]\r\n          , o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n    });\r\n\r\n    describe('with `special`', function() {\r\n      const o = doc();\r\n\r\n      it('works', function(done) {\r\n        mpath.set('name', 'chan', o, special, function(v) {\r\n          return 'hi';\r\n        });\r\n        assert.deepEqual('hi', o.name);\r\n\r\n        mpath.set('name', 'changer', o, special);\r\n        assert.deepEqual('changer', o.name);\r\n\r\n        mpath.set('first.second.third', [1, { name: 'y' }, 9], o, special);\r\n        assert.deepEqual([1, { name: 'y' }, 9], o.first.second.third);\r\n\r\n        mpath.set('first.second.third.1.name', 'z', o, special);\r\n        assert.deepEqual([1, { name: 'z' }, 9], o.first.second.third);\r\n\r\n        mpath.set('comments.1.name', 'ttwwoo', o, special);\r\n        assert.deepEqual({ name: 'two', _doc: { name: 'ttwwoo' } }, o.comments[1]);\r\n\r\n        mpath.set('comments.2.comments.1.comments.0.expander', 'adder', o, special, function(v) {\r\n          return 'super';\r\n        });\r\n        assert.deepEqual(\r\n          { val: 2, expander: 'super' }\r\n          , o.comments[2]._doc.comments[1]._doc.comments[0]);\r\n\r\n        mpath.set('comments.2.comments.1.comments.0.expander', 'adder', o, special);\r\n        assert.deepEqual(\r\n          { val: 2, expander: 'adder' }\r\n          , o.comments[2]._doc.comments[1]._doc.comments[0]);\r\n\r\n        mpath.set('comments.2.comments.1.comments.2', 'set', o, special);\r\n        assert.equal(3, o.comments[2]._doc.comments[1]._doc.comments.length);\r\n        assert.deepEqual(\r\n          { val: 2, expander: 'adder' }\r\n          , o.comments[2]._doc.comments[1]._doc.comments[0]);\r\n        assert.deepEqual(\r\n          undefined\r\n          , o.comments[2]._doc.comments[1]._doc.comments[1]);\r\n        assert.deepEqual(\r\n          'set'\r\n          , o.comments[2]._doc.comments[1]._doc.comments[2]);\r\n        done();\r\n      });\r\n\r\n      describe('array.path', function() {\r\n        describe('with single non-array value', function() {\r\n          it('works', function(done) {\r\n            o.arr[1]._doc = { special: true };\r\n\r\n            mpath.set('arr.yep', false, o, special, function(v) {\r\n              return 'yes';\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 'yes', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true, _doc: { special: true, yep: 'yes' } }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', false, o, special);\r\n            assert.deepEqual([\r\n              { yep: false, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true, _doc: { special: true, yep: false } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n        describe('with array of values', function() {\r\n          it('that are equal in length', function(done) {\r\n            mpath.set('arr.yep', ['one', 2], o, special, function(v) {\r\n              return 2 === v ? 20 : v;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 'one', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true, _doc: { special: true, yep: 20 } }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', ['one', 2], o, special);\r\n            assert.deepEqual([\r\n              { yep: 'one', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true, _doc: { special: true, yep: 2 } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n\r\n          it('that is less than length', function(done) {\r\n            mpath.set('arr.yep', [47], o, special, function(v) {\r\n              return 80;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 80, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true, _doc: { special: true, yep: 2 } }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', [47], o, special);\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] },\r\n              { yep: true, _doc: { special: true, yep: 2 } }\r\n            ], o.arr);\r\n\r\n            // add _doc to first element\r\n            o.arr[0]._doc = { yep: 46, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] };\r\n\r\n            mpath.set('arr.yep', [20], o, special);\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }], _doc: { yep: 20, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: 2 } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n\r\n          it('that is greater than length', function(done) {\r\n            mpath.set('arr.yep', [5, 6, 7], o, special, function() {\r\n              return 'x';\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }], _doc: { yep: 'x', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: 'x' } }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.yep', [5, 6, 7], o, special);\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }], _doc: { yep: 5, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: 6 } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n      });\r\n\r\n      describe('array.$.path', function() {\r\n        describe('with single non-array value', function() {\r\n          it('copies the value to each item in array', function(done) {\r\n            mpath.set('arr.$.yep', { xtra: 'double good' }, o, special, function(v) {\r\n              return 9;\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n                _doc: { yep: 9, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: 9 } }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.$.yep', { xtra: 'double good' }, o, special);\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n                _doc: { yep: { xtra: 'double good' }, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: { xtra: 'double good' } } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n        describe('with array of values', function() {\r\n          it('copies the value to each item in array', function(done) {\r\n            mpath.set('arr.$.yep', [15], o, special, function(v) {\r\n              return 'array';\r\n            });\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n                _doc: { yep: 'array', arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: 'array' } }\r\n            ], o.arr);\r\n\r\n            mpath.set('arr.$.yep', [15], o, special);\r\n            assert.deepEqual([\r\n              { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n                _doc: { yep: [15], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n              { yep: true, _doc: { special: true, yep: [15] } }\r\n            ], o.arr);\r\n\r\n            done();\r\n          });\r\n        });\r\n      });\r\n\r\n      describe('array.index.path', function() {\r\n        it('works', function(done) {\r\n          mpath.set('arr.1.yep', 0, o, special, function(v) {\r\n            return 1;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n            { yep: true, _doc: { special: true, yep: 1 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.1.yep', 0, o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.index.array.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.0.arr.e', 35, o, special, function(v) {\r\n            return 30;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 47 }, e: 30 }, { a: { c: 48 }, e: 30 }, { d: 'yep', e: 30 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.e', 35, o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 47 }, e: 35 }, { a: { c: 48 }, e: 35 }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.0.arr.e', ['a', 'b'], o, special, function(v) {\r\n            return 'a' === v ? 'A' : v;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 47 }, e: 'A' }, { a: { c: 48 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.e', ['a', 'b'], o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 47 }, e: 'a' }, { a: { c: 48 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.index.array.path.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.0.arr.a.b', 36, o, special, function(v) {\r\n            return 20;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 20 }, e: 'a' }, { a: { c: 48, b: 20 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.a.b', 36, o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 36 }, e: 'a' }, { a: { c: 48, b: 36 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, special, function(v) {\r\n            return v * 2;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 2 }, e: 'a' }, { a: { c: 48, b: 4 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 1 }, e: 'a' }, { a: { c: 48, b: 2 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.index.array.$.path.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.0.arr.$.a.b', '$', o, special, function(v) {\r\n            return 'dollaz';\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: 'dollaz' }, e: 'a' }, { a: { c: 48, b: 'dollaz' }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.$.a.b', '$', o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: '$' }, e: 'a' }, { a: { c: 48, b: '$' }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.0.arr.$.a.b', [1], o, special, function(v) {\r\n            return {};\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: {} }, e: 'a' }, { a: { c: 48, b: {} }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.0.arr.$.a.b', [1], o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: { b: [1] }, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.array.index.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.arr.0.a', 'single', o, special, function(v) {\r\n            return 88;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 88, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.0.a', 'single', o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 'single', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o, special, function(v) {\r\n            return v * 2;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 8, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.0.a', [4, 8, 15, 16, 23, 42], o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 4, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.array.$.index.path', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.arr.$.0.a', 'singles', o, special, function(v) {\r\n            return v.toUpperCase();\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 'SINGLES', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.$.0.a', 'singles', o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 'singles', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('$.arr.arr.0.a', 'single', o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: 'single', e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o, special, function(v) {\r\n            return Array;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: Array, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.$.0.a', [4, 8, 15, 16, 23, 42], o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42], e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.$.arr.0.a', [4, 8, 15, 16, 23, 42, 108], o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108], e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('array.array.path.index', function() {\r\n        it('with single value', function(done) {\r\n          mpath.set('arr.arr.a.7', 47, o, special, function(v) {\r\n            return Object;\r\n          });\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, Object], e: 'a' }, { a: { c: 48, b: [1], 7: Object }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.a.7', 47, o, special);\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, 47], e: 'a' }, { a: { c: 48, b: [1], 7: 47 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with array', function(done) {\r\n          o.arr[1]._doc.arr = [{ a: [] }, { a: [] }, { a: null }];\r\n          mpath.set('arr.arr.a.7', [[null, 46], [undefined, 'woot']], o, special, function(v) {\r\n            return undefined === v ? 'nope' : v;\r\n          });\r\n\r\n          const a1 = [];\r\n          const a2 = [];\r\n          a1[7] = 'nope';\r\n          a2[7] = 'woot';\r\n\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, null], e: 'a' }, { a: { c: 48, b: [1], 7: 46 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { arr: [{ a: a1 }, { a: a2 }, { a: null }], special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          mpath.set('arr.arr.a.7', [[null, 46], [undefined, 'woot']], o, special);\r\n\r\n          a1[7] = undefined;\r\n\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: { yep: [15], arr: [{ a: [4, 8, 15, 16, 23, 42, 108, null], e: 'a' }, { a: { c: 48, b: [1], 7: 46 }, e: 'b' }, { d: 'yep', e: 35 }] } },\r\n            { yep: true, _doc: { arr: [{ a: a1 }, { a: a2 }, { a: null }], special: true, yep: 0 } }\r\n          ], o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('handles array.array.path', function() {\r\n        it('with single', function(done) {\r\n          o.arr[1]._doc.arr = [{}, {}];\r\n          assert.deepEqual([{}, {}], o.arr[1]._doc.arr);\r\n          o.arr.push({ _doc: { arr: 'something else' } });\r\n          o.arr.push({ _doc: { arr: ['something else'] } });\r\n          o.arr.push({ _doc: { arr: [[]] } });\r\n          o.arr.push({ _doc: { arr: [5] } });\r\n\r\n          // test\r\n          mpath.set('arr.arr.e', 47, o, special);\r\n\r\n          const weird = [];\r\n          weird.e = 47;\r\n\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: {\r\n                yep: [15],\r\n                arr: [\r\n                  { a: [4, 8, 15, 16, 23, 42, 108, null], e: 47 },\r\n                  { a: { c: 48, b: [1], 7: 46 }, e: 47 },\r\n                  { d: 'yep', e: 47 }\r\n                ]\r\n              }\r\n            },\r\n            { yep: true,\r\n              _doc: {\r\n                arr: [\r\n                  { e: 47 },\r\n                  { e: 47 }\r\n                ],\r\n                special: true,\r\n                yep: 0\r\n              }\r\n            },\r\n            { _doc: { arr: 'something else' } },\r\n            { _doc: { arr: ['something else'] } },\r\n            { _doc: { arr: [weird] } },\r\n            { _doc: { arr: [5] } }\r\n          ]\r\n          , o.arr);\r\n\r\n          done();\r\n        });\r\n        it('with arrays', function(done) {\r\n          mpath.set('arr.arr.e', [[1, 2, 3], [4, 5], null, [], [6], [7, 8, 9]], o, special);\r\n\r\n          const weird = [];\r\n          weird.e = 6;\r\n\r\n          assert.deepEqual([\r\n            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],\r\n              _doc: {\r\n                yep: [15],\r\n                arr: [\r\n                  { a: [4, 8, 15, 16, 23, 42, 108, null], e: 1 },\r\n                  { a: { c: 48, b: [1], 7: 46 }, e: 2 },\r\n                  { d: 'yep', e: 3 }\r\n                ]\r\n              }\r\n            },\r\n            { yep: true,\r\n              _doc: {\r\n                arr: [\r\n                  { e: 4 },\r\n                  { e: 5 }\r\n                ],\r\n                special: true,\r\n                yep: 0\r\n              }\r\n            },\r\n            { _doc: { arr: 'something else' } },\r\n            { _doc: { arr: ['something else'] } },\r\n            { _doc: { arr: [weird] } },\r\n            { _doc: { arr: [5] } }\r\n          ]\r\n          , o.arr);\r\n\r\n          done();\r\n        });\r\n      });\r\n\r\n      describe('that is a function', function() {\r\n        describe('without map', function() {\r\n          it('works on array value', function(done) {\r\n            const o = { hello: { world: [{ how: 'are' }, { you: '?' }] } };\r\n            const special = function(obj, key, val) {\r\n              if (val) {\r\n                obj[key] = val;\r\n              } else {\r\n                return 'thing' == key\r\n                  ? obj.world\r\n                  : obj[key];\r\n              }\r\n            };\r\n            mpath.set('hello.thing.how', 'arrrr', o, special);\r\n            assert.deepEqual(o, { hello: { world: [{ how: 'arrrr' }, { you: '?', how: 'arrrr' }] } });\r\n            done();\r\n          });\r\n          it('works on non-array value', function(done) {\r\n            const o = { hello: { world: { how: 'are you' } } };\r\n            const special = function(obj, key, val) {\r\n              if (val) {\r\n                obj[key] = val;\r\n              } else {\r\n                return 'thing' == key\r\n                  ? obj.world\r\n                  : obj[key];\r\n              }\r\n            };\r\n            mpath.set('hello.thing.how', 'RU', o, special);\r\n            assert.deepEqual(o, { hello: { world: { how: 'RU' } } });\r\n            done();\r\n          });\r\n        });\r\n        it('works with map', function(done) {\r\n          const o = { hello: { world: [{ how: 'are' }, { you: '?' }] } };\r\n          const special = function(obj, key, val) {\r\n            if (val) {\r\n              obj[key] = val;\r\n            } else {\r\n              return 'thing' == key\r\n                ? obj.world\r\n                : obj[key];\r\n            }\r\n          };\r\n          const map = function(val) {\r\n            return 'convert' == val\r\n              ? 'ºº'\r\n              : val;\r\n          };\r\n          mpath.set('hello.thing.how', 'convert', o, special, map);\r\n          assert.deepEqual(o, { hello: { world: [{ how: 'ºº' }, { you: '?', how: 'ºº' }] } });\r\n          done();\r\n        });\r\n      });\r\n\r\n    });\r\n\r\n    describe('get/set integration', function() {\r\n      const o = doc();\r\n\r\n      it('works', function(done) {\r\n        const vals = mpath.get('array.o.array.x.b', o);\r\n\r\n        vals[0][0][2] = 10;\r\n        vals[1][0][1] = 0;\r\n        vals[1][1] = 'Rambaldi';\r\n        vals[1][2] = [12, 14];\r\n        vals[2] = [{ changed: true }, [null, ['changed', 'to', 'array']]];\r\n\r\n        mpath.set('array.o.array.x.b', vals, o);\r\n\r\n        const t = [\r\n          { o: { array: [{ x: { b: [4, 6, 10] } }, { y: 10 }] } },\r\n          { o: { array: [{ x: { b: [1, 0, 3] } }, { x: { b: 'Rambaldi', z: 10 } }, { x: { b: [12, 14] } }] } },\r\n          { o: { array: [{ x: { b: { changed: true } } }, { x: { b: [null, ['changed', 'to', 'array']] } }] } },\r\n          { o: { array: [{ x: null }] } },\r\n          { o: { array: [{ y: 3 }] } },\r\n          { o: { array: [3, 0, null] } },\r\n          { o: { name: 'ha' } }\r\n        ];\r\n        assert.deepEqual(t, o.array);\r\n        done();\r\n      });\r\n\r\n      it('array.prop', function(done) {\r\n        mpath.set('comments.name', ['this', 'was', 'changed'], o);\r\n\r\n        assert.deepEqual([\r\n          { name: 'this' },\r\n          { name: 'was', _doc: { name: '2' } },\r\n          { name: 'changed',\r\n            comments: [{}, { comments: [{ val: 'twoo' }] }],\r\n            _doc: { name: '3', comments: [{}, { _doc: { comments: [{ val: 2 }] } }] } }\r\n        ], o.comments);\r\n\r\n        mpath.set('comments.name', ['also', 'changed', 'this'], o, special);\r\n\r\n        assert.deepEqual([\r\n          { name: 'also' },\r\n          { name: 'was', _doc: { name: 'changed' } },\r\n          { name: 'changed',\r\n            comments: [{}, { comments: [{ val: 'twoo' }] }],\r\n            _doc: { name: 'this', comments: [{}, { _doc: { comments: [{ val: 2 }] } }] } }\r\n        ], o.comments);\r\n\r\n        done();\r\n      });\r\n\r\n      it('nested array', function(done) {\r\n        const obj = { arr: [[{ test: 41 }]] };\r\n        mpath.set('arr.test', [[42]], obj);\r\n        assert.deepEqual(obj.arr, [[{ test: 42 }]]);\r\n        done();\r\n      });\r\n    });\r\n\r\n    describe('multiple $ use', function() {\r\n      const o = doc();\r\n      it('is ok', function(done) {\r\n        assert.doesNotThrow(function() {\r\n          mpath.set('arr.$.arr.$.a', 35, o);\r\n        });\r\n        done();\r\n      });\r\n    });\r\n\r\n    it('has', function(done) {\r\n      assert.ok(mpath.has('a', { a: 1 }));\r\n      assert.ok(mpath.has('a', { a: undefined }));\r\n      assert.ok(!mpath.has('a', {}));\r\n      assert.ok(!mpath.has('a', null));\r\n\r\n      assert.ok(mpath.has('a.b', { a: { b: 1 } }));\r\n      assert.ok(mpath.has('a.b', { a: { b: undefined } }));\r\n      assert.ok(!mpath.has('a.b', { a: 1 }));\r\n      assert.ok(!mpath.has('a.b', { a: null }));\r\n\r\n      done();\r\n    });\r\n\r\n    it('underneath a map', function(done) {\r\n      if (!global.Map) {\r\n        done();\r\n        return;\r\n      }\r\n      assert.equal(mpath.get('a.b', { a: new Map([['b', 1]]) }), 1);\r\n\r\n      const m = new Map([['b', 1]]);\r\n      const obj = { a: m };\r\n      mpath.set('a.c', 2, obj);\r\n      assert.equal(m.get('c'), 2);\r\n\r\n      done();\r\n    });\r\n\r\n    it('unset', function(done) {\r\n      let o = { a: 1 };\r\n      mpath.unset('a', o);\r\n      assert.deepEqual(o, {});\r\n\r\n      o = { a: { b: 1 } };\r\n      mpath.unset('a.b', o);\r\n      assert.deepEqual(o, { a: {} });\r\n\r\n      o = { a: null };\r\n      mpath.unset('a.b', o);\r\n      assert.deepEqual(o, { a: null });\r\n\r\n      done();\r\n    });\r\n\r\n    it('unset with __proto__', function(done) {\r\n      // Should refuse to set __proto__\r\n      function Clazz() {}\r\n      Clazz.prototype.foobar = true;\r\n\r\n      mpath.unset('__proto__.foobar', new Clazz());\r\n      assert.ok(Clazz.prototype.foobar);\r\n\r\n      mpath.unset('constructor.prototype.foobar', new Clazz());\r\n      assert.ok(Clazz.prototype.foobar);\r\n\r\n      done();\r\n    });\r\n\r\n    it('get() underneath subclassed array', function(done) {\r\n      class MyArray extends Array {}\r\n\r\n      const obj = {\r\n        arr: new MyArray()\r\n      };\r\n      obj.arr.push({ test: 2 });\r\n\r\n      const arr = mpath.get('arr.test', obj);\r\n      assert.equal(arr.constructor.name, 'Array');\r\n      assert.ok(!(arr instanceof MyArray));\r\n\r\n      done();\r\n    });\r\n\r\n    it('ignores setting a nested path that doesnt exist', function(done) {\r\n      const o = doc();\r\n      assert.doesNotThrow(function() {\r\n        mpath.set('thing.that.is.new', 10, o);\r\n      });\r\n      done();\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}