{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sergey Melyukov @smelukov\r\n*/\n\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"../ConcatenationScope\");\nconst Generator = require(\"../Generator\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\nconst TYPES = new Set([\"javascript\"]);\nclass AssetSourceGenerator extends Generator {\n  /**\r\n   * @param {NormalModule} module module for which the code should be generated\r\n   * @param {GenerateContext} generateContext context for generate\r\n   * @returns {Source} generated code\r\n   */\n  generate(module, _ref) {\n    let {\n      concatenationScope,\n      chunkGraph,\n      runtimeTemplate,\n      runtimeRequirements\n    } = _ref;\n    const originalSource = module.originalSource();\n    if (!originalSource) {\n      return new RawSource(\"\");\n    }\n    const content = originalSource.source();\n    let encodedSource;\n    if (typeof content === \"string\") {\n      encodedSource = content;\n    } else {\n      encodedSource = content.toString(\"utf-8\");\n    }\n    let sourceContent;\n    if (concatenationScope) {\n      concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n      sourceContent = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${JSON.stringify(encodedSource)};`;\n    } else {\n      runtimeRequirements.add(RuntimeGlobals.module);\n      sourceContent = `${RuntimeGlobals.module}.exports = ${JSON.stringify(encodedSource)};`;\n    }\n    return new RawSource(sourceContent);\n  }\n\n  /**\r\n   * @param {NormalModule} module module for which the bailout reason should be determined\r\n   * @param {ConcatenationBailoutReasonContext} context context\r\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\r\n   */\n  getConcatenationBailoutReason(module, context) {\n    return undefined;\n  }\n\n  /**\r\n   * @param {NormalModule} module fresh module\r\n   * @returns {Set<string>} available types (do not mutate)\r\n   */\n  getTypes(module) {\n    return TYPES;\n  }\n\n  /**\r\n   * @param {NormalModule} module the module\r\n   * @param {string=} type source type\r\n   * @returns {number} estimate size of the module\r\n   */\n  getSize(module, type) {\n    const originalSource = module.originalSource();\n    if (!originalSource) {\n      return 0;\n    }\n\n    // Example: m.exports=\"abcd\"\n    return originalSource.size() + 12;\n  }\n}\nmodule.exports = AssetSourceGenerator;","map":{"version":3,"names":["RawSource","require","ConcatenationScope","Generator","RuntimeGlobals","TYPES","Set","AssetSourceGenerator","generate","module","concatenationScope","chunkGraph","runtimeTemplate","runtimeRequirements","originalSource","content","source","encodedSource","toString","sourceContent","registerNamespaceExport","NAMESPACE_OBJECT_EXPORT","supportsConst","JSON","stringify","add","getConcatenationBailoutReason","context","undefined","getTypes","getSize","type","size","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/asset/AssetSourceGenerator.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Sergey Melyukov @smelukov\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { RawSource } = require(\"webpack-sources\");\r\nconst ConcatenationScope = require(\"../ConcatenationScope\");\r\nconst Generator = require(\"../Generator\");\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\n\r\n/** @typedef {import(\"webpack-sources\").Source} Source */\r\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\r\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\r\n/** @typedef {import(\"../NormalModule\")} NormalModule */\r\n\r\nconst TYPES = new Set([\"javascript\"]);\r\n\r\nclass AssetSourceGenerator extends Generator {\r\n\t/**\r\n\t * @param {NormalModule} module module for which the code should be generated\r\n\t * @param {GenerateContext} generateContext context for generate\r\n\t * @returns {Source} generated code\r\n\t */\r\n\tgenerate(\r\n\t\tmodule,\r\n\t\t{ concatenationScope, chunkGraph, runtimeTemplate, runtimeRequirements }\r\n\t) {\r\n\t\tconst originalSource = module.originalSource();\r\n\r\n\t\tif (!originalSource) {\r\n\t\t\treturn new RawSource(\"\");\r\n\t\t}\r\n\r\n\t\tconst content = originalSource.source();\r\n\r\n\t\tlet encodedSource;\r\n\t\tif (typeof content === \"string\") {\r\n\t\t\tencodedSource = content;\r\n\t\t} else {\r\n\t\t\tencodedSource = content.toString(\"utf-8\");\r\n\t\t}\r\n\r\n\t\tlet sourceContent;\r\n\t\tif (concatenationScope) {\r\n\t\t\tconcatenationScope.registerNamespaceExport(\r\n\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\r\n\t\t\t);\r\n\t\t\tsourceContent = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${\r\n\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\r\n\t\t\t} = ${JSON.stringify(encodedSource)};`;\r\n\t\t} else {\r\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\r\n\t\t\tsourceContent = `${RuntimeGlobals.module}.exports = ${JSON.stringify(\r\n\t\t\t\tencodedSource\r\n\t\t\t)};`;\r\n\t\t}\r\n\t\treturn new RawSource(sourceContent);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NormalModule} module module for which the bailout reason should be determined\r\n\t * @param {ConcatenationBailoutReasonContext} context context\r\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\r\n\t */\r\n\tgetConcatenationBailoutReason(module, context) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NormalModule} module fresh module\r\n\t * @returns {Set<string>} available types (do not mutate)\r\n\t */\r\n\tgetTypes(module) {\r\n\t\treturn TYPES;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NormalModule} module the module\r\n\t * @param {string=} type source type\r\n\t * @returns {number} estimate size of the module\r\n\t */\r\n\tgetSize(module, type) {\r\n\t\tconst originalSource = module.originalSource();\r\n\r\n\t\tif (!originalSource) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Example: m.exports=\"abcd\"\r\n\t\treturn originalSource.size() + 12;\r\n\t}\r\n}\r\n\r\nmodule.exports = AssetSourceGenerator;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC3D,MAAME,SAAS,GAAGF,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMG,cAAc,GAAGH,OAAO,CAAC,mBAAmB,CAAC;;AAEnD;AACA;AACA;AACA;;AAEA,MAAMI,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;AAErC,MAAMC,oBAAoB,SAASJ,SAAS,CAAC;EAC5C;AACD;AACA;AACA;AACA;EACCK,QAAQ,CACPC,MAAM,QAEL;IAAA,IADD;MAAEC,kBAAkB;MAAEC,UAAU;MAAEC,eAAe;MAAEC;IAAoB,CAAC;IAExE,MAAMC,cAAc,GAAGL,MAAM,CAACK,cAAc,EAAE;IAE9C,IAAI,CAACA,cAAc,EAAE;MACpB,OAAO,IAAId,SAAS,CAAC,EAAE,CAAC;IACzB;IAEA,MAAMe,OAAO,GAAGD,cAAc,CAACE,MAAM,EAAE;IAEvC,IAAIC,aAAa;IACjB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;MAChCE,aAAa,GAAGF,OAAO;IACxB,CAAC,MAAM;MACNE,aAAa,GAAGF,OAAO,CAACG,QAAQ,CAAC,OAAO,CAAC;IAC1C;IAEA,IAAIC,aAAa;IACjB,IAAIT,kBAAkB,EAAE;MACvBA,kBAAkB,CAACU,uBAAuB,CACzClB,kBAAkB,CAACmB,uBAAuB,CAC1C;MACDF,aAAa,GAAI,GAAEP,eAAe,CAACU,aAAa,EAAE,GAAG,OAAO,GAAG,KAAM,IACpEpB,kBAAkB,CAACmB,uBACnB,MAAKE,IAAI,CAACC,SAAS,CAACP,aAAa,CAAE,GAAE;IACvC,CAAC,MAAM;MACNJ,mBAAmB,CAACY,GAAG,CAACrB,cAAc,CAACK,MAAM,CAAC;MAC9CU,aAAa,GAAI,GAAEf,cAAc,CAACK,MAAO,cAAac,IAAI,CAACC,SAAS,CACnEP,aAAa,CACZ,GAAE;IACL;IACA,OAAO,IAAIjB,SAAS,CAACmB,aAAa,CAAC;EACpC;;EAEA;AACD;AACA;AACA;AACA;EACCO,6BAA6B,CAACjB,MAAM,EAAEkB,OAAO,EAAE;IAC9C,OAAOC,SAAS;EACjB;;EAEA;AACD;AACA;AACA;EACCC,QAAQ,CAACpB,MAAM,EAAE;IAChB,OAAOJ,KAAK;EACb;;EAEA;AACD;AACA;AACA;AACA;EACCyB,OAAO,CAACrB,MAAM,EAAEsB,IAAI,EAAE;IACrB,MAAMjB,cAAc,GAAGL,MAAM,CAACK,cAAc,EAAE;IAE9C,IAAI,CAACA,cAAc,EAAE;MACpB,OAAO,CAAC;IACT;;IAEA;IACA,OAAOA,cAAc,CAACkB,IAAI,EAAE,GAAG,EAAE;EAClC;AACD;AAEAvB,MAAM,CAACwB,OAAO,GAAG1B,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}