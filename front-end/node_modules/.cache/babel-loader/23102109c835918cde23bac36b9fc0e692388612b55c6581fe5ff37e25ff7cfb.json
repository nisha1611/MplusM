{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseURL = void 0;\nconst types_1 = require(\"@aws-sdk/types\");\nconst isIpAddress_1 = require(\"./isIpAddress\");\nconst DEFAULT_PORTS = {\n  [types_1.EndpointURLScheme.HTTP]: 80,\n  [types_1.EndpointURLScheme.HTTPS]: 443\n};\nconst parseURL = value => {\n  const whatwgURL = (() => {\n    try {\n      if (value instanceof URL) {\n        return value;\n      }\n      if (typeof value === \"object\" && \"hostname\" in value) {\n        const {\n          hostname,\n          port,\n          protocol = \"\",\n          path = \"\",\n          query = {}\n        } = value;\n        const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n        url.search = Object.entries(query).map(_ref => {\n          let [k, v] = _ref;\n          return `${k}=${v}`;\n        }).join(\"&\");\n        return url;\n      }\n      return new URL(value);\n    } catch (error) {\n      return null;\n    }\n  })();\n  if (!whatwgURL) {\n    console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n    return null;\n  }\n  const urlString = whatwgURL.href;\n  const {\n    host,\n    hostname,\n    pathname,\n    protocol,\n    search\n  } = whatwgURL;\n  if (search) {\n    return null;\n  }\n  const scheme = protocol.slice(0, -1);\n  if (!Object.values(types_1.EndpointURLScheme).includes(scheme)) {\n    return null;\n  }\n  const isIp = (0, isIpAddress_1.isIpAddress)(hostname);\n  const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) || typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`);\n  const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n  return {\n    scheme,\n    authority,\n    path: pathname,\n    normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n    isIp\n  };\n};\nexports.parseURL = parseURL;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseURL","types_1","require","isIpAddress_1","DEFAULT_PORTS","EndpointURLScheme","HTTP","HTTPS","whatwgURL","URL","hostname","port","protocol","path","query","url","search","entries","map","k","v","join","error","console","JSON","stringify","urlString","href","host","pathname","scheme","slice","values","includes","isIp","isIpAddress","inputContainsDefaultPort","authority","normalizedPath","endsWith"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/parseURL.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseURL = void 0;\r\nconst types_1 = require(\"@aws-sdk/types\");\r\nconst isIpAddress_1 = require(\"./isIpAddress\");\r\nconst DEFAULT_PORTS = {\r\n    [types_1.EndpointURLScheme.HTTP]: 80,\r\n    [types_1.EndpointURLScheme.HTTPS]: 443,\r\n};\r\nconst parseURL = (value) => {\r\n    const whatwgURL = (() => {\r\n        try {\r\n            if (value instanceof URL) {\r\n                return value;\r\n            }\r\n            if (typeof value === \"object\" && \"hostname\" in value) {\r\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\r\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\r\n                url.search = Object.entries(query)\r\n                    .map(([k, v]) => `${k}=${v}`)\r\n                    .join(\"&\");\r\n                return url;\r\n            }\r\n            return new URL(value);\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    })();\r\n    if (!whatwgURL) {\r\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\r\n        return null;\r\n    }\r\n    const urlString = whatwgURL.href;\r\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\r\n    if (search) {\r\n        return null;\r\n    }\r\n    const scheme = protocol.slice(0, -1);\r\n    if (!Object.values(types_1.EndpointURLScheme).includes(scheme)) {\r\n        return null;\r\n    }\r\n    const isIp = (0, isIpAddress_1.isIpAddress)(hostname);\r\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\r\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\r\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\r\n    return {\r\n        scheme,\r\n        authority,\r\n        path: pathname,\r\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\r\n        isIp,\r\n    };\r\n};\r\nexports.parseURL = parseURL;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}