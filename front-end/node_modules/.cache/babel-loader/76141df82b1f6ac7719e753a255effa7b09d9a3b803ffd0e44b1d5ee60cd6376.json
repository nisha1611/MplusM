{"ast":null,"code":"'use strict';\n\nconst modifiedPaths = require('./modifiedPaths');\nmodule.exports = function updatedPathsByArrayFilter(update) {\n  if (update == null) {\n    return {};\n  }\n  const updatedPaths = modifiedPaths(update);\n  return Object.keys(updatedPaths).reduce((cur, path) => {\n    const matches = path.match(/\\$\\[[^\\]]+\\]/g);\n    if (matches == null) {\n      return cur;\n    }\n    for (const match of matches) {\n      const firstMatch = path.indexOf(match);\n      if (firstMatch !== path.lastIndexOf(match)) {\n        throw new Error(`Path '${path}' contains the same array filter multiple times`);\n      }\n      cur[match.substring(2, match.length - 1)] = path.substring(0, firstMatch - 1).replace(/\\$\\[[^\\]]+\\]/g, '0');\n    }\n    return cur;\n  }, {});\n};","map":{"version":3,"names":["modifiedPaths","require","module","exports","updatedPathsByArrayFilter","update","updatedPaths","Object","keys","reduce","cur","path","matches","match","firstMatch","indexOf","lastIndexOf","Error","substring","length","replace"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/update/updatedPathsByArrayFilter.js"],"sourcesContent":["'use strict';\r\n\r\nconst modifiedPaths = require('./modifiedPaths');\r\n\r\nmodule.exports = function updatedPathsByArrayFilter(update) {\r\n  if (update == null) {\r\n    return {};\r\n  }\r\n  const updatedPaths = modifiedPaths(update);\r\n\r\n  return Object.keys(updatedPaths).reduce((cur, path) => {\r\n    const matches = path.match(/\\$\\[[^\\]]+\\]/g);\r\n    if (matches == null) {\r\n      return cur;\r\n    }\r\n    for (const match of matches) {\r\n      const firstMatch = path.indexOf(match);\r\n      if (firstMatch !== path.lastIndexOf(match)) {\r\n        throw new Error(`Path '${path}' contains the same array filter multiple times`);\r\n      }\r\n      cur[match.substring(2, match.length - 1)] = path.\r\n        substring(0, firstMatch - 1).\r\n        replace(/\\$\\[[^\\]]+\\]/g, '0');\r\n    }\r\n    return cur;\r\n  }, {});\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAEhDC,MAAM,CAACC,OAAO,GAAG,SAASC,yBAAyB,CAACC,MAAM,EAAE;EAC1D,IAAIA,MAAM,IAAI,IAAI,EAAE;IAClB,OAAO,CAAC,CAAC;EACX;EACA,MAAMC,YAAY,GAAGN,aAAa,CAACK,MAAM,CAAC;EAE1C,OAAOE,MAAM,CAACC,IAAI,CAACF,YAAY,CAAC,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACrD,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAAC,eAAe,CAAC;IAC3C,IAAID,OAAO,IAAI,IAAI,EAAE;MACnB,OAAOF,GAAG;IACZ;IACA,KAAK,MAAMG,KAAK,IAAID,OAAO,EAAE;MAC3B,MAAME,UAAU,GAAGH,IAAI,CAACI,OAAO,CAACF,KAAK,CAAC;MACtC,IAAIC,UAAU,KAAKH,IAAI,CAACK,WAAW,CAACH,KAAK,CAAC,EAAE;QAC1C,MAAM,IAAII,KAAK,CAAE,SAAQN,IAAK,iDAAgD,CAAC;MACjF;MACAD,GAAG,CAACG,KAAK,CAACK,SAAS,CAAC,CAAC,EAAEL,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGR,IAAI,CAC9CO,SAAS,CAAC,CAAC,EAAEJ,UAAU,GAAG,CAAC,CAAC,CAC5BM,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;IACjC;IACA,OAAOV,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}