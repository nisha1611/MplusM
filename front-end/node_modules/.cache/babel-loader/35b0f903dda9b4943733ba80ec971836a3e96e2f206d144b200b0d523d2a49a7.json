{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\nconst InitFragment = require(\"../InitFragment\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst {\n  countIterable\n} = require(\"../util/IterableHelpers\");\nconst {\n  first,\n  combine\n} = require(\"../util/SetHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst {\n  getRuntimeKey,\n  keyToRuntime\n} = require(\"../util/runtime\");\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\nconst processExportInfo = require(\"./processExportInfo\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-dynamic-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-fake-namespace-object\"|\"reexport-undefined\"|\"normal-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\nconst {\n  ExportPresenceModes\n} = HarmonyImportDependency;\nconst idsSymbol = Symbol(\"HarmonyExportImportedSpecifierDependency.ids\");\nclass NormalReexportItem {\n  /**\r\n   * @param {string} name export name\r\n   * @param {string[]} ids reexported ids from other module\r\n   * @param {ExportInfo} exportInfo export info from other module\r\n   * @param {boolean} checked true, if it should be checked at runtime if this export exists\r\n   * @param {boolean} hidden true, if it is hidden behind another active export in the same module\r\n   */\n  constructor(name, ids, exportInfo, checked, hidden) {\n    this.name = name;\n    this.ids = ids;\n    this.exportInfo = exportInfo;\n    this.checked = checked;\n    this.hidden = hidden;\n  }\n}\nclass ExportMode {\n  /**\r\n   * @param {ExportModeType} type type of the mode\r\n   */\n  constructor(type) {\n    /** @type {ExportModeType} */\n    this.type = type;\n\n    // for \"normal-reexport\":\n    /** @type {NormalReexportItem[] | null} */\n    this.items = null;\n\n    // for \"reexport-named-default\" | \"reexport-fake-namespace-object\" | \"reexport-namespace-object\"\n    /** @type {string|null} */\n    this.name = null;\n    /** @type {ExportInfo | null} */\n    this.partialNamespaceExportInfo = null;\n\n    // for \"dynamic-reexport\":\n    /** @type {Set<string> | null} */\n    this.ignored = null;\n\n    // for \"dynamic-reexport\" | \"empty-star\":\n    /** @type {Set<string> | null} */\n    this.hidden = null;\n\n    // for \"missing\":\n    /** @type {string | null} */\n    this.userRequest = null;\n\n    // for \"reexport-fake-namespace-object\":\n    /** @type {number} */\n    this.fakeType = 0;\n  }\n}\nconst determineExportAssignments = (moduleGraph, dependencies, additionalDependency) => {\n  const names = new Set();\n  const dependencyIndices = [];\n  if (additionalDependency) {\n    dependencies = dependencies.concat(additionalDependency);\n  }\n  for (const dep of dependencies) {\n    const i = dependencyIndices.length;\n    dependencyIndices[i] = names.size;\n    const otherImportedModule = moduleGraph.getModule(dep);\n    if (otherImportedModule) {\n      const exportsInfo = moduleGraph.getExportsInfo(otherImportedModule);\n      for (const exportInfo of exportsInfo.exports) {\n        if (exportInfo.provided === true && exportInfo.name !== \"default\" && !names.has(exportInfo.name)) {\n          names.add(exportInfo.name);\n          dependencyIndices[i] = names.size;\n        }\n      }\n    }\n  }\n  dependencyIndices.push(names.size);\n  return {\n    names: Array.from(names),\n    dependencyIndices\n  };\n};\nconst findDependencyForName = (_ref, name, dependencies) => {\n  let {\n    names,\n    dependencyIndices\n  } = _ref;\n  const dependenciesIt = dependencies[Symbol.iterator]();\n  const dependencyIndicesIt = dependencyIndices[Symbol.iterator]();\n  let dependenciesItResult = dependenciesIt.next();\n  let dependencyIndicesItResult = dependencyIndicesIt.next();\n  if (dependencyIndicesItResult.done) return;\n  for (let i = 0; i < names.length; i++) {\n    while (i >= dependencyIndicesItResult.value) {\n      dependenciesItResult = dependenciesIt.next();\n      dependencyIndicesItResult = dependencyIndicesIt.next();\n      if (dependencyIndicesItResult.done) return;\n    }\n    if (names[i] === name) return dependenciesItResult.value;\n  }\n  return undefined;\n};\n\n/**\r\n * @param {ModuleGraph} moduleGraph the module graph\r\n * @param {HarmonyExportImportedSpecifierDependency} dep the dependency\r\n * @param {string} runtimeKey the runtime key\r\n * @returns {ExportMode} the export mode\r\n */\nconst getMode = (moduleGraph, dep, runtimeKey) => {\n  const importedModule = moduleGraph.getModule(dep);\n  if (!importedModule) {\n    const mode = new ExportMode(\"missing\");\n    mode.userRequest = dep.userRequest;\n    return mode;\n  }\n  const name = dep.name;\n  const runtime = keyToRuntime(runtimeKey);\n  const parentModule = moduleGraph.getParentModule(dep);\n  const exportsInfo = moduleGraph.getExportsInfo(parentModule);\n  if (name ? exportsInfo.getUsed(name, runtime) === UsageState.Unused : exportsInfo.isUsed(runtime) === false) {\n    const mode = new ExportMode(\"unused\");\n    mode.name = name || \"*\";\n    return mode;\n  }\n  const importedExportsType = importedModule.getExportsType(moduleGraph, parentModule.buildMeta.strictHarmonyModule);\n  const ids = dep.getIds(moduleGraph);\n\n  // Special handling for reexporting the default export\n  // from non-namespace modules\n  if (name && ids.length > 0 && ids[0] === \"default\") {\n    switch (importedExportsType) {\n      case \"dynamic\":\n        {\n          const mode = new ExportMode(\"reexport-dynamic-default\");\n          mode.name = name;\n          return mode;\n        }\n      case \"default-only\":\n      case \"default-with-named\":\n        {\n          const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n          const mode = new ExportMode(\"reexport-named-default\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n          return mode;\n        }\n    }\n  }\n\n  // reexporting with a fixed name\n  if (name) {\n    let mode;\n    const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n    if (ids.length > 0) {\n      // export { name as name }\n      switch (importedExportsType) {\n        case \"default-only\":\n          mode = new ExportMode(\"reexport-undefined\");\n          mode.name = name;\n          break;\n        default:\n          mode = new ExportMode(\"normal-reexport\");\n          mode.items = [new NormalReexportItem(name, ids, exportInfo, false, false)];\n          break;\n      }\n    } else {\n      // export * as name\n      switch (importedExportsType) {\n        case \"default-only\":\n          mode = new ExportMode(\"reexport-fake-namespace-object\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n          mode.fakeType = 0;\n          break;\n        case \"default-with-named\":\n          mode = new ExportMode(\"reexport-fake-namespace-object\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n          mode.fakeType = 2;\n          break;\n        case \"dynamic\":\n        default:\n          mode = new ExportMode(\"reexport-namespace-object\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n      }\n    }\n    return mode;\n  }\n\n  // Star reexporting\n\n  const {\n    ignoredExports,\n    exports,\n    checked,\n    hidden\n  } = dep.getStarReexports(moduleGraph, runtime, exportsInfo, importedModule);\n  if (!exports) {\n    // We have too few info about the modules\n    // Delegate the logic to the runtime code\n\n    const mode = new ExportMode(\"dynamic-reexport\");\n    mode.ignored = ignoredExports;\n    mode.hidden = hidden;\n    return mode;\n  }\n  if (exports.size === 0) {\n    const mode = new ExportMode(\"empty-star\");\n    mode.hidden = hidden;\n    return mode;\n  }\n  const mode = new ExportMode(\"normal-reexport\");\n  mode.items = Array.from(exports, exportName => new NormalReexportItem(exportName, [exportName], exportsInfo.getReadOnlyExportInfo(exportName), checked.has(exportName), false));\n  if (hidden !== undefined) {\n    for (const exportName of hidden) {\n      mode.items.push(new NormalReexportItem(exportName, [exportName], exportsInfo.getReadOnlyExportInfo(exportName), false, true));\n    }\n  }\n  return mode;\n};\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\n  /**\r\n   * @param {string} request the request string\r\n   * @param {number} sourceOrder the order in the original source file\r\n   * @param {string[]} ids the requested export name of the imported module\r\n   * @param {string | null} name the export name of for this module\r\n   * @param {Set<string>} activeExports other named exports in the module\r\n   * @param {ReadonlyArray<HarmonyExportImportedSpecifierDependency> | Iterable<HarmonyExportImportedSpecifierDependency>} otherStarExports other star exports in the module before this import\r\n   * @param {number} exportPresenceMode mode of checking export names\r\n   * @param {HarmonyStarExportsList} allStarExports all star exports in the module\r\n   * @param {Record<string, any>=} assertions import assertions\r\n   */\n  constructor(request, sourceOrder, ids, name, activeExports, otherStarExports, exportPresenceMode, allStarExports, assertions) {\n    super(request, sourceOrder, assertions);\n    this.ids = ids;\n    this.name = name;\n    this.activeExports = activeExports;\n    this.otherStarExports = otherStarExports;\n    this.exportPresenceMode = exportPresenceMode;\n    this.allStarExports = allStarExports;\n  }\n\n  /**\r\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\r\n   */\n  couldAffectReferencingModule() {\n    return Dependency.TRANSITIVE;\n  }\n\n  // TODO webpack 6 remove\n  get id() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  // TODO webpack 6 remove\n  getId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  // TODO webpack 6 remove\n  setId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n  get type() {\n    return \"harmony export imported specifier\";\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @returns {string[]} the imported id\r\n   */\n  getIds(moduleGraph) {\n    return moduleGraph.getMeta(this)[idsSymbol] || this.ids;\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @param {string[]} ids the imported ids\r\n   * @returns {void}\r\n   */\n  setIds(moduleGraph, ids) {\n    moduleGraph.getMeta(this)[idsSymbol] = ids;\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @param {RuntimeSpec} runtime the runtime\r\n   * @returns {ExportMode} the export mode\r\n   */\n  getMode(moduleGraph, runtime) {\n    return moduleGraph.dependencyCacheProvide(this, getRuntimeKey(runtime), getMode);\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @param {RuntimeSpec} runtime the runtime\r\n   * @param {ExportsInfo} exportsInfo exports info about the current module (optional)\r\n   * @param {Module} importedModule the imported module (optional)\r\n   * @returns {{exports?: Set<string>, checked?: Set<string>, ignoredExports: Set<string>, hidden?: Set<string>}} information\r\n   */\n  getStarReexports(moduleGraph, runtime) {\n    let exportsInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : moduleGraph.getExportsInfo(moduleGraph.getParentModule(this));\n    let importedModule = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : moduleGraph.getModule(this);\n    const importedExportsInfo = moduleGraph.getExportsInfo(importedModule);\n    const noExtraExports = importedExportsInfo.otherExportsInfo.provided === false;\n    const noExtraImports = exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused;\n    const ignoredExports = new Set([\"default\", ...this.activeExports]);\n    let hiddenExports = undefined;\n    const otherStarExports = this._discoverActiveExportsFromOtherStarExports(moduleGraph);\n    if (otherStarExports !== undefined) {\n      hiddenExports = new Set();\n      for (let i = 0; i < otherStarExports.namesSlice; i++) {\n        hiddenExports.add(otherStarExports.names[i]);\n      }\n      for (const e of ignoredExports) hiddenExports.delete(e);\n    }\n    if (!noExtraExports && !noExtraImports) {\n      return {\n        ignoredExports,\n        hidden: hiddenExports\n      };\n    }\n\n    /** @type {Set<string>} */\n    const exports = new Set();\n    /** @type {Set<string>} */\n    const checked = new Set();\n    /** @type {Set<string>} */\n    const hidden = hiddenExports !== undefined ? new Set() : undefined;\n    if (noExtraImports) {\n      for (const exportInfo of exportsInfo.orderedExports) {\n        const name = exportInfo.name;\n        if (ignoredExports.has(name)) continue;\n        if (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n        const importedExportInfo = importedExportsInfo.getReadOnlyExportInfo(name);\n        if (importedExportInfo.provided === false) continue;\n        if (hiddenExports !== undefined && hiddenExports.has(name)) {\n          hidden.add(name);\n          continue;\n        }\n        exports.add(name);\n        if (importedExportInfo.provided === true) continue;\n        checked.add(name);\n      }\n    } else if (noExtraExports) {\n      for (const importedExportInfo of importedExportsInfo.orderedExports) {\n        const name = importedExportInfo.name;\n        if (ignoredExports.has(name)) continue;\n        if (importedExportInfo.provided === false) continue;\n        const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n        if (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n        if (hiddenExports !== undefined && hiddenExports.has(name)) {\n          hidden.add(name);\n          continue;\n        }\n        exports.add(name);\n        if (importedExportInfo.provided === true) continue;\n        checked.add(name);\n      }\n    }\n    return {\n      ignoredExports,\n      exports,\n      checked,\n      hidden\n    };\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\r\n   */\n  getCondition(moduleGraph) {\n    return (connection, runtime) => {\n      const mode = this.getMode(moduleGraph, runtime);\n      return mode.type !== \"unused\" && mode.type !== \"empty-star\";\n    };\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\r\n   */\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n\n  /**\r\n   * Returns list of exports referenced by this dependency\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    const mode = this.getMode(moduleGraph, runtime);\n    switch (mode.type) {\n      case \"missing\":\n      case \"unused\":\n      case \"empty-star\":\n      case \"reexport-undefined\":\n        return Dependency.NO_EXPORTS_REFERENCED;\n      case \"reexport-dynamic-default\":\n        return Dependency.EXPORTS_OBJECT_REFERENCED;\n      case \"reexport-named-default\":\n        {\n          if (!mode.partialNamespaceExportInfo) return Dependency.EXPORTS_OBJECT_REFERENCED;\n          /** @type {string[][]} */\n          const referencedExports = [];\n          processExportInfo(runtime, referencedExports, [], /** @type {ExportInfo} */mode.partialNamespaceExportInfo);\n          return referencedExports;\n        }\n      case \"reexport-namespace-object\":\n      case \"reexport-fake-namespace-object\":\n        {\n          if (!mode.partialNamespaceExportInfo) return Dependency.EXPORTS_OBJECT_REFERENCED;\n          /** @type {string[][]} */\n          const referencedExports = [];\n          processExportInfo(runtime, referencedExports, [], /** @type {ExportInfo} */mode.partialNamespaceExportInfo, mode.type === \"reexport-fake-namespace-object\");\n          return referencedExports;\n        }\n      case \"dynamic-reexport\":\n        return Dependency.EXPORTS_OBJECT_REFERENCED;\n      case \"normal-reexport\":\n        {\n          const referencedExports = [];\n          for (const {\n            ids,\n            exportInfo,\n            hidden\n          } of mode.items) {\n            if (hidden) continue;\n            processExportInfo(runtime, referencedExports, ids, exportInfo, false);\n          }\n          return referencedExports;\n        }\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @returns {{ names: string[], namesSlice: number, dependencyIndices: number[], dependencyIndex: number } | undefined} exported names and their origin dependency\r\n   */\n  _discoverActiveExportsFromOtherStarExports(moduleGraph) {\n    if (!this.otherStarExports) return undefined;\n    const i = \"length\" in this.otherStarExports ? this.otherStarExports.length : countIterable(this.otherStarExports);\n    if (i === 0) return undefined;\n    if (this.allStarExports) {\n      const {\n        names,\n        dependencyIndices\n      } = moduleGraph.cached(determineExportAssignments, this.allStarExports.dependencies);\n      return {\n        names,\n        namesSlice: dependencyIndices[i - 1],\n        dependencyIndices,\n        dependencyIndex: i\n      };\n    }\n    const {\n      names,\n      dependencyIndices\n    } = moduleGraph.cached(determineExportAssignments, this.otherStarExports, this);\n    return {\n      names,\n      namesSlice: dependencyIndices[i - 1],\n      dependencyIndices,\n      dependencyIndex: i\n    };\n  }\n\n  /**\r\n   * Returns the exported names\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {ExportsSpec | undefined} export names\r\n   */\n  getExports(moduleGraph) {\n    const mode = this.getMode(moduleGraph, undefined);\n    switch (mode.type) {\n      case \"missing\":\n        return undefined;\n      case \"dynamic-reexport\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: true,\n            from,\n            canMangle: false,\n            excludeExports: mode.hidden ? combine(mode.ignored, mode.hidden) : mode.ignored,\n            hideExports: mode.hidden,\n            dependencies: [from.module]\n          };\n        }\n      case \"empty-star\":\n        return {\n          exports: [],\n          hideExports: mode.hidden,\n          dependencies: [moduleGraph.getModule(this)]\n        };\n      // falls through\n      case \"normal-reexport\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: Array.from(mode.items, item => ({\n              name: item.name,\n              from,\n              export: item.ids,\n              hidden: item.hidden\n            })),\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n      case \"reexport-dynamic-default\":\n        {\n          {\n            const from = moduleGraph.getConnection(this);\n            return {\n              exports: [{\n                name: mode.name,\n                from,\n                export: [\"default\"]\n              }],\n              priority: 1,\n              dependencies: [from.module]\n            };\n          }\n        }\n      case \"reexport-undefined\":\n        return {\n          exports: [mode.name],\n          dependencies: [moduleGraph.getModule(this)]\n        };\n      case \"reexport-fake-namespace-object\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: [{\n              name: mode.name,\n              from,\n              export: null,\n              exports: [{\n                name: \"default\",\n                canMangle: false,\n                from,\n                export: null\n              }]\n            }],\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n      case \"reexport-namespace-object\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: [{\n              name: mode.name,\n              from,\n              export: null\n            }],\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n      case \"reexport-named-default\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: [{\n              name: mode.name,\n              from,\n              export: [\"default\"]\n            }],\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {number} effective mode\r\n   */\n  _getEffectiveExportPresenceLevel(moduleGraph) {\n    if (this.exportPresenceMode !== ExportPresenceModes.AUTO) return this.exportPresenceMode;\n    return moduleGraph.getParentModule(this).buildMeta.strictHarmonyModule ? ExportPresenceModes.ERROR : ExportPresenceModes.WARN;\n  }\n\n  /**\r\n   * Returns warnings\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {WebpackError[]} warnings\r\n   */\n  getWarnings(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n    if (exportsPresence === ExportPresenceModes.WARN) {\n      return this._getErrors(moduleGraph);\n    }\n    return null;\n  }\n\n  /**\r\n   * Returns errors\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {WebpackError[]} errors\r\n   */\n  getErrors(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n    if (exportsPresence === ExportPresenceModes.ERROR) {\n      return this._getErrors(moduleGraph);\n    }\n    return null;\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {WebpackError[] | undefined} errors\r\n   */\n  _getErrors(moduleGraph) {\n    const ids = this.getIds(moduleGraph);\n    let errors = this.getLinkingErrors(moduleGraph, ids, `(reexported as '${this.name}')`);\n    if (ids.length === 0 && this.name === null) {\n      const potentialConflicts = this._discoverActiveExportsFromOtherStarExports(moduleGraph);\n      if (potentialConflicts && potentialConflicts.namesSlice > 0) {\n        const ownNames = new Set(potentialConflicts.names.slice(potentialConflicts.namesSlice, potentialConflicts.dependencyIndices[potentialConflicts.dependencyIndex]));\n        const importedModule = moduleGraph.getModule(this);\n        if (importedModule) {\n          const exportsInfo = moduleGraph.getExportsInfo(importedModule);\n          const conflicts = new Map();\n          for (const exportInfo of exportsInfo.orderedExports) {\n            if (exportInfo.provided !== true) continue;\n            if (exportInfo.name === \"default\") continue;\n            if (this.activeExports.has(exportInfo.name)) continue;\n            if (ownNames.has(exportInfo.name)) continue;\n            const conflictingDependency = findDependencyForName(potentialConflicts, exportInfo.name, this.allStarExports ? this.allStarExports.dependencies : [...this.otherStarExports, this]);\n            if (!conflictingDependency) continue;\n            const target = exportInfo.getTerminalBinding(moduleGraph);\n            if (!target) continue;\n            const conflictingModule = moduleGraph.getModule(conflictingDependency);\n            if (conflictingModule === importedModule) continue;\n            const conflictingExportInfo = moduleGraph.getExportInfo(conflictingModule, exportInfo.name);\n            const conflictingTarget = conflictingExportInfo.getTerminalBinding(moduleGraph);\n            if (!conflictingTarget) continue;\n            if (target === conflictingTarget) continue;\n            const list = conflicts.get(conflictingDependency.request);\n            if (list === undefined) {\n              conflicts.set(conflictingDependency.request, [exportInfo.name]);\n            } else {\n              list.push(exportInfo.name);\n            }\n          }\n          for (const [request, exports] of conflicts) {\n            if (!errors) errors = [];\n            errors.push(new HarmonyLinkingError(`The requested module '${this.request}' contains conflicting star exports for the ${exports.length > 1 ? \"names\" : \"name\"} ${exports.map(e => `'${e}'`).join(\", \")} with the previous requested module '${request}'`));\n          }\n        }\n      }\n    }\n    return errors;\n  }\n  serialize(context) {\n    const {\n      write,\n      setCircularReference\n    } = context;\n    setCircularReference(this);\n    write(this.ids);\n    write(this.name);\n    write(this.activeExports);\n    write(this.otherStarExports);\n    write(this.exportPresenceMode);\n    write(this.allStarExports);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read,\n      setCircularReference\n    } = context;\n    setCircularReference(this);\n    this.ids = read();\n    this.name = read();\n    this.activeExports = read();\n    this.otherStarExports = read();\n    this.exportPresenceMode = read();\n    this.allStarExports = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(HarmonyExportImportedSpecifierDependency, \"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\");\nmodule.exports = HarmonyExportImportedSpecifierDependency;\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, templateContext) {\n    const {\n      moduleGraph,\n      runtime,\n      concatenationScope\n    } = templateContext;\n    const dep = /** @type {HarmonyExportImportedSpecifierDependency} */\n    dependency;\n    const mode = dep.getMode(moduleGraph, runtime);\n    if (concatenationScope) {\n      switch (mode.type) {\n        case \"reexport-undefined\":\n          concatenationScope.registerRawExport(mode.name, \"/* reexport non-default export from non-harmony */ undefined\");\n      }\n      return;\n    }\n    if (mode.type !== \"unused\" && mode.type !== \"empty-star\") {\n      super.apply(dependency, source, templateContext);\n      this._addExportFragments(templateContext.initFragments, dep, mode, templateContext.module, moduleGraph, runtime, templateContext.runtimeTemplate, templateContext.runtimeRequirements);\n    }\n  }\n\n  /**\r\n   * @param {InitFragment[]} initFragments target array for init fragments\r\n   * @param {HarmonyExportImportedSpecifierDependency} dep dependency\r\n   * @param {ExportMode} mode the export mode\r\n   * @param {Module} module the current module\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @param {RuntimeSpec} runtime the runtime\r\n   * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n   * @param {Set<string>} runtimeRequirements runtime requirements\r\n   * @returns {void}\r\n   */\n  _addExportFragments(initFragments, dep, mode, module, moduleGraph, runtime, runtimeTemplate, runtimeRequirements) {\n    const importedModule = moduleGraph.getModule(dep);\n    const importVar = dep.getImportVar(moduleGraph);\n    switch (mode.type) {\n      case \"missing\":\n      case \"empty-star\":\n        initFragments.push(new InitFragment(\"/* empty/unused harmony star reexport */\\n\", InitFragment.STAGE_HARMONY_EXPORTS, 1));\n        break;\n      case \"unused\":\n        initFragments.push(new InitFragment(`${Template.toNormalComment(`unused harmony reexport ${mode.name}`)}\\n`, InitFragment.STAGE_HARMONY_EXPORTS, 1));\n        break;\n      case \"reexport-dynamic-default\":\n        initFragments.push(this.getReexportFragment(module, \"reexport default from dynamic\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, null, runtimeRequirements));\n        break;\n      case \"reexport-fake-namespace-object\":\n        initFragments.push(...this.getReexportFakeNamespaceObjectFragments(module, moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, mode.fakeType, runtimeRequirements));\n        break;\n      case \"reexport-undefined\":\n        initFragments.push(this.getReexportFragment(module, \"reexport non-default export from non-harmony\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), \"undefined\", \"\", runtimeRequirements));\n        break;\n      case \"reexport-named-default\":\n        initFragments.push(this.getReexportFragment(module, \"reexport default export from named module\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, \"\", runtimeRequirements));\n        break;\n      case \"reexport-namespace-object\":\n        initFragments.push(this.getReexportFragment(module, \"reexport module object\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, \"\", runtimeRequirements));\n        break;\n      case \"normal-reexport\":\n        for (const {\n          name,\n          ids,\n          checked,\n          hidden\n        } of mode.items) {\n          if (hidden) continue;\n          if (checked) {\n            initFragments.push(new InitFragment(\"/* harmony reexport (checked) */ \" + this.getConditionalReexportStatement(module, name, importVar, ids, runtimeRequirements), moduleGraph.isAsync(importedModule) ? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS : InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder));\n          } else {\n            initFragments.push(this.getReexportFragment(module, \"reexport safe\", moduleGraph.getExportsInfo(module).getUsedName(name, runtime), importVar, moduleGraph.getExportsInfo(importedModule).getUsedName(ids, runtime), runtimeRequirements));\n          }\n        }\n        break;\n      case \"dynamic-reexport\":\n        {\n          const ignored = mode.hidden ? combine(mode.ignored, mode.hidden) : mode.ignored;\n          const modern = runtimeTemplate.supportsConst() && runtimeTemplate.supportsArrowFunction();\n          let content = \"/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\\n\" + `/* harmony reexport (unknown) */ for(${modern ? \"const\" : \"var\"} __WEBPACK_IMPORT_KEY__ in ${importVar}) `;\n\n          // Filter out exports which are defined by other exports\n          // and filter out default export because it cannot be reexported with *\n          if (ignored.size > 1) {\n            content += \"if(\" + JSON.stringify(Array.from(ignored)) + \".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n          } else if (ignored.size === 1) {\n            content += `if(__WEBPACK_IMPORT_KEY__ !== ${JSON.stringify(first(ignored))}) `;\n          }\n          content += `__WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = `;\n          if (modern) {\n            content += `() => ${importVar}[__WEBPACK_IMPORT_KEY__]`;\n          } else {\n            content += `function(key) { return ${importVar}[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)`;\n          }\n          runtimeRequirements.add(RuntimeGlobals.exports);\n          runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n          const exportsName = module.exportsArgument;\n          initFragments.push(new InitFragment(`${content}\\n/* harmony reexport (unknown) */ ${RuntimeGlobals.definePropertyGetters}(${exportsName}, __WEBPACK_REEXPORT_OBJECT__);\\n`, moduleGraph.isAsync(importedModule) ? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS : InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder));\n          break;\n        }\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n  getReexportFragment(module, comment, key, name, valueKey, runtimeRequirements) {\n    const returnValue = this.getReturnValue(name, valueKey);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n    const map = new Map();\n    map.set(key, `/* ${comment} */ ${returnValue}`);\n    return new HarmonyExportInitFragment(module.exportsArgument, map);\n  }\n  getReexportFakeNamespaceObjectFragments(module, key, name, fakeType, runtimeRequirements) {\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n    runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n    const map = new Map();\n    map.set(key, `/* reexport fake namespace object from non-harmony */ ${name}_namespace_cache || (${name}_namespace_cache = ${RuntimeGlobals.createFakeNamespaceObject}(${name}${fakeType ? `, ${fakeType}` : \"\"}))`);\n    return [new InitFragment(`var ${name}_namespace_cache;\\n`, InitFragment.STAGE_CONSTANTS, -1, `${name}_namespace_cache`), new HarmonyExportInitFragment(module.exportsArgument, map)];\n  }\n  getConditionalReexportStatement(module, key, name, valueKey, runtimeRequirements) {\n    if (valueKey === false) {\n      return \"/* unused export */\\n\";\n    }\n    const exportsName = module.exportsArgument;\n    const returnValue = this.getReturnValue(name, valueKey);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n    runtimeRequirements.add(RuntimeGlobals.hasOwnProperty);\n    return `if(${RuntimeGlobals.hasOwnProperty}(${name}, ${JSON.stringify(valueKey[0])})) ${RuntimeGlobals.definePropertyGetters}(${exportsName}, { ${JSON.stringify(key)}: function() { return ${returnValue}; } });\\n`;\n  }\n  getReturnValue(name, valueKey) {\n    if (valueKey === null) {\n      return `${name}_default.a`;\n    }\n    if (valueKey === \"\") {\n      return name;\n    }\n    if (valueKey === false) {\n      return \"/* unused export */ undefined\";\n    }\n    return `${name}${propertyAccess(valueKey)}`;\n  }\n};\nclass HarmonyStarExportsList {\n  constructor() {\n    /** @type {HarmonyExportImportedSpecifierDependency[]} */\n    this.dependencies = [];\n  }\n\n  /**\r\n   * @param {HarmonyExportImportedSpecifierDependency} dep dependency\r\n   * @returns {void}\r\n   */\n  push(dep) {\n    this.dependencies.push(dep);\n  }\n  slice() {\n    return this.dependencies.slice();\n  }\n  serialize(_ref2) {\n    let {\n      write,\n      setCircularReference\n    } = _ref2;\n    setCircularReference(this);\n    write(this.dependencies);\n  }\n  deserialize(_ref3) {\n    let {\n      read,\n      setCircularReference\n    } = _ref3;\n    setCircularReference(this);\n    this.dependencies = read();\n  }\n}\nmakeSerializable(HarmonyStarExportsList, \"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\", \"HarmonyStarExportsList\");\nmodule.exports.HarmonyStarExportsList = HarmonyStarExportsList;","map":{"version":3,"names":["Dependency","require","UsageState","HarmonyLinkingError","InitFragment","RuntimeGlobals","Template","countIterable","first","combine","makeSerializable","propertyAccess","getRuntimeKey","keyToRuntime","HarmonyExportInitFragment","HarmonyImportDependency","processExportInfo","ExportPresenceModes","idsSymbol","Symbol","NormalReexportItem","constructor","name","ids","exportInfo","checked","hidden","ExportMode","type","items","partialNamespaceExportInfo","ignored","userRequest","fakeType","determineExportAssignments","moduleGraph","dependencies","additionalDependency","names","Set","dependencyIndices","concat","dep","i","length","size","otherImportedModule","getModule","exportsInfo","getExportsInfo","exports","provided","has","add","push","Array","from","findDependencyForName","dependenciesIt","iterator","dependencyIndicesIt","dependenciesItResult","next","dependencyIndicesItResult","done","value","undefined","getMode","runtimeKey","importedModule","mode","runtime","parentModule","getParentModule","getUsed","Unused","isUsed","importedExportsType","getExportsType","buildMeta","strictHarmonyModule","getIds","getReadOnlyExportInfo","ignoredExports","getStarReexports","exportName","HarmonyExportImportedSpecifierDependency","request","sourceOrder","activeExports","otherStarExports","exportPresenceMode","allStarExports","assertions","couldAffectReferencingModule","TRANSITIVE","id","Error","getId","setId","getMeta","setIds","dependencyCacheProvide","importedExportsInfo","noExtraExports","otherExportsInfo","noExtraImports","hiddenExports","_discoverActiveExportsFromOtherStarExports","namesSlice","e","delete","orderedExports","importedExportInfo","getCondition","connection","getModuleEvaluationSideEffectsState","getReferencedExports","NO_EXPORTS_REFERENCED","EXPORTS_OBJECT_REFERENCED","referencedExports","cached","dependencyIndex","getExports","getConnection","canMangle","excludeExports","hideExports","module","item","export","priority","_getEffectiveExportPresenceLevel","AUTO","ERROR","WARN","getWarnings","exportsPresence","_getErrors","getErrors","errors","getLinkingErrors","potentialConflicts","ownNames","slice","conflicts","Map","conflictingDependency","target","getTerminalBinding","conflictingModule","conflictingExportInfo","getExportInfo","conflictingTarget","list","get","set","map","join","serialize","context","write","setCircularReference","deserialize","read","HarmonyExportImportedSpecifierDependencyTemplate","apply","dependency","source","templateContext","concatenationScope","registerRawExport","_addExportFragments","initFragments","runtimeTemplate","runtimeRequirements","importVar","getImportVar","STAGE_HARMONY_EXPORTS","toNormalComment","getReexportFragment","getUsedName","getReexportFakeNamespaceObjectFragments","getConditionalReexportStatement","isAsync","STAGE_ASYNC_HARMONY_IMPORTS","STAGE_HARMONY_IMPORTS","modern","supportsConst","supportsArrowFunction","content","JSON","stringify","definePropertyGetters","exportsName","exportsArgument","comment","key","valueKey","returnValue","getReturnValue","createFakeNamespaceObject","STAGE_CONSTANTS","hasOwnProperty","HarmonyStarExportsList"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Dependency = require(\"../Dependency\");\r\nconst { UsageState } = require(\"../ExportsInfo\");\r\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\r\nconst InitFragment = require(\"../InitFragment\");\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst Template = require(\"../Template\");\r\nconst { countIterable } = require(\"../util/IterableHelpers\");\r\nconst { first, combine } = require(\"../util/SetHelpers\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst propertyAccess = require(\"../util/propertyAccess\");\r\nconst { getRuntimeKey, keyToRuntime } = require(\"../util/runtime\");\r\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\r\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\r\nconst processExportInfo = require(\"./processExportInfo\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\r\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\r\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\r\n/** @typedef {import(\"../Module\")} Module */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\r\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n/** @typedef {import(\"../WebpackError\")} WebpackError */\r\n/** @typedef {import(\"../util/Hash\")} Hash */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-dynamic-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-fake-namespace-object\"|\"reexport-undefined\"|\"normal-reexport\"|\"dynamic-reexport\"} ExportModeType */\r\n\r\nconst { ExportPresenceModes } = HarmonyImportDependency;\r\n\r\nconst idsSymbol = Symbol(\"HarmonyExportImportedSpecifierDependency.ids\");\r\n\r\nclass NormalReexportItem {\r\n\t/**\r\n\t * @param {string} name export name\r\n\t * @param {string[]} ids reexported ids from other module\r\n\t * @param {ExportInfo} exportInfo export info from other module\r\n\t * @param {boolean} checked true, if it should be checked at runtime if this export exists\r\n\t * @param {boolean} hidden true, if it is hidden behind another active export in the same module\r\n\t */\r\n\tconstructor(name, ids, exportInfo, checked, hidden) {\r\n\t\tthis.name = name;\r\n\t\tthis.ids = ids;\r\n\t\tthis.exportInfo = exportInfo;\r\n\t\tthis.checked = checked;\r\n\t\tthis.hidden = hidden;\r\n\t}\r\n}\r\n\r\nclass ExportMode {\r\n\t/**\r\n\t * @param {ExportModeType} type type of the mode\r\n\t */\r\n\tconstructor(type) {\r\n\t\t/** @type {ExportModeType} */\r\n\t\tthis.type = type;\r\n\r\n\t\t// for \"normal-reexport\":\r\n\t\t/** @type {NormalReexportItem[] | null} */\r\n\t\tthis.items = null;\r\n\r\n\t\t// for \"reexport-named-default\" | \"reexport-fake-namespace-object\" | \"reexport-namespace-object\"\r\n\t\t/** @type {string|null} */\r\n\t\tthis.name = null;\r\n\t\t/** @type {ExportInfo | null} */\r\n\t\tthis.partialNamespaceExportInfo = null;\r\n\r\n\t\t// for \"dynamic-reexport\":\r\n\t\t/** @type {Set<string> | null} */\r\n\t\tthis.ignored = null;\r\n\r\n\t\t// for \"dynamic-reexport\" | \"empty-star\":\r\n\t\t/** @type {Set<string> | null} */\r\n\t\tthis.hidden = null;\r\n\r\n\t\t// for \"missing\":\r\n\t\t/** @type {string | null} */\r\n\t\tthis.userRequest = null;\r\n\r\n\t\t// for \"reexport-fake-namespace-object\":\r\n\t\t/** @type {number} */\r\n\t\tthis.fakeType = 0;\r\n\t}\r\n}\r\n\r\nconst determineExportAssignments = (\r\n\tmoduleGraph,\r\n\tdependencies,\r\n\tadditionalDependency\r\n) => {\r\n\tconst names = new Set();\r\n\tconst dependencyIndices = [];\r\n\r\n\tif (additionalDependency) {\r\n\t\tdependencies = dependencies.concat(additionalDependency);\r\n\t}\r\n\r\n\tfor (const dep of dependencies) {\r\n\t\tconst i = dependencyIndices.length;\r\n\t\tdependencyIndices[i] = names.size;\r\n\t\tconst otherImportedModule = moduleGraph.getModule(dep);\r\n\t\tif (otherImportedModule) {\r\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(otherImportedModule);\r\n\t\t\tfor (const exportInfo of exportsInfo.exports) {\r\n\t\t\t\tif (\r\n\t\t\t\t\texportInfo.provided === true &&\r\n\t\t\t\t\texportInfo.name !== \"default\" &&\r\n\t\t\t\t\t!names.has(exportInfo.name)\r\n\t\t\t\t) {\r\n\t\t\t\t\tnames.add(exportInfo.name);\r\n\t\t\t\t\tdependencyIndices[i] = names.size;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdependencyIndices.push(names.size);\r\n\r\n\treturn { names: Array.from(names), dependencyIndices };\r\n};\r\n\r\nconst findDependencyForName = (\r\n\t{ names, dependencyIndices },\r\n\tname,\r\n\tdependencies\r\n) => {\r\n\tconst dependenciesIt = dependencies[Symbol.iterator]();\r\n\tconst dependencyIndicesIt = dependencyIndices[Symbol.iterator]();\r\n\tlet dependenciesItResult = dependenciesIt.next();\r\n\tlet dependencyIndicesItResult = dependencyIndicesIt.next();\r\n\tif (dependencyIndicesItResult.done) return;\r\n\tfor (let i = 0; i < names.length; i++) {\r\n\t\twhile (i >= dependencyIndicesItResult.value) {\r\n\t\t\tdependenciesItResult = dependenciesIt.next();\r\n\t\t\tdependencyIndicesItResult = dependencyIndicesIt.next();\r\n\t\t\tif (dependencyIndicesItResult.done) return;\r\n\t\t}\r\n\t\tif (names[i] === name) return dependenciesItResult.value;\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\n/**\r\n * @param {ModuleGraph} moduleGraph the module graph\r\n * @param {HarmonyExportImportedSpecifierDependency} dep the dependency\r\n * @param {string} runtimeKey the runtime key\r\n * @returns {ExportMode} the export mode\r\n */\r\nconst getMode = (moduleGraph, dep, runtimeKey) => {\r\n\tconst importedModule = moduleGraph.getModule(dep);\r\n\r\n\tif (!importedModule) {\r\n\t\tconst mode = new ExportMode(\"missing\");\r\n\r\n\t\tmode.userRequest = dep.userRequest;\r\n\r\n\t\treturn mode;\r\n\t}\r\n\r\n\tconst name = dep.name;\r\n\tconst runtime = keyToRuntime(runtimeKey);\r\n\tconst parentModule = moduleGraph.getParentModule(dep);\r\n\tconst exportsInfo = moduleGraph.getExportsInfo(parentModule);\r\n\r\n\tif (\r\n\t\tname\r\n\t\t\t? exportsInfo.getUsed(name, runtime) === UsageState.Unused\r\n\t\t\t: exportsInfo.isUsed(runtime) === false\r\n\t) {\r\n\t\tconst mode = new ExportMode(\"unused\");\r\n\r\n\t\tmode.name = name || \"*\";\r\n\r\n\t\treturn mode;\r\n\t}\r\n\r\n\tconst importedExportsType = importedModule.getExportsType(\r\n\t\tmoduleGraph,\r\n\t\tparentModule.buildMeta.strictHarmonyModule\r\n\t);\r\n\r\n\tconst ids = dep.getIds(moduleGraph);\r\n\r\n\t// Special handling for reexporting the default export\r\n\t// from non-namespace modules\r\n\tif (name && ids.length > 0 && ids[0] === \"default\") {\r\n\t\tswitch (importedExportsType) {\r\n\t\t\tcase \"dynamic\": {\r\n\t\t\t\tconst mode = new ExportMode(\"reexport-dynamic-default\");\r\n\r\n\t\t\t\tmode.name = name;\r\n\r\n\t\t\t\treturn mode;\r\n\t\t\t}\r\n\t\t\tcase \"default-only\":\r\n\t\t\tcase \"default-with-named\": {\r\n\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\r\n\t\t\t\tconst mode = new ExportMode(\"reexport-named-default\");\r\n\r\n\t\t\t\tmode.name = name;\r\n\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\r\n\r\n\t\t\t\treturn mode;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// reexporting with a fixed name\r\n\tif (name) {\r\n\t\tlet mode;\r\n\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\r\n\r\n\t\tif (ids.length > 0) {\r\n\t\t\t// export { name as name }\r\n\t\t\tswitch (importedExportsType) {\r\n\t\t\t\tcase \"default-only\":\r\n\t\t\t\t\tmode = new ExportMode(\"reexport-undefined\");\r\n\t\t\t\t\tmode.name = name;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmode = new ExportMode(\"normal-reexport\");\r\n\t\t\t\t\tmode.items = [\r\n\t\t\t\t\t\tnew NormalReexportItem(name, ids, exportInfo, false, false)\r\n\t\t\t\t\t];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// export * as name\r\n\t\t\tswitch (importedExportsType) {\r\n\t\t\t\tcase \"default-only\":\r\n\t\t\t\t\tmode = new ExportMode(\"reexport-fake-namespace-object\");\r\n\t\t\t\t\tmode.name = name;\r\n\t\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\r\n\t\t\t\t\tmode.fakeType = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"default-with-named\":\r\n\t\t\t\t\tmode = new ExportMode(\"reexport-fake-namespace-object\");\r\n\t\t\t\t\tmode.name = name;\r\n\t\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\r\n\t\t\t\t\tmode.fakeType = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"dynamic\":\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmode = new ExportMode(\"reexport-namespace-object\");\r\n\t\t\t\t\tmode.name = name;\r\n\t\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn mode;\r\n\t}\r\n\r\n\t// Star reexporting\r\n\r\n\tconst { ignoredExports, exports, checked, hidden } = dep.getStarReexports(\r\n\t\tmoduleGraph,\r\n\t\truntime,\r\n\t\texportsInfo,\r\n\t\timportedModule\r\n\t);\r\n\tif (!exports) {\r\n\t\t// We have too few info about the modules\r\n\t\t// Delegate the logic to the runtime code\r\n\r\n\t\tconst mode = new ExportMode(\"dynamic-reexport\");\r\n\t\tmode.ignored = ignoredExports;\r\n\t\tmode.hidden = hidden;\r\n\r\n\t\treturn mode;\r\n\t}\r\n\r\n\tif (exports.size === 0) {\r\n\t\tconst mode = new ExportMode(\"empty-star\");\r\n\t\tmode.hidden = hidden;\r\n\r\n\t\treturn mode;\r\n\t}\r\n\r\n\tconst mode = new ExportMode(\"normal-reexport\");\r\n\r\n\tmode.items = Array.from(\r\n\t\texports,\r\n\t\texportName =>\r\n\t\t\tnew NormalReexportItem(\r\n\t\t\t\texportName,\r\n\t\t\t\t[exportName],\r\n\t\t\t\texportsInfo.getReadOnlyExportInfo(exportName),\r\n\t\t\t\tchecked.has(exportName),\r\n\t\t\t\tfalse\r\n\t\t\t)\r\n\t);\r\n\tif (hidden !== undefined) {\r\n\t\tfor (const exportName of hidden) {\r\n\t\t\tmode.items.push(\r\n\t\t\t\tnew NormalReexportItem(\r\n\t\t\t\t\texportName,\r\n\t\t\t\t\t[exportName],\r\n\t\t\t\t\texportsInfo.getReadOnlyExportInfo(exportName),\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn mode;\r\n};\r\n\r\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\r\n\t/**\r\n\t * @param {string} request the request string\r\n\t * @param {number} sourceOrder the order in the original source file\r\n\t * @param {string[]} ids the requested export name of the imported module\r\n\t * @param {string | null} name the export name of for this module\r\n\t * @param {Set<string>} activeExports other named exports in the module\r\n\t * @param {ReadonlyArray<HarmonyExportImportedSpecifierDependency> | Iterable<HarmonyExportImportedSpecifierDependency>} otherStarExports other star exports in the module before this import\r\n\t * @param {number} exportPresenceMode mode of checking export names\r\n\t * @param {HarmonyStarExportsList} allStarExports all star exports in the module\r\n\t * @param {Record<string, any>=} assertions import assertions\r\n\t */\r\n\tconstructor(\r\n\t\trequest,\r\n\t\tsourceOrder,\r\n\t\tids,\r\n\t\tname,\r\n\t\tactiveExports,\r\n\t\totherStarExports,\r\n\t\texportPresenceMode,\r\n\t\tallStarExports,\r\n\t\tassertions\r\n\t) {\r\n\t\tsuper(request, sourceOrder, assertions);\r\n\r\n\t\tthis.ids = ids;\r\n\t\tthis.name = name;\r\n\t\tthis.activeExports = activeExports;\r\n\t\tthis.otherStarExports = otherStarExports;\r\n\t\tthis.exportPresenceMode = exportPresenceMode;\r\n\t\tthis.allStarExports = allStarExports;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\r\n\t */\r\n\tcouldAffectReferencingModule() {\r\n\t\treturn Dependency.TRANSITIVE;\r\n\t}\r\n\r\n\t// TODO webpack 6 remove\r\n\tget id() {\r\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\r\n\t}\r\n\r\n\t// TODO webpack 6 remove\r\n\tgetId() {\r\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\r\n\t}\r\n\r\n\t// TODO webpack 6 remove\r\n\tsetId() {\r\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export imported specifier\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @returns {string[]} the imported id\r\n\t */\r\n\tgetIds(moduleGraph) {\r\n\t\treturn moduleGraph.getMeta(this)[idsSymbol] || this.ids;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @param {string[]} ids the imported ids\r\n\t * @returns {void}\r\n\t */\r\n\tsetIds(moduleGraph, ids) {\r\n\t\tmoduleGraph.getMeta(this)[idsSymbol] = ids;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @param {RuntimeSpec} runtime the runtime\r\n\t * @returns {ExportMode} the export mode\r\n\t */\r\n\tgetMode(moduleGraph, runtime) {\r\n\t\treturn moduleGraph.dependencyCacheProvide(\r\n\t\t\tthis,\r\n\t\t\tgetRuntimeKey(runtime),\r\n\t\t\tgetMode\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @param {RuntimeSpec} runtime the runtime\r\n\t * @param {ExportsInfo} exportsInfo exports info about the current module (optional)\r\n\t * @param {Module} importedModule the imported module (optional)\r\n\t * @returns {{exports?: Set<string>, checked?: Set<string>, ignoredExports: Set<string>, hidden?: Set<string>}} information\r\n\t */\r\n\tgetStarReexports(\r\n\t\tmoduleGraph,\r\n\t\truntime,\r\n\t\texportsInfo = moduleGraph.getExportsInfo(moduleGraph.getParentModule(this)),\r\n\t\timportedModule = moduleGraph.getModule(this)\r\n\t) {\r\n\t\tconst importedExportsInfo = moduleGraph.getExportsInfo(importedModule);\r\n\r\n\t\tconst noExtraExports =\r\n\t\t\timportedExportsInfo.otherExportsInfo.provided === false;\r\n\t\tconst noExtraImports =\r\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused;\r\n\r\n\t\tconst ignoredExports = new Set([\"default\", ...this.activeExports]);\r\n\r\n\t\tlet hiddenExports = undefined;\r\n\t\tconst otherStarExports =\r\n\t\t\tthis._discoverActiveExportsFromOtherStarExports(moduleGraph);\r\n\t\tif (otherStarExports !== undefined) {\r\n\t\t\thiddenExports = new Set();\r\n\t\t\tfor (let i = 0; i < otherStarExports.namesSlice; i++) {\r\n\t\t\t\thiddenExports.add(otherStarExports.names[i]);\r\n\t\t\t}\r\n\t\t\tfor (const e of ignoredExports) hiddenExports.delete(e);\r\n\t\t}\r\n\r\n\t\tif (!noExtraExports && !noExtraImports) {\r\n\t\t\treturn {\r\n\t\t\t\tignoredExports,\r\n\t\t\t\thidden: hiddenExports\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t/** @type {Set<string>} */\r\n\t\tconst exports = new Set();\r\n\t\t/** @type {Set<string>} */\r\n\t\tconst checked = new Set();\r\n\t\t/** @type {Set<string>} */\r\n\t\tconst hidden = hiddenExports !== undefined ? new Set() : undefined;\r\n\r\n\t\tif (noExtraImports) {\r\n\t\t\tfor (const exportInfo of exportsInfo.orderedExports) {\r\n\t\t\t\tconst name = exportInfo.name;\r\n\t\t\t\tif (ignoredExports.has(name)) continue;\r\n\t\t\t\tif (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\r\n\t\t\t\tconst importedExportInfo =\r\n\t\t\t\t\timportedExportsInfo.getReadOnlyExportInfo(name);\r\n\t\t\t\tif (importedExportInfo.provided === false) continue;\r\n\t\t\t\tif (hiddenExports !== undefined && hiddenExports.has(name)) {\r\n\t\t\t\t\thidden.add(name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\texports.add(name);\r\n\t\t\t\tif (importedExportInfo.provided === true) continue;\r\n\t\t\t\tchecked.add(name);\r\n\t\t\t}\r\n\t\t} else if (noExtraExports) {\r\n\t\t\tfor (const importedExportInfo of importedExportsInfo.orderedExports) {\r\n\t\t\t\tconst name = importedExportInfo.name;\r\n\t\t\t\tif (ignoredExports.has(name)) continue;\r\n\t\t\t\tif (importedExportInfo.provided === false) continue;\r\n\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\r\n\t\t\t\tif (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\r\n\t\t\t\tif (hiddenExports !== undefined && hiddenExports.has(name)) {\r\n\t\t\t\t\thidden.add(name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\texports.add(name);\r\n\t\t\t\tif (importedExportInfo.provided === true) continue;\r\n\t\t\t\tchecked.add(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { ignoredExports, exports, checked, hidden };\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\r\n\t */\r\n\tgetCondition(moduleGraph) {\r\n\t\treturn (connection, runtime) => {\r\n\t\t\tconst mode = this.getMode(moduleGraph, runtime);\r\n\t\t\treturn mode.type !== \"unused\" && mode.type !== \"empty-star\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\r\n\t */\r\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of exports referenced by this dependency\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\r\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\r\n\t */\r\n\tgetReferencedExports(moduleGraph, runtime) {\r\n\t\tconst mode = this.getMode(moduleGraph, runtime);\r\n\r\n\t\tswitch (mode.type) {\r\n\t\t\tcase \"missing\":\r\n\t\t\tcase \"unused\":\r\n\t\t\tcase \"empty-star\":\r\n\t\t\tcase \"reexport-undefined\":\r\n\t\t\t\treturn Dependency.NO_EXPORTS_REFERENCED;\r\n\r\n\t\t\tcase \"reexport-dynamic-default\":\r\n\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\r\n\r\n\t\t\tcase \"reexport-named-default\": {\r\n\t\t\t\tif (!mode.partialNamespaceExportInfo)\r\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\r\n\t\t\t\t/** @type {string[][]} */\r\n\t\t\t\tconst referencedExports = [];\r\n\t\t\t\tprocessExportInfo(\r\n\t\t\t\t\truntime,\r\n\t\t\t\t\treferencedExports,\r\n\t\t\t\t\t[],\r\n\t\t\t\t\t/** @type {ExportInfo} */ (mode.partialNamespaceExportInfo)\r\n\t\t\t\t);\r\n\t\t\t\treturn referencedExports;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"reexport-namespace-object\":\r\n\t\t\tcase \"reexport-fake-namespace-object\": {\r\n\t\t\t\tif (!mode.partialNamespaceExportInfo)\r\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\r\n\t\t\t\t/** @type {string[][]} */\r\n\t\t\t\tconst referencedExports = [];\r\n\t\t\t\tprocessExportInfo(\r\n\t\t\t\t\truntime,\r\n\t\t\t\t\treferencedExports,\r\n\t\t\t\t\t[],\r\n\t\t\t\t\t/** @type {ExportInfo} */ (mode.partialNamespaceExportInfo),\r\n\t\t\t\t\tmode.type === \"reexport-fake-namespace-object\"\r\n\t\t\t\t);\r\n\t\t\t\treturn referencedExports;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"dynamic-reexport\":\r\n\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\r\n\r\n\t\t\tcase \"normal-reexport\": {\r\n\t\t\t\tconst referencedExports = [];\r\n\t\t\t\tfor (const { ids, exportInfo, hidden } of mode.items) {\r\n\t\t\t\t\tif (hidden) continue;\r\n\t\t\t\t\tprocessExportInfo(runtime, referencedExports, ids, exportInfo, false);\r\n\t\t\t\t}\r\n\t\t\t\treturn referencedExports;\r\n\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @returns {{ names: string[], namesSlice: number, dependencyIndices: number[], dependencyIndex: number } | undefined} exported names and their origin dependency\r\n\t */\r\n\t_discoverActiveExportsFromOtherStarExports(moduleGraph) {\r\n\t\tif (!this.otherStarExports) return undefined;\r\n\r\n\t\tconst i =\r\n\t\t\t\"length\" in this.otherStarExports\r\n\t\t\t\t? this.otherStarExports.length\r\n\t\t\t\t: countIterable(this.otherStarExports);\r\n\t\tif (i === 0) return undefined;\r\n\r\n\t\tif (this.allStarExports) {\r\n\t\t\tconst { names, dependencyIndices } = moduleGraph.cached(\r\n\t\t\t\tdetermineExportAssignments,\r\n\t\t\t\tthis.allStarExports.dependencies\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tnames,\r\n\t\t\t\tnamesSlice: dependencyIndices[i - 1],\r\n\t\t\t\tdependencyIndices,\r\n\t\t\t\tdependencyIndex: i\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst { names, dependencyIndices } = moduleGraph.cached(\r\n\t\t\tdetermineExportAssignments,\r\n\t\t\tthis.otherStarExports,\r\n\t\t\tthis\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tnames,\r\n\t\t\tnamesSlice: dependencyIndices[i - 1],\r\n\t\t\tdependencyIndices,\r\n\t\t\tdependencyIndex: i\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the exported names\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {ExportsSpec | undefined} export names\r\n\t */\r\n\tgetExports(moduleGraph) {\r\n\t\tconst mode = this.getMode(moduleGraph, undefined);\r\n\r\n\t\tswitch (mode.type) {\r\n\t\t\tcase \"missing\":\r\n\t\t\t\treturn undefined;\r\n\t\t\tcase \"dynamic-reexport\": {\r\n\t\t\t\tconst from = moduleGraph.getConnection(this);\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: true,\r\n\t\t\t\t\tfrom,\r\n\t\t\t\t\tcanMangle: false,\r\n\t\t\t\t\texcludeExports: mode.hidden\r\n\t\t\t\t\t\t? combine(mode.ignored, mode.hidden)\r\n\t\t\t\t\t\t: mode.ignored,\r\n\t\t\t\t\thideExports: mode.hidden,\r\n\t\t\t\t\tdependencies: [from.module]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcase \"empty-star\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: [],\r\n\t\t\t\t\thideExports: mode.hidden,\r\n\t\t\t\t\tdependencies: [moduleGraph.getModule(this)]\r\n\t\t\t\t};\r\n\t\t\t// falls through\r\n\t\t\tcase \"normal-reexport\": {\r\n\t\t\t\tconst from = moduleGraph.getConnection(this);\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: Array.from(mode.items, item => ({\r\n\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\tfrom,\r\n\t\t\t\t\t\texport: item.ids,\r\n\t\t\t\t\t\thidden: item.hidden\r\n\t\t\t\t\t})),\r\n\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\tdependencies: [from.module]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcase \"reexport-dynamic-default\": {\r\n\t\t\t\t{\r\n\t\t\t\t\tconst from = moduleGraph.getConnection(this);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\texports: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: mode.name,\r\n\t\t\t\t\t\t\t\tfrom,\r\n\t\t\t\t\t\t\t\texport: [\"default\"]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\t\tdependencies: [from.module]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcase \"reexport-undefined\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: [mode.name],\r\n\t\t\t\t\tdependencies: [moduleGraph.getModule(this)]\r\n\t\t\t\t};\r\n\t\t\tcase \"reexport-fake-namespace-object\": {\r\n\t\t\t\tconst from = moduleGraph.getConnection(this);\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: mode.name,\r\n\t\t\t\t\t\t\tfrom,\r\n\t\t\t\t\t\t\texport: null,\r\n\t\t\t\t\t\t\texports: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: \"default\",\r\n\t\t\t\t\t\t\t\t\tcanMangle: false,\r\n\t\t\t\t\t\t\t\t\tfrom,\r\n\t\t\t\t\t\t\t\t\texport: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\tdependencies: [from.module]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcase \"reexport-namespace-object\": {\r\n\t\t\t\tconst from = moduleGraph.getConnection(this);\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: mode.name,\r\n\t\t\t\t\t\t\tfrom,\r\n\t\t\t\t\t\t\texport: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\tdependencies: [from.module]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcase \"reexport-named-default\": {\r\n\t\t\t\tconst from = moduleGraph.getConnection(this);\r\n\t\t\t\treturn {\r\n\t\t\t\t\texports: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: mode.name,\r\n\t\t\t\t\t\t\tfrom,\r\n\t\t\t\t\t\t\texport: [\"default\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\tdependencies: [from.module]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {number} effective mode\r\n\t */\r\n\t_getEffectiveExportPresenceLevel(moduleGraph) {\r\n\t\tif (this.exportPresenceMode !== ExportPresenceModes.AUTO)\r\n\t\t\treturn this.exportPresenceMode;\r\n\t\treturn moduleGraph.getParentModule(this).buildMeta.strictHarmonyModule\r\n\t\t\t? ExportPresenceModes.ERROR\r\n\t\t\t: ExportPresenceModes.WARN;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns warnings\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {WebpackError[]} warnings\r\n\t */\r\n\tgetWarnings(moduleGraph) {\r\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\r\n\t\tif (exportsPresence === ExportPresenceModes.WARN) {\r\n\t\t\treturn this._getErrors(moduleGraph);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns errors\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {WebpackError[]} errors\r\n\t */\r\n\tgetErrors(moduleGraph) {\r\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\r\n\t\tif (exportsPresence === ExportPresenceModes.ERROR) {\r\n\t\t\treturn this._getErrors(moduleGraph);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {WebpackError[] | undefined} errors\r\n\t */\r\n\t_getErrors(moduleGraph) {\r\n\t\tconst ids = this.getIds(moduleGraph);\r\n\t\tlet errors = this.getLinkingErrors(\r\n\t\t\tmoduleGraph,\r\n\t\t\tids,\r\n\t\t\t`(reexported as '${this.name}')`\r\n\t\t);\r\n\t\tif (ids.length === 0 && this.name === null) {\r\n\t\t\tconst potentialConflicts =\r\n\t\t\t\tthis._discoverActiveExportsFromOtherStarExports(moduleGraph);\r\n\t\t\tif (potentialConflicts && potentialConflicts.namesSlice > 0) {\r\n\t\t\t\tconst ownNames = new Set(\r\n\t\t\t\t\tpotentialConflicts.names.slice(\r\n\t\t\t\t\t\tpotentialConflicts.namesSlice,\r\n\t\t\t\t\t\tpotentialConflicts.dependencyIndices[\r\n\t\t\t\t\t\t\tpotentialConflicts.dependencyIndex\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tconst importedModule = moduleGraph.getModule(this);\r\n\t\t\t\tif (importedModule) {\r\n\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(importedModule);\r\n\t\t\t\t\tconst conflicts = new Map();\r\n\t\t\t\t\tfor (const exportInfo of exportsInfo.orderedExports) {\r\n\t\t\t\t\t\tif (exportInfo.provided !== true) continue;\r\n\t\t\t\t\t\tif (exportInfo.name === \"default\") continue;\r\n\t\t\t\t\t\tif (this.activeExports.has(exportInfo.name)) continue;\r\n\t\t\t\t\t\tif (ownNames.has(exportInfo.name)) continue;\r\n\t\t\t\t\t\tconst conflictingDependency = findDependencyForName(\r\n\t\t\t\t\t\t\tpotentialConflicts,\r\n\t\t\t\t\t\t\texportInfo.name,\r\n\t\t\t\t\t\t\tthis.allStarExports\r\n\t\t\t\t\t\t\t\t? this.allStarExports.dependencies\r\n\t\t\t\t\t\t\t\t: [...this.otherStarExports, this]\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (!conflictingDependency) continue;\r\n\t\t\t\t\t\tconst target = exportInfo.getTerminalBinding(moduleGraph);\r\n\t\t\t\t\t\tif (!target) continue;\r\n\t\t\t\t\t\tconst conflictingModule = moduleGraph.getModule(\r\n\t\t\t\t\t\t\tconflictingDependency\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (conflictingModule === importedModule) continue;\r\n\t\t\t\t\t\tconst conflictingExportInfo = moduleGraph.getExportInfo(\r\n\t\t\t\t\t\t\tconflictingModule,\r\n\t\t\t\t\t\t\texportInfo.name\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst conflictingTarget =\r\n\t\t\t\t\t\t\tconflictingExportInfo.getTerminalBinding(moduleGraph);\r\n\t\t\t\t\t\tif (!conflictingTarget) continue;\r\n\t\t\t\t\t\tif (target === conflictingTarget) continue;\r\n\t\t\t\t\t\tconst list = conflicts.get(conflictingDependency.request);\r\n\t\t\t\t\t\tif (list === undefined) {\r\n\t\t\t\t\t\t\tconflicts.set(conflictingDependency.request, [exportInfo.name]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlist.push(exportInfo.name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (const [request, exports] of conflicts) {\r\n\t\t\t\t\t\tif (!errors) errors = [];\r\n\t\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t\tnew HarmonyLinkingError(\r\n\t\t\t\t\t\t\t\t`The requested module '${\r\n\t\t\t\t\t\t\t\t\tthis.request\r\n\t\t\t\t\t\t\t\t}' contains conflicting star exports for the ${\r\n\t\t\t\t\t\t\t\t\texports.length > 1 ? \"names\" : \"name\"\r\n\t\t\t\t\t\t\t\t} ${exports\r\n\t\t\t\t\t\t\t\t\t.map(e => `'${e}'`)\r\n\t\t\t\t\t\t\t\t\t.join(\", \")} with the previous requested module '${request}'`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write, setCircularReference } = context;\r\n\r\n\t\tsetCircularReference(this);\r\n\t\twrite(this.ids);\r\n\t\twrite(this.name);\r\n\t\twrite(this.activeExports);\r\n\t\twrite(this.otherStarExports);\r\n\t\twrite(this.exportPresenceMode);\r\n\t\twrite(this.allStarExports);\r\n\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read, setCircularReference } = context;\r\n\r\n\t\tsetCircularReference(this);\r\n\t\tthis.ids = read();\r\n\t\tthis.name = read();\r\n\t\tthis.activeExports = read();\r\n\t\tthis.otherStarExports = read();\r\n\t\tthis.exportPresenceMode = read();\r\n\t\tthis.allStarExports = read();\r\n\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tHarmonyExportImportedSpecifierDependency,\r\n\t\"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\"\r\n);\r\n\r\nmodule.exports = HarmonyExportImportedSpecifierDependency;\r\n\r\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends (\r\n\tHarmonyImportDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(dependency, source, templateContext) {\r\n\t\tconst { moduleGraph, runtime, concatenationScope } = templateContext;\r\n\r\n\t\tconst dep = /** @type {HarmonyExportImportedSpecifierDependency} */ (\r\n\t\t\tdependency\r\n\t\t);\r\n\r\n\t\tconst mode = dep.getMode(moduleGraph, runtime);\r\n\r\n\t\tif (concatenationScope) {\r\n\t\t\tswitch (mode.type) {\r\n\t\t\t\tcase \"reexport-undefined\":\r\n\t\t\t\t\tconcatenationScope.registerRawExport(\r\n\t\t\t\t\t\tmode.name,\r\n\t\t\t\t\t\t\"/* reexport non-default export from non-harmony */ undefined\"\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (mode.type !== \"unused\" && mode.type !== \"empty-star\") {\r\n\t\t\tsuper.apply(dependency, source, templateContext);\r\n\r\n\t\t\tthis._addExportFragments(\r\n\t\t\t\ttemplateContext.initFragments,\r\n\t\t\t\tdep,\r\n\t\t\t\tmode,\r\n\t\t\t\ttemplateContext.module,\r\n\t\t\t\tmoduleGraph,\r\n\t\t\t\truntime,\r\n\t\t\t\ttemplateContext.runtimeTemplate,\r\n\t\t\t\ttemplateContext.runtimeRequirements\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {InitFragment[]} initFragments target array for init fragments\r\n\t * @param {HarmonyExportImportedSpecifierDependency} dep dependency\r\n\t * @param {ExportMode} mode the export mode\r\n\t * @param {Module} module the current module\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @param {RuntimeSpec} runtime the runtime\r\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n\t * @param {Set<string>} runtimeRequirements runtime requirements\r\n\t * @returns {void}\r\n\t */\r\n\t_addExportFragments(\r\n\t\tinitFragments,\r\n\t\tdep,\r\n\t\tmode,\r\n\t\tmodule,\r\n\t\tmoduleGraph,\r\n\t\truntime,\r\n\t\truntimeTemplate,\r\n\t\truntimeRequirements\r\n\t) {\r\n\t\tconst importedModule = moduleGraph.getModule(dep);\r\n\t\tconst importVar = dep.getImportVar(moduleGraph);\r\n\r\n\t\tswitch (mode.type) {\r\n\t\t\tcase \"missing\":\r\n\t\t\tcase \"empty-star\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tnew InitFragment(\r\n\t\t\t\t\t\t\"/* empty/unused harmony star reexport */\\n\",\r\n\t\t\t\t\t\tInitFragment.STAGE_HARMONY_EXPORTS,\r\n\t\t\t\t\t\t1\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"unused\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tnew InitFragment(\r\n\t\t\t\t\t\t`${Template.toNormalComment(\r\n\t\t\t\t\t\t\t`unused harmony reexport ${mode.name}`\r\n\t\t\t\t\t\t)}\\n`,\r\n\t\t\t\t\t\tInitFragment.STAGE_HARMONY_EXPORTS,\r\n\t\t\t\t\t\t1\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"reexport-dynamic-default\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tthis.getReexportFragment(\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t\"reexport default from dynamic\",\r\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\r\n\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"reexport-fake-namespace-object\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\t...this.getReexportFakeNamespaceObjectFragments(\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\r\n\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\tmode.fakeType,\r\n\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"reexport-undefined\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tthis.getReexportFragment(\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t\"reexport non-default export from non-harmony\",\r\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\r\n\t\t\t\t\t\t\"undefined\",\r\n\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"reexport-named-default\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tthis.getReexportFragment(\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t\"reexport default export from named module\",\r\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\r\n\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"reexport-namespace-object\":\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tthis.getReexportFragment(\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t\"reexport module object\",\r\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\r\n\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"normal-reexport\":\r\n\t\t\t\tfor (const { name, ids, checked, hidden } of mode.items) {\r\n\t\t\t\t\tif (hidden) continue;\r\n\t\t\t\t\tif (checked) {\r\n\t\t\t\t\t\tinitFragments.push(\r\n\t\t\t\t\t\t\tnew InitFragment(\r\n\t\t\t\t\t\t\t\t\"/* harmony reexport (checked) */ \" +\r\n\t\t\t\t\t\t\t\t\tthis.getConditionalReexportStatement(\r\n\t\t\t\t\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\t\t\t\t\tids,\r\n\t\t\t\t\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tmoduleGraph.isAsync(importedModule)\r\n\t\t\t\t\t\t\t\t\t? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS\r\n\t\t\t\t\t\t\t\t\t: InitFragment.STAGE_HARMONY_IMPORTS,\r\n\t\t\t\t\t\t\t\tdep.sourceOrder\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinitFragments.push(\r\n\t\t\t\t\t\t\tthis.getReexportFragment(\r\n\t\t\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t\t\t\"reexport safe\",\r\n\t\t\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(name, runtime),\r\n\t\t\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\t\t\tmoduleGraph\r\n\t\t\t\t\t\t\t\t\t.getExportsInfo(importedModule)\r\n\t\t\t\t\t\t\t\t\t.getUsedName(ids, runtime),\r\n\t\t\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dynamic-reexport\": {\r\n\t\t\t\tconst ignored = mode.hidden\r\n\t\t\t\t\t? combine(mode.ignored, mode.hidden)\r\n\t\t\t\t\t: mode.ignored;\r\n\t\t\t\tconst modern =\r\n\t\t\t\t\truntimeTemplate.supportsConst() &&\r\n\t\t\t\t\truntimeTemplate.supportsArrowFunction();\r\n\t\t\t\tlet content =\r\n\t\t\t\t\t\"/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\\n\" +\r\n\t\t\t\t\t`/* harmony reexport (unknown) */ for(${\r\n\t\t\t\t\t\tmodern ? \"const\" : \"var\"\r\n\t\t\t\t\t} __WEBPACK_IMPORT_KEY__ in ${importVar}) `;\r\n\r\n\t\t\t\t// Filter out exports which are defined by other exports\r\n\t\t\t\t// and filter out default export because it cannot be reexported with *\r\n\t\t\t\tif (ignored.size > 1) {\r\n\t\t\t\t\tcontent +=\r\n\t\t\t\t\t\t\"if(\" +\r\n\t\t\t\t\t\tJSON.stringify(Array.from(ignored)) +\r\n\t\t\t\t\t\t\".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\r\n\t\t\t\t} else if (ignored.size === 1) {\r\n\t\t\t\t\tcontent += `if(__WEBPACK_IMPORT_KEY__ !== ${JSON.stringify(\r\n\t\t\t\t\t\tfirst(ignored)\r\n\t\t\t\t\t)}) `;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontent += `__WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = `;\r\n\t\t\t\tif (modern) {\r\n\t\t\t\t\tcontent += `() => ${importVar}[__WEBPACK_IMPORT_KEY__]`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontent += `function(key) { return ${importVar}[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\r\n\r\n\t\t\t\tconst exportsName = module.exportsArgument;\r\n\t\t\t\tinitFragments.push(\r\n\t\t\t\t\tnew InitFragment(\r\n\t\t\t\t\t\t`${content}\\n/* harmony reexport (unknown) */ ${RuntimeGlobals.definePropertyGetters}(${exportsName}, __WEBPACK_REEXPORT_OBJECT__);\\n`,\r\n\t\t\t\t\t\tmoduleGraph.isAsync(importedModule)\r\n\t\t\t\t\t\t\t? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS\r\n\t\t\t\t\t\t\t: InitFragment.STAGE_HARMONY_IMPORTS,\r\n\t\t\t\t\t\tdep.sourceOrder\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\r\n\t\t}\r\n\t}\r\n\r\n\tgetReexportFragment(\r\n\t\tmodule,\r\n\t\tcomment,\r\n\t\tkey,\r\n\t\tname,\r\n\t\tvalueKey,\r\n\t\truntimeRequirements\r\n\t) {\r\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\r\n\r\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\r\n\r\n\t\tconst map = new Map();\r\n\t\tmap.set(key, `/* ${comment} */ ${returnValue}`);\r\n\r\n\t\treturn new HarmonyExportInitFragment(module.exportsArgument, map);\r\n\t}\r\n\r\n\tgetReexportFakeNamespaceObjectFragments(\r\n\t\tmodule,\r\n\t\tkey,\r\n\t\tname,\r\n\t\tfakeType,\r\n\t\truntimeRequirements\r\n\t) {\r\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\r\n\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\r\n\r\n\t\tconst map = new Map();\r\n\t\tmap.set(\r\n\t\t\tkey,\r\n\t\t\t`/* reexport fake namespace object from non-harmony */ ${name}_namespace_cache || (${name}_namespace_cache = ${\r\n\t\t\t\tRuntimeGlobals.createFakeNamespaceObject\r\n\t\t\t}(${name}${fakeType ? `, ${fakeType}` : \"\"}))`\r\n\t\t);\r\n\r\n\t\treturn [\r\n\t\t\tnew InitFragment(\r\n\t\t\t\t`var ${name}_namespace_cache;\\n`,\r\n\t\t\t\tInitFragment.STAGE_CONSTANTS,\r\n\t\t\t\t-1,\r\n\t\t\t\t`${name}_namespace_cache`\r\n\t\t\t),\r\n\t\t\tnew HarmonyExportInitFragment(module.exportsArgument, map)\r\n\t\t];\r\n\t}\r\n\r\n\tgetConditionalReexportStatement(\r\n\t\tmodule,\r\n\t\tkey,\r\n\t\tname,\r\n\t\tvalueKey,\r\n\t\truntimeRequirements\r\n\t) {\r\n\t\tif (valueKey === false) {\r\n\t\t\treturn \"/* unused export */\\n\";\r\n\t\t}\r\n\r\n\t\tconst exportsName = module.exportsArgument;\r\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\r\n\r\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\r\n\t\truntimeRequirements.add(RuntimeGlobals.hasOwnProperty);\r\n\r\n\t\treturn `if(${RuntimeGlobals.hasOwnProperty}(${name}, ${JSON.stringify(\r\n\t\t\tvalueKey[0]\r\n\t\t)})) ${\r\n\t\t\tRuntimeGlobals.definePropertyGetters\r\n\t\t}(${exportsName}, { ${JSON.stringify(\r\n\t\t\tkey\r\n\t\t)}: function() { return ${returnValue}; } });\\n`;\r\n\t}\r\n\r\n\tgetReturnValue(name, valueKey) {\r\n\t\tif (valueKey === null) {\r\n\t\t\treturn `${name}_default.a`;\r\n\t\t}\r\n\r\n\t\tif (valueKey === \"\") {\r\n\t\t\treturn name;\r\n\t\t}\r\n\r\n\t\tif (valueKey === false) {\r\n\t\t\treturn \"/* unused export */ undefined\";\r\n\t\t}\r\n\r\n\t\treturn `${name}${propertyAccess(valueKey)}`;\r\n\t}\r\n};\r\n\r\nclass HarmonyStarExportsList {\r\n\tconstructor() {\r\n\t\t/** @type {HarmonyExportImportedSpecifierDependency[]} */\r\n\t\tthis.dependencies = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HarmonyExportImportedSpecifierDependency} dep dependency\r\n\t * @returns {void}\r\n\t */\r\n\tpush(dep) {\r\n\t\tthis.dependencies.push(dep);\r\n\t}\r\n\r\n\tslice() {\r\n\t\treturn this.dependencies.slice();\r\n\t}\r\n\r\n\tserialize({ write, setCircularReference }) {\r\n\t\tsetCircularReference(this);\r\n\t\twrite(this.dependencies);\r\n\t}\r\n\r\n\tdeserialize({ read, setCircularReference }) {\r\n\t\tsetCircularReference(this);\r\n\t\tthis.dependencies = read();\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tHarmonyStarExportsList,\r\n\t\"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\",\r\n\t\"HarmonyStarExportsList\"\r\n);\r\n\r\nmodule.exports.HarmonyStarExportsList = HarmonyStarExportsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}