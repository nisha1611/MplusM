{"ast":null,"code":"/**\r\n * Manages the internal config of nodemon, checking for the state of support\r\n * with fs.watch, how nodemon can watch files (using find or fs methods).\r\n *\r\n * This is *not* the user's config.\r\n */\nvar debug = require('debug')('nodemon');\nvar load = require('./load');\nvar rules = require('../rules');\nvar utils = require('../utils');\nvar pinVersion = require('../version').pin;\nvar command = require('./command');\nvar rulesToMonitor = require('../monitor/match').rulesToMonitor;\nvar bus = utils.bus;\nfunction reset() {\n  rules.reset();\n  config.dirs = [];\n  config.options = {\n    ignore: [],\n    watch: [],\n    monitor: []\n  };\n  config.lastStarted = 0;\n  config.loaded = [];\n}\nvar config = {\n  run: false,\n  system: {\n    cwd: process.cwd()\n  },\n  required: false,\n  dirs: [],\n  timeout: 1000,\n  options: {}\n};\n\n/**\r\n * Take user defined settings, then detect the local machine capability, then\r\n * look for local and global nodemon.json files and merge together the final\r\n * settings with the config for nodemon.\r\n *\r\n * @param  {Object} settings user defined settings for nodemon (typically on\r\n *  the cli)\r\n * @param  {Function} ready callback fired once the config is loaded\r\n */\nconfig.load = function (settings, ready) {\n  reset();\n  var config = this;\n  load(settings, config.options, config, function (options) {\n    config.options = options;\n    if (options.watch.length === 0) {\n      // this is to catch when the watch is left blank\n      options.watch.push('*.*');\n    }\n    if (options['watch_interval']) {\n      // jshint ignore:line\n      options.watchInterval = options['watch_interval']; // jshint ignore:line\n    }\n\n    config.watchInterval = options.watchInterval || null;\n    if (options.signal) {\n      config.signal = options.signal;\n    }\n    var cmd = command(config.options);\n    config.command = {\n      raw: cmd,\n      string: utils.stringify(cmd.executable, cmd.args)\n    };\n\n    // now run automatic checks on system adding to the config object\n    options.monitor = rulesToMonitor(options.watch, options.ignore, config);\n    var cwd = process.cwd();\n    debug('config: dirs', config.dirs);\n    if (config.dirs.length === 0) {\n      config.dirs.unshift(cwd);\n    }\n    bus.emit('config:update', config);\n    pinVersion().then(function () {\n      ready(config);\n    }).catch(e => {\n      // this doesn't help testing, but does give exposure on syntax errors\n      console.error(e.stack);\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    });\n  });\n};\nconfig.reset = reset;\nmodule.exports = config;","map":{"version":3,"names":["debug","require","load","rules","utils","pinVersion","pin","command","rulesToMonitor","bus","reset","config","dirs","options","ignore","watch","monitor","lastStarted","loaded","run","system","cwd","process","required","timeout","settings","ready","length","push","watchInterval","signal","cmd","raw","string","stringify","executable","args","unshift","emit","then","catch","e","console","error","stack","setTimeout","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/nodemon/lib/config/index.js"],"sourcesContent":["/**\r\n * Manages the internal config of nodemon, checking for the state of support\r\n * with fs.watch, how nodemon can watch files (using find or fs methods).\r\n *\r\n * This is *not* the user's config.\r\n */\r\nvar debug = require('debug')('nodemon');\r\nvar load = require('./load');\r\nvar rules = require('../rules');\r\nvar utils = require('../utils');\r\nvar pinVersion = require('../version').pin;\r\nvar command = require('./command');\r\nvar rulesToMonitor = require('../monitor/match').rulesToMonitor;\r\nvar bus = utils.bus;\r\n\r\nfunction reset() {\r\n  rules.reset();\r\n\r\n  config.dirs = [];\r\n  config.options = { ignore: [], watch: [], monitor: [] };\r\n  config.lastStarted = 0;\r\n  config.loaded = [];\r\n}\r\n\r\nvar config = {\r\n  run: false,\r\n  system: {\r\n    cwd: process.cwd(),\r\n  },\r\n  required: false,\r\n  dirs: [],\r\n  timeout: 1000,\r\n  options: {},\r\n};\r\n\r\n/**\r\n * Take user defined settings, then detect the local machine capability, then\r\n * look for local and global nodemon.json files and merge together the final\r\n * settings with the config for nodemon.\r\n *\r\n * @param  {Object} settings user defined settings for nodemon (typically on\r\n *  the cli)\r\n * @param  {Function} ready callback fired once the config is loaded\r\n */\r\nconfig.load = function (settings, ready) {\r\n  reset();\r\n  var config = this;\r\n  load(settings, config.options, config, function (options) {\r\n    config.options = options;\r\n\r\n    if (options.watch.length === 0) {\r\n      // this is to catch when the watch is left blank\r\n      options.watch.push('*.*');\r\n    }\r\n\r\n    if (options['watch_interval']) { // jshint ignore:line\r\n      options.watchInterval = options['watch_interval']; // jshint ignore:line\r\n    }\r\n\r\n    config.watchInterval = options.watchInterval || null;\r\n    if (options.signal) {\r\n      config.signal = options.signal;\r\n    }\r\n\r\n    var cmd = command(config.options);\r\n    config.command = {\r\n      raw: cmd,\r\n      string: utils.stringify(cmd.executable, cmd.args),\r\n    };\r\n\r\n    // now run automatic checks on system adding to the config object\r\n    options.monitor = rulesToMonitor(options.watch, options.ignore, config);\r\n\r\n    var cwd = process.cwd();\r\n    debug('config: dirs', config.dirs);\r\n    if (config.dirs.length === 0) {\r\n      config.dirs.unshift(cwd);\r\n    }\r\n\r\n    bus.emit('config:update', config);\r\n    pinVersion().then(function () {\r\n      ready(config);\r\n    }).catch(e => {\r\n      // this doesn't help testing, but does give exposure on syntax errors\r\n      console.error(e.stack);\r\n      setTimeout(() => { throw e; }, 0);\r\n    });\r\n  });\r\n};\r\n\r\nconfig.reset = reset;\r\n\r\nmodule.exports = config;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}