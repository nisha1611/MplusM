{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\n/** @typedef {import(\"./MultiCompiler\")} MultiCompiler */\n/** @typedef {import(\"./Watching\")} Watching */\n\n/**\r\n * @template T\r\n * @callback Callback\r\n * @param {(Error | null)=} err\r\n * @param {T=} result\r\n */\n\nclass MultiWatching {\n  /**\r\n   * @param {Watching[]} watchings child compilers' watchers\r\n   * @param {MultiCompiler} compiler the compiler\r\n   */\n  constructor(watchings, compiler) {\n    this.watchings = watchings;\n    this.compiler = compiler;\n  }\n  invalidate(callback) {\n    if (callback) {\n      asyncLib.each(this.watchings, (watching, callback) => watching.invalidate(callback), callback);\n    } else {\n      for (const watching of this.watchings) {\n        watching.invalidate();\n      }\n    }\n  }\n  suspend() {\n    for (const watching of this.watchings) {\n      watching.suspend();\n    }\n  }\n  resume() {\n    for (const watching of this.watchings) {\n      watching.resume();\n    }\n  }\n\n  /**\r\n   * @param {Callback<void>} callback signals when the watcher is closed\r\n   * @returns {void}\r\n   */\n  close(callback) {\n    asyncLib.forEach(this.watchings, (watching, finishedCallback) => {\n      watching.close(finishedCallback);\n    }, err => {\n      this.compiler.hooks.watchClose.call();\n      if (typeof callback === \"function\") {\n        this.compiler.running = false;\n        callback(err);\n      }\n    });\n  }\n}\nmodule.exports = MultiWatching;","map":{"version":3,"names":["asyncLib","require","MultiWatching","constructor","watchings","compiler","invalidate","callback","each","watching","suspend","resume","close","forEach","finishedCallback","err","hooks","watchClose","call","running","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/MultiWatching.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst asyncLib = require(\"neo-async\");\r\n\r\n/** @typedef {import(\"./MultiCompiler\")} MultiCompiler */\r\n/** @typedef {import(\"./Watching\")} Watching */\r\n\r\n/**\r\n * @template T\r\n * @callback Callback\r\n * @param {(Error | null)=} err\r\n * @param {T=} result\r\n */\r\n\r\nclass MultiWatching {\r\n\t/**\r\n\t * @param {Watching[]} watchings child compilers' watchers\r\n\t * @param {MultiCompiler} compiler the compiler\r\n\t */\r\n\tconstructor(watchings, compiler) {\r\n\t\tthis.watchings = watchings;\r\n\t\tthis.compiler = compiler;\r\n\t}\r\n\r\n\tinvalidate(callback) {\r\n\t\tif (callback) {\r\n\t\t\tasyncLib.each(\r\n\t\t\t\tthis.watchings,\r\n\t\t\t\t(watching, callback) => watching.invalidate(callback),\r\n\t\t\t\tcallback\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tfor (const watching of this.watchings) {\r\n\t\t\t\twatching.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsuspend() {\r\n\t\tfor (const watching of this.watchings) {\r\n\t\t\twatching.suspend();\r\n\t\t}\r\n\t}\r\n\r\n\tresume() {\r\n\t\tfor (const watching of this.watchings) {\r\n\t\t\twatching.resume();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Callback<void>} callback signals when the watcher is closed\r\n\t * @returns {void}\r\n\t */\r\n\tclose(callback) {\r\n\t\tasyncLib.forEach(\r\n\t\t\tthis.watchings,\r\n\t\t\t(watching, finishedCallback) => {\r\n\t\t\t\twatching.close(finishedCallback);\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tthis.compiler.hooks.watchClose.call();\r\n\t\t\t\tif (typeof callback === \"function\") {\r\n\t\t\t\t\tthis.compiler.running = false;\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiWatching;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,CAAC;EACnB;AACD;AACA;AACA;EACCC,WAAW,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAChC,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EACzB;EAEAC,UAAU,CAACC,QAAQ,EAAE;IACpB,IAAIA,QAAQ,EAAE;MACbP,QAAQ,CAACQ,IAAI,CACZ,IAAI,CAACJ,SAAS,EACd,CAACK,QAAQ,EAAEF,QAAQ,KAAKE,QAAQ,CAACH,UAAU,CAACC,QAAQ,CAAC,EACrDA,QAAQ,CACR;IACF,CAAC,MAAM;MACN,KAAK,MAAME,QAAQ,IAAI,IAAI,CAACL,SAAS,EAAE;QACtCK,QAAQ,CAACH,UAAU,EAAE;MACtB;IACD;EACD;EAEAI,OAAO,GAAG;IACT,KAAK,MAAMD,QAAQ,IAAI,IAAI,CAACL,SAAS,EAAE;MACtCK,QAAQ,CAACC,OAAO,EAAE;IACnB;EACD;EAEAC,MAAM,GAAG;IACR,KAAK,MAAMF,QAAQ,IAAI,IAAI,CAACL,SAAS,EAAE;MACtCK,QAAQ,CAACE,MAAM,EAAE;IAClB;EACD;;EAEA;AACD;AACA;AACA;EACCC,KAAK,CAACL,QAAQ,EAAE;IACfP,QAAQ,CAACa,OAAO,CACf,IAAI,CAACT,SAAS,EACd,CAACK,QAAQ,EAAEK,gBAAgB,KAAK;MAC/BL,QAAQ,CAACG,KAAK,CAACE,gBAAgB,CAAC;IACjC,CAAC,EACDC,GAAG,IAAI;MACN,IAAI,CAACV,QAAQ,CAACW,KAAK,CAACC,UAAU,CAACC,IAAI,EAAE;MACrC,IAAI,OAAOX,QAAQ,KAAK,UAAU,EAAE;QACnC,IAAI,CAACF,QAAQ,CAACc,OAAO,GAAG,KAAK;QAC7BZ,QAAQ,CAACQ,GAAG,CAAC;MACd;IACD,CAAC,CACD;EACF;AACD;AAEAK,MAAM,CAACC,OAAO,GAAGnB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}