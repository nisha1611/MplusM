{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass ChunkPrefetchFunctionRuntimeModule extends RuntimeModule {\n  /**\r\n   * @param {string} childType TODO\r\n   * @param {string} runtimeFunction TODO\r\n   * @param {string} runtimeHandlers TODO\r\n   */\n  constructor(childType, runtimeFunction, runtimeHandlers) {\n    super(`chunk ${childType} function`);\n    this.childType = childType;\n    this.runtimeFunction = runtimeFunction;\n    this.runtimeHandlers = runtimeHandlers;\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    const {\n      runtimeFunction,\n      runtimeHandlers\n    } = this;\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    return Template.asString([`${runtimeHandlers} = {};`, `${runtimeFunction} = ${runtimeTemplate.basicFunction(\"chunkId\", [\n    // map is shorter than forEach\n    `Object.keys(${runtimeHandlers}).map(${runtimeTemplate.basicFunction(\"key\", `${runtimeHandlers}[key](chunkId);`)});`])}`]);\n  }\n}\nmodule.exports = ChunkPrefetchFunctionRuntimeModule;","map":{"version":3,"names":["RuntimeModule","require","Template","ChunkPrefetchFunctionRuntimeModule","constructor","childType","runtimeFunction","runtimeHandlers","generate","runtimeTemplate","compilation","asString","basicFunction","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/prefetch/ChunkPrefetchFunctionRuntimeModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\nconst Template = require(\"../Template\");\r\n\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n\r\nclass ChunkPrefetchFunctionRuntimeModule extends RuntimeModule {\r\n\t/**\r\n\t * @param {string} childType TODO\r\n\t * @param {string} runtimeFunction TODO\r\n\t * @param {string} runtimeHandlers TODO\r\n\t */\r\n\tconstructor(childType, runtimeFunction, runtimeHandlers) {\r\n\t\tsuper(`chunk ${childType} function`);\r\n\t\tthis.childType = childType;\r\n\t\tthis.runtimeFunction = runtimeFunction;\r\n\t\tthis.runtimeHandlers = runtimeHandlers;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\tconst { runtimeFunction, runtimeHandlers } = this;\r\n\t\tconst { runtimeTemplate } = this.compilation;\r\n\t\treturn Template.asString([\r\n\t\t\t`${runtimeHandlers} = {};`,\r\n\t\t\t`${runtimeFunction} = ${runtimeTemplate.basicFunction(\"chunkId\", [\r\n\t\t\t\t// map is shorter than forEach\r\n\t\t\t\t`Object.keys(${runtimeHandlers}).map(${runtimeTemplate.basicFunction(\r\n\t\t\t\t\t\"key\",\r\n\t\t\t\t\t`${runtimeHandlers}[key](chunkId);`\r\n\t\t\t\t)});`\r\n\t\t\t])}`\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nmodule.exports = ChunkPrefetchFunctionRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;;AAEvC;;AAEA,MAAME,kCAAkC,SAASH,aAAa,CAAC;EAC9D;AACD;AACA;AACA;AACA;EACCI,WAAW,CAACC,SAAS,EAAEC,eAAe,EAAEC,eAAe,EAAE;IACxD,KAAK,CAAE,SAAQF,SAAU,WAAU,CAAC;IACpC,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,eAAe,GAAGA,eAAe;EACvC;;EAEA;AACD;AACA;EACCC,QAAQ,GAAG;IACV,MAAM;MAAEF,eAAe;MAAEC;IAAgB,CAAC,GAAG,IAAI;IACjD,MAAM;MAAEE;IAAgB,CAAC,GAAG,IAAI,CAACC,WAAW;IAC5C,OAAOR,QAAQ,CAACS,QAAQ,CAAC,CACvB,GAAEJ,eAAgB,QAAO,EACzB,GAAED,eAAgB,MAAKG,eAAe,CAACG,aAAa,CAAC,SAAS,EAAE;IAChE;IACC,eAAcL,eAAgB,SAAQE,eAAe,CAACG,aAAa,CACnE,KAAK,EACJ,GAAEL,eAAgB,iBAAgB,CAClC,IAAG,CACL,CAAE,EAAC,CACJ,CAAC;EACH;AACD;AAEAM,MAAM,CAACC,OAAO,GAAGX,kCAAkC"},"metadata":{},"sourceType":"script","externalDependencies":[]}