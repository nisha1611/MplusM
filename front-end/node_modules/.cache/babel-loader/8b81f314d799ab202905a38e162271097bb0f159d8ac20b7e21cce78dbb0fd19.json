{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDefaultRetryQuota = void 0;\nconst util_retry_1 = require(\"@aws-sdk/util-retry\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n  var _a, _b, _c;\n  const MAX_CAPACITY = initialRetryTokens;\n  const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : util_retry_1.NO_RETRY_INCREMENT;\n  const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : util_retry_1.RETRY_COST;\n  const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : util_retry_1.TIMEOUT_RETRY_COST;\n  let availableCapacity = initialRetryTokens;\n  const getCapacityAmount = error => error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost;\n  const hasRetryTokens = error => getCapacityAmount(error) <= availableCapacity;\n  const retrieveRetryTokens = error => {\n    if (!hasRetryTokens(error)) {\n      throw new Error(\"No retry token available\");\n    }\n    const capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n  const releaseRetryTokens = capacityReleaseAmount => {\n    availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n  return Object.freeze({\n    hasRetryTokens,\n    retrieveRetryTokens,\n    releaseRetryTokens\n  });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;","map":{"version":3,"names":["Object","defineProperty","exports","value","getDefaultRetryQuota","util_retry_1","require","initialRetryTokens","options","_a","_b","_c","MAX_CAPACITY","noRetryIncrement","NO_RETRY_INCREMENT","retryCost","RETRY_COST","timeoutRetryCost","TIMEOUT_RETRY_COST","availableCapacity","getCapacityAmount","error","name","hasRetryTokens","retrieveRetryTokens","Error","capacityAmount","releaseRetryTokens","capacityReleaseAmount","Math","min","freeze"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/middleware-retry/dist-cjs/defaultRetryQuota.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultRetryQuota = void 0;\r\nconst util_retry_1 = require(\"@aws-sdk/util-retry\");\r\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\r\n    var _a, _b, _c;\r\n    const MAX_CAPACITY = initialRetryTokens;\r\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : util_retry_1.NO_RETRY_INCREMENT;\r\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : util_retry_1.RETRY_COST;\r\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : util_retry_1.TIMEOUT_RETRY_COST;\r\n    let availableCapacity = initialRetryTokens;\r\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\r\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\r\n    const retrieveRetryTokens = (error) => {\r\n        if (!hasRetryTokens(error)) {\r\n            throw new Error(\"No retry token available\");\r\n        }\r\n        const capacityAmount = getCapacityAmount(error);\r\n        availableCapacity -= capacityAmount;\r\n        return capacityAmount;\r\n    };\r\n    const releaseRetryTokens = (capacityReleaseAmount) => {\r\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\r\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\r\n    };\r\n    return Object.freeze({\r\n        hasRetryTokens,\r\n        retrieveRetryTokens,\r\n        releaseRetryTokens,\r\n    });\r\n};\r\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,YAAY,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACnD,MAAMF,oBAAoB,GAAG,CAACG,kBAAkB,EAAEC,OAAO,KAAK;EAC1D,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACd,MAAMC,YAAY,GAAGL,kBAAkB;EACvC,MAAMM,gBAAgB,GAAG,CAACJ,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,gBAAgB,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGJ,YAAY,CAACS,kBAAkB;EAC3K,MAAMC,SAAS,GAAG,CAACL,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACO,SAAS,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGL,YAAY,CAACW,UAAU;EACrJ,MAAMC,gBAAgB,GAAG,CAACN,EAAE,GAAGH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACS,gBAAgB,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGN,YAAY,CAACa,kBAAkB;EAC3K,IAAIC,iBAAiB,GAAGZ,kBAAkB;EAC1C,MAAMa,iBAAiB,GAAIC,KAAK,IAAMA,KAAK,CAACC,IAAI,KAAK,cAAc,GAAGL,gBAAgB,GAAGF,SAAU;EACnG,MAAMQ,cAAc,GAAIF,KAAK,IAAKD,iBAAiB,CAACC,KAAK,CAAC,IAAIF,iBAAiB;EAC/E,MAAMK,mBAAmB,GAAIH,KAAK,IAAK;IACnC,IAAI,CAACE,cAAc,CAACF,KAAK,CAAC,EAAE;MACxB,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IACA,MAAMC,cAAc,GAAGN,iBAAiB,CAACC,KAAK,CAAC;IAC/CF,iBAAiB,IAAIO,cAAc;IACnC,OAAOA,cAAc;EACzB,CAAC;EACD,MAAMC,kBAAkB,GAAIC,qBAAqB,IAAK;IAClDT,iBAAiB,IAAIS,qBAAqB,KAAK,IAAI,IAAIA,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAGf,gBAAgB;IAClIM,iBAAiB,GAAGU,IAAI,CAACC,GAAG,CAACX,iBAAiB,EAAEP,YAAY,CAAC;EACjE,CAAC;EACD,OAAOZ,MAAM,CAAC+B,MAAM,CAAC;IACjBR,cAAc;IACdC,mBAAmB;IACnBG;EACJ,CAAC,CAAC;AACN,CAAC;AACDzB,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}