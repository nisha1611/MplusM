{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMsWindow = void 0;\nvar msSubtleCryptoMethods = [\"decrypt\", \"digest\", \"encrypt\", \"exportKey\", \"generateKey\", \"importKey\", \"sign\", \"verify\"];\nfunction quacksLikeAnMsWindow(window) {\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n/**\r\n * Determines if the provided window is (or is like) the window object one would\r\n * expect to encounter in Internet Explorer 11.\r\n */\nfunction isMsWindow(window) {\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n    var _a = window.msCrypto,\n      getRandomValues = _a.getRandomValues,\n      subtle_1 = _a.subtle;\n    return msSubtleCryptoMethods.map(function (methodName) {\n      return subtle_1[methodName];\n    }).concat(getRandomValues).every(function (method) {\n      return typeof method === \"function\";\n    });\n  }\n  return false;\n}\nexports.isMsWindow = isMsWindow;","map":{"version":3,"mappings":";;;;;;AAYA,IAAMA,qBAAqB,GAA8B,CACvD,SAAS,EACT,QAAQ,EACR,SAAS,EACT,WAAW,EACX,aAAa,EACb,WAAW,EACX,MAAM,EACN,QAAQ,CACT;AAmBD,SAASC,oBAAoB,CAACC,MAAc;EAC1C,OAAO,sBAAsB,IAAIA,MAAM,IAAI,UAAU,IAAIA,MAAM;AACjE;AAEA;;;;AAIA,SAAgBC,UAAU,CAACD,MAAc;EACvC,IAAID,oBAAoB,CAACC,MAAM,CAAC,IAAIA,MAAM,CAACE,QAAQ,CAACC,MAAM,KAAKC,SAAS,EAAE;IAClE,SAA8BJ,MAAM,CAACE,QAAQ;MAA3CG,eAAe;MAAEC,QAAM,YAAoB;IACnD,OAAOR,qBAAqB,CACzBS,GAAG,CAAW,oBAAU;MAAI,eAAM,CAACC,UAAU,CAAC;IAAlB,CAAkB,CAAC,CAC/CC,MAAM,CAACJ,eAAe,CAAC,CACvBK,KAAK,CAAC,gBAAM;MAAI,cAAOC,MAAM,KAAK,UAAU;IAA5B,CAA4B,CAAC;;EAGlD,OAAO,KAAK;AACd;AAVAC","names":["msSubtleCryptoMethods","quacksLikeAnMsWindow","window","isMsWindow","msCrypto","subtle","undefined","getRandomValues","subtle_1","map","methodName","concat","every","method","exports"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\@aws-crypto\\ie11-detection\\src\\MsWindow.ts"],"sourcesContent":["import { MsSubtleCrypto } from \"./MsSubtleCrypto\";\r\n\r\ntype SubtleCryptoMethod =\r\n  | \"decrypt\"\r\n  | \"digest\"\r\n  | \"encrypt\"\r\n  | \"exportKey\"\r\n  | \"generateKey\"\r\n  | \"importKey\"\r\n  | \"sign\"\r\n  | \"verify\";\r\n\r\nconst msSubtleCryptoMethods: Array<SubtleCryptoMethod> = [\r\n  \"decrypt\",\r\n  \"digest\",\r\n  \"encrypt\",\r\n  \"exportKey\",\r\n  \"generateKey\",\r\n  \"importKey\",\r\n  \"sign\",\r\n  \"verify\"\r\n];\r\n\r\n/**\r\n * The value accessible as `window.msCrypto` in Internet Explorer 11.\r\n */\r\nexport interface MsCrypto {\r\n  getRandomValues: (toFill: Uint8Array) => void;\r\n  subtle: MsSubtleCrypto;\r\n}\r\n\r\n/**\r\n * The `window` object in Internet Explorer 11. This interface does not\r\n * exhaustively document the prefixed features of `window` in IE11.\r\n */\r\nexport interface MsWindow extends Window {\r\n  MSInputMethodContext: any;\r\n  msCrypto: MsCrypto;\r\n}\r\n\r\nfunction quacksLikeAnMsWindow(window: Window): window is MsWindow {\r\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\r\n}\r\n\r\n/**\r\n * Determines if the provided window is (or is like) the window object one would\r\n * expect to encounter in Internet Explorer 11.\r\n */\r\nexport function isMsWindow(window: Window): window is MsWindow {\r\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\r\n    const { getRandomValues, subtle } = window.msCrypto;\r\n    return msSubtleCryptoMethods\r\n      .map<Function>(methodName => subtle[methodName])\r\n      .concat(getRandomValues)\r\n      .every(method => typeof method === \"function\");\r\n  }\r\n\r\n  return false;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}