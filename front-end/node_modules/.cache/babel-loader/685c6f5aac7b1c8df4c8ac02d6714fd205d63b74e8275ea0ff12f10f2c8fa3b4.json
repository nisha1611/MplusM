{"ast":null,"code":"'use strict';\n\nmodule.exports = function applyDefaults(doc, fields, exclude, hasIncludedChildren, isBeforeSetters, pathsToSkip) {\n  const paths = Object.keys(doc.$__schema.paths);\n  const plen = paths.length;\n  for (let i = 0; i < plen; ++i) {\n    let def;\n    let curPath = '';\n    const p = paths[i];\n    if (p === '_id' && doc.$__.skipId) {\n      continue;\n    }\n    const type = doc.$__schema.paths[p];\n    const path = type.splitPath();\n    const len = path.length;\n    let included = false;\n    let doc_ = doc._doc;\n    for (let j = 0; j < len; ++j) {\n      if (doc_ == null) {\n        break;\n      }\n      const piece = path[j];\n      curPath += (!curPath.length ? '' : '.') + piece;\n      if (exclude === true) {\n        if (curPath in fields) {\n          break;\n        }\n      } else if (exclude === false && fields && !included) {\n        const hasSubpaths = type.$isSingleNested || type.$isMongooseDocumentArray;\n        if (curPath in fields || hasSubpaths && hasIncludedChildren != null && hasIncludedChildren[curPath]) {\n          included = true;\n        } else if (hasIncludedChildren != null && !hasIncludedChildren[curPath]) {\n          break;\n        }\n      }\n      if (j === len - 1) {\n        if (doc_[piece] !== void 0) {\n          break;\n        }\n        if (isBeforeSetters != null) {\n          if (typeof type.defaultValue === 'function') {\n            if (!type.defaultValue.$runBeforeSetters && isBeforeSetters) {\n              break;\n            }\n            if (type.defaultValue.$runBeforeSetters && !isBeforeSetters) {\n              break;\n            }\n          } else if (!isBeforeSetters) {\n            // Non-function defaults should always run **before** setters\n            continue;\n          }\n        }\n        if (pathsToSkip && pathsToSkip[curPath]) {\n          break;\n        }\n        if (fields && exclude !== null) {\n          if (exclude === true) {\n            // apply defaults to all non-excluded fields\n            if (p in fields) {\n              continue;\n            }\n            try {\n              def = type.getDefault(doc, false);\n            } catch (err) {\n              doc.invalidate(p, err);\n              break;\n            }\n            if (typeof def !== 'undefined') {\n              doc_[piece] = def;\n              doc.$__.activePaths.default(p);\n            }\n          } else if (included) {\n            // selected field\n            try {\n              def = type.getDefault(doc, false);\n            } catch (err) {\n              doc.invalidate(p, err);\n              break;\n            }\n            if (typeof def !== 'undefined') {\n              doc_[piece] = def;\n              doc.$__.activePaths.default(p);\n            }\n          }\n        } else {\n          try {\n            def = type.getDefault(doc, false);\n          } catch (err) {\n            doc.invalidate(p, err);\n            break;\n          }\n          if (typeof def !== 'undefined') {\n            doc_[piece] = def;\n            doc.$__.activePaths.default(p);\n          }\n        }\n      } else {\n        doc_ = doc_[piece];\n      }\n    }\n  }\n};","map":{"version":3,"names":["module","exports","applyDefaults","doc","fields","exclude","hasIncludedChildren","isBeforeSetters","pathsToSkip","paths","Object","keys","$__schema","plen","length","i","def","curPath","p","$__","skipId","type","path","splitPath","len","included","doc_","_doc","j","piece","hasSubpaths","$isSingleNested","$isMongooseDocumentArray","defaultValue","$runBeforeSetters","getDefault","err","invalidate","activePaths","default"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/document/applyDefaults.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = function applyDefaults(doc, fields, exclude, hasIncludedChildren, isBeforeSetters, pathsToSkip) {\r\n  const paths = Object.keys(doc.$__schema.paths);\r\n  const plen = paths.length;\r\n\r\n  for (let i = 0; i < plen; ++i) {\r\n    let def;\r\n    let curPath = '';\r\n    const p = paths[i];\r\n\r\n    if (p === '_id' && doc.$__.skipId) {\r\n      continue;\r\n    }\r\n\r\n    const type = doc.$__schema.paths[p];\r\n    const path = type.splitPath();\r\n    const len = path.length;\r\n    let included = false;\r\n    let doc_ = doc._doc;\r\n    for (let j = 0; j < len; ++j) {\r\n      if (doc_ == null) {\r\n        break;\r\n      }\r\n\r\n      const piece = path[j];\r\n      curPath += (!curPath.length ? '' : '.') + piece;\r\n\r\n      if (exclude === true) {\r\n        if (curPath in fields) {\r\n          break;\r\n        }\r\n      } else if (exclude === false && fields && !included) {\r\n        const hasSubpaths = type.$isSingleNested || type.$isMongooseDocumentArray;\r\n        if (curPath in fields || (hasSubpaths && hasIncludedChildren != null && hasIncludedChildren[curPath])) {\r\n          included = true;\r\n        } else if (hasIncludedChildren != null && !hasIncludedChildren[curPath]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (j === len - 1) {\r\n        if (doc_[piece] !== void 0) {\r\n          break;\r\n        }\r\n\r\n        if (isBeforeSetters != null) {\r\n          if (typeof type.defaultValue === 'function') {\r\n            if (!type.defaultValue.$runBeforeSetters && isBeforeSetters) {\r\n              break;\r\n            }\r\n            if (type.defaultValue.$runBeforeSetters && !isBeforeSetters) {\r\n              break;\r\n            }\r\n          } else if (!isBeforeSetters) {\r\n            // Non-function defaults should always run **before** setters\r\n            continue;\r\n          }\r\n        }\r\n\r\n        if (pathsToSkip && pathsToSkip[curPath]) {\r\n          break;\r\n        }\r\n\r\n        if (fields && exclude !== null) {\r\n          if (exclude === true) {\r\n            // apply defaults to all non-excluded fields\r\n            if (p in fields) {\r\n              continue;\r\n            }\r\n\r\n            try {\r\n              def = type.getDefault(doc, false);\r\n            } catch (err) {\r\n              doc.invalidate(p, err);\r\n              break;\r\n            }\r\n\r\n            if (typeof def !== 'undefined') {\r\n              doc_[piece] = def;\r\n              doc.$__.activePaths.default(p);\r\n            }\r\n          } else if (included) {\r\n            // selected field\r\n            try {\r\n              def = type.getDefault(doc, false);\r\n            } catch (err) {\r\n              doc.invalidate(p, err);\r\n              break;\r\n            }\r\n\r\n            if (typeof def !== 'undefined') {\r\n              doc_[piece] = def;\r\n              doc.$__.activePaths.default(p);\r\n            }\r\n          }\r\n        } else {\r\n          try {\r\n            def = type.getDefault(doc, false);\r\n          } catch (err) {\r\n            doc.invalidate(p, err);\r\n            break;\r\n          }\r\n\r\n          if (typeof def !== 'undefined') {\r\n            doc_[piece] = def;\r\n            doc.$__.activePaths.default(p);\r\n          }\r\n        }\r\n      } else {\r\n        doc_ = doc_[piece];\r\n      }\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}