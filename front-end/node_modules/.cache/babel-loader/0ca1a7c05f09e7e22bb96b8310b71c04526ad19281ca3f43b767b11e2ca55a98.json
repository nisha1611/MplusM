{"ast":null,"code":"import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map as __map, throwDefaultError } from \"@aws-sdk/smithy-client\";\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidClientMetadataException, InvalidGrantException, InvalidRequestException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException } from \"../models/models_0\";\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\nexport const serializeAws_restJson1CreateTokenCommand = async (input, context) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\n  let body;\n  body = JSON.stringify({\n    ...(input.clientId != null && {\n      clientId: input.clientId\n    }),\n    ...(input.clientSecret != null && {\n      clientSecret: input.clientSecret\n    }),\n    ...(input.code != null && {\n      code: input.code\n    }),\n    ...(input.deviceCode != null && {\n      deviceCode: input.deviceCode\n    }),\n    ...(input.grantType != null && {\n      grantType: input.grantType\n    }),\n    ...(input.redirectUri != null && {\n      redirectUri: input.redirectUri\n    }),\n    ...(input.refreshToken != null && {\n      refreshToken: input.refreshToken\n    }),\n    ...(input.scope != null && {\n      scope: serializeAws_restJson1Scopes(input.scope, context)\n    })\n  });\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body\n  });\n};\nexport const serializeAws_restJson1RegisterClientCommand = async (input, context) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\n  let body;\n  body = JSON.stringify({\n    ...(input.clientName != null && {\n      clientName: input.clientName\n    }),\n    ...(input.clientType != null && {\n      clientType: input.clientType\n    }),\n    ...(input.scopes != null && {\n      scopes: serializeAws_restJson1Scopes(input.scopes, context)\n    })\n  });\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body\n  });\n};\nexport const serializeAws_restJson1StartDeviceAuthorizationCommand = async (input, context) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\n  let body;\n  body = JSON.stringify({\n    ...(input.clientId != null && {\n      clientId: input.clientId\n    }),\n    ...(input.clientSecret != null && {\n      clientSecret: input.clientSecret\n    }),\n    ...(input.startUrl != null && {\n      startUrl: input.startUrl\n    })\n  });\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body\n  });\n};\nexport const deserializeAws_restJson1CreateTokenCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateTokenCommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.accessToken != null) {\n    contents.accessToken = __expectString(data.accessToken);\n  }\n  if (data.expiresIn != null) {\n    contents.expiresIn = __expectInt32(data.expiresIn);\n  }\n  if (data.idToken != null) {\n    contents.idToken = __expectString(data.idToken);\n  }\n  if (data.refreshToken != null) {\n    contents.refreshToken = __expectString(data.refreshToken);\n  }\n  if (data.tokenType != null) {\n    contents.tokenType = __expectString(data.tokenType);\n  }\n  return contents;\n};\nconst deserializeAws_restJson1CreateTokenCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.ssooidc#AccessDeniedException\":\n      throw await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context);\n    case \"AuthorizationPendingException\":\n    case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n      throw await deserializeAws_restJson1AuthorizationPendingExceptionResponse(parsedOutput, context);\n    case \"ExpiredTokenException\":\n    case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n      throw await deserializeAws_restJson1ExpiredTokenExceptionResponse(parsedOutput, context);\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n    case \"InvalidClientException\":\n    case \"com.amazonaws.ssooidc#InvalidClientException\":\n      throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\n    case \"InvalidGrantException\":\n    case \"com.amazonaws.ssooidc#InvalidGrantException\":\n      throw await deserializeAws_restJson1InvalidGrantExceptionResponse(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n    case \"InvalidScopeException\":\n    case \"com.amazonaws.ssooidc#InvalidScopeException\":\n      throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\n    case \"SlowDownException\":\n    case \"com.amazonaws.ssooidc#SlowDownException\":\n      throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\n    case \"UnauthorizedClientException\":\n    case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n      throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n    case \"UnsupportedGrantTypeException\":\n    case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n      throw await deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_restJson1RegisterClientCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RegisterClientCommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.authorizationEndpoint != null) {\n    contents.authorizationEndpoint = __expectString(data.authorizationEndpoint);\n  }\n  if (data.clientId != null) {\n    contents.clientId = __expectString(data.clientId);\n  }\n  if (data.clientIdIssuedAt != null) {\n    contents.clientIdIssuedAt = __expectLong(data.clientIdIssuedAt);\n  }\n  if (data.clientSecret != null) {\n    contents.clientSecret = __expectString(data.clientSecret);\n  }\n  if (data.clientSecretExpiresAt != null) {\n    contents.clientSecretExpiresAt = __expectLong(data.clientSecretExpiresAt);\n  }\n  if (data.tokenEndpoint != null) {\n    contents.tokenEndpoint = __expectString(data.tokenEndpoint);\n  }\n  return contents;\n};\nconst deserializeAws_restJson1RegisterClientCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n    case \"InvalidClientMetadataException\":\n    case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n      throw await deserializeAws_restJson1InvalidClientMetadataExceptionResponse(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n    case \"InvalidScopeException\":\n    case \"com.amazonaws.ssooidc#InvalidScopeException\":\n      throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_restJson1StartDeviceAuthorizationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1StartDeviceAuthorizationCommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  if (data.deviceCode != null) {\n    contents.deviceCode = __expectString(data.deviceCode);\n  }\n  if (data.expiresIn != null) {\n    contents.expiresIn = __expectInt32(data.expiresIn);\n  }\n  if (data.interval != null) {\n    contents.interval = __expectInt32(data.interval);\n  }\n  if (data.userCode != null) {\n    contents.userCode = __expectString(data.userCode);\n  }\n  if (data.verificationUri != null) {\n    contents.verificationUri = __expectString(data.verificationUri);\n  }\n  if (data.verificationUriComplete != null) {\n    contents.verificationUriComplete = __expectString(data.verificationUriComplete);\n  }\n  return contents;\n};\nconst deserializeAws_restJson1StartDeviceAuthorizationCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n    case \"InvalidClientException\":\n    case \"com.amazonaws.ssooidc#InvalidClientException\":\n      throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n    case \"SlowDownException\":\n    case \"com.amazonaws.ssooidc#SlowDownException\":\n      throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\n    case \"UnauthorizedClientException\":\n    case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n      throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nconst map = __map;\nconst deserializeAws_restJson1AccessDeniedExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new AccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1AuthorizationPendingExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new AuthorizationPendingException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new ExpiredTokenException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InternalServerExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new InternalServerException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidClientExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new InvalidClientException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidClientMetadataExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new InvalidClientMetadataException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidGrantExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new InvalidGrantException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new InvalidRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidScopeExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new InvalidScopeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1SlowDownExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new SlowDownException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedClientExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new UnauthorizedClientException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = __expectString(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = __expectString(data.error_description);\n  }\n  const exception = new UnsupportedGrantTypeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst serializeAws_restJson1Scopes = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBody = function () {\n  let streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n  let context = arguments.length > 1 ? arguments[1] : undefined;\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst isSerializableHeaderValue = value => value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    return JSON.parse(encoded);\n  }\n  return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n  const value = await parseBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":{"version":3,"names":["HttpRequest","__HttpRequest","decorateServiceException","__decorateServiceException","expectInt32","__expectInt32","expectLong","__expectLong","expectNonNull","__expectNonNull","expectObject","__expectObject","expectString","__expectString","map","__map","throwDefaultError","AccessDeniedException","AuthorizationPendingException","ExpiredTokenException","InternalServerException","InvalidClientException","InvalidClientMetadataException","InvalidGrantException","InvalidRequestException","InvalidScopeException","SlowDownException","UnauthorizedClientException","UnsupportedGrantTypeException","SSOOIDCServiceException","__BaseException","serializeAws_restJson1CreateTokenCommand","input","context","hostname","protocol","port","path","basePath","endpoint","headers","resolvedPath","endsWith","slice","body","JSON","stringify","clientId","clientSecret","code","deviceCode","grantType","redirectUri","refreshToken","scope","serializeAws_restJson1Scopes","method","serializeAws_restJson1RegisterClientCommand","clientName","clientType","scopes","serializeAws_restJson1StartDeviceAuthorizationCommand","startUrl","deserializeAws_restJson1CreateTokenCommand","output","statusCode","deserializeAws_restJson1CreateTokenCommandError","contents","$metadata","deserializeMetadata","data","parseBody","accessToken","expiresIn","idToken","tokenType","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1AccessDeniedExceptionResponse","deserializeAws_restJson1AuthorizationPendingExceptionResponse","deserializeAws_restJson1ExpiredTokenExceptionResponse","deserializeAws_restJson1InternalServerExceptionResponse","deserializeAws_restJson1InvalidClientExceptionResponse","deserializeAws_restJson1InvalidGrantExceptionResponse","deserializeAws_restJson1InvalidRequestExceptionResponse","deserializeAws_restJson1InvalidScopeExceptionResponse","deserializeAws_restJson1SlowDownExceptionResponse","deserializeAws_restJson1UnauthorizedClientExceptionResponse","deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse","parsedBody","exceptionCtor","deserializeAws_restJson1RegisterClientCommand","deserializeAws_restJson1RegisterClientCommandError","authorizationEndpoint","clientIdIssuedAt","clientSecretExpiresAt","tokenEndpoint","deserializeAws_restJson1InvalidClientMetadataExceptionResponse","deserializeAws_restJson1StartDeviceAuthorizationCommand","deserializeAws_restJson1StartDeviceAuthorizationCommandError","interval","userCode","verificationUri","verificationUriComplete","error","error_description","exception","filter","e","entry","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","Uint8Array","Promise","resolve","streamCollector","collectBodyString","then","utf8Encoder","isSerializableHeaderValue","value","undefined","Object","getOwnPropertyNames","includes","length","size","encoded","parse","errorBody","message","Message","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","toString","indexOf","split","headerKey"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/client-sso-oidc/dist-es/protocols/Aws_restJson1.js"],"sourcesContent":["import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\r\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map as __map, throwDefaultError, } from \"@aws-sdk/smithy-client\";\r\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidClientMetadataException, InvalidGrantException, InvalidRequestException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException, } from \"../models/models_0\";\r\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\r\nexport const serializeAws_restJson1CreateTokenCommand = async (input, context) => {\r\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\r\n    const headers = {\r\n        \"content-type\": \"application/json\",\r\n    };\r\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\r\n    let body;\r\n    body = JSON.stringify({\r\n        ...(input.clientId != null && { clientId: input.clientId }),\r\n        ...(input.clientSecret != null && { clientSecret: input.clientSecret }),\r\n        ...(input.code != null && { code: input.code }),\r\n        ...(input.deviceCode != null && { deviceCode: input.deviceCode }),\r\n        ...(input.grantType != null && { grantType: input.grantType }),\r\n        ...(input.redirectUri != null && { redirectUri: input.redirectUri }),\r\n        ...(input.refreshToken != null && { refreshToken: input.refreshToken }),\r\n        ...(input.scope != null && { scope: serializeAws_restJson1Scopes(input.scope, context) }),\r\n    });\r\n    return new __HttpRequest({\r\n        protocol,\r\n        hostname,\r\n        port,\r\n        method: \"POST\",\r\n        headers,\r\n        path: resolvedPath,\r\n        body,\r\n    });\r\n};\r\nexport const serializeAws_restJson1RegisterClientCommand = async (input, context) => {\r\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\r\n    const headers = {\r\n        \"content-type\": \"application/json\",\r\n    };\r\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\r\n    let body;\r\n    body = JSON.stringify({\r\n        ...(input.clientName != null && { clientName: input.clientName }),\r\n        ...(input.clientType != null && { clientType: input.clientType }),\r\n        ...(input.scopes != null && { scopes: serializeAws_restJson1Scopes(input.scopes, context) }),\r\n    });\r\n    return new __HttpRequest({\r\n        protocol,\r\n        hostname,\r\n        port,\r\n        method: \"POST\",\r\n        headers,\r\n        path: resolvedPath,\r\n        body,\r\n    });\r\n};\r\nexport const serializeAws_restJson1StartDeviceAuthorizationCommand = async (input, context) => {\r\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\r\n    const headers = {\r\n        \"content-type\": \"application/json\",\r\n    };\r\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\r\n    let body;\r\n    body = JSON.stringify({\r\n        ...(input.clientId != null && { clientId: input.clientId }),\r\n        ...(input.clientSecret != null && { clientSecret: input.clientSecret }),\r\n        ...(input.startUrl != null && { startUrl: input.startUrl }),\r\n    });\r\n    return new __HttpRequest({\r\n        protocol,\r\n        hostname,\r\n        port,\r\n        method: \"POST\",\r\n        headers,\r\n        path: resolvedPath,\r\n        body,\r\n    });\r\n};\r\nexport const deserializeAws_restJson1CreateTokenCommand = async (output, context) => {\r\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\r\n        return deserializeAws_restJson1CreateTokenCommandError(output, context);\r\n    }\r\n    const contents = map({\r\n        $metadata: deserializeMetadata(output),\r\n    });\r\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\r\n    if (data.accessToken != null) {\r\n        contents.accessToken = __expectString(data.accessToken);\r\n    }\r\n    if (data.expiresIn != null) {\r\n        contents.expiresIn = __expectInt32(data.expiresIn);\r\n    }\r\n    if (data.idToken != null) {\r\n        contents.idToken = __expectString(data.idToken);\r\n    }\r\n    if (data.refreshToken != null) {\r\n        contents.refreshToken = __expectString(data.refreshToken);\r\n    }\r\n    if (data.tokenType != null) {\r\n        contents.tokenType = __expectString(data.tokenType);\r\n    }\r\n    return contents;\r\n};\r\nconst deserializeAws_restJson1CreateTokenCommandError = async (output, context) => {\r\n    const parsedOutput = {\r\n        ...output,\r\n        body: await parseErrorBody(output.body, context),\r\n    };\r\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\r\n    switch (errorCode) {\r\n        case \"AccessDeniedException\":\r\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\r\n            throw await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context);\r\n        case \"AuthorizationPendingException\":\r\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\r\n            throw await deserializeAws_restJson1AuthorizationPendingExceptionResponse(parsedOutput, context);\r\n        case \"ExpiredTokenException\":\r\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\r\n            throw await deserializeAws_restJson1ExpiredTokenExceptionResponse(parsedOutput, context);\r\n        case \"InternalServerException\":\r\n        case \"com.amazonaws.ssooidc#InternalServerException\":\r\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\r\n        case \"InvalidClientException\":\r\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\r\n            throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\r\n        case \"InvalidGrantException\":\r\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\r\n            throw await deserializeAws_restJson1InvalidGrantExceptionResponse(parsedOutput, context);\r\n        case \"InvalidRequestException\":\r\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\r\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\r\n        case \"InvalidScopeException\":\r\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\r\n            throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\r\n        case \"SlowDownException\":\r\n        case \"com.amazonaws.ssooidc#SlowDownException\":\r\n            throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\r\n        case \"UnauthorizedClientException\":\r\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\r\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\r\n        case \"UnsupportedGrantTypeException\":\r\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\r\n            throw await deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse(parsedOutput, context);\r\n        default:\r\n            const parsedBody = parsedOutput.body;\r\n            throwDefaultError({\r\n                output,\r\n                parsedBody,\r\n                exceptionCtor: __BaseException,\r\n                errorCode,\r\n            });\r\n    }\r\n};\r\nexport const deserializeAws_restJson1RegisterClientCommand = async (output, context) => {\r\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\r\n        return deserializeAws_restJson1RegisterClientCommandError(output, context);\r\n    }\r\n    const contents = map({\r\n        $metadata: deserializeMetadata(output),\r\n    });\r\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\r\n    if (data.authorizationEndpoint != null) {\r\n        contents.authorizationEndpoint = __expectString(data.authorizationEndpoint);\r\n    }\r\n    if (data.clientId != null) {\r\n        contents.clientId = __expectString(data.clientId);\r\n    }\r\n    if (data.clientIdIssuedAt != null) {\r\n        contents.clientIdIssuedAt = __expectLong(data.clientIdIssuedAt);\r\n    }\r\n    if (data.clientSecret != null) {\r\n        contents.clientSecret = __expectString(data.clientSecret);\r\n    }\r\n    if (data.clientSecretExpiresAt != null) {\r\n        contents.clientSecretExpiresAt = __expectLong(data.clientSecretExpiresAt);\r\n    }\r\n    if (data.tokenEndpoint != null) {\r\n        contents.tokenEndpoint = __expectString(data.tokenEndpoint);\r\n    }\r\n    return contents;\r\n};\r\nconst deserializeAws_restJson1RegisterClientCommandError = async (output, context) => {\r\n    const parsedOutput = {\r\n        ...output,\r\n        body: await parseErrorBody(output.body, context),\r\n    };\r\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\r\n    switch (errorCode) {\r\n        case \"InternalServerException\":\r\n        case \"com.amazonaws.ssooidc#InternalServerException\":\r\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\r\n        case \"InvalidClientMetadataException\":\r\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\r\n            throw await deserializeAws_restJson1InvalidClientMetadataExceptionResponse(parsedOutput, context);\r\n        case \"InvalidRequestException\":\r\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\r\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\r\n        case \"InvalidScopeException\":\r\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\r\n            throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\r\n        default:\r\n            const parsedBody = parsedOutput.body;\r\n            throwDefaultError({\r\n                output,\r\n                parsedBody,\r\n                exceptionCtor: __BaseException,\r\n                errorCode,\r\n            });\r\n    }\r\n};\r\nexport const deserializeAws_restJson1StartDeviceAuthorizationCommand = async (output, context) => {\r\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\r\n        return deserializeAws_restJson1StartDeviceAuthorizationCommandError(output, context);\r\n    }\r\n    const contents = map({\r\n        $metadata: deserializeMetadata(output),\r\n    });\r\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\r\n    if (data.deviceCode != null) {\r\n        contents.deviceCode = __expectString(data.deviceCode);\r\n    }\r\n    if (data.expiresIn != null) {\r\n        contents.expiresIn = __expectInt32(data.expiresIn);\r\n    }\r\n    if (data.interval != null) {\r\n        contents.interval = __expectInt32(data.interval);\r\n    }\r\n    if (data.userCode != null) {\r\n        contents.userCode = __expectString(data.userCode);\r\n    }\r\n    if (data.verificationUri != null) {\r\n        contents.verificationUri = __expectString(data.verificationUri);\r\n    }\r\n    if (data.verificationUriComplete != null) {\r\n        contents.verificationUriComplete = __expectString(data.verificationUriComplete);\r\n    }\r\n    return contents;\r\n};\r\nconst deserializeAws_restJson1StartDeviceAuthorizationCommandError = async (output, context) => {\r\n    const parsedOutput = {\r\n        ...output,\r\n        body: await parseErrorBody(output.body, context),\r\n    };\r\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\r\n    switch (errorCode) {\r\n        case \"InternalServerException\":\r\n        case \"com.amazonaws.ssooidc#InternalServerException\":\r\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\r\n        case \"InvalidClientException\":\r\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\r\n            throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\r\n        case \"InvalidRequestException\":\r\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\r\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\r\n        case \"SlowDownException\":\r\n        case \"com.amazonaws.ssooidc#SlowDownException\":\r\n            throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\r\n        case \"UnauthorizedClientException\":\r\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\r\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\r\n        default:\r\n            const parsedBody = parsedOutput.body;\r\n            throwDefaultError({\r\n                output,\r\n                parsedBody,\r\n                exceptionCtor: __BaseException,\r\n                errorCode,\r\n            });\r\n    }\r\n};\r\nconst map = __map;\r\nconst deserializeAws_restJson1AccessDeniedExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new AccessDeniedException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1AuthorizationPendingExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new AuthorizationPendingException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1ExpiredTokenExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new ExpiredTokenException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InternalServerExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new InternalServerException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidClientExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new InvalidClientException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidClientMetadataExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new InvalidClientMetadataException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidGrantExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new InvalidGrantException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new InvalidRequestException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidScopeExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new InvalidScopeException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1SlowDownExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new SlowDownException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1UnauthorizedClientExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new UnauthorizedClientException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = __expectString(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = __expectString(data.error_description);\r\n    }\r\n    const exception = new UnsupportedGrantTypeException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return __decorateServiceException(exception, parsedOutput.body);\r\n};\r\nconst serializeAws_restJson1Scopes = (input, context) => {\r\n    return input\r\n        .filter((e) => e != null)\r\n        .map((entry) => {\r\n        return entry;\r\n    });\r\n};\r\nconst deserializeMetadata = (output) => ({\r\n    httpStatusCode: output.statusCode,\r\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\r\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\r\n    cfId: output.headers[\"x-amz-cf-id\"],\r\n});\r\nconst collectBody = (streamBody = new Uint8Array(), context) => {\r\n    if (streamBody instanceof Uint8Array) {\r\n        return Promise.resolve(streamBody);\r\n    }\r\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\r\n};\r\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\r\nconst isSerializableHeaderValue = (value) => value !== undefined &&\r\n    value !== null &&\r\n    value !== \"\" &&\r\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\r\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\r\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\r\n    if (encoded.length) {\r\n        return JSON.parse(encoded);\r\n    }\r\n    return {};\r\n});\r\nconst parseErrorBody = async (errorBody, context) => {\r\n    const value = await parseBody(errorBody, context);\r\n    value.message = value.message ?? value.Message;\r\n    return value;\r\n};\r\nconst loadRestJsonErrorCode = (output, data) => {\r\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\r\n    const sanitizeErrorCode = (rawValue) => {\r\n        let cleanValue = rawValue;\r\n        if (typeof cleanValue === \"number\") {\r\n            cleanValue = cleanValue.toString();\r\n        }\r\n        if (cleanValue.indexOf(\",\") >= 0) {\r\n            cleanValue = cleanValue.split(\",\")[0];\r\n        }\r\n        if (cleanValue.indexOf(\":\") >= 0) {\r\n            cleanValue = cleanValue.split(\":\")[0];\r\n        }\r\n        if (cleanValue.indexOf(\"#\") >= 0) {\r\n            cleanValue = cleanValue.split(\"#\")[1];\r\n        }\r\n        return cleanValue;\r\n    };\r\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\r\n    if (headerKey !== undefined) {\r\n        return sanitizeErrorCode(output.headers[headerKey]);\r\n    }\r\n    if (data.code !== undefined) {\r\n        return sanitizeErrorCode(data.code);\r\n    }\r\n    if (data[\"__type\"] !== undefined) {\r\n        return sanitizeErrorCode(data[\"__type\"]);\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}