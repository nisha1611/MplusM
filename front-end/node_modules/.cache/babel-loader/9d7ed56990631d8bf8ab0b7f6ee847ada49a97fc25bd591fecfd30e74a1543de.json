{"ast":null,"code":"'use strict';\n\nconst isBsonType = require('../isBsonType');\nmodule.exports = function areDiscriminatorValuesEqual(a, b) {\n  if (typeof a === 'string' && typeof b === 'string') {\n    return a === b;\n  }\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a === b;\n  }\n  if (isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID')) {\n    return a.toString() === b.toString();\n  }\n  return false;\n};","map":{"version":3,"names":["isBsonType","require","module","exports","areDiscriminatorValuesEqual","a","b","toString"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/discriminator/areDiscriminatorValuesEqual.js"],"sourcesContent":["'use strict';\r\n\r\nconst isBsonType = require('../isBsonType');\r\n\r\nmodule.exports = function areDiscriminatorValuesEqual(a, b) {\r\n  if (typeof a === 'string' && typeof b === 'string') {\r\n    return a === b;\r\n  }\r\n  if (typeof a === 'number' && typeof b === 'number') {\r\n    return a === b;\r\n  }\r\n  if (isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID')) {\r\n    return a.toString() === b.toString();\r\n  }\r\n  return false;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3CC,MAAM,CAACC,OAAO,GAAG,SAASC,2BAA2B,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC1D,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;IAClD,OAAOD,CAAC,KAAKC,CAAC;EAChB;EACA,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;IAClD,OAAOD,CAAC,KAAKC,CAAC;EAChB;EACA,IAAIN,UAAU,CAACK,CAAC,EAAE,UAAU,CAAC,IAAIL,UAAU,CAACM,CAAC,EAAE,UAAU,CAAC,EAAE;IAC1D,OAAOD,CAAC,CAACE,QAAQ,EAAE,KAAKD,CAAC,CAACC,QAAQ,EAAE;EACtC;EACA,OAAO,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}