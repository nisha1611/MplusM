{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateUtf8 = void 0;\nvar FIRST_BIT = 0x80;\nvar FIRST_TWO_BITS = 0xc0;\nvar FIRST_THREE_BITS = 0xe0;\nvar FIRST_FOUR_BITS = 0xf0;\nvar FIRST_FIVE_BITS = 0xf8;\nvar TWO_BIT_CHAR = 0xc0;\nvar THREE_BIT_CHAR = 0xe0;\nvar FOUR_BIT_CHAR = 0xf0;\nvar CONTINUING_CHAR = 0x80;\n/**\r\n * Determines if the passed in bytes are valid utf8\r\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\r\n * @param start - The index to start validating\r\n * @param end - The index to end validating\r\n */\nfunction validateUtf8(bytes, start, end) {\n  var continuation = 0;\n  for (var i = start; i < end; i += 1) {\n    var byte = bytes[i];\n    if (continuation) {\n      if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n        return false;\n      }\n      continuation -= 1;\n    } else if (byte & FIRST_BIT) {\n      if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n        continuation = 1;\n      } else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n        continuation = 2;\n      } else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n        continuation = 3;\n      } else {\n        return false;\n      }\n    }\n  }\n  return !continuation;\n}\nexports.validateUtf8 = validateUtf8;","map":{"version":3,"mappings":";;;;;;AAAA,IAAMA,SAAS,GAAG,IAAI;AACtB,IAAMC,cAAc,GAAG,IAAI;AAC3B,IAAMC,gBAAgB,GAAG,IAAI;AAC7B,IAAMC,eAAe,GAAG,IAAI;AAC5B,IAAMC,eAAe,GAAG,IAAI;AAE5B,IAAMC,YAAY,GAAG,IAAI;AACzB,IAAMC,cAAc,GAAG,IAAI;AAC3B,IAAMC,aAAa,GAAG,IAAI;AAC1B,IAAMC,eAAe,GAAG,IAAI;AAE5B;;;;;;AAMA,SAAgBC,YAAY,CAC1BC,KAAkC,EAClCC,KAAa,EACbC,GAAW;EAEX,IAAIC,YAAY,GAAG,CAAC;EAEpB,KAAK,IAAIC,CAAC,GAAGH,KAAK,EAAEG,CAAC,GAAGF,GAAG,EAAEE,CAAC,IAAI,CAAC,EAAE;IACnC,IAAMC,IAAI,GAAGL,KAAK,CAACI,CAAC,CAAC;IAErB,IAAID,YAAY,EAAE;MAChB,IAAI,CAACE,IAAI,GAAGd,cAAc,MAAMO,eAAe,EAAE;QAC/C,OAAO,KAAK;;MAEdK,YAAY,IAAI,CAAC;KAClB,MAAM,IAAIE,IAAI,GAAGf,SAAS,EAAE;MAC3B,IAAI,CAACe,IAAI,GAAGb,gBAAgB,MAAMG,YAAY,EAAE;QAC9CQ,YAAY,GAAG,CAAC;OACjB,MAAM,IAAI,CAACE,IAAI,GAAGZ,eAAe,MAAMG,cAAc,EAAE;QACtDO,YAAY,GAAG,CAAC;OACjB,MAAM,IAAI,CAACE,IAAI,GAAGX,eAAe,MAAMG,aAAa,EAAE;QACrDM,YAAY,GAAG,CAAC;OACjB,MAAM;QACL,OAAO,KAAK;;;;EAKlB,OAAO,CAACA,YAAY;AACtB;AA7BAG","names":["FIRST_BIT","FIRST_TWO_BITS","FIRST_THREE_BITS","FIRST_FOUR_BITS","FIRST_FIVE_BITS","TWO_BIT_CHAR","THREE_BIT_CHAR","FOUR_BIT_CHAR","CONTINUING_CHAR","validateUtf8","bytes","start","end","continuation","i","byte","exports"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\bson\\src\\validate_utf8.ts"],"sourcesContent":["const FIRST_BIT = 0x80;\r\nconst FIRST_TWO_BITS = 0xc0;\r\nconst FIRST_THREE_BITS = 0xe0;\r\nconst FIRST_FOUR_BITS = 0xf0;\r\nconst FIRST_FIVE_BITS = 0xf8;\r\n\r\nconst TWO_BIT_CHAR = 0xc0;\r\nconst THREE_BIT_CHAR = 0xe0;\r\nconst FOUR_BIT_CHAR = 0xf0;\r\nconst CONTINUING_CHAR = 0x80;\r\n\r\n/**\r\n * Determines if the passed in bytes are valid utf8\r\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\r\n * @param start - The index to start validating\r\n * @param end - The index to end validating\r\n */\r\nexport function validateUtf8(\r\n  bytes: { [index: number]: number },\r\n  start: number,\r\n  end: number\r\n): boolean {\r\n  let continuation = 0;\r\n\r\n  for (let i = start; i < end; i += 1) {\r\n    const byte = bytes[i];\r\n\r\n    if (continuation) {\r\n      if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\r\n        return false;\r\n      }\r\n      continuation -= 1;\r\n    } else if (byte & FIRST_BIT) {\r\n      if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\r\n        continuation = 1;\r\n      } else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\r\n        continuation = 2;\r\n      } else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\r\n        continuation = 3;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return !continuation;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}