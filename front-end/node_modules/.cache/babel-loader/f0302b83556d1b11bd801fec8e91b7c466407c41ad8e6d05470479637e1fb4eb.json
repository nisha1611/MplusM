{"ast":null,"code":"import { ProviderError } from \"@aws-sdk/property-provider\";\nimport { Buffer } from \"buffer\";\nimport { request } from \"http\";\nexport function httpRequest(options) {\n  return new Promise((resolve, reject) => {\n    const req = request({\n      method: \"GET\",\n      ...options,\n      hostname: options.hostname?.replace(/^\\[(.+)\\]$/, \"$1\")\n    });\n    req.on(\"error\", err => {\n      reject(Object.assign(new ProviderError(\"Unable to connect to instance metadata service\"), err));\n      req.destroy();\n    });\n    req.on(\"timeout\", () => {\n      reject(new ProviderError(\"TimeoutError from instance metadata service\"));\n      req.destroy();\n    });\n    req.on(\"response\", res => {\n      const {\n        statusCode = 400\n      } = res;\n      if (statusCode < 200 || 300 <= statusCode) {\n        reject(Object.assign(new ProviderError(\"Error response received from instance metadata service\"), {\n          statusCode\n        }));\n        req.destroy();\n      }\n      const chunks = [];\n      res.on(\"data\", chunk => {\n        chunks.push(chunk);\n      });\n      res.on(\"end\", () => {\n        resolve(Buffer.concat(chunks));\n        req.destroy();\n      });\n    });\n    req.end();\n  });\n}","map":{"version":3,"names":["ProviderError","Buffer","request","httpRequest","options","Promise","resolve","reject","req","method","hostname","replace","on","err","Object","assign","destroy","res","statusCode","chunks","chunk","push","concat","end"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/httpRequest.js"],"sourcesContent":["import { ProviderError } from \"@aws-sdk/property-provider\";\r\nimport { Buffer } from \"buffer\";\r\nimport { request } from \"http\";\r\nexport function httpRequest(options) {\r\n    return new Promise((resolve, reject) => {\r\n        const req = request({\r\n            method: \"GET\",\r\n            ...options,\r\n            hostname: options.hostname?.replace(/^\\[(.+)\\]$/, \"$1\"),\r\n        });\r\n        req.on(\"error\", (err) => {\r\n            reject(Object.assign(new ProviderError(\"Unable to connect to instance metadata service\"), err));\r\n            req.destroy();\r\n        });\r\n        req.on(\"timeout\", () => {\r\n            reject(new ProviderError(\"TimeoutError from instance metadata service\"));\r\n            req.destroy();\r\n        });\r\n        req.on(\"response\", (res) => {\r\n            const { statusCode = 400 } = res;\r\n            if (statusCode < 200 || 300 <= statusCode) {\r\n                reject(Object.assign(new ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\r\n                req.destroy();\r\n            }\r\n            const chunks = [];\r\n            res.on(\"data\", (chunk) => {\r\n                chunks.push(chunk);\r\n            });\r\n            res.on(\"end\", () => {\r\n                resolve(Buffer.concat(chunks));\r\n                req.destroy();\r\n            });\r\n        });\r\n        req.end();\r\n    });\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAO,SAASC,WAAW,CAACC,OAAO,EAAE;EACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,GAAG,GAAGN,OAAO,CAAC;MAChBO,MAAM,EAAE,KAAK;MACb,GAAGL,OAAO;MACVM,QAAQ,EAAEN,OAAO,CAACM,QAAQ,EAAEC,OAAO,CAAC,YAAY,EAAE,IAAI;IAC1D,CAAC,CAAC;IACFH,GAAG,CAACI,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAK;MACrBN,MAAM,CAACO,MAAM,CAACC,MAAM,CAAC,IAAIf,aAAa,CAAC,gDAAgD,CAAC,EAAEa,GAAG,CAAC,CAAC;MAC/FL,GAAG,CAACQ,OAAO,EAAE;IACjB,CAAC,CAAC;IACFR,GAAG,CAACI,EAAE,CAAC,SAAS,EAAE,MAAM;MACpBL,MAAM,CAAC,IAAIP,aAAa,CAAC,6CAA6C,CAAC,CAAC;MACxEQ,GAAG,CAACQ,OAAO,EAAE;IACjB,CAAC,CAAC;IACFR,GAAG,CAACI,EAAE,CAAC,UAAU,EAAGK,GAAG,IAAK;MACxB,MAAM;QAAEC,UAAU,GAAG;MAAI,CAAC,GAAGD,GAAG;MAChC,IAAIC,UAAU,GAAG,GAAG,IAAI,GAAG,IAAIA,UAAU,EAAE;QACvCX,MAAM,CAACO,MAAM,CAACC,MAAM,CAAC,IAAIf,aAAa,CAAC,wDAAwD,CAAC,EAAE;UAAEkB;QAAW,CAAC,CAAC,CAAC;QAClHV,GAAG,CAACQ,OAAO,EAAE;MACjB;MACA,MAAMG,MAAM,GAAG,EAAE;MACjBF,GAAG,CAACL,EAAE,CAAC,MAAM,EAAGQ,KAAK,IAAK;QACtBD,MAAM,CAACE,IAAI,CAACD,KAAK,CAAC;MACtB,CAAC,CAAC;MACFH,GAAG,CAACL,EAAE,CAAC,KAAK,EAAE,MAAM;QAChBN,OAAO,CAACL,MAAM,CAACqB,MAAM,CAACH,MAAM,CAAC,CAAC;QAC9BX,GAAG,CAACQ,OAAO,EAAE;MACjB,CAAC,CAAC;IACN,CAAC,CAAC;IACFR,GAAG,CAACe,GAAG,EAAE;EACb,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}