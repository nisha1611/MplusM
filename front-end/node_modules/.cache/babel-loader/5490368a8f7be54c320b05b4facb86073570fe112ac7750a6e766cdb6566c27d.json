{"ast":null,"code":"import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@aws-sdk/shared-ini-file-loader\";\nexport const fromSharedConfigFiles = function (configSelector) {\n  let {\n    preferredFile = \"config\",\n    ...init\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return async () => {\n    const profile = getProfileName(init);\n    const {\n      configFile,\n      credentialsFile\n    } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\" ? {\n      ...profileFromCredentials,\n      ...profileFromConfig\n    } : {\n      ...profileFromConfig,\n      ...profileFromCredentials\n    };\n    try {\n      const configValue = configSelector(mergedProfile);\n      if (configValue === undefined) {\n        throw new Error();\n      }\n      return configValue;\n    } catch (e) {\n      throw new CredentialsProviderError(e.message || `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n  };\n};","map":{"version":3,"names":["CredentialsProviderError","getProfileName","loadSharedConfigFiles","fromSharedConfigFiles","configSelector","preferredFile","init","profile","configFile","credentialsFile","profileFromCredentials","profileFromConfig","mergedProfile","configValue","undefined","Error","e","message"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/node-config-provider/dist-es/fromSharedConfigFiles.js"],"sourcesContent":["import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\r\nimport { getProfileName, loadSharedConfigFiles } from \"@aws-sdk/shared-ini-file-loader\";\r\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\r\n    const profile = getProfileName(init);\r\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\r\n    const profileFromCredentials = credentialsFile[profile] || {};\r\n    const profileFromConfig = configFile[profile] || {};\r\n    const mergedProfile = preferredFile === \"config\"\r\n        ? { ...profileFromCredentials, ...profileFromConfig }\r\n        : { ...profileFromConfig, ...profileFromCredentials };\r\n    try {\r\n        const configValue = configSelector(mergedProfile);\r\n        if (configValue === undefined) {\r\n            throw new Error();\r\n        }\r\n        return configValue;\r\n    }\r\n    catch (e) {\r\n        throw new CredentialsProviderError(e.message ||\r\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,iCAAiC;AACvF,OAAO,MAAMC,qBAAqB,GAAG,UAACC,cAAc;EAAA,IAAE;IAAEC,aAAa,GAAG,QAAQ;IAAE,GAAGC;EAAK,CAAC,uEAAG,CAAC,CAAC;EAAA,OAAK,YAAY;IAC7G,MAAMC,OAAO,GAAGN,cAAc,CAACK,IAAI,CAAC;IACpC,MAAM;MAAEE,UAAU;MAAEC;IAAgB,CAAC,GAAG,MAAMP,qBAAqB,CAACI,IAAI,CAAC;IACzE,MAAMI,sBAAsB,GAAGD,eAAe,CAACF,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7D,MAAMI,iBAAiB,GAAGH,UAAU,CAACD,OAAO,CAAC,IAAI,CAAC,CAAC;IACnD,MAAMK,aAAa,GAAGP,aAAa,KAAK,QAAQ,GAC1C;MAAE,GAAGK,sBAAsB;MAAE,GAAGC;IAAkB,CAAC,GACnD;MAAE,GAAGA,iBAAiB;MAAE,GAAGD;IAAuB,CAAC;IACzD,IAAI;MACA,MAAMG,WAAW,GAAGT,cAAc,CAACQ,aAAa,CAAC;MACjD,IAAIC,WAAW,KAAKC,SAAS,EAAE;QAC3B,MAAM,IAAIC,KAAK,EAAE;MACrB;MACA,OAAOF,WAAW;IACtB,CAAC,CACD,OAAOG,CAAC,EAAE;MACN,MAAM,IAAIhB,wBAAwB,CAACgB,CAAC,CAACC,OAAO,IACvC,kCAAiCV,OAAQ,4CAA2CH,cAAe,EAAC,CAAC;IAC9G;EACJ,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}