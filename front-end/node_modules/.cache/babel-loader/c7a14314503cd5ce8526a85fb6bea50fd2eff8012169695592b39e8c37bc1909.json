{"ast":null,"code":"import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromContainerMetadata, fromInstanceMetadata } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const resolveCredentialSource = (credentialSource, profileName) => {\n  const sourceProvidersMap = {\n    EcsContainer: fromContainerMetadata,\n    Ec2InstanceMetadata: fromInstanceMetadata,\n    Environment: fromEnv\n  };\n  if (credentialSource in sourceProvidersMap) {\n    return sourceProvidersMap[credentialSource]();\n  } else {\n    throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` + `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n  }\n};","map":{"version":3,"names":["fromEnv","fromContainerMetadata","fromInstanceMetadata","CredentialsProviderError","resolveCredentialSource","credentialSource","profileName","sourceProvidersMap","EcsContainer","Ec2InstanceMetadata","Environment"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js"],"sourcesContent":["import { fromEnv } from \"@aws-sdk/credential-provider-env\";\r\nimport { fromContainerMetadata, fromInstanceMetadata } from \"@aws-sdk/credential-provider-imds\";\r\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\r\nexport const resolveCredentialSource = (credentialSource, profileName) => {\r\n    const sourceProvidersMap = {\r\n        EcsContainer: fromContainerMetadata,\r\n        Ec2InstanceMetadata: fromInstanceMetadata,\r\n        Environment: fromEnv,\r\n    };\r\n    if (credentialSource in sourceProvidersMap) {\r\n        return sourceProvidersMap[credentialSource]();\r\n    }\r\n    else {\r\n        throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\r\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,qBAAqB,EAAEC,oBAAoB,QAAQ,mCAAmC;AAC/F,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,OAAO,MAAMC,uBAAuB,GAAG,CAACC,gBAAgB,EAAEC,WAAW,KAAK;EACtE,MAAMC,kBAAkB,GAAG;IACvBC,YAAY,EAAEP,qBAAqB;IACnCQ,mBAAmB,EAAEP,oBAAoB;IACzCQ,WAAW,EAAEV;EACjB,CAAC;EACD,IAAIK,gBAAgB,IAAIE,kBAAkB,EAAE;IACxC,OAAOA,kBAAkB,CAACF,gBAAgB,CAAC,EAAE;EACjD,CAAC,MACI;IACD,MAAM,IAAIF,wBAAwB,CAAE,4CAA2CG,WAAY,SAAQD,gBAAiB,IAAG,GAClH,8DAA6D,CAAC;EACvE;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}