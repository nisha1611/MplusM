{"ast":null,"code":"var parse = require('../');\nvar test = require('tape');\ntest('boolean and alias is not unknown', function (t) {\n  var unknown = [];\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n  var aliased = ['-h', 'true', '--derp', 'true'];\n  var regular = ['--herp', 'true', '-d', 'true'];\n  var opts = {\n    alias: {\n      h: 'herp'\n    },\n    boolean: 'h',\n    unknown: unknownFn\n  };\n  var aliasedArgv = parse(aliased, opts);\n  var propertyArgv = parse(regular, opts);\n  t.same(unknown, ['--derp', '-d']);\n  t.end();\n});\ntest('flag boolean true any double hyphen argument is not unknown', function (t) {\n  var unknown = [];\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n  var argv = parse(['--honk', '--tacos=good', 'cow', '-p', '55'], {\n    boolean: true,\n    unknown: unknownFn\n  });\n  t.same(unknown, ['--tacos=good', 'cow', '-p']);\n  t.same(argv, {\n    honk: true,\n    _: []\n  });\n  t.end();\n});\ntest('string and alias is not unknown', function (t) {\n  var unknown = [];\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n  var aliased = ['-h', 'hello', '--derp', 'goodbye'];\n  var regular = ['--herp', 'hello', '-d', 'moon'];\n  var opts = {\n    alias: {\n      h: 'herp'\n    },\n    string: 'h',\n    unknown: unknownFn\n  };\n  var aliasedArgv = parse(aliased, opts);\n  var propertyArgv = parse(regular, opts);\n  t.same(unknown, ['--derp', '-d']);\n  t.end();\n});\ntest('default and alias is not unknown', function (t) {\n  var unknown = [];\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n  var aliased = ['-h', 'hello'];\n  var regular = ['--herp', 'hello'];\n  var opts = {\n    default: {\n      'h': 'bar'\n    },\n    alias: {\n      'h': 'herp'\n    },\n    unknown: unknownFn\n  };\n  var aliasedArgv = parse(aliased, opts);\n  var propertyArgv = parse(regular, opts);\n  t.same(unknown, []);\n  t.end();\n  unknownFn(); // exercise fn for 100% coverage\n});\n\ntest('value following -- is not unknown', function (t) {\n  var unknown = [];\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n  var aliased = ['--bad', '--', 'good', 'arg'];\n  var opts = {\n    '--': true,\n    unknown: unknownFn\n  };\n  var argv = parse(aliased, opts);\n  t.same(unknown, ['--bad']);\n  t.same(argv, {\n    '--': ['good', 'arg'],\n    '_': []\n  });\n  t.end();\n});","map":{"version":3,"names":["parse","require","test","t","unknown","unknownFn","arg","push","aliased","regular","opts","alias","h","boolean","aliasedArgv","propertyArgv","same","end","argv","honk","_","string","default"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/minimist/test/unknown.js"],"sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('boolean and alias is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '-h', 'true', '--derp', 'true' ];\n    var regular = [ '--herp',  'true', '-d', 'true' ];\n    var opts = {\n        alias: { h: 'herp' },\n        boolean: 'h',\n        unknown: unknownFn\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n\n    t.same(unknown, ['--derp', '-d']);\n    t.end();\n});\n\ntest('flag boolean true any double hyphen argument is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var argv = parse(['--honk', '--tacos=good', 'cow', '-p', '55'], {\n        boolean: true,\n        unknown: unknownFn\n    });\n    t.same(unknown, ['--tacos=good', 'cow', '-p']);\n    t.same(argv, {\n        honk: true,\n        _: []\n    });\n    t.end();\n});\n\ntest('string and alias is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '-h', 'hello', '--derp', 'goodbye' ];\n    var regular = [ '--herp',  'hello', '-d', 'moon' ];\n    var opts = {\n        alias: { h: 'herp' },\n        string: 'h',\n        unknown: unknownFn\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n\n    t.same(unknown, ['--derp', '-d']);\n    t.end();\n});\n\ntest('default and alias is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '-h', 'hello' ];\n    var regular = [ '--herp',  'hello' ];\n    var opts = {\n        default: { 'h': 'bar' },\n        alias: { 'h': 'herp' },\n        unknown: unknownFn\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n\n    t.same(unknown, []);\n    t.end();\n    unknownFn(); // exercise fn for 100% coverage\n});\n\ntest('value following -- is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '--bad', '--', 'good', 'arg' ];\n    var opts = {\n        '--': true,\n        unknown: unknownFn\n    };\n    var argv = parse(aliased, opts);\n\n    t.same(unknown, ['--bad']);\n    t.same(argv, {\n        '--': ['good', 'arg'],\n        '_': []\n    })\n    t.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}