{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.staticStabilityProvider = void 0;\nconst getExtendedInstanceMetadataCredentials_1 = require(\"./getExtendedInstanceMetadataCredentials\");\nconst staticStabilityProvider = function (provider) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const logger = (options === null || options === void 0 ? void 0 : options.logger) || console;\n  let pastCredentials;\n  return async () => {\n    let credentials;\n    try {\n      credentials = await provider();\n      if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n        credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(credentials, logger);\n      }\n    } catch (e) {\n      if (pastCredentials) {\n        logger.warn(\"Credential renew failed: \", e);\n        credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(pastCredentials, logger);\n      } else {\n        throw e;\n      }\n    }\n    pastCredentials = credentials;\n    return credentials;\n  };\n};\nexports.staticStabilityProvider = staticStabilityProvider;","map":{"version":3,"names":["Object","defineProperty","exports","value","staticStabilityProvider","getExtendedInstanceMetadataCredentials_1","require","provider","options","logger","console","pastCredentials","credentials","expiration","getTime","Date","now","getExtendedInstanceMetadataCredentials","e","warn"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/staticStabilityProvider.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.staticStabilityProvider = void 0;\r\nconst getExtendedInstanceMetadataCredentials_1 = require(\"./getExtendedInstanceMetadataCredentials\");\r\nconst staticStabilityProvider = (provider, options = {}) => {\r\n    const logger = (options === null || options === void 0 ? void 0 : options.logger) || console;\r\n    let pastCredentials;\r\n    return async () => {\r\n        let credentials;\r\n        try {\r\n            credentials = await provider();\r\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\r\n                credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(credentials, logger);\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (pastCredentials) {\r\n                logger.warn(\"Credential renew failed: \", e);\r\n                credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(pastCredentials, logger);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        pastCredentials = credentials;\r\n        return credentials;\r\n    };\r\n};\r\nexports.staticStabilityProvider = staticStabilityProvider;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAG,KAAK,CAAC;AACxC,MAAMC,wCAAwC,GAAGC,OAAO,CAAC,0CAA0C,CAAC;AACpG,MAAMF,uBAAuB,GAAG,UAACG,QAAQ,EAAmB;EAAA,IAAjBC,OAAO,uEAAG,CAAC,CAAC;EACnD,MAAMC,MAAM,GAAG,CAACD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,MAAM,KAAKC,OAAO;EAC5F,IAAIC,eAAe;EACnB,OAAO,YAAY;IACf,IAAIC,WAAW;IACf,IAAI;MACAA,WAAW,GAAG,MAAML,QAAQ,EAAE;MAC9B,IAAIK,WAAW,CAACC,UAAU,IAAID,WAAW,CAACC,UAAU,CAACC,OAAO,EAAE,GAAGC,IAAI,CAACC,GAAG,EAAE,EAAE;QACzEJ,WAAW,GAAG,CAAC,CAAC,EAAEP,wCAAwC,CAACY,sCAAsC,EAAEL,WAAW,EAAEH,MAAM,CAAC;MAC3H;IACJ,CAAC,CACD,OAAOS,CAAC,EAAE;MACN,IAAIP,eAAe,EAAE;QACjBF,MAAM,CAACU,IAAI,CAAC,2BAA2B,EAAED,CAAC,CAAC;QAC3CN,WAAW,GAAG,CAAC,CAAC,EAAEP,wCAAwC,CAACY,sCAAsC,EAAEN,eAAe,EAAEF,MAAM,CAAC;MAC/H,CAAC,MACI;QACD,MAAMS,CAAC;MACX;IACJ;IACAP,eAAe,GAAGC,WAAW;IAC7B,OAAOA,WAAW;EACtB,CAAC;AACL,CAAC;AACDV,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}