{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"http\").ServerOptions} HttpServerOptions */\n/** @typedef {import(\"https\").ServerOptions} HttpsServerOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LazyCompilationDefaultBackendOptions} LazyCompilationDefaultBackendOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/**\r\n * @callback BackendHandler\r\n * @param {Compiler} compiler compiler\r\n * @param {function((Error | null)=, any=): void} callback callback\r\n * @returns {void}\r\n */\n\n/**\r\n * @param {Omit<LazyCompilationDefaultBackendOptions, \"client\"> & { client: NonNullable<LazyCompilationDefaultBackendOptions[\"client\"]>}} options additional options for the backend\r\n * @returns {BackendHandler} backend\r\n */\nmodule.exports = options => (compiler, callback) => {\n  const logger = compiler.getInfrastructureLogger(\"LazyCompilationBackend\");\n  const activeModules = new Map();\n  const prefix = \"/lazy-compilation-using-\";\n  const isHttps = options.protocol === \"https\" || typeof options.server === \"object\" && (\"key\" in options.server || \"pfx\" in options.server);\n  const createServer = typeof options.server === \"function\" ? options.server : (() => {\n    const http = isHttps ? require(\"https\") : require(\"http\");\n    return http.createServer.bind(http, options.server);\n  })();\n  const listen = typeof options.listen === \"function\" ? options.listen : server => {\n    let listen = options.listen;\n    if (typeof listen === \"object\" && !(\"port\" in listen)) listen = {\n      ...listen,\n      port: undefined\n    };\n    server.listen(listen);\n  };\n  const protocol = options.protocol || (isHttps ? \"https\" : \"http\");\n  const requestListener = (req, res) => {\n    const keys = req.url.slice(prefix.length).split(\"@\");\n    req.socket.on(\"close\", () => {\n      setTimeout(() => {\n        for (const key of keys) {\n          const oldValue = activeModules.get(key) || 0;\n          activeModules.set(key, oldValue - 1);\n          if (oldValue === 1) {\n            logger.log(`${key} is no longer in use. Next compilation will skip this module.`);\n          }\n        }\n      }, 120000);\n    });\n    req.socket.setNoDelay(true);\n    res.writeHead(200, {\n      \"content-type\": \"text/event-stream\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"*\",\n      \"Access-Control-Allow-Headers\": \"*\"\n    });\n    res.write(\"\\n\");\n    let moduleActivated = false;\n    for (const key of keys) {\n      const oldValue = activeModules.get(key) || 0;\n      activeModules.set(key, oldValue + 1);\n      if (oldValue === 0) {\n        logger.log(`${key} is now in use and will be compiled.`);\n        moduleActivated = true;\n      }\n    }\n    if (moduleActivated && compiler.watching) compiler.watching.invalidate();\n  };\n  const server = /** @type {import(\"net\").Server} */createServer();\n  server.on(\"request\", requestListener);\n  let isClosing = false;\n  /** @type {Set<import(\"net\").Socket>} */\n  const sockets = new Set();\n  server.on(\"connection\", socket => {\n    sockets.add(socket);\n    socket.on(\"close\", () => {\n      sockets.delete(socket);\n    });\n    if (isClosing) socket.destroy();\n  });\n  server.on(\"clientError\", e => {\n    if (e.message !== \"Server is disposing\") logger.warn(e);\n  });\n  server.on(\"listening\", err => {\n    if (err) return callback(err);\n    const addr = server.address();\n    if (typeof addr === \"string\") throw new Error(\"addr must not be a string\");\n    const urlBase = addr.address === \"::\" || addr.address === \"0.0.0.0\" ? `${protocol}://localhost:${addr.port}` : addr.family === \"IPv6\" ? `${protocol}://[${addr.address}]:${addr.port}` : `${protocol}://${addr.address}:${addr.port}`;\n    logger.log(`Server-Sent-Events server for lazy compilation open at ${urlBase}.`);\n    callback(null, {\n      dispose(callback) {\n        isClosing = true;\n        // Removing the listener is a workaround for a memory leak in node.js\n        server.off(\"request\", requestListener);\n        server.close(err => {\n          callback(err);\n        });\n        for (const socket of sockets) {\n          socket.destroy(new Error(\"Server is disposing\"));\n        }\n      },\n      module(originalModule) {\n        const key = `${encodeURIComponent(originalModule.identifier().replace(/\\\\/g, \"/\").replace(/@/g, \"_\")).replace(/%(2F|3A|24|26|2B|2C|3B|3D|3A)/g, decodeURIComponent)}`;\n        const active = activeModules.get(key) > 0;\n        return {\n          client: `${options.client}?${encodeURIComponent(urlBase + prefix)}`,\n          data: key,\n          active\n        };\n      }\n    });\n  });\n  listen(server);\n};","map":{"version":3,"names":["module","exports","options","compiler","callback","logger","getInfrastructureLogger","activeModules","Map","prefix","isHttps","protocol","server","createServer","http","require","bind","listen","port","undefined","requestListener","req","res","keys","url","slice","length","split","socket","on","setTimeout","key","oldValue","get","set","log","setNoDelay","writeHead","write","moduleActivated","watching","invalidate","isClosing","sockets","Set","add","delete","destroy","e","message","warn","err","addr","address","Error","urlBase","family","dispose","off","close","originalModule","encodeURIComponent","identifier","replace","decodeURIComponent","active","client","data"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/hmr/lazyCompilationBackend.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"http\").ServerOptions} HttpServerOptions */\r\n/** @typedef {import(\"https\").ServerOptions} HttpsServerOptions */\r\n/** @typedef {import(\"../../declarations/WebpackOptions\").LazyCompilationDefaultBackendOptions} LazyCompilationDefaultBackendOptions */\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n\r\n/**\r\n * @callback BackendHandler\r\n * @param {Compiler} compiler compiler\r\n * @param {function((Error | null)=, any=): void} callback callback\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @param {Omit<LazyCompilationDefaultBackendOptions, \"client\"> & { client: NonNullable<LazyCompilationDefaultBackendOptions[\"client\"]>}} options additional options for the backend\r\n * @returns {BackendHandler} backend\r\n */\r\nmodule.exports = options => (compiler, callback) => {\r\n\tconst logger = compiler.getInfrastructureLogger(\"LazyCompilationBackend\");\r\n\tconst activeModules = new Map();\r\n\tconst prefix = \"/lazy-compilation-using-\";\r\n\r\n\tconst isHttps =\r\n\t\toptions.protocol === \"https\" ||\r\n\t\t(typeof options.server === \"object\" &&\r\n\t\t\t(\"key\" in options.server || \"pfx\" in options.server));\r\n\r\n\tconst createServer =\r\n\t\ttypeof options.server === \"function\"\r\n\t\t\t? options.server\r\n\t\t\t: (() => {\r\n\t\t\t\t\tconst http = isHttps ? require(\"https\") : require(\"http\");\r\n\t\t\t\t\treturn http.createServer.bind(http, options.server);\r\n\t\t\t  })();\r\n\tconst listen =\r\n\t\ttypeof options.listen === \"function\"\r\n\t\t\t? options.listen\r\n\t\t\t: server => {\r\n\t\t\t\t\tlet listen = options.listen;\r\n\t\t\t\t\tif (typeof listen === \"object\" && !(\"port\" in listen))\r\n\t\t\t\t\t\tlisten = { ...listen, port: undefined };\r\n\t\t\t\t\tserver.listen(listen);\r\n\t\t\t  };\r\n\r\n\tconst protocol = options.protocol || (isHttps ? \"https\" : \"http\");\r\n\r\n\tconst requestListener = (req, res) => {\r\n\t\tconst keys = req.url.slice(prefix.length).split(\"@\");\r\n\t\treq.socket.on(\"close\", () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tfor (const key of keys) {\r\n\t\t\t\t\tconst oldValue = activeModules.get(key) || 0;\r\n\t\t\t\t\tactiveModules.set(key, oldValue - 1);\r\n\t\t\t\t\tif (oldValue === 1) {\r\n\t\t\t\t\t\tlogger.log(\r\n\t\t\t\t\t\t\t`${key} is no longer in use. Next compilation will skip this module.`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, 120000);\r\n\t\t});\r\n\t\treq.socket.setNoDelay(true);\r\n\t\tres.writeHead(200, {\r\n\t\t\t\"content-type\": \"text/event-stream\",\r\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t\t\"Access-Control-Allow-Methods\": \"*\",\r\n\t\t\t\"Access-Control-Allow-Headers\": \"*\"\r\n\t\t});\r\n\t\tres.write(\"\\n\");\r\n\t\tlet moduleActivated = false;\r\n\t\tfor (const key of keys) {\r\n\t\t\tconst oldValue = activeModules.get(key) || 0;\r\n\t\t\tactiveModules.set(key, oldValue + 1);\r\n\t\t\tif (oldValue === 0) {\r\n\t\t\t\tlogger.log(`${key} is now in use and will be compiled.`);\r\n\t\t\t\tmoduleActivated = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (moduleActivated && compiler.watching) compiler.watching.invalidate();\r\n\t};\r\n\r\n\tconst server = /** @type {import(\"net\").Server} */ (createServer());\r\n\tserver.on(\"request\", requestListener);\r\n\r\n\tlet isClosing = false;\r\n\t/** @type {Set<import(\"net\").Socket>} */\r\n\tconst sockets = new Set();\r\n\tserver.on(\"connection\", socket => {\r\n\t\tsockets.add(socket);\r\n\t\tsocket.on(\"close\", () => {\r\n\t\t\tsockets.delete(socket);\r\n\t\t});\r\n\t\tif (isClosing) socket.destroy();\r\n\t});\r\n\tserver.on(\"clientError\", e => {\r\n\t\tif (e.message !== \"Server is disposing\") logger.warn(e);\r\n\t});\r\n\tserver.on(\"listening\", err => {\r\n\t\tif (err) return callback(err);\r\n\t\tconst addr = server.address();\r\n\t\tif (typeof addr === \"string\") throw new Error(\"addr must not be a string\");\r\n\t\tconst urlBase =\r\n\t\t\taddr.address === \"::\" || addr.address === \"0.0.0.0\"\r\n\t\t\t\t? `${protocol}://localhost:${addr.port}`\r\n\t\t\t\t: addr.family === \"IPv6\"\r\n\t\t\t\t? `${protocol}://[${addr.address}]:${addr.port}`\r\n\t\t\t\t: `${protocol}://${addr.address}:${addr.port}`;\r\n\t\tlogger.log(\r\n\t\t\t`Server-Sent-Events server for lazy compilation open at ${urlBase}.`\r\n\t\t);\r\n\t\tcallback(null, {\r\n\t\t\tdispose(callback) {\r\n\t\t\t\tisClosing = true;\r\n\t\t\t\t// Removing the listener is a workaround for a memory leak in node.js\r\n\t\t\t\tserver.off(\"request\", requestListener);\r\n\t\t\t\tserver.close(err => {\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t});\r\n\t\t\t\tfor (const socket of sockets) {\r\n\t\t\t\t\tsocket.destroy(new Error(\"Server is disposing\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmodule(originalModule) {\r\n\t\t\t\tconst key = `${encodeURIComponent(\r\n\t\t\t\t\toriginalModule.identifier().replace(/\\\\/g, \"/\").replace(/@/g, \"_\")\r\n\t\t\t\t).replace(/%(2F|3A|24|26|2B|2C|3B|3D|3A)/g, decodeURIComponent)}`;\r\n\t\t\t\tconst active = activeModules.get(key) > 0;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tclient: `${options.client}?${encodeURIComponent(urlBase + prefix)}`,\r\n\t\t\t\t\tdata: key,\r\n\t\t\t\t\tactive\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tlisten(server);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}