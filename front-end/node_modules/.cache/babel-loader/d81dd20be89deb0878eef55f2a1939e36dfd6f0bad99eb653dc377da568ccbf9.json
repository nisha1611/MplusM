{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadSharedConfigFiles = void 0;\nconst getConfigFilepath_1 = require(\"./getConfigFilepath\");\nconst getCredentialsFilepath_1 = require(\"./getCredentialsFilepath\");\nconst getProfileData_1 = require(\"./getProfileData\");\nconst parseIni_1 = require(\"./parseIni\");\nconst slurpFile_1 = require(\"./slurpFile\");\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = async function () {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    filepath = (0, getCredentialsFilepath_1.getCredentialsFilepath)(),\n    configFilepath = (0, getConfigFilepath_1.getConfigFilepath)()\n  } = init;\n  const parsedFiles = await Promise.all([(0, slurpFile_1.slurpFile)(configFilepath).then(parseIni_1.parseIni).then(getProfileData_1.getProfileData).catch(swallowError), (0, slurpFile_1.slurpFile)(filepath).then(parseIni_1.parseIni).catch(swallowError)]);\n  return {\n    configFile: parsedFiles[0],\n    credentialsFile: parsedFiles[1]\n  };\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;","map":{"version":3,"names":["Object","defineProperty","exports","value","loadSharedConfigFiles","getConfigFilepath_1","require","getCredentialsFilepath_1","getProfileData_1","parseIni_1","slurpFile_1","swallowError","init","filepath","getCredentialsFilepath","configFilepath","getConfigFilepath","parsedFiles","Promise","all","slurpFile","then","parseIni","getProfileData","catch","configFile","credentialsFile"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/loadSharedConfigFiles.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.loadSharedConfigFiles = void 0;\r\nconst getConfigFilepath_1 = require(\"./getConfigFilepath\");\r\nconst getCredentialsFilepath_1 = require(\"./getCredentialsFilepath\");\r\nconst getProfileData_1 = require(\"./getProfileData\");\r\nconst parseIni_1 = require(\"./parseIni\");\r\nconst slurpFile_1 = require(\"./slurpFile\");\r\nconst swallowError = () => ({});\r\nconst loadSharedConfigFiles = async (init = {}) => {\r\n    const { filepath = (0, getCredentialsFilepath_1.getCredentialsFilepath)(), configFilepath = (0, getConfigFilepath_1.getConfigFilepath)() } = init;\r\n    const parsedFiles = await Promise.all([\r\n        (0, slurpFile_1.slurpFile)(configFilepath).then(parseIni_1.parseIni).then(getProfileData_1.getProfileData).catch(swallowError),\r\n        (0, slurpFile_1.slurpFile)(filepath).then(parseIni_1.parseIni).catch(swallowError),\r\n    ]);\r\n    return {\r\n        configFile: parsedFiles[0],\r\n        credentialsFile: parsedFiles[1],\r\n    };\r\n};\r\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AACtC,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACpE,MAAME,gBAAgB,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACpD,MAAMG,UAAU,GAAGH,OAAO,CAAC,YAAY,CAAC;AACxC,MAAMI,WAAW,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMK,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC;AAC/B,MAAMP,qBAAqB,GAAG,kBAAqB;EAAA,IAAdQ,IAAI,uEAAG,CAAC,CAAC;EAC1C,MAAM;IAAEC,QAAQ,GAAG,CAAC,CAAC,EAAEN,wBAAwB,CAACO,sBAAsB,GAAG;IAAEC,cAAc,GAAG,CAAC,CAAC,EAAEV,mBAAmB,CAACW,iBAAiB;EAAI,CAAC,GAAGJ,IAAI;EACjJ,MAAMK,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClC,CAAC,CAAC,EAAET,WAAW,CAACU,SAAS,EAAEL,cAAc,CAAC,CAACM,IAAI,CAACZ,UAAU,CAACa,QAAQ,CAAC,CAACD,IAAI,CAACb,gBAAgB,CAACe,cAAc,CAAC,CAACC,KAAK,CAACb,YAAY,CAAC,EAC9H,CAAC,CAAC,EAAED,WAAW,CAACU,SAAS,EAAEP,QAAQ,CAAC,CAACQ,IAAI,CAACZ,UAAU,CAACa,QAAQ,CAAC,CAACE,KAAK,CAACb,YAAY,CAAC,CACrF,CAAC;EACF,OAAO;IACHc,UAAU,EAAER,WAAW,CAAC,CAAC,CAAC;IAC1BS,eAAe,EAAET,WAAW,CAAC,CAAC;EAClC,CAAC;AACL,CAAC;AACDf,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}