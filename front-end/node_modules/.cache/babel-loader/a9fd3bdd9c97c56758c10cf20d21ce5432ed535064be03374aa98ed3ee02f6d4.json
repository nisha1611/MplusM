{"ast":null,"code":"export var SelectorType;\n(function (SelectorType) {\n  SelectorType[\"ENV\"] = \"env\";\n  SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n  if (!(key in obj)) return undefined;\n  if (obj[key] === \"true\") return true;\n  if (obj[key] === \"false\") return false;\n  throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};","map":{"version":3,"names":["SelectorType","booleanSelector","obj","key","type","undefined","Error"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-config-provider/dist-es/booleanSelector.js"],"sourcesContent":["export var SelectorType;\r\n(function (SelectorType) {\r\n    SelectorType[\"ENV\"] = \"env\";\r\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\r\n})(SelectorType || (SelectorType = {}));\r\nexport const booleanSelector = (obj, key, type) => {\r\n    if (!(key in obj))\r\n        return undefined;\r\n    if (obj[key] === \"true\")\r\n        return true;\r\n    if (obj[key] === \"false\")\r\n        return false;\r\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\r\n};\r\n"],"mappings":"AAAA,OAAO,IAAIA,YAAY;AACvB,CAAC,UAAUA,YAAY,EAAE;EACrBA,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK;EAC3BA,YAAY,CAAC,QAAQ,CAAC,GAAG,qBAAqB;AAClD,CAAC,EAAEA,YAAY,KAAKA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC/C,IAAI,EAAED,GAAG,IAAID,GAAG,CAAC,EACb,OAAOG,SAAS;EACpB,IAAIH,GAAG,CAACC,GAAG,CAAC,KAAK,MAAM,EACnB,OAAO,IAAI;EACf,IAAID,GAAG,CAACC,GAAG,CAAC,KAAK,OAAO,EACpB,OAAO,KAAK;EAChB,MAAM,IAAIG,KAAK,CAAE,eAAcF,IAAK,KAAID,GAAI,sCAAqCD,GAAG,CAACC,GAAG,CAAE,GAAE,CAAC;AACjG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}