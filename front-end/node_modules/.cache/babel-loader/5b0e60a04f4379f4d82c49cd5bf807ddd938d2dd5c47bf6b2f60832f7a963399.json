{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst {\n  filterRuntime\n} = require(\"../util/runtime\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nclass PureExpressionDependency extends NullDependency {\n  /**\r\n   * @param {[number, number]} range the source range\r\n   */\n  constructor(range) {\n    super();\n    this.range = range;\n    /** @type {Set<string> | false} */\n    this.usedByExports = false;\n    this._hashUpdate = undefined;\n  }\n\n  /**\r\n   * Update the hash\r\n   * @param {Hash} hash hash to be updated\r\n   * @param {UpdateHashContext} context context\r\n   * @returns {void}\r\n   */\n  updateHash(hash, context) {\n    if (this._hashUpdate === undefined) {\n      this._hashUpdate = this.range + \"\";\n    }\n    hash.update(this._hashUpdate);\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\r\n   */\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    write(this.usedByExports);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.range = read();\n    this.usedByExports = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(PureExpressionDependency, \"webpack/lib/dependencies/PureExpressionDependency\");\nPureExpressionDependency.Template = class PureExpressionDependencyTemplate extends NullDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, _ref) {\n    let {\n      chunkGraph,\n      moduleGraph,\n      runtime,\n      runtimeTemplate,\n      runtimeRequirements\n    } = _ref;\n    const dep = /** @type {PureExpressionDependency} */dependency;\n    const usedByExports = dep.usedByExports;\n    if (usedByExports !== false) {\n      const selfModule = moduleGraph.getParentModule(dep);\n      const exportsInfo = moduleGraph.getExportsInfo(selfModule);\n      const runtimeCondition = filterRuntime(runtime, runtime => {\n        for (const exportName of usedByExports) {\n          if (exportsInfo.getUsed(exportName, runtime) !== UsageState.Unused) {\n            return true;\n          }\n        }\n        return false;\n      });\n      if (runtimeCondition === true) return;\n      if (runtimeCondition !== false) {\n        const condition = runtimeTemplate.runtimeConditionExpression({\n          chunkGraph,\n          runtime,\n          runtimeCondition,\n          runtimeRequirements\n        });\n        source.insert(dep.range[0], `(/* runtime-dependent pure expression or super */ ${condition} ? (`);\n        source.insert(dep.range[1], \") : null)\");\n        return;\n      }\n    }\n    source.insert(dep.range[0], `(/* unused pure expression or super */ null && (`);\n    source.insert(dep.range[1], \"))\");\n  }\n};\nmodule.exports = PureExpressionDependency;","map":{"version":3,"names":["UsageState","require","makeSerializable","filterRuntime","NullDependency","PureExpressionDependency","constructor","range","usedByExports","_hashUpdate","undefined","updateHash","hash","context","update","getModuleEvaluationSideEffectsState","moduleGraph","serialize","write","deserialize","read","Template","PureExpressionDependencyTemplate","apply","dependency","source","chunkGraph","runtime","runtimeTemplate","runtimeRequirements","dep","selfModule","getParentModule","exportsInfo","getExportsInfo","runtimeCondition","exportName","getUsed","Unused","condition","runtimeConditionExpression","insert","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/PureExpressionDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { UsageState } = require(\"../ExportsInfo\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst { filterRuntime } = require(\"../util/runtime\");\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"../Dependency\")} Dependency */\r\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\r\n/** @typedef {import(\"../util/Hash\")} Hash */\r\n\r\nclass PureExpressionDependency extends NullDependency {\r\n\t/**\r\n\t * @param {[number, number]} range the source range\r\n\t */\r\n\tconstructor(range) {\r\n\t\tsuper();\r\n\t\tthis.range = range;\r\n\t\t/** @type {Set<string> | false} */\r\n\t\tthis.usedByExports = false;\r\n\t\tthis._hashUpdate = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Update the hash\r\n\t * @param {Hash} hash hash to be updated\r\n\t * @param {UpdateHashContext} context context\r\n\t * @returns {void}\r\n\t */\r\n\tupdateHash(hash, context) {\r\n\t\tif (this._hashUpdate === undefined) {\r\n\t\t\tthis._hashUpdate = this.range + \"\";\r\n\t\t}\r\n\t\thash.update(this._hashUpdate);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\r\n\t */\r\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.range);\r\n\t\twrite(this.usedByExports);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.range = read();\r\n\t\tthis.usedByExports = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tPureExpressionDependency,\r\n\t\"webpack/lib/dependencies/PureExpressionDependency\"\r\n);\r\n\r\nPureExpressionDependency.Template = class PureExpressionDependencyTemplate extends (\r\n\tNullDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(\r\n\t\tdependency,\r\n\t\tsource,\r\n\t\t{ chunkGraph, moduleGraph, runtime, runtimeTemplate, runtimeRequirements }\r\n\t) {\r\n\t\tconst dep = /** @type {PureExpressionDependency} */ (dependency);\r\n\r\n\t\tconst usedByExports = dep.usedByExports;\r\n\t\tif (usedByExports !== false) {\r\n\t\t\tconst selfModule = moduleGraph.getParentModule(dep);\r\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(selfModule);\r\n\t\t\tconst runtimeCondition = filterRuntime(runtime, runtime => {\r\n\t\t\t\tfor (const exportName of usedByExports) {\r\n\t\t\t\t\tif (exportsInfo.getUsed(exportName, runtime) !== UsageState.Unused) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\tif (runtimeCondition === true) return;\r\n\t\t\tif (runtimeCondition !== false) {\r\n\t\t\t\tconst condition = runtimeTemplate.runtimeConditionExpression({\r\n\t\t\t\t\tchunkGraph,\r\n\t\t\t\t\truntime,\r\n\t\t\t\t\truntimeCondition,\r\n\t\t\t\t\truntimeRequirements\r\n\t\t\t\t});\r\n\t\t\t\tsource.insert(\r\n\t\t\t\t\tdep.range[0],\r\n\t\t\t\t\t`(/* runtime-dependent pure expression or super */ ${condition} ? (`\r\n\t\t\t\t);\r\n\t\t\t\tsource.insert(dep.range[1], \") : null)\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsource.insert(\r\n\t\t\tdep.range[0],\r\n\t\t\t`(/* unused pure expression or super */ null && (`\r\n\t\t);\r\n\t\tsource.insert(dep.range[1], \"))\");\r\n\t}\r\n};\r\n\r\nmodule.exports = PureExpressionDependency;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}