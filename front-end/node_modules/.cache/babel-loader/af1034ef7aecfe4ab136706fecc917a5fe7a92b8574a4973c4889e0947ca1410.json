{"ast":null,"code":"/*!\r\n * Module dependencies.\r\n */\n\n'use strict';\n\nconst NodeJSDocument = require('./document');\nconst EventEmitter = require('events').EventEmitter;\nconst MongooseError = require('./error/index');\nconst Schema = require('./schema');\nconst ObjectId = require('./types/objectid');\nconst ValidationError = MongooseError.ValidationError;\nconst applyHooks = require('./helpers/model/applyHooks');\nconst isObject = require('./helpers/isObject');\n\n/**\r\n * Document constructor.\r\n *\r\n * @param {Object} obj the values to set\r\n * @param {Object} schema\r\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\r\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\r\n * @inherits NodeJS EventEmitter https://nodejs.org/api/events.html#class-eventemitter\r\n * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose.\r\n * @event `save`: Emitted when the document is successfully saved\r\n * @api private\r\n */\n\nfunction Document(obj, schema, fields, skipId, skipInit) {\n  if (!(this instanceof Document)) {\n    return new Document(obj, schema, fields, skipId, skipInit);\n  }\n  if (isObject(schema) && !schema.instanceOfSchema) {\n    schema = new Schema(schema);\n  }\n\n  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\n  schema = this.schema || schema;\n\n  // Generate ObjectId if it is missing, but it requires a scheme\n  if (!this.schema && schema.options._id) {\n    obj = obj || {};\n    if (obj._id === undefined) {\n      obj._id = new ObjectId();\n    }\n  }\n  if (!schema) {\n    throw new MongooseError.MissingSchemaError();\n  }\n  this.$__setSchema(schema);\n  NodeJSDocument.call(this, obj, fields, skipId, skipInit);\n  applyHooks(this, schema, {\n    decorateDoc: true\n  });\n\n  // apply methods\n  for (const m in schema.methods) {\n    this[m] = schema.methods[m];\n  }\n  // apply statics\n  for (const s in schema.statics) {\n    this[s] = schema.statics[s];\n  }\n}\n\n/*!\r\n * Inherit from the NodeJS document\r\n */\n\nDocument.prototype = Object.create(NodeJSDocument.prototype);\nDocument.prototype.constructor = Document;\n\n/*!\r\n * ignore\r\n */\n\nDocument.events = new EventEmitter();\n\n/*!\r\n * Browser doc exposes the event emitter API\r\n */\n\nDocument.$emitter = new EventEmitter();\n['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners', 'removeAllListeners', 'addListener'].forEach(function (emitterFn) {\n  Document[emitterFn] = function () {\n    return Document.$emitter[emitterFn].apply(Document.$emitter, arguments);\n  };\n});\n\n/*!\r\n * Module exports.\r\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;","map":{"version":3,"names":["NodeJSDocument","require","EventEmitter","MongooseError","Schema","ObjectId","ValidationError","applyHooks","isObject","Document","obj","schema","fields","skipId","skipInit","instanceOfSchema","options","_id","undefined","MissingSchemaError","$__setSchema","call","decorateDoc","m","methods","s","statics","prototype","Object","create","constructor","events","$emitter","forEach","emitterFn","apply","arguments","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/browserDocument.js"],"sourcesContent":["/*!\r\n * Module dependencies.\r\n */\r\n\r\n'use strict';\r\n\r\nconst NodeJSDocument = require('./document');\r\nconst EventEmitter = require('events').EventEmitter;\r\nconst MongooseError = require('./error/index');\r\nconst Schema = require('./schema');\r\nconst ObjectId = require('./types/objectid');\r\nconst ValidationError = MongooseError.ValidationError;\r\nconst applyHooks = require('./helpers/model/applyHooks');\r\nconst isObject = require('./helpers/isObject');\r\n\r\n/**\r\n * Document constructor.\r\n *\r\n * @param {Object} obj the values to set\r\n * @param {Object} schema\r\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\r\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\r\n * @inherits NodeJS EventEmitter https://nodejs.org/api/events.html#class-eventemitter\r\n * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose.\r\n * @event `save`: Emitted when the document is successfully saved\r\n * @api private\r\n */\r\n\r\nfunction Document(obj, schema, fields, skipId, skipInit) {\r\n  if (!(this instanceof Document)) {\r\n    return new Document(obj, schema, fields, skipId, skipInit);\r\n  }\r\n\r\n  if (isObject(schema) && !schema.instanceOfSchema) {\r\n    schema = new Schema(schema);\r\n  }\r\n\r\n  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\r\n  schema = this.schema || schema;\r\n\r\n  // Generate ObjectId if it is missing, but it requires a scheme\r\n  if (!this.schema && schema.options._id) {\r\n    obj = obj || {};\r\n\r\n    if (obj._id === undefined) {\r\n      obj._id = new ObjectId();\r\n    }\r\n  }\r\n\r\n  if (!schema) {\r\n    throw new MongooseError.MissingSchemaError();\r\n  }\r\n\r\n  this.$__setSchema(schema);\r\n\r\n  NodeJSDocument.call(this, obj, fields, skipId, skipInit);\r\n\r\n  applyHooks(this, schema, { decorateDoc: true });\r\n\r\n  // apply methods\r\n  for (const m in schema.methods) {\r\n    this[m] = schema.methods[m];\r\n  }\r\n  // apply statics\r\n  for (const s in schema.statics) {\r\n    this[s] = schema.statics[s];\r\n  }\r\n}\r\n\r\n/*!\r\n * Inherit from the NodeJS document\r\n */\r\n\r\nDocument.prototype = Object.create(NodeJSDocument.prototype);\r\nDocument.prototype.constructor = Document;\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nDocument.events = new EventEmitter();\r\n\r\n/*!\r\n * Browser doc exposes the event emitter API\r\n */\r\n\r\nDocument.$emitter = new EventEmitter();\r\n\r\n['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',\r\n  'removeAllListeners', 'addListener'].forEach(function(emitterFn) {\r\n  Document[emitterFn] = function() {\r\n    return Document.$emitter[emitterFn].apply(Document.$emitter, arguments);\r\n  };\r\n});\r\n\r\n/*!\r\n * Module exports.\r\n */\r\n\r\nDocument.ValidationError = ValidationError;\r\nmodule.exports = exports = Document;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}