{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Module dependencies.\r\n */\nvar tty = require('tty');\nvar util = require('util');\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\r\n * Colors.\r\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n    useColors = this.useColors;\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n  return new Date().toISOString() + ' ';\n}\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to stderr.\r\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).split('\\n').map(function (str) {\n    return str.trim();\n  }).join(' ');\n};\n/**\r\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\r\n */\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};","map":{"version":3,"names":["tty","require","util","exports","init","log","formatArgs","save","load","useColors","colors","supportsColor","stderr","level","error","inspectOpts","Object","keys","process","env","filter","key","test","reduce","obj","prop","substring","toLowerCase","replace","_","k","toUpperCase","val","Number","Boolean","isatty","fd","args","name","namespace","c","color","colorCode","prefix","concat","split","join","push","module","humanize","diff","getDate","hideDate","Date","toISOString","write","format","apply","arguments","namespaces","DEBUG","debug","i","length","formatters","o","v","inspect","map","str","trim","O"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/nodemon/node_modules/debug/src/node.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\nvar tty = require('tty');\r\n\r\nvar util = require('util');\r\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n */\r\n\r\n\r\nexports.init = init;\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [6, 2, 3, 4, 5, 1];\r\n\r\ntry {\r\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\r\n  // eslint-disable-next-line import/no-extraneous-dependencies\r\n  var supportsColor = require('supports-color');\r\n\r\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\r\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\r\n  }\r\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\r\n\r\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\r\n\r\n\r\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\r\n  return /^debug_/i.test(key);\r\n}).reduce(function (obj, key) {\r\n  // Camel-case\r\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\r\n    return k.toUpperCase();\r\n  }); // Coerce string value into JS value\r\n\r\n  var val = process.env[key];\r\n\r\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\r\n    val = true;\r\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\r\n    val = false;\r\n  } else if (val === 'null') {\r\n    val = null;\r\n  } else {\r\n    val = Number(val);\r\n  }\r\n\r\n  obj[prop] = val;\r\n  return obj;\r\n}, {});\r\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\r\n\r\nfunction useColors() {\r\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\r\n}\r\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\n\r\nfunction formatArgs(args) {\r\n  var name = this.namespace,\r\n      useColors = this.useColors;\r\n\r\n  if (useColors) {\r\n    var c = this.color;\r\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\r\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\r\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\r\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\r\n  } else {\r\n    args[0] = getDate() + name + ' ' + args[0];\r\n  }\r\n}\r\n\r\nfunction getDate() {\r\n  if (exports.inspectOpts.hideDate) {\r\n    return '';\r\n  }\r\n\r\n  return new Date().toISOString() + ' ';\r\n}\r\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to stderr.\r\n */\r\n\r\n\r\nfunction log() {\r\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\r\n}\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\n\r\nfunction save(namespaces) {\r\n  if (namespaces) {\r\n    process.env.DEBUG = namespaces;\r\n  } else {\r\n    // If you set a process.env field to null or undefined, it gets cast to the\r\n    // string 'null' or 'undefined'. Just delete instead.\r\n    delete process.env.DEBUG;\r\n  }\r\n}\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\n\r\nfunction load() {\r\n  return process.env.DEBUG;\r\n}\r\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\r\n\r\n\r\nfunction init(debug) {\r\n  debug.inspectOpts = {};\r\n  var keys = Object.keys(exports.inspectOpts);\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n  }\r\n}\r\n\r\nmodule.exports = require('./common')(exports);\r\nvar formatters = module.exports.formatters;\r\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\r\n\r\nformatters.o = function (v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts)\r\n    .split('\\n')\r\n    .map(function (str) { return str.trim(); })\r\n    .join(' ');\r\n};\r\n/**\r\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\r\n */\r\n\r\n\r\nformatters.O = function (v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts);\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}