{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\nconst HarmonyDetectionParserPlugin = require(\"./HarmonyDetectionParserPlugin\");\nconst HarmonyExportDependencyParserPlugin = require(\"./HarmonyExportDependencyParserPlugin\");\nconst HarmonyImportDependencyParserPlugin = require(\"./HarmonyImportDependencyParserPlugin\");\nconst HarmonyTopLevelThisParserPlugin = require(\"./HarmonyTopLevelThisParserPlugin\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass HarmonyModulesPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"HarmonyModulesPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyTemplates.set(HarmonyCompatibilityDependency, new HarmonyCompatibilityDependency.Template());\n      compilation.dependencyFactories.set(HarmonyImportSideEffectDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyImportSideEffectDependency, new HarmonyImportSideEffectDependency.Template());\n      compilation.dependencyFactories.set(HarmonyImportSpecifierDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyImportSpecifierDependency, new HarmonyImportSpecifierDependency.Template());\n      compilation.dependencyFactories.set(HarmonyEvaluatedImportSpecifierDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyEvaluatedImportSpecifierDependency, new HarmonyEvaluatedImportSpecifierDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyExportHeaderDependency, new HarmonyExportHeaderDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyExportExpressionDependency, new HarmonyExportExpressionDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyExportSpecifierDependency, new HarmonyExportSpecifierDependency.Template());\n      compilation.dependencyFactories.set(HarmonyExportImportedSpecifierDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyExportImportedSpecifierDependency, new HarmonyExportImportedSpecifierDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyAcceptDependency, new HarmonyAcceptDependency.Template());\n      compilation.dependencyFactories.set(HarmonyAcceptImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyAcceptImportDependency, new HarmonyAcceptImportDependency.Template());\n      const handler = (parser, parserOptions) => {\n        // TODO webpack 6: rename harmony to esm or module\n        if (parserOptions.harmony !== undefined && !parserOptions.harmony) return;\n        new HarmonyDetectionParserPlugin(this.options).apply(parser);\n        new HarmonyImportDependencyParserPlugin(parserOptions).apply(parser);\n        new HarmonyExportDependencyParserPlugin(parserOptions).apply(parser);\n        new HarmonyTopLevelThisParserPlugin().apply(parser);\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"HarmonyModulesPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"HarmonyModulesPlugin\", handler);\n    });\n  }\n}\nmodule.exports = HarmonyModulesPlugin;","map":{"version":3,"names":["HarmonyAcceptDependency","require","HarmonyAcceptImportDependency","HarmonyCompatibilityDependency","HarmonyEvaluatedImportSpecifierDependency","HarmonyExportExpressionDependency","HarmonyExportHeaderDependency","HarmonyExportImportedSpecifierDependency","HarmonyExportSpecifierDependency","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","HarmonyDetectionParserPlugin","HarmonyExportDependencyParserPlugin","HarmonyImportDependencyParserPlugin","HarmonyTopLevelThisParserPlugin","HarmonyModulesPlugin","constructor","options","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyTemplates","set","Template","dependencyFactories","handler","parser","parserOptions","harmony","undefined","for","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/HarmonyModulesPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\r\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\r\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\r\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\r\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\r\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\r\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\r\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\r\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\r\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\r\n\r\nconst HarmonyDetectionParserPlugin = require(\"./HarmonyDetectionParserPlugin\");\r\nconst HarmonyExportDependencyParserPlugin = require(\"./HarmonyExportDependencyParserPlugin\");\r\nconst HarmonyImportDependencyParserPlugin = require(\"./HarmonyImportDependencyParserPlugin\");\r\nconst HarmonyTopLevelThisParserPlugin = require(\"./HarmonyTopLevelThisParserPlugin\");\r\n\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n\r\nclass HarmonyModulesPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compilation.tap(\r\n\t\t\t\"HarmonyModulesPlugin\",\r\n\t\t\t(compilation, { normalModuleFactory }) => {\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyCompatibilityDependency,\r\n\t\t\t\t\tnew HarmonyCompatibilityDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tHarmonyImportSideEffectDependency,\r\n\t\t\t\t\tnormalModuleFactory\r\n\t\t\t\t);\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyImportSideEffectDependency,\r\n\t\t\t\t\tnew HarmonyImportSideEffectDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tHarmonyImportSpecifierDependency,\r\n\t\t\t\t\tnormalModuleFactory\r\n\t\t\t\t);\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyImportSpecifierDependency,\r\n\t\t\t\t\tnew HarmonyImportSpecifierDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tHarmonyEvaluatedImportSpecifierDependency,\r\n\t\t\t\t\tnormalModuleFactory\r\n\t\t\t\t);\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyEvaluatedImportSpecifierDependency,\r\n\t\t\t\t\tnew HarmonyEvaluatedImportSpecifierDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyExportHeaderDependency,\r\n\t\t\t\t\tnew HarmonyExportHeaderDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyExportExpressionDependency,\r\n\t\t\t\t\tnew HarmonyExportExpressionDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyExportSpecifierDependency,\r\n\t\t\t\t\tnew HarmonyExportSpecifierDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tHarmonyExportImportedSpecifierDependency,\r\n\t\t\t\t\tnormalModuleFactory\r\n\t\t\t\t);\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyExportImportedSpecifierDependency,\r\n\t\t\t\t\tnew HarmonyExportImportedSpecifierDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyAcceptDependency,\r\n\t\t\t\t\tnew HarmonyAcceptDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tHarmonyAcceptImportDependency,\r\n\t\t\t\t\tnormalModuleFactory\r\n\t\t\t\t);\r\n\t\t\t\tcompilation.dependencyTemplates.set(\r\n\t\t\t\t\tHarmonyAcceptImportDependency,\r\n\t\t\t\t\tnew HarmonyAcceptImportDependency.Template()\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst handler = (parser, parserOptions) => {\r\n\t\t\t\t\t// TODO webpack 6: rename harmony to esm or module\r\n\t\t\t\t\tif (parserOptions.harmony !== undefined && !parserOptions.harmony)\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tnew HarmonyDetectionParserPlugin(this.options).apply(parser);\r\n\t\t\t\t\tnew HarmonyImportDependencyParserPlugin(parserOptions).apply(parser);\r\n\t\t\t\t\tnew HarmonyExportDependencyParserPlugin(parserOptions).apply(parser);\r\n\t\t\t\t\tnew HarmonyTopLevelThisParserPlugin().apply(parser);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tnormalModuleFactory.hooks.parser\r\n\t\t\t\t\t.for(\"javascript/auto\")\r\n\t\t\t\t\t.tap(\"HarmonyModulesPlugin\", handler);\r\n\t\t\t\tnormalModuleFactory.hooks.parser\r\n\t\t\t\t\t.for(\"javascript/esm\")\r\n\t\t\t\t\t.tap(\"HarmonyModulesPlugin\", handler);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\nmodule.exports = HarmonyModulesPlugin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}