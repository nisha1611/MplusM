{"ast":null,"code":"'use strict';\n\nmodule.exports = getVirtual;\n\n/*!\r\n * ignore\r\n */\n\nfunction getVirtual(schema, name) {\n  if (schema.virtuals[name]) {\n    return {\n      virtual: schema.virtuals[name],\n      path: void 0\n    };\n  }\n  const parts = name.split('.');\n  let cur = '';\n  let nestedSchemaPath = '';\n  for (let i = 0; i < parts.length; ++i) {\n    cur += (cur.length > 0 ? '.' : '') + parts[i];\n    if (schema.virtuals[cur]) {\n      if (i === parts.length - 1) {\n        return {\n          virtual: schema.virtuals[cur],\n          path: nestedSchemaPath\n        };\n      }\n      continue;\n    }\n    if (schema.nested[cur]) {\n      continue;\n    }\n    if (schema.paths[cur] && schema.paths[cur].schema) {\n      schema = schema.paths[cur].schema;\n      const rest = parts.slice(i + 1).join('.');\n      if (schema.virtuals[rest]) {\n        if (i === parts.length - 2) {\n          return {\n            virtual: schema.virtuals[rest],\n            nestedSchemaPath: [nestedSchemaPath, cur].filter(v => !!v).join('.')\n          };\n        }\n        continue;\n      }\n      if (i + 1 < parts.length && schema.discriminators) {\n        for (const key of Object.keys(schema.discriminators)) {\n          const res = getVirtual(schema.discriminators[key], rest);\n          if (res != null) {\n            const _path = [nestedSchemaPath, cur, res.nestedSchemaPath].filter(v => !!v).join('.');\n            return {\n              virtual: res.virtual,\n              nestedSchemaPath: _path\n            };\n          }\n        }\n      }\n      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;\n      cur = '';\n      continue;\n    }\n    if (schema.discriminators) {\n      for (const discriminatorKey of Object.keys(schema.discriminators)) {\n        const virtualFromDiscriminator = getVirtual(schema.discriminators[discriminatorKey], name);\n        if (virtualFromDiscriminator) return virtualFromDiscriminator;\n      }\n    }\n    return null;\n  }\n}","map":{"version":3,"names":["module","exports","getVirtual","schema","name","virtuals","virtual","path","parts","split","cur","nestedSchemaPath","i","length","nested","paths","rest","slice","join","filter","v","discriminators","key","Object","keys","res","_path","discriminatorKey","virtualFromDiscriminator"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/populate/getVirtual.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = getVirtual;\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nfunction getVirtual(schema, name) {\r\n  if (schema.virtuals[name]) {\r\n    return { virtual: schema.virtuals[name], path: void 0 };\r\n  }\r\n\r\n  const parts = name.split('.');\r\n  let cur = '';\r\n  let nestedSchemaPath = '';\r\n  for (let i = 0; i < parts.length; ++i) {\r\n    cur += (cur.length > 0 ? '.' : '') + parts[i];\r\n    if (schema.virtuals[cur]) {\r\n      if (i === parts.length - 1) {\r\n        return { virtual: schema.virtuals[cur], path: nestedSchemaPath };\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (schema.nested[cur]) {\r\n      continue;\r\n    }\r\n\r\n    if (schema.paths[cur] && schema.paths[cur].schema) {\r\n      schema = schema.paths[cur].schema;\r\n      const rest = parts.slice(i + 1).join('.');\r\n\r\n      if (schema.virtuals[rest]) {\r\n        if (i === parts.length - 2) {\r\n          return {\r\n            virtual: schema.virtuals[rest],\r\n            nestedSchemaPath: [nestedSchemaPath, cur].filter(v => !!v).join('.')\r\n          };\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (i + 1 < parts.length && schema.discriminators) {\r\n        for (const key of Object.keys(schema.discriminators)) {\r\n          const res = getVirtual(schema.discriminators[key], rest);\r\n          if (res != null) {\r\n            const _path = [nestedSchemaPath, cur, res.nestedSchemaPath].\r\n              filter(v => !!v).join('.');\r\n            return {\r\n              virtual: res.virtual,\r\n              nestedSchemaPath: _path\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;\r\n      cur = '';\r\n      continue;\r\n    }\r\n\r\n    if (schema.discriminators) {\r\n      for (const discriminatorKey of Object.keys(schema.discriminators)) {\r\n        const virtualFromDiscriminator = getVirtual(schema.discriminators[discriminatorKey], name);\r\n        if (virtualFromDiscriminator) return virtualFromDiscriminator;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,UAAU;;AAE3B;AACA;AACA;;AAEA,SAASA,UAAU,CAACC,MAAM,EAAEC,IAAI,EAAE;EAChC,IAAID,MAAM,CAACE,QAAQ,CAACD,IAAI,CAAC,EAAE;IACzB,OAAO;MAAEE,OAAO,EAAEH,MAAM,CAACE,QAAQ,CAACD,IAAI,CAAC;MAAEG,IAAI,EAAE,KAAK;IAAE,CAAC;EACzD;EAEA,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC;EAC7B,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,gBAAgB,GAAG,EAAE;EACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAE,EAAED,CAAC,EAAE;IACrCF,GAAG,IAAI,CAACA,GAAG,CAACG,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIL,KAAK,CAACI,CAAC,CAAC;IAC7C,IAAIT,MAAM,CAACE,QAAQ,CAACK,GAAG,CAAC,EAAE;MACxB,IAAIE,CAAC,KAAKJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;QAC1B,OAAO;UAAEP,OAAO,EAAEH,MAAM,CAACE,QAAQ,CAACK,GAAG,CAAC;UAAEH,IAAI,EAAEI;QAAiB,CAAC;MAClE;MACA;IACF;IAEA,IAAIR,MAAM,CAACW,MAAM,CAACJ,GAAG,CAAC,EAAE;MACtB;IACF;IAEA,IAAIP,MAAM,CAACY,KAAK,CAACL,GAAG,CAAC,IAAIP,MAAM,CAACY,KAAK,CAACL,GAAG,CAAC,CAACP,MAAM,EAAE;MACjDA,MAAM,GAAGA,MAAM,CAACY,KAAK,CAACL,GAAG,CAAC,CAACP,MAAM;MACjC,MAAMa,IAAI,GAAGR,KAAK,CAACS,KAAK,CAACL,CAAC,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;MAEzC,IAAIf,MAAM,CAACE,QAAQ,CAACW,IAAI,CAAC,EAAE;QACzB,IAAIJ,CAAC,KAAKJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;UAC1B,OAAO;YACLP,OAAO,EAAEH,MAAM,CAACE,QAAQ,CAACW,IAAI,CAAC;YAC9BL,gBAAgB,EAAE,CAACA,gBAAgB,EAAED,GAAG,CAAC,CAACS,MAAM,CAACC,CAAC,IAAI,CAAC,CAACA,CAAC,CAAC,CAACF,IAAI,CAAC,GAAG;UACrE,CAAC;QACH;QACA;MACF;MAEA,IAAIN,CAAC,GAAG,CAAC,GAAGJ,KAAK,CAACK,MAAM,IAAIV,MAAM,CAACkB,cAAc,EAAE;QACjD,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACrB,MAAM,CAACkB,cAAc,CAAC,EAAE;UACpD,MAAMI,GAAG,GAAGvB,UAAU,CAACC,MAAM,CAACkB,cAAc,CAACC,GAAG,CAAC,EAAEN,IAAI,CAAC;UACxD,IAAIS,GAAG,IAAI,IAAI,EAAE;YACf,MAAMC,KAAK,GAAG,CAACf,gBAAgB,EAAED,GAAG,EAAEe,GAAG,CAACd,gBAAgB,CAAC,CACzDQ,MAAM,CAACC,CAAC,IAAI,CAAC,CAACA,CAAC,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC;YAC5B,OAAO;cACLZ,OAAO,EAAEmB,GAAG,CAACnB,OAAO;cACpBK,gBAAgB,EAAEe;YACpB,CAAC;UACH;QACF;MACF;MAEAf,gBAAgB,IAAI,CAACA,gBAAgB,CAACE,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIH,GAAG;MAClEA,GAAG,GAAG,EAAE;MACR;IACF;IAEA,IAAIP,MAAM,CAACkB,cAAc,EAAE;MACzB,KAAK,MAAMM,gBAAgB,IAAIJ,MAAM,CAACC,IAAI,CAACrB,MAAM,CAACkB,cAAc,CAAC,EAAE;QACjE,MAAMO,wBAAwB,GAAG1B,UAAU,CAACC,MAAM,CAACkB,cAAc,CAACM,gBAAgB,CAAC,EAAEvB,IAAI,CAAC;QAC1F,IAAIwB,wBAAwB,EAAE,OAAOA,wBAAwB;MAC/D;IACF;IAEA,OAAO,IAAI;EACb;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}