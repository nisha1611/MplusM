{"ast":null,"code":"import { Collector } from \"./collector\";\nexport const streamCollector = stream => new Promise((resolve, reject) => {\n  const collector = new Collector();\n  stream.pipe(collector);\n  stream.on(\"error\", err => {\n    collector.end();\n    reject(err);\n  });\n  collector.on(\"error\", reject);\n  collector.on(\"finish\", function () {\n    const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n    resolve(bytes);\n  });\n});","map":{"version":3,"names":["Collector","streamCollector","stream","Promise","resolve","reject","collector","pipe","on","err","end","bytes","Uint8Array","Buffer","concat","bufferedBytes"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/index.js"],"sourcesContent":["import { Collector } from \"./collector\";\r\nexport const streamCollector = (stream) => new Promise((resolve, reject) => {\r\n    const collector = new Collector();\r\n    stream.pipe(collector);\r\n    stream.on(\"error\", (err) => {\r\n        collector.end();\r\n        reject(err);\r\n    });\r\n    collector.on(\"error\", reject);\r\n    collector.on(\"finish\", function () {\r\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\r\n        resolve(bytes);\r\n    });\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,OAAO,MAAMC,eAAe,GAAIC,MAAM,IAAK,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EACxE,MAAMC,SAAS,GAAG,IAAIN,SAAS,EAAE;EACjCE,MAAM,CAACK,IAAI,CAACD,SAAS,CAAC;EACtBJ,MAAM,CAACM,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAK;IACxBH,SAAS,CAACI,GAAG,EAAE;IACfL,MAAM,CAACI,GAAG,CAAC;EACf,CAAC,CAAC;EACFH,SAAS,CAACE,EAAE,CAAC,OAAO,EAAEH,MAAM,CAAC;EAC7BC,SAAS,CAACE,EAAE,CAAC,QAAQ,EAAE,YAAY;IAC/B,MAAMG,KAAK,GAAG,IAAIC,UAAU,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC;IAC/DX,OAAO,CAACO,KAAK,CAAC;EAClB,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}