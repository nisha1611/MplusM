{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/**\r\n * @template T\r\n * @param {Iterable<T>} set a set\r\n * @returns {T | undefined} last item\r\n */\nconst last = set => {\n  let last;\n  for (const item of set) last = item;\n  return last;\n};\n\n/**\r\n * @template T\r\n * @param {Iterable<T>} iterable iterable\r\n * @param {function(T): boolean} filter predicate\r\n * @returns {boolean} true, if some items match the filter predicate\r\n */\nconst someInIterable = (iterable, filter) => {\n  for (const item of iterable) {\n    if (filter(item)) return true;\n  }\n  return false;\n};\n\n/**\r\n * @template T\r\n * @param {Iterable<T>} iterable an iterable\r\n * @returns {number} count of items\r\n */\nconst countIterable = iterable => {\n  let i = 0;\n  // eslint-disable-next-line no-unused-vars\n  for (const _ of iterable) i++;\n  return i;\n};\nexports.last = last;\nexports.someInIterable = someInIterable;\nexports.countIterable = countIterable;","map":{"version":3,"names":["last","set","item","someInIterable","iterable","filter","countIterable","i","_","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/util/IterableHelpers.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/**\r\n * @template T\r\n * @param {Iterable<T>} set a set\r\n * @returns {T | undefined} last item\r\n */\r\nconst last = set => {\r\n\tlet last;\r\n\tfor (const item of set) last = item;\r\n\treturn last;\r\n};\r\n\r\n/**\r\n * @template T\r\n * @param {Iterable<T>} iterable iterable\r\n * @param {function(T): boolean} filter predicate\r\n * @returns {boolean} true, if some items match the filter predicate\r\n */\r\nconst someInIterable = (iterable, filter) => {\r\n\tfor (const item of iterable) {\r\n\t\tif (filter(item)) return true;\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @template T\r\n * @param {Iterable<T>} iterable an iterable\r\n * @returns {number} count of items\r\n */\r\nconst countIterable = iterable => {\r\n\tlet i = 0;\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tfor (const _ of iterable) i++;\r\n\treturn i;\r\n};\r\n\r\nexports.last = last;\r\nexports.someInIterable = someInIterable;\r\nexports.countIterable = countIterable;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAGC,GAAG,IAAI;EACnB,IAAID,IAAI;EACR,KAAK,MAAME,IAAI,IAAID,GAAG,EAAED,IAAI,GAAGE,IAAI;EACnC,OAAOF,IAAI;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,cAAc,GAAG,CAACC,QAAQ,EAAEC,MAAM,KAAK;EAC5C,KAAK,MAAMH,IAAI,IAAIE,QAAQ,EAAE;IAC5B,IAAIC,MAAM,CAACH,IAAI,CAAC,EAAE,OAAO,IAAI;EAC9B;EACA,OAAO,KAAK;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMI,aAAa,GAAGF,QAAQ,IAAI;EACjC,IAAIG,CAAC,GAAG,CAAC;EACT;EACA,KAAK,MAAMC,CAAC,IAAIJ,QAAQ,EAAEG,CAAC,EAAE;EAC7B,OAAOA,CAAC;AACT,CAAC;AAEDE,OAAO,CAACT,IAAI,GAAGA,IAAI;AACnBS,OAAO,CAACN,cAAc,GAAGA,cAAc;AACvCM,OAAO,CAACH,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}