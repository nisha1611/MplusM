{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nclass AMDDefineRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"amd define\");\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    return Template.asString([`${RuntimeGlobals.amdDefine} = function () {`, Template.indent(\"throw new Error('define cannot be used indirect');\"), \"};\"]);\n  }\n}\nclass AMDOptionsRuntimeModule extends RuntimeModule {\n  /**\r\n   * @param {Record<string, boolean | number | string>} options the AMD options\r\n   */\n  constructor(options) {\n    super(\"amd options\");\n    this.options = options;\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    return Template.asString([`${RuntimeGlobals.amdOptions} = ${JSON.stringify(this.options)};`]);\n  }\n}\nexports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;\nexports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","AMDDefineRuntimeModule","constructor","generate","asString","amdDefine","indent","AMDOptionsRuntimeModule","options","amdOptions","JSON","stringify","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/AMDRuntimeModules.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\nconst Template = require(\"../Template\");\r\n\r\nclass AMDDefineRuntimeModule extends RuntimeModule {\r\n\tconstructor() {\r\n\t\tsuper(\"amd define\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\treturn Template.asString([\r\n\t\t\t`${RuntimeGlobals.amdDefine} = function () {`,\r\n\t\t\tTemplate.indent(\"throw new Error('define cannot be used indirect');\"),\r\n\t\t\t\"};\"\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nclass AMDOptionsRuntimeModule extends RuntimeModule {\r\n\t/**\r\n\t * @param {Record<string, boolean | number | string>} options the AMD options\r\n\t */\r\n\tconstructor(options) {\r\n\t\tsuper(\"amd options\");\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\treturn Template.asString([\r\n\t\t\t`${RuntimeGlobals.amdOptions} = ${JSON.stringify(this.options)};`\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nexports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;\r\nexports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvC,MAAMG,sBAAsB,SAASF,aAAa,CAAC;EAClDG,WAAW,GAAG;IACb,KAAK,CAAC,YAAY,CAAC;EACpB;;EAEA;AACD;AACA;EACCC,QAAQ,GAAG;IACV,OAAOH,QAAQ,CAACI,QAAQ,CAAC,CACvB,GAAEP,cAAc,CAACQ,SAAU,kBAAiB,EAC7CL,QAAQ,CAACM,MAAM,CAAC,oDAAoD,CAAC,EACrE,IAAI,CACJ,CAAC;EACH;AACD;AAEA,MAAMC,uBAAuB,SAASR,aAAa,CAAC;EACnD;AACD;AACA;EACCG,WAAW,CAACM,OAAO,EAAE;IACpB,KAAK,CAAC,aAAa,CAAC;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;EACCL,QAAQ,GAAG;IACV,OAAOH,QAAQ,CAACI,QAAQ,CAAC,CACvB,GAAEP,cAAc,CAACY,UAAW,MAAKC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACH,OAAO,CAAE,GAAE,CACjE,CAAC;EACH;AACD;AAEAI,OAAO,CAACX,sBAAsB,GAAGA,sBAAsB;AACvDW,OAAO,CAACL,uBAAuB,GAAGA,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}