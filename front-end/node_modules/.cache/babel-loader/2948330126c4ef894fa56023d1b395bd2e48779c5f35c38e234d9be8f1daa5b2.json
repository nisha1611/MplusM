{"ast":null,"code":"'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\ntest('bigint', {\n  skip: typeof BigInt === 'undefined'\n}, function (t) {\n  t.test('primitives', function (st) {\n    st.plan(3);\n    st.equal(inspect(BigInt(-256)), '-256n');\n    st.equal(inspect(BigInt(0)), '0n');\n    st.equal(inspect(BigInt(256)), '256n');\n  });\n  t.test('objects', function (st) {\n    st.plan(3);\n    st.equal(inspect(Object(BigInt(-256))), 'Object(-256n)');\n    st.equal(inspect(Object(BigInt(0))), 'Object(0n)');\n    st.equal(inspect(Object(BigInt(256))), 'Object(256n)');\n  });\n  t.test('syntactic primitives', function (st) {\n    st.plan(3);\n\n    /* eslint-disable no-new-func */\n    st.equal(inspect(Function('return -256n')()), '-256n');\n    st.equal(inspect(Function('return 0n')()), '0n');\n    st.equal(inspect(Function('return 256n')()), '256n');\n  });\n  t.test('toStringTag', {\n    skip: !hasToStringTag\n  }, function (st) {\n    st.plan(1);\n    var faker = {};\n    faker[Symbol.toStringTag] = 'BigInt';\n    st.equal(inspect(faker), '{ [Symbol(Symbol.toStringTag)]: \\'BigInt\\' }', 'object lying about being a BigInt inspects as an object');\n  });\n  t.test('numericSeparator', function (st) {\n    st.equal(inspect(BigInt(0), {\n      numericSeparator: false\n    }), '0n', '0n, numericSeparator false');\n    st.equal(inspect(BigInt(0), {\n      numericSeparator: true\n    }), '0n', '0n, numericSeparator true');\n    st.equal(inspect(BigInt(1234), {\n      numericSeparator: false\n    }), '1234n', '1234n, numericSeparator false');\n    st.equal(inspect(BigInt(1234), {\n      numericSeparator: true\n    }), '1_234n', '1234n, numericSeparator true');\n    st.equal(inspect(BigInt(-1234), {\n      numericSeparator: false\n    }), '-1234n', '1234n, numericSeparator false');\n    st.equal(inspect(BigInt(-1234), {\n      numericSeparator: true\n    }), '-1_234n', '1234n, numericSeparator true');\n    st.end();\n  });\n  t.end();\n});","map":{"version":3,"names":["inspect","require","test","hasToStringTag","skip","BigInt","t","st","plan","equal","Object","Function","faker","Symbol","toStringTag","numericSeparator","end"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/object-inspect/test/bigint.js"],"sourcesContent":["'use strict';\r\n\r\nvar inspect = require('../');\r\nvar test = require('tape');\r\nvar hasToStringTag = require('has-tostringtag/shams')();\r\n\r\ntest('bigint', { skip: typeof BigInt === 'undefined' }, function (t) {\r\n    t.test('primitives', function (st) {\r\n        st.plan(3);\r\n\r\n        st.equal(inspect(BigInt(-256)), '-256n');\r\n        st.equal(inspect(BigInt(0)), '0n');\r\n        st.equal(inspect(BigInt(256)), '256n');\r\n    });\r\n\r\n    t.test('objects', function (st) {\r\n        st.plan(3);\r\n\r\n        st.equal(inspect(Object(BigInt(-256))), 'Object(-256n)');\r\n        st.equal(inspect(Object(BigInt(0))), 'Object(0n)');\r\n        st.equal(inspect(Object(BigInt(256))), 'Object(256n)');\r\n    });\r\n\r\n    t.test('syntactic primitives', function (st) {\r\n        st.plan(3);\r\n\r\n        /* eslint-disable no-new-func */\r\n        st.equal(inspect(Function('return -256n')()), '-256n');\r\n        st.equal(inspect(Function('return 0n')()), '0n');\r\n        st.equal(inspect(Function('return 256n')()), '256n');\r\n    });\r\n\r\n    t.test('toStringTag', { skip: !hasToStringTag }, function (st) {\r\n        st.plan(1);\r\n\r\n        var faker = {};\r\n        faker[Symbol.toStringTag] = 'BigInt';\r\n        st.equal(\r\n            inspect(faker),\r\n            '{ [Symbol(Symbol.toStringTag)]: \\'BigInt\\' }',\r\n            'object lying about being a BigInt inspects as an object'\r\n        );\r\n    });\r\n\r\n    t.test('numericSeparator', function (st) {\r\n        st.equal(inspect(BigInt(0), { numericSeparator: false }), '0n', '0n, numericSeparator false');\r\n        st.equal(inspect(BigInt(0), { numericSeparator: true }), '0n', '0n, numericSeparator true');\r\n\r\n        st.equal(inspect(BigInt(1234), { numericSeparator: false }), '1234n', '1234n, numericSeparator false');\r\n        st.equal(inspect(BigInt(1234), { numericSeparator: true }), '1_234n', '1234n, numericSeparator true');\r\n        st.equal(inspect(BigInt(-1234), { numericSeparator: false }), '-1234n', '1234n, numericSeparator false');\r\n        st.equal(inspect(BigInt(-1234), { numericSeparator: true }), '-1_234n', '1234n, numericSeparator true');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.end();\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}