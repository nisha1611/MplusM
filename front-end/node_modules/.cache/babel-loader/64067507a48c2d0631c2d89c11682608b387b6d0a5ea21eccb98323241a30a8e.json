{"ast":null,"code":"'use strict';\n\n/*!\r\n * ignore\r\n */\nmodule.exports = function combinePathErrors(err) {\n  const keys = Object.keys(err.errors || {});\n  const len = keys.length;\n  const msgs = [];\n  let key;\n  for (let i = 0; i < len; ++i) {\n    key = keys[i];\n    if (err === err.errors[key]) {\n      continue;\n    }\n    msgs.push(key + ': ' + err.errors[key].message);\n  }\n  return msgs.join(', ');\n};","map":{"version":3,"names":["module","exports","combinePathErrors","err","keys","Object","errors","len","length","msgs","key","i","push","message","join"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/error/combinePathErrors.js"],"sourcesContent":["'use strict';\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nmodule.exports = function combinePathErrors(err) {\r\n  const keys = Object.keys(err.errors || {});\r\n  const len = keys.length;\r\n  const msgs = [];\r\n  let key;\r\n\r\n  for (let i = 0; i < len; ++i) {\r\n    key = keys[i];\r\n    if (err === err.errors[key]) {\r\n      continue;\r\n    }\r\n    msgs.push(key + ': ' + err.errors[key].message);\r\n  }\r\n\r\n  return msgs.join(', ');\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,iBAAiB,CAACC,GAAG,EAAE;EAC/C,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,GAAG,CAACG,MAAM,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAMC,GAAG,GAAGH,IAAI,CAACI,MAAM;EACvB,MAAMC,IAAI,GAAG,EAAE;EACf,IAAIC,GAAG;EAEP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,EAAE,EAAEI,CAAC,EAAE;IAC5BD,GAAG,GAAGN,IAAI,CAACO,CAAC,CAAC;IACb,IAAIR,GAAG,KAAKA,GAAG,CAACG,MAAM,CAACI,GAAG,CAAC,EAAE;MAC3B;IACF;IACAD,IAAI,CAACG,IAAI,CAACF,GAAG,GAAG,IAAI,GAAGP,GAAG,CAACG,MAAM,CAACI,GAAG,CAAC,CAACG,OAAO,CAAC;EACjD;EAEA,OAAOJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}