{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTemplate = void 0;\nconst lib_1 = require(\"../lib\");\nconst evaluateTemplate = (template, options) => {\n  const evaluatedTemplateArr = [];\n  const templateContext = {\n    ...options.endpointParams,\n    ...options.referenceRecord\n  };\n  let currentIndex = 0;\n  while (currentIndex < template.length) {\n    const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n    if (openingBraceIndex === -1) {\n      evaluatedTemplateArr.push(template.slice(currentIndex));\n      break;\n    }\n    evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n    const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n    if (closingBraceIndex === -1) {\n      evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n      break;\n    }\n    if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n      evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n      currentIndex = closingBraceIndex + 2;\n    }\n    const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n    if (parameterName.includes(\"#\")) {\n      const [refName, attrName] = parameterName.split(\"#\");\n      evaluatedTemplateArr.push((0, lib_1.getAttr)(templateContext[refName], attrName));\n    } else {\n      evaluatedTemplateArr.push(templateContext[parameterName]);\n    }\n    currentIndex = closingBraceIndex + 1;\n  }\n  return evaluatedTemplateArr.join(\"\");\n};\nexports.evaluateTemplate = evaluateTemplate;","map":{"version":3,"names":["Object","defineProperty","exports","value","evaluateTemplate","lib_1","require","template","options","evaluatedTemplateArr","templateContext","endpointParams","referenceRecord","currentIndex","length","openingBraceIndex","indexOf","push","slice","closingBraceIndex","parameterName","substring","includes","refName","attrName","split","getAttr","join"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateTemplate.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.evaluateTemplate = void 0;\r\nconst lib_1 = require(\"../lib\");\r\nconst evaluateTemplate = (template, options) => {\r\n    const evaluatedTemplateArr = [];\r\n    const templateContext = {\r\n        ...options.endpointParams,\r\n        ...options.referenceRecord,\r\n    };\r\n    let currentIndex = 0;\r\n    while (currentIndex < template.length) {\r\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\r\n        if (openingBraceIndex === -1) {\r\n            evaluatedTemplateArr.push(template.slice(currentIndex));\r\n            break;\r\n        }\r\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\r\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\r\n        if (closingBraceIndex === -1) {\r\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\r\n            break;\r\n        }\r\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\r\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\r\n            currentIndex = closingBraceIndex + 2;\r\n        }\r\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\r\n        if (parameterName.includes(\"#\")) {\r\n            const [refName, attrName] = parameterName.split(\"#\");\r\n            evaluatedTemplateArr.push((0, lib_1.getAttr)(templateContext[refName], attrName));\r\n        }\r\n        else {\r\n            evaluatedTemplateArr.push(templateContext[parameterName]);\r\n        }\r\n        currentIndex = closingBraceIndex + 1;\r\n    }\r\n    return evaluatedTemplateArr.join(\"\");\r\n};\r\nexports.evaluateTemplate = evaluateTemplate;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC,MAAMC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMF,gBAAgB,GAAG,CAACG,QAAQ,EAAEC,OAAO,KAAK;EAC5C,MAAMC,oBAAoB,GAAG,EAAE;EAC/B,MAAMC,eAAe,GAAG;IACpB,GAAGF,OAAO,CAACG,cAAc;IACzB,GAAGH,OAAO,CAACI;EACf,CAAC;EACD,IAAIC,YAAY,GAAG,CAAC;EACpB,OAAOA,YAAY,GAAGN,QAAQ,CAACO,MAAM,EAAE;IACnC,MAAMC,iBAAiB,GAAGR,QAAQ,CAACS,OAAO,CAAC,GAAG,EAAEH,YAAY,CAAC;IAC7D,IAAIE,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC1BN,oBAAoB,CAACQ,IAAI,CAACV,QAAQ,CAACW,KAAK,CAACL,YAAY,CAAC,CAAC;MACvD;IACJ;IACAJ,oBAAoB,CAACQ,IAAI,CAACV,QAAQ,CAACW,KAAK,CAACL,YAAY,EAAEE,iBAAiB,CAAC,CAAC;IAC1E,MAAMI,iBAAiB,GAAGZ,QAAQ,CAACS,OAAO,CAAC,GAAG,EAAED,iBAAiB,CAAC;IAClE,IAAII,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC1BV,oBAAoB,CAACQ,IAAI,CAACV,QAAQ,CAACW,KAAK,CAACH,iBAAiB,CAAC,CAAC;MAC5D;IACJ;IACA,IAAIR,QAAQ,CAACQ,iBAAiB,GAAG,CAAC,CAAC,KAAK,GAAG,IAAIR,QAAQ,CAACY,iBAAiB,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MACpFV,oBAAoB,CAACQ,IAAI,CAACV,QAAQ,CAACW,KAAK,CAACH,iBAAiB,GAAG,CAAC,EAAEI,iBAAiB,CAAC,CAAC;MACnFN,YAAY,GAAGM,iBAAiB,GAAG,CAAC;IACxC;IACA,MAAMC,aAAa,GAAGb,QAAQ,CAACc,SAAS,CAACN,iBAAiB,GAAG,CAAC,EAAEI,iBAAiB,CAAC;IAClF,IAAIC,aAAa,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7B,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC;MACpDhB,oBAAoB,CAACQ,IAAI,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACqB,OAAO,EAAEhB,eAAe,CAACa,OAAO,CAAC,EAAEC,QAAQ,CAAC,CAAC;IACrF,CAAC,MACI;MACDf,oBAAoB,CAACQ,IAAI,CAACP,eAAe,CAACU,aAAa,CAAC,CAAC;IAC7D;IACAP,YAAY,GAAGM,iBAAiB,GAAG,CAAC;EACxC;EACA,OAAOV,oBAAoB,CAACkB,IAAI,CAAC,EAAE,CAAC;AACxC,CAAC;AACDzB,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}