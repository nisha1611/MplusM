{"ast":null,"code":"import { chain, memoize, TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { fromSso } from \"./fromSso\";\nexport const nodeProvider = function () {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return memoize(chain(fromSso(init), async () => {\n    throw new TokenProviderError(\"Could not load token from any providers\", false);\n  }), token => token.expiration !== undefined && token.expiration.getTime() - Date.now() < 300000, token => token.expiration !== undefined);\n};","map":{"version":3,"names":["chain","memoize","TokenProviderError","fromSso","nodeProvider","init","token","expiration","undefined","getTime","Date","now"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/token-providers/dist-es/nodeProvider.js"],"sourcesContent":["import { chain, memoize, TokenProviderError } from \"@aws-sdk/property-provider\";\r\nimport { fromSso } from \"./fromSso\";\r\nexport const nodeProvider = (init = {}) => memoize(chain(fromSso(init), async () => {\r\n    throw new TokenProviderError(\"Could not load token from any providers\", false);\r\n}), (token) => token.expiration !== undefined && token.expiration.getTime() - Date.now() < 300000, (token) => token.expiration !== undefined);\r\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,4BAA4B;AAC/E,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,MAAMC,YAAY,GAAG;EAAA,IAACC,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAKJ,OAAO,CAACD,KAAK,CAACG,OAAO,CAACE,IAAI,CAAC,EAAE,YAAY;IAChF,MAAM,IAAIH,kBAAkB,CAAC,yCAAyC,EAAE,KAAK,CAAC;EAClF,CAAC,CAAC,EAAGI,KAAK,IAAKA,KAAK,CAACC,UAAU,KAAKC,SAAS,IAAIF,KAAK,CAACC,UAAU,CAACE,OAAO,EAAE,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,MAAM,EAAGL,KAAK,IAAKA,KAAK,CAACC,UAAU,KAAKC,SAAS,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}