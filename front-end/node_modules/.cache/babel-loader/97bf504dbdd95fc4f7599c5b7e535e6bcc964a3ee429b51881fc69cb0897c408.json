{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MaxKey = void 0;\n/**\r\n * A class representation of the BSON MaxKey type.\r\n * @public\r\n * @category BSONType\r\n */\nvar MaxKey = /** @class */function () {\n  function MaxKey() {\n    if (!(this instanceof MaxKey)) return new MaxKey();\n  }\n  /** @internal */\n  MaxKey.prototype.toExtendedJSON = function () {\n    return {\n      $maxKey: 1\n    };\n  };\n  /** @internal */\n  MaxKey.fromExtendedJSON = function () {\n    return new MaxKey();\n  };\n  /** @internal */\n  MaxKey.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n    return this.inspect();\n  };\n  MaxKey.prototype.inspect = function () {\n    return 'new MaxKey()';\n  };\n  return MaxKey;\n}();\nexports.MaxKey = MaxKey;\nObject.defineProperty(MaxKey.prototype, '_bsontype', {\n  value: 'MaxKey'\n});","map":{"version":3,"mappings":";;;;;;AAKA;;;;;AAKA;EAGE;IACE,IAAI,EAAE,IAAI,YAAYA,MAAM,CAAC,EAAE,OAAO,IAAIA,MAAM,EAAE;EACpD;EAEA;EACAA,+BAAc,GAAd;IACE,OAAO;MAAEC,OAAO,EAAE;IAAC,CAAE;EACvB,CAAC;EAED;EACOD,uBAAgB,GAAvB;IACE,OAAO,IAAIA,MAAM,EAAE;EACrB,CAAC;EAED;EACAA,iBAACE,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAAC,GAA1C;IACE,OAAO,IAAI,CAACC,OAAO,EAAE;EACvB,CAAC;EAEDJ,wBAAO,GAAP;IACE,OAAO,cAAc;EACvB,CAAC;EACH,aAAC;AAAD,CAAC,EAzBD;AAAaK;AA2BbC,MAAM,CAACC,cAAc,CAACP,MAAM,CAACQ,SAAS,EAAE,WAAW,EAAE;EAAEC,KAAK,EAAE;AAAQ,CAAE,CAAC","names":["MaxKey","$maxKey","Symbol","for","inspect","exports","Object","defineProperty","prototype","value"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\bson\\src\\max_key.ts"],"sourcesContent":["/** @public */\r\nexport interface MaxKeyExtended {\r\n  $maxKey: 1;\r\n}\r\n\r\n/**\r\n * A class representation of the BSON MaxKey type.\r\n * @public\r\n * @category BSONType\r\n */\r\nexport class MaxKey {\r\n  _bsontype!: 'MaxKey';\r\n\r\n  constructor() {\r\n    if (!(this instanceof MaxKey)) return new MaxKey();\r\n  }\r\n\r\n  /** @internal */\r\n  toExtendedJSON(): MaxKeyExtended {\r\n    return { $maxKey: 1 };\r\n  }\r\n\r\n  /** @internal */\r\n  static fromExtendedJSON(): MaxKey {\r\n    return new MaxKey();\r\n  }\r\n\r\n  /** @internal */\r\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\r\n    return this.inspect();\r\n  }\r\n\r\n  inspect(): string {\r\n    return 'new MaxKey()';\r\n  }\r\n}\r\n\r\nObject.defineProperty(MaxKey.prototype, '_bsontype', { value: 'MaxKey' });\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}