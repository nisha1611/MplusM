{"ast":null,"code":"/*!\r\n * Module dependencies.\r\n */\n\n'use strict';\n\nconst MongooseBuffer = require('../types/buffer');\nconst SchemaBufferOptions = require('../options/SchemaBufferOptions');\nconst SchemaType = require('../schematype');\nconst handleBitwiseOperator = require('./operators/bitwise');\nconst utils = require('../utils');\nconst Binary = MongooseBuffer.Binary;\nconst CastError = SchemaType.CastError;\n\n/**\r\n * Buffer SchemaType constructor\r\n *\r\n * @param {String} key\r\n * @param {Object} options\r\n * @inherits SchemaType\r\n * @api public\r\n */\n\nfunction SchemaBuffer(key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n\n/**\r\n * This schema type's name, to defend against minifiers that mangle\r\n * function names.\r\n *\r\n * @api public\r\n */\nSchemaBuffer.schemaName = 'Buffer';\nSchemaBuffer.defaultOptions = {};\n\n/*!\r\n * Inherits from SchemaType.\r\n */\nSchemaBuffer.prototype = Object.create(SchemaType.prototype);\nSchemaBuffer.prototype.constructor = SchemaBuffer;\nSchemaBuffer.prototype.OptionsConstructor = SchemaBufferOptions;\n\n/*!\r\n * ignore\r\n */\n\nSchemaBuffer._checkRequired = v => !!(v && v.length);\n\n/**\r\n * Sets a default option for all Buffer instances.\r\n *\r\n * #### Example:\r\n *\r\n *     // Make all buffers have `required` of true by default.\r\n *     mongoose.Schema.Buffer.set('required', true);\r\n *\r\n *     const User = mongoose.model('User', new Schema({ test: Buffer }));\r\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\r\n *\r\n * @param {String} option The option you'd like to set the value for\r\n * @param {Any} value value for option\r\n * @return {undefined}\r\n * @function set\r\n * @static\r\n * @api public\r\n */\n\nSchemaBuffer.set = SchemaType.set;\n\n/**\r\n * Override the function the required validator uses to check whether a string\r\n * passes the `required` check.\r\n *\r\n * #### Example:\r\n *\r\n *     // Allow empty strings to pass `required` check\r\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\r\n *\r\n *     const M = mongoose.model({ buf: { type: Buffer, required: true } });\r\n *     new M({ buf: Buffer.from('') }).validateSync(); // validation passes!\r\n *\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @function checkRequired\r\n * @static\r\n * @api public\r\n */\n\nSchemaBuffer.checkRequired = SchemaType.checkRequired;\n\n/**\r\n * Check if the given value satisfies a required validator. To satisfy a\r\n * required validator, a buffer must not be null or undefined and have\r\n * non-zero length.\r\n *\r\n * @param {Any} value\r\n * @param {Document} doc\r\n * @return {Boolean}\r\n * @api public\r\n */\n\nSchemaBuffer.prototype.checkRequired = function (value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return this.constructor._checkRequired(value);\n};\n\n/**\r\n * Casts contents\r\n *\r\n * @param {Object} value\r\n * @param {Document} doc document that triggers the casting\r\n * @param {Boolean} init\r\n * @api private\r\n */\n\nSchemaBuffer.prototype.cast = function (value, doc, init) {\n  let ret;\n  if (SchemaType._isRef(this, value, doc, init)) {\n    if (value && value.isMongooseBuffer) {\n      return value;\n    }\n    if (Buffer.isBuffer(value)) {\n      if (!value || !value.isMongooseBuffer) {\n        value = new MongooseBuffer(value, [this.path, doc]);\n        if (this.options.subtype != null) {\n          value._subtype = this.options.subtype;\n        }\n      }\n      return value;\n    }\n    if (value instanceof Binary) {\n      ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n      if (typeof value.sub_type !== 'number') {\n        throw new CastError('Buffer', value, this.path, null, this);\n      }\n      ret._subtype = value.sub_type;\n      return ret;\n    }\n    if (value == null || utils.isNonBuiltinObject(value)) {\n      return this._castRef(value, doc, init);\n    }\n  }\n\n  // documents\n  if (value && value._id) {\n    value = value._id;\n  }\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n      if (this.options.subtype != null) {\n        value._subtype = this.options.subtype;\n      }\n    }\n    return value;\n  }\n  if (value instanceof Binary) {\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('Buffer', value, this.path, null, this);\n    }\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n  if (value === null) {\n    return value;\n  }\n  const type = typeof value;\n  if (type === 'string' || type === 'number' || Array.isArray(value) || type === 'object' && value.type === 'Buffer' && Array.isArray(value.data) // gh-6863\n  ) {\n    if (type === 'number') {\n      value = [value];\n    }\n    ret = new MongooseBuffer(value, [this.path, doc]);\n    if (this.options.subtype != null) {\n      ret._subtype = this.options.subtype;\n    }\n    return ret;\n  }\n  throw new CastError('Buffer', value, this.path, null, this);\n};\n\n/**\r\n * Sets the default [subtype](https://studio3t.com/whats-new/best-practices-uuid-mongodb/)\r\n * for this buffer. You can find a [list of allowed subtypes here](https://api.mongodb.com/python/current/api/bson/binary.html).\r\n *\r\n * #### Example:\r\n *\r\n *     const s = new Schema({ uuid: { type: Buffer, subtype: 4 });\r\n *     const M = db.model('M', s);\r\n *     const m = new M({ uuid: 'test string' });\r\n *     m.uuid._subtype; // 4\r\n *\r\n * @param {Number} subtype the default subtype\r\n * @return {SchemaType} this\r\n * @api public\r\n */\n\nSchemaBuffer.prototype.subtype = function (subtype) {\n  this.options.subtype = subtype;\n  return this;\n};\n\n/*!\r\n * ignore\r\n */\nfunction handleSingle(val) {\n  return this.castForQuery(val);\n}\nSchemaBuffer.prototype.$conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $bitsAllClear: handleBitwiseOperator,\n  $bitsAnyClear: handleBitwiseOperator,\n  $bitsAllSet: handleBitwiseOperator,\n  $bitsAnySet: handleBitwiseOperator,\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle\n});\n\n/**\r\n * Casts contents for queries.\r\n *\r\n * @param {String} $conditional\r\n * @param {any} [value]\r\n * @api private\r\n */\n\nSchemaBuffer.prototype.castForQuery = function ($conditional, val) {\n  let handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');\n    }\n    return handler.call(this, val);\n  }\n  val = $conditional;\n  const casted = this._castForQuery(val);\n  return casted ? casted.toObject({\n    transform: false,\n    virtuals: false\n  }) : casted;\n};\n\n/*!\r\n * Module exports.\r\n */\n\nmodule.exports = SchemaBuffer;","map":{"version":3,"names":["MongooseBuffer","require","SchemaBufferOptions","SchemaType","handleBitwiseOperator","utils","Binary","CastError","SchemaBuffer","key","options","call","schemaName","defaultOptions","prototype","Object","create","constructor","OptionsConstructor","_checkRequired","v","length","set","checkRequired","value","doc","_isRef","cast","init","ret","isMongooseBuffer","Buffer","isBuffer","path","subtype","_subtype","sub_type","isNonBuiltinObject","_castRef","_id","type","Array","isArray","data","handleSingle","val","castForQuery","$conditionalHandlers","$bitsAllClear","$bitsAnyClear","$bitsAllSet","$bitsAnySet","$gt","$gte","$lt","$lte","$conditional","handler","arguments","Error","casted","_castForQuery","toObject","transform","virtuals","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/schema/buffer.js"],"sourcesContent":["/*!\r\n * Module dependencies.\r\n */\r\n\r\n'use strict';\r\n\r\nconst MongooseBuffer = require('../types/buffer');\r\nconst SchemaBufferOptions = require('../options/SchemaBufferOptions');\r\nconst SchemaType = require('../schematype');\r\nconst handleBitwiseOperator = require('./operators/bitwise');\r\nconst utils = require('../utils');\r\n\r\nconst Binary = MongooseBuffer.Binary;\r\nconst CastError = SchemaType.CastError;\r\n\r\n/**\r\n * Buffer SchemaType constructor\r\n *\r\n * @param {String} key\r\n * @param {Object} options\r\n * @inherits SchemaType\r\n * @api public\r\n */\r\n\r\nfunction SchemaBuffer(key, options) {\r\n  SchemaType.call(this, key, options, 'Buffer');\r\n}\r\n\r\n/**\r\n * This schema type's name, to defend against minifiers that mangle\r\n * function names.\r\n *\r\n * @api public\r\n */\r\nSchemaBuffer.schemaName = 'Buffer';\r\n\r\nSchemaBuffer.defaultOptions = {};\r\n\r\n/*!\r\n * Inherits from SchemaType.\r\n */\r\nSchemaBuffer.prototype = Object.create(SchemaType.prototype);\r\nSchemaBuffer.prototype.constructor = SchemaBuffer;\r\nSchemaBuffer.prototype.OptionsConstructor = SchemaBufferOptions;\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nSchemaBuffer._checkRequired = v => !!(v && v.length);\r\n\r\n/**\r\n * Sets a default option for all Buffer instances.\r\n *\r\n * #### Example:\r\n *\r\n *     // Make all buffers have `required` of true by default.\r\n *     mongoose.Schema.Buffer.set('required', true);\r\n *\r\n *     const User = mongoose.model('User', new Schema({ test: Buffer }));\r\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\r\n *\r\n * @param {String} option The option you'd like to set the value for\r\n * @param {Any} value value for option\r\n * @return {undefined}\r\n * @function set\r\n * @static\r\n * @api public\r\n */\r\n\r\nSchemaBuffer.set = SchemaType.set;\r\n\r\n/**\r\n * Override the function the required validator uses to check whether a string\r\n * passes the `required` check.\r\n *\r\n * #### Example:\r\n *\r\n *     // Allow empty strings to pass `required` check\r\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\r\n *\r\n *     const M = mongoose.model({ buf: { type: Buffer, required: true } });\r\n *     new M({ buf: Buffer.from('') }).validateSync(); // validation passes!\r\n *\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @function checkRequired\r\n * @static\r\n * @api public\r\n */\r\n\r\nSchemaBuffer.checkRequired = SchemaType.checkRequired;\r\n\r\n/**\r\n * Check if the given value satisfies a required validator. To satisfy a\r\n * required validator, a buffer must not be null or undefined and have\r\n * non-zero length.\r\n *\r\n * @param {Any} value\r\n * @param {Document} doc\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nSchemaBuffer.prototype.checkRequired = function(value, doc) {\r\n  if (SchemaType._isRef(this, value, doc, true)) {\r\n    return !!value;\r\n  }\r\n  return this.constructor._checkRequired(value);\r\n};\r\n\r\n/**\r\n * Casts contents\r\n *\r\n * @param {Object} value\r\n * @param {Document} doc document that triggers the casting\r\n * @param {Boolean} init\r\n * @api private\r\n */\r\n\r\nSchemaBuffer.prototype.cast = function(value, doc, init) {\r\n  let ret;\r\n  if (SchemaType._isRef(this, value, doc, init)) {\r\n    if (value && value.isMongooseBuffer) {\r\n      return value;\r\n    }\r\n\r\n    if (Buffer.isBuffer(value)) {\r\n      if (!value || !value.isMongooseBuffer) {\r\n        value = new MongooseBuffer(value, [this.path, doc]);\r\n        if (this.options.subtype != null) {\r\n          value._subtype = this.options.subtype;\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Binary) {\r\n      ret = new MongooseBuffer(value.value(true), [this.path, doc]);\r\n      if (typeof value.sub_type !== 'number') {\r\n        throw new CastError('Buffer', value, this.path, null, this);\r\n      }\r\n      ret._subtype = value.sub_type;\r\n      return ret;\r\n    }\r\n\r\n    if (value == null || utils.isNonBuiltinObject(value)) {\r\n      return this._castRef(value, doc, init);\r\n    }\r\n  }\r\n\r\n  // documents\r\n  if (value && value._id) {\r\n    value = value._id;\r\n  }\r\n\r\n  if (value && value.isMongooseBuffer) {\r\n    return value;\r\n  }\r\n\r\n  if (Buffer.isBuffer(value)) {\r\n    if (!value || !value.isMongooseBuffer) {\r\n      value = new MongooseBuffer(value, [this.path, doc]);\r\n      if (this.options.subtype != null) {\r\n        value._subtype = this.options.subtype;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  if (value instanceof Binary) {\r\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\r\n    if (typeof value.sub_type !== 'number') {\r\n      throw new CastError('Buffer', value, this.path, null, this);\r\n    }\r\n    ret._subtype = value.sub_type;\r\n    return ret;\r\n  }\r\n\r\n  if (value === null) {\r\n    return value;\r\n  }\r\n\r\n\r\n  const type = typeof value;\r\n  if (\r\n    type === 'string' || type === 'number' || Array.isArray(value) ||\r\n    (type === 'object' && value.type === 'Buffer' && Array.isArray(value.data)) // gh-6863\r\n  ) {\r\n    if (type === 'number') {\r\n      value = [value];\r\n    }\r\n    ret = new MongooseBuffer(value, [this.path, doc]);\r\n    if (this.options.subtype != null) {\r\n      ret._subtype = this.options.subtype;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  throw new CastError('Buffer', value, this.path, null, this);\r\n};\r\n\r\n/**\r\n * Sets the default [subtype](https://studio3t.com/whats-new/best-practices-uuid-mongodb/)\r\n * for this buffer. You can find a [list of allowed subtypes here](https://api.mongodb.com/python/current/api/bson/binary.html).\r\n *\r\n * #### Example:\r\n *\r\n *     const s = new Schema({ uuid: { type: Buffer, subtype: 4 });\r\n *     const M = db.model('M', s);\r\n *     const m = new M({ uuid: 'test string' });\r\n *     m.uuid._subtype; // 4\r\n *\r\n * @param {Number} subtype the default subtype\r\n * @return {SchemaType} this\r\n * @api public\r\n */\r\n\r\nSchemaBuffer.prototype.subtype = function(subtype) {\r\n  this.options.subtype = subtype;\r\n  return this;\r\n};\r\n\r\n/*!\r\n * ignore\r\n */\r\nfunction handleSingle(val) {\r\n  return this.castForQuery(val);\r\n}\r\n\r\nSchemaBuffer.prototype.$conditionalHandlers =\r\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\r\n      $bitsAllClear: handleBitwiseOperator,\r\n      $bitsAnyClear: handleBitwiseOperator,\r\n      $bitsAllSet: handleBitwiseOperator,\r\n      $bitsAnySet: handleBitwiseOperator,\r\n      $gt: handleSingle,\r\n      $gte: handleSingle,\r\n      $lt: handleSingle,\r\n      $lte: handleSingle\r\n    });\r\n\r\n/**\r\n * Casts contents for queries.\r\n *\r\n * @param {String} $conditional\r\n * @param {any} [value]\r\n * @api private\r\n */\r\n\r\nSchemaBuffer.prototype.castForQuery = function($conditional, val) {\r\n  let handler;\r\n  if (arguments.length === 2) {\r\n    handler = this.$conditionalHandlers[$conditional];\r\n    if (!handler) {\r\n      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');\r\n    }\r\n    return handler.call(this, val);\r\n  }\r\n  val = $conditional;\r\n  const casted = this._castForQuery(val);\r\n  return casted ? casted.toObject({ transform: false, virtuals: false }) : casted;\r\n};\r\n\r\n/*!\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = SchemaBuffer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}