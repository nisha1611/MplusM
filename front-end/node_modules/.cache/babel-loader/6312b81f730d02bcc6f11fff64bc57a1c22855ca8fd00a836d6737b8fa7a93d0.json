{"ast":null,"code":"'use strict';\n\n/*!\r\n * Module dependencies.\r\n */\nconst MongooseCollection = require('../../collection');\nconst MongooseError = require('../../error/mongooseError');\nconst Collection = require('mongodb').Collection;\nconst ObjectId = require('./objectid');\nconst getConstructorName = require('../../helpers/getConstructorName');\nconst stream = require('stream');\nconst util = require('util');\n\n/**\r\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\r\n *\r\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\r\n *\r\n * @inherits Collection\r\n * @api private\r\n */\n\nfunction NativeCollection(name, conn, options) {\n  this.collection = null;\n  this.Promise = options.Promise || Promise;\n  this.modelName = options.modelName;\n  delete options.modelName;\n  this._closed = false;\n  MongooseCollection.apply(this, arguments);\n}\n\n/*!\r\n * Inherit from abstract Collection.\r\n */\n\nObject.setPrototypeOf(NativeCollection.prototype, MongooseCollection.prototype);\n\n/**\r\n * Called when the connection opens.\r\n *\r\n * @api private\r\n */\n\nNativeCollection.prototype.onOpen = function () {\n  const _this = this;\n  _this.collection = _this.conn.db.collection(_this.name);\n  MongooseCollection.prototype.onOpen.call(_this);\n  return _this.collection;\n};\n\n/**\r\n * Called when the connection closes\r\n *\r\n * @api private\r\n */\n\nNativeCollection.prototype.onClose = function (force) {\n  MongooseCollection.prototype.onClose.call(this, force);\n};\n\n/*!\r\n * ignore\r\n */\n\nconst syncCollectionMethods = {\n  watch: true,\n  find: true,\n  aggregate: true\n};\n\n/**\r\n * Copy the collection methods and make them subject to queues\r\n * @param {Number|String} I\r\n * @api private\r\n */\n\nfunction iter(i) {\n  NativeCollection.prototype[i] = function () {\n    const collection = this.collection;\n    const args = Array.from(arguments);\n    const _this = this;\n    const globalDebug = _this && _this.conn && _this.conn.base && _this.conn.base.options && _this.conn.base.options.debug;\n    const connectionDebug = _this && _this.conn && _this.conn.options && _this.conn.options.debug;\n    const debug = connectionDebug == null ? globalDebug : connectionDebug;\n    const lastArg = arguments[arguments.length - 1];\n    const opId = new ObjectId();\n\n    // If user force closed, queueing will hang forever. See #5664\n    if (this.conn.$wasForceClosed) {\n      const error = new MongooseError('Connection was force closed');\n      if (args.length > 0 && typeof args[args.length - 1] === 'function') {\n        args[args.length - 1](error);\n        return;\n      } else {\n        throw error;\n      }\n    }\n    let _args = args;\n    let callback = null;\n    if (this._shouldBufferCommands() && this.buffer) {\n      if (syncCollectionMethods[i] && typeof lastArg !== 'function') {\n        throw new Error('Collection method ' + i + ' is synchronous');\n      }\n      this.conn.emit('buffer', {\n        _id: opId,\n        modelName: _this.modelName,\n        collectionName: _this.name,\n        method: i,\n        args: args\n      });\n      let callback;\n      let _args = args;\n      let promise = null;\n      let timeout = null;\n      if (syncCollectionMethods[i]) {\n        this.addQueue(() => {\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\n        }, []);\n      } else if (typeof lastArg === 'function') {\n        callback = function collectionOperationCallback() {\n          if (timeout != null) {\n            clearTimeout(timeout);\n          }\n          return lastArg.apply(this, arguments);\n        };\n        _args = args.slice(0, args.length - 1).concat([callback]);\n      } else {\n        promise = new this.Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      }\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\n      timeout = setTimeout(() => {\n        const removed = this.removeQueue(i, _args);\n        if (removed) {\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' + bufferTimeoutMS + 'ms';\n          const err = new MongooseError(message);\n          this.conn.emit('buffer-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            error: err\n          });\n          callback(err);\n        }\n      }, bufferTimeoutMS);\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(i, _args);\n        return;\n      }\n      return promise;\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n      callback = function collectionOperationCallback(err, res) {\n        if (err != null) {\n          _this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            error: err\n          });\n        } else {\n          _this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            result: res\n          });\n        }\n        return lastArg.apply(this, arguments);\n      };\n      _args = args.slice(0, args.length - 1).concat([callback]);\n    }\n    if (debug) {\n      if (typeof debug === 'function') {\n        debug.apply(_this, [_this.name, i].concat(args.slice(0, args.length - 1)));\n      } else if (debug instanceof stream.Writable) {\n        this.$printToStream(_this.name, i, args, debug);\n      } else {\n        const color = debug.color == null ? true : debug.color;\n        const shell = debug.shell == null ? false : debug.shell;\n        this.$print(_this.name, i, args, color, shell);\n      }\n    }\n    this.conn.emit('operation-start', {\n      _id: opId,\n      modelName: _this.modelName,\n      collectionName: this.name,\n      method: i,\n      params: _args\n    });\n    try {\n      if (collection == null) {\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' + 'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' + 'you have `bufferCommands = false`.';\n        throw new MongooseError(message);\n      }\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        return lastArg.call(this, null, collection[i].apply(collection, _args.slice(0, _args.length - 1)));\n      }\n      const ret = collection[i].apply(collection, _args);\n      if (ret != null && typeof ret.then === 'function') {\n        return ret.then(res => {\n          this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: this.modelName,\n            collectionName: this.name,\n            method: i,\n            result: res\n          });\n          return res;\n        }, err => {\n          this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: this.modelName,\n            collectionName: this.name,\n            method: i,\n            error: err\n          });\n          throw err;\n        });\n      }\n      return ret;\n    } catch (error) {\n      // Collection operation may throw because of max bson size, catch it here\n      // See gh-3906\n      if (typeof lastArg === 'function') {\n        return lastArg(error);\n      } else {\n        this.conn.emit('operation-end', {\n          _id: opId,\n          modelName: _this.modelName,\n          collectionName: this.name,\n          method: i,\n          error: error\n        });\n        throw error;\n      }\n    }\n  };\n}\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\n  // collection abstraction\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key);\n  // Skip properties with getters because they may throw errors (gh-8528)\n  if (descriptor.get !== undefined) {\n    continue;\n  }\n  if (typeof Collection.prototype[key] !== 'function') {\n    continue;\n  }\n  iter(key);\n}\n\n/**\r\n * Debug print helper\r\n *\r\n * @api public\r\n * @method $print\r\n */\n\nNativeCollection.prototype.$print = function (name, i, args, color, shell) {\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j], color, shell));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n  console.info(moduleName + functionCall + params);\n};\n\n/**\r\n * Debug print helper\r\n *\r\n * @api public\r\n * @method $print\r\n */\n\nNativeCollection.prototype.$printToStream = function (name, i, args, stream) {\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j]));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n  stream.write(functionCall + params, 'utf8');\n};\n\n/**\r\n * Formatter for debug print args\r\n *\r\n * @api public\r\n * @method $format\r\n */\n\nNativeCollection.prototype.$format = function (arg, color, shell) {\n  const type = typeof arg;\n  if (type === 'function' || type === 'undefined') return '';\n  return format(arg, false, color, shell);\n};\n\n/**\r\n * Debug print helper\r\n * @param {Any} representation\r\n * @api private\r\n */\n\nfunction inspectable(representation) {\n  const ret = {\n    inspect: function () {\n      return representation;\n    }\n  };\n  if (util.inspect.custom) {\n    ret[util.inspect.custom] = ret.inspect;\n  }\n  return ret;\n}\nfunction map(o) {\n  return format(o, true);\n}\nfunction formatObjectId(x, key) {\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\n}\nfunction formatDate(x, key, shell) {\n  if (shell) {\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\n  } else {\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\n  }\n}\nfunction format(obj, sub, color, shell) {\n  if (obj && typeof obj.toBSON === 'function') {\n    obj = obj.toBSON();\n  }\n  if (obj == null) {\n    return obj;\n  }\n  const clone = require('../../helpers/clone');\n  let x = clone(obj, {\n    transform: false\n  });\n  const constructorName = getConstructorName(x);\n  if (constructorName === 'Binary') {\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\n  } else if (constructorName === 'ObjectID') {\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\n  } else if (constructorName === 'Date') {\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\n  } else if (constructorName === 'Object') {\n    const keys = Object.keys(x);\n    const numKeys = keys.length;\n    let key;\n    for (let i = 0; i < numKeys; ++i) {\n      key = keys[i];\n      if (x[key]) {\n        let error;\n        if (typeof x[key].toBSON === 'function') {\n          try {\n            // `session.toBSON()` throws an error. This means we throw errors\n            // in debug mode when using transactions, see gh-6712. As a\n            // workaround, catch `toBSON()` errors, try to serialize without\n            // `toBSON()`, and rethrow if serialization still fails.\n            x[key] = x[key].toBSON();\n          } catch (_error) {\n            error = _error;\n          }\n        }\n        const _constructorName = getConstructorName(x[key]);\n        if (_constructorName === 'Binary') {\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' + x[key].buffer.toString('base64') + '\")';\n        } else if (_constructorName === 'Object') {\n          x[key] = format(x[key], true);\n        } else if (_constructorName === 'ObjectID') {\n          formatObjectId(x, key);\n        } else if (_constructorName === 'Date') {\n          formatDate(x, key, shell);\n        } else if (_constructorName === 'ClientSession') {\n          x[key] = inspectable('ClientSession(\"' + (x[key] && x[key].id && x[key].id.id && x[key].id.id.buffer || '').toString('hex') + '\")');\n        } else if (Array.isArray(x[key])) {\n          x[key] = x[key].map(map);\n        } else if (error != null) {\n          // If there was an error with `toBSON()` and the object wasn't\n          // already converted to a string representation, rethrow it.\n          // Open to better ideas on how to handle this.\n          throw error;\n        }\n      }\n    }\n  }\n  if (sub) {\n    return x;\n  }\n  return util.inspect(x, false, 10, color).replace(/\\n/g, '').replace(/\\s{2,}/g, ' ');\n}\n\n/**\r\n * Retrieves information about this collections indexes.\r\n *\r\n * @param {Function} callback\r\n * @method getIndexes\r\n * @api public\r\n */\n\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\n\n/*!\r\n * Module exports.\r\n */\n\nmodule.exports = NativeCollection;","map":{"version":3,"names":["MongooseCollection","require","MongooseError","Collection","ObjectId","getConstructorName","stream","util","NativeCollection","name","conn","options","collection","Promise","modelName","_closed","apply","arguments","Object","setPrototypeOf","prototype","onOpen","_this","db","call","onClose","force","syncCollectionMethods","watch","find","aggregate","iter","i","args","Array","from","globalDebug","base","debug","connectionDebug","lastArg","length","opId","$wasForceClosed","error","_args","callback","_shouldBufferCommands","buffer","Error","emit","_id","collectionName","method","promise","timeout","addQueue","slice","collectionOperationCallback","clearTimeout","concat","resolve","reject","err","res","bufferTimeoutMS","_getBufferTimeoutMS","setTimeout","removed","removeQueue","message","result","Writable","$printToStream","color","shell","$print","params","ret","then","key","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","get","undefined","moduleName","functionCall","join","j","$format","unshift","console","info","write","arg","type","format","inspectable","representation","inspect","custom","map","o","formatObjectId","x","toHexString","formatDate","toUTCString","obj","sub","toBSON","clone","transform","constructorName","sub_type","toString","keys","numKeys","_error","_constructorName","id","isArray","replace","getIndexes","indexInformation","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js"],"sourcesContent":["'use strict';\r\n\r\n/*!\r\n * Module dependencies.\r\n */\r\n\r\nconst MongooseCollection = require('../../collection');\r\nconst MongooseError = require('../../error/mongooseError');\r\nconst Collection = require('mongodb').Collection;\r\nconst ObjectId = require('./objectid');\r\nconst getConstructorName = require('../../helpers/getConstructorName');\r\nconst stream = require('stream');\r\nconst util = require('util');\r\n\r\n/**\r\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\r\n *\r\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\r\n *\r\n * @inherits Collection\r\n * @api private\r\n */\r\n\r\nfunction NativeCollection(name, conn, options) {\r\n  this.collection = null;\r\n  this.Promise = options.Promise || Promise;\r\n  this.modelName = options.modelName;\r\n  delete options.modelName;\r\n  this._closed = false;\r\n  MongooseCollection.apply(this, arguments);\r\n}\r\n\r\n/*!\r\n * Inherit from abstract Collection.\r\n */\r\n\r\nObject.setPrototypeOf(NativeCollection.prototype, MongooseCollection.prototype);\r\n\r\n/**\r\n * Called when the connection opens.\r\n *\r\n * @api private\r\n */\r\n\r\nNativeCollection.prototype.onOpen = function() {\r\n  const _this = this;\r\n\r\n  _this.collection = _this.conn.db.collection(_this.name);\r\n  MongooseCollection.prototype.onOpen.call(_this);\r\n  return _this.collection;\r\n};\r\n\r\n/**\r\n * Called when the connection closes\r\n *\r\n * @api private\r\n */\r\n\r\nNativeCollection.prototype.onClose = function(force) {\r\n  MongooseCollection.prototype.onClose.call(this, force);\r\n};\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nconst syncCollectionMethods = { watch: true, find: true, aggregate: true };\r\n\r\n/**\r\n * Copy the collection methods and make them subject to queues\r\n * @param {Number|String} I\r\n * @api private\r\n */\r\n\r\nfunction iter(i) {\r\n  NativeCollection.prototype[i] = function() {\r\n    const collection = this.collection;\r\n    const args = Array.from(arguments);\r\n    const _this = this;\r\n    const globalDebug = _this &&\r\n      _this.conn &&\r\n      _this.conn.base &&\r\n      _this.conn.base.options &&\r\n      _this.conn.base.options.debug;\r\n    const connectionDebug = _this &&\r\n      _this.conn &&\r\n      _this.conn.options &&\r\n      _this.conn.options.debug;\r\n    const debug = connectionDebug == null ? globalDebug : connectionDebug;\r\n    const lastArg = arguments[arguments.length - 1];\r\n    const opId = new ObjectId();\r\n\r\n    // If user force closed, queueing will hang forever. See #5664\r\n    if (this.conn.$wasForceClosed) {\r\n      const error = new MongooseError('Connection was force closed');\r\n      if (args.length > 0 &&\r\n        typeof args[args.length - 1] === 'function') {\r\n        args[args.length - 1](error);\r\n        return;\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    let _args = args;\r\n    let callback = null;\r\n    if (this._shouldBufferCommands() && this.buffer) {\r\n      if (syncCollectionMethods[i] && typeof lastArg !== 'function') {\r\n        throw new Error('Collection method ' + i + ' is synchronous');\r\n      }\r\n\r\n      this.conn.emit('buffer', {\r\n        _id: opId,\r\n        modelName: _this.modelName,\r\n        collectionName: _this.name,\r\n        method: i,\r\n        args: args\r\n      });\r\n\r\n      let callback;\r\n      let _args = args;\r\n      let promise = null;\r\n      let timeout = null;\r\n      if (syncCollectionMethods[i]) {\r\n        this.addQueue(() => {\r\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\r\n        }, []);\r\n      } else if (typeof lastArg === 'function') {\r\n        callback = function collectionOperationCallback() {\r\n          if (timeout != null) {\r\n            clearTimeout(timeout);\r\n          }\r\n          return lastArg.apply(this, arguments);\r\n        };\r\n        _args = args.slice(0, args.length - 1).concat([callback]);\r\n      } else {\r\n        promise = new this.Promise((resolve, reject) => {\r\n          callback = function collectionOperationCallback(err, res) {\r\n            if (timeout != null) {\r\n              clearTimeout(timeout);\r\n            }\r\n            if (err != null) {\r\n              return reject(err);\r\n            }\r\n            resolve(res);\r\n          };\r\n          _args = args.concat([callback]);\r\n          this.addQueue(i, _args);\r\n        });\r\n      }\r\n\r\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\r\n      timeout = setTimeout(() => {\r\n        const removed = this.removeQueue(i, _args);\r\n        if (removed) {\r\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' +\r\n            bufferTimeoutMS + 'ms';\r\n          const err = new MongooseError(message);\r\n          this.conn.emit('buffer-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\r\n          callback(err);\r\n        }\r\n      }, bufferTimeoutMS);\r\n\r\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\r\n        this.addQueue(i, _args);\r\n        return;\r\n      }\r\n\r\n      return promise;\r\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\r\n      callback = function collectionOperationCallback(err, res) {\r\n        if (err != null) {\r\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\r\n        } else {\r\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, result: res });\r\n        }\r\n        return lastArg.apply(this, arguments);\r\n      };\r\n      _args = args.slice(0, args.length - 1).concat([callback]);\r\n    }\r\n\r\n    if (debug) {\r\n      if (typeof debug === 'function') {\r\n        debug.apply(_this,\r\n          [_this.name, i].concat(args.slice(0, args.length - 1)));\r\n      } else if (debug instanceof stream.Writable) {\r\n        this.$printToStream(_this.name, i, args, debug);\r\n      } else {\r\n        const color = debug.color == null ? true : debug.color;\r\n        const shell = debug.shell == null ? false : debug.shell;\r\n        this.$print(_this.name, i, args, color, shell);\r\n      }\r\n    }\r\n\r\n    this.conn.emit('operation-start', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, params: _args });\r\n\r\n    try {\r\n      if (collection == null) {\r\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' +\r\n          'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' +\r\n          'you have `bufferCommands = false`.';\r\n        throw new MongooseError(message);\r\n      }\r\n\r\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\r\n        return lastArg.call(this, null, collection[i].apply(collection, _args.slice(0, _args.length - 1)));\r\n      }\r\n\r\n      const ret = collection[i].apply(collection, _args);\r\n      if (ret != null && typeof ret.then === 'function') {\r\n        return ret.then(\r\n          res => {\r\n            this.conn.emit('operation-end', { _id: opId, modelName: this.modelName, collectionName: this.name, method: i, result: res });\r\n            return res;\r\n          },\r\n          err => {\r\n            this.conn.emit('operation-end', { _id: opId, modelName: this.modelName, collectionName: this.name, method: i, error: err });\r\n            throw err;\r\n          }\r\n        );\r\n      }\r\n      return ret;\r\n    } catch (error) {\r\n      // Collection operation may throw because of max bson size, catch it here\r\n      // See gh-3906\r\n      if (typeof lastArg === 'function') {\r\n        return lastArg(error);\r\n      } else {\r\n        this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, error: error });\r\n\r\n        throw error;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\r\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\r\n  // collection abstraction\r\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key);\r\n  // Skip properties with getters because they may throw errors (gh-8528)\r\n  if (descriptor.get !== undefined) {\r\n    continue;\r\n  }\r\n  if (typeof Collection.prototype[key] !== 'function') {\r\n    continue;\r\n  }\r\n\r\n  iter(key);\r\n}\r\n\r\n/**\r\n * Debug print helper\r\n *\r\n * @api public\r\n * @method $print\r\n */\r\n\r\nNativeCollection.prototype.$print = function(name, i, args, color, shell) {\r\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\r\n  const functionCall = [name, i].join('.');\r\n  const _args = [];\r\n  for (let j = args.length - 1; j >= 0; --j) {\r\n    if (this.$format(args[j]) || _args.length) {\r\n      _args.unshift(this.$format(args[j], color, shell));\r\n    }\r\n  }\r\n  const params = '(' + _args.join(', ') + ')';\r\n\r\n  console.info(moduleName + functionCall + params);\r\n};\r\n\r\n/**\r\n * Debug print helper\r\n *\r\n * @api public\r\n * @method $print\r\n */\r\n\r\nNativeCollection.prototype.$printToStream = function(name, i, args, stream) {\r\n  const functionCall = [name, i].join('.');\r\n  const _args = [];\r\n  for (let j = args.length - 1; j >= 0; --j) {\r\n    if (this.$format(args[j]) || _args.length) {\r\n      _args.unshift(this.$format(args[j]));\r\n    }\r\n  }\r\n  const params = '(' + _args.join(', ') + ')';\r\n\r\n  stream.write(functionCall + params, 'utf8');\r\n};\r\n\r\n/**\r\n * Formatter for debug print args\r\n *\r\n * @api public\r\n * @method $format\r\n */\r\n\r\nNativeCollection.prototype.$format = function(arg, color, shell) {\r\n  const type = typeof arg;\r\n  if (type === 'function' || type === 'undefined') return '';\r\n  return format(arg, false, color, shell);\r\n};\r\n\r\n/**\r\n * Debug print helper\r\n * @param {Any} representation\r\n * @api private\r\n */\r\n\r\nfunction inspectable(representation) {\r\n  const ret = {\r\n    inspect: function() { return representation; }\r\n  };\r\n  if (util.inspect.custom) {\r\n    ret[util.inspect.custom] = ret.inspect;\r\n  }\r\n  return ret;\r\n}\r\nfunction map(o) {\r\n  return format(o, true);\r\n}\r\nfunction formatObjectId(x, key) {\r\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\r\n}\r\nfunction formatDate(x, key, shell) {\r\n  if (shell) {\r\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\r\n  } else {\r\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\r\n  }\r\n}\r\nfunction format(obj, sub, color, shell) {\r\n  if (obj && typeof obj.toBSON === 'function') {\r\n    obj = obj.toBSON();\r\n  }\r\n  if (obj == null) {\r\n    return obj;\r\n  }\r\n\r\n  const clone = require('../../helpers/clone');\r\n  let x = clone(obj, { transform: false });\r\n  const constructorName = getConstructorName(x);\r\n\r\n  if (constructorName === 'Binary') {\r\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\r\n  } else if (constructorName === 'ObjectID') {\r\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\r\n  } else if (constructorName === 'Date') {\r\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\r\n  } else if (constructorName === 'Object') {\r\n    const keys = Object.keys(x);\r\n    const numKeys = keys.length;\r\n    let key;\r\n    for (let i = 0; i < numKeys; ++i) {\r\n      key = keys[i];\r\n      if (x[key]) {\r\n        let error;\r\n        if (typeof x[key].toBSON === 'function') {\r\n          try {\r\n            // `session.toBSON()` throws an error. This means we throw errors\r\n            // in debug mode when using transactions, see gh-6712. As a\r\n            // workaround, catch `toBSON()` errors, try to serialize without\r\n            // `toBSON()`, and rethrow if serialization still fails.\r\n            x[key] = x[key].toBSON();\r\n          } catch (_error) {\r\n            error = _error;\r\n          }\r\n        }\r\n        const _constructorName = getConstructorName(x[key]);\r\n        if (_constructorName === 'Binary') {\r\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' +\r\n            x[key].buffer.toString('base64') + '\")';\r\n        } else if (_constructorName === 'Object') {\r\n          x[key] = format(x[key], true);\r\n        } else if (_constructorName === 'ObjectID') {\r\n          formatObjectId(x, key);\r\n        } else if (_constructorName === 'Date') {\r\n          formatDate(x, key, shell);\r\n        } else if (_constructorName === 'ClientSession') {\r\n          x[key] = inspectable('ClientSession(\"' +\r\n            (\r\n              x[key] &&\r\n              x[key].id &&\r\n              x[key].id.id &&\r\n              x[key].id.id.buffer || ''\r\n            ).toString('hex') + '\")');\r\n        } else if (Array.isArray(x[key])) {\r\n          x[key] = x[key].map(map);\r\n        } else if (error != null) {\r\n          // If there was an error with `toBSON()` and the object wasn't\r\n          // already converted to a string representation, rethrow it.\r\n          // Open to better ideas on how to handle this.\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (sub) {\r\n    return x;\r\n  }\r\n\r\n  return util.\r\n    inspect(x, false, 10, color).\r\n    replace(/\\n/g, '').\r\n    replace(/\\s{2,}/g, ' ');\r\n}\r\n\r\n/**\r\n * Retrieves information about this collections indexes.\r\n *\r\n * @param {Function} callback\r\n * @method getIndexes\r\n * @api public\r\n */\r\n\r\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\r\n\r\n/*!\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = NativeCollection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}