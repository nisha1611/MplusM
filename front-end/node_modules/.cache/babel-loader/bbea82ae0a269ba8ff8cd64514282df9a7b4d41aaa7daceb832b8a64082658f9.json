{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar inspect = require('../');\ntest('Symbol.toStringTag', {\n  skip: !hasToStringTag\n}, function (t) {\n  t.plan(4);\n  var obj = {\n    a: 1\n  };\n  t.equal(inspect(obj), '{ a: 1 }', 'object, no Symbol.toStringTag');\n  obj[Symbol.toStringTag] = 'foo';\n  t.equal(inspect(obj), '{ a: 1, [Symbol(Symbol.toStringTag)]: \\'foo\\' }', 'object with Symbol.toStringTag');\n  t.test('null objects', {\n    skip: 'toString' in {\n      __proto__: null\n    }\n  }, function (st) {\n    st.plan(2);\n    var dict = {\n      __proto__: null,\n      a: 1\n    };\n    st.equal(inspect(dict), '[Object: null prototype] { a: 1 }', 'null object with Symbol.toStringTag');\n    dict[Symbol.toStringTag] = 'Dict';\n    st.equal(inspect(dict), '[Dict: null prototype] { a: 1, [Symbol(Symbol.toStringTag)]: \\'Dict\\' }', 'null object with Symbol.toStringTag');\n  });\n  t.test('instances', function (st) {\n    st.plan(4);\n    function C() {\n      this.a = 1;\n    }\n    st.equal(Object.prototype.toString.call(new C()), '[object Object]', 'instance, no toStringTag, Object.prototype.toString');\n    st.equal(inspect(new C()), 'C { a: 1 }', 'instance, no toStringTag');\n    C.prototype[Symbol.toStringTag] = 'Class!';\n    st.equal(Object.prototype.toString.call(new C()), '[object Class!]', 'instance, with toStringTag, Object.prototype.toString');\n    st.equal(inspect(new C()), 'C [Class!] { a: 1 }', 'instance, with toStringTag');\n  });\n});","map":{"version":3,"names":["test","require","hasToStringTag","inspect","skip","t","plan","obj","a","equal","Symbol","toStringTag","__proto__","st","dict","C","Object","prototype","toString","call"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/object-inspect/test/toStringTag.js"],"sourcesContent":["'use strict';\r\n\r\nvar test = require('tape');\r\nvar hasToStringTag = require('has-tostringtag/shams')();\r\n\r\nvar inspect = require('../');\r\n\r\ntest('Symbol.toStringTag', { skip: !hasToStringTag }, function (t) {\r\n    t.plan(4);\r\n\r\n    var obj = { a: 1 };\r\n    t.equal(inspect(obj), '{ a: 1 }', 'object, no Symbol.toStringTag');\r\n\r\n    obj[Symbol.toStringTag] = 'foo';\r\n    t.equal(inspect(obj), '{ a: 1, [Symbol(Symbol.toStringTag)]: \\'foo\\' }', 'object with Symbol.toStringTag');\r\n\r\n    t.test('null objects', { skip: 'toString' in { __proto__: null } }, function (st) {\r\n        st.plan(2);\r\n\r\n        var dict = { __proto__: null, a: 1 };\r\n        st.equal(inspect(dict), '[Object: null prototype] { a: 1 }', 'null object with Symbol.toStringTag');\r\n\r\n        dict[Symbol.toStringTag] = 'Dict';\r\n        st.equal(inspect(dict), '[Dict: null prototype] { a: 1, [Symbol(Symbol.toStringTag)]: \\'Dict\\' }', 'null object with Symbol.toStringTag');\r\n    });\r\n\r\n    t.test('instances', function (st) {\r\n        st.plan(4);\r\n\r\n        function C() {\r\n            this.a = 1;\r\n        }\r\n        st.equal(Object.prototype.toString.call(new C()), '[object Object]', 'instance, no toStringTag, Object.prototype.toString');\r\n        st.equal(inspect(new C()), 'C { a: 1 }', 'instance, no toStringTag');\r\n\r\n        C.prototype[Symbol.toStringTag] = 'Class!';\r\n        st.equal(Object.prototype.toString.call(new C()), '[object Class!]', 'instance, with toStringTag, Object.prototype.toString');\r\n        st.equal(inspect(new C()), 'C [Class!] { a: 1 }', 'instance, with toStringTag');\r\n    });\r\n});\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,cAAc,GAAGD,OAAO,CAAC,uBAAuB,CAAC,EAAE;AAEvD,IAAIE,OAAO,GAAGF,OAAO,CAAC,KAAK,CAAC;AAE5BD,IAAI,CAAC,oBAAoB,EAAE;EAAEI,IAAI,EAAE,CAACF;AAAe,CAAC,EAAE,UAAUG,CAAC,EAAE;EAC/DA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAET,IAAIC,GAAG,GAAG;IAAEC,CAAC,EAAE;EAAE,CAAC;EAClBH,CAAC,CAACI,KAAK,CAACN,OAAO,CAACI,GAAG,CAAC,EAAE,UAAU,EAAE,+BAA+B,CAAC;EAElEA,GAAG,CAACG,MAAM,CAACC,WAAW,CAAC,GAAG,KAAK;EAC/BN,CAAC,CAACI,KAAK,CAACN,OAAO,CAACI,GAAG,CAAC,EAAE,iDAAiD,EAAE,gCAAgC,CAAC;EAE1GF,CAAC,CAACL,IAAI,CAAC,cAAc,EAAE;IAAEI,IAAI,EAAE,UAAU,IAAI;MAAEQ,SAAS,EAAE;IAAK;EAAE,CAAC,EAAE,UAAUC,EAAE,EAAE;IAC9EA,EAAE,CAACP,IAAI,CAAC,CAAC,CAAC;IAEV,IAAIQ,IAAI,GAAG;MAAEF,SAAS,EAAE,IAAI;MAAEJ,CAAC,EAAE;IAAE,CAAC;IACpCK,EAAE,CAACJ,KAAK,CAACN,OAAO,CAACW,IAAI,CAAC,EAAE,mCAAmC,EAAE,qCAAqC,CAAC;IAEnGA,IAAI,CAACJ,MAAM,CAACC,WAAW,CAAC,GAAG,MAAM;IACjCE,EAAE,CAACJ,KAAK,CAACN,OAAO,CAACW,IAAI,CAAC,EAAE,yEAAyE,EAAE,qCAAqC,CAAC;EAC7I,CAAC,CAAC;EAEFT,CAAC,CAACL,IAAI,CAAC,WAAW,EAAE,UAAUa,EAAE,EAAE;IAC9BA,EAAE,CAACP,IAAI,CAAC,CAAC,CAAC;IAEV,SAASS,CAAC,GAAG;MACT,IAAI,CAACP,CAAC,GAAG,CAAC;IACd;IACAK,EAAE,CAACJ,KAAK,CAACO,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAC,IAAIJ,CAAC,EAAE,CAAC,EAAE,iBAAiB,EAAE,qDAAqD,CAAC;IAC3HF,EAAE,CAACJ,KAAK,CAACN,OAAO,CAAC,IAAIY,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,0BAA0B,CAAC;IAEpEA,CAAC,CAACE,SAAS,CAACP,MAAM,CAACC,WAAW,CAAC,GAAG,QAAQ;IAC1CE,EAAE,CAACJ,KAAK,CAACO,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAC,IAAIJ,CAAC,EAAE,CAAC,EAAE,iBAAiB,EAAE,uDAAuD,CAAC;IAC7HF,EAAE,CAACJ,KAAK,CAACN,OAAO,CAAC,IAAIY,CAAC,EAAE,CAAC,EAAE,qBAAqB,EAAE,4BAA4B,CAAC;EACnF,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}