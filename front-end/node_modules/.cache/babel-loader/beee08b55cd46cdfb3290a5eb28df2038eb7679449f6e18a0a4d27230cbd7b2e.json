{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateConditions = void 0;\nconst debug_1 = require(\"../debug\");\nconst evaluateCondition_1 = require(\"./evaluateCondition\");\nconst evaluateConditions = function () {\n  let conditions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let options = arguments.length > 1 ? arguments[1] : undefined;\n  var _a, _b;\n  const conditionsReferenceRecord = {};\n  for (const condition of conditions) {\n    const {\n      result,\n      toAssign\n    } = (0, evaluateCondition_1.evaluateCondition)(condition, {\n      ...options,\n      referenceRecord: {\n        ...options.referenceRecord,\n        ...conditionsReferenceRecord\n      }\n    });\n    if (!result) {\n      return {\n        result\n      };\n    }\n    if (toAssign) {\n      conditionsReferenceRecord[toAssign.name] = toAssign.value;\n      (_b = (_a = options.logger) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, debug_1.debugId, `assign: ${toAssign.name} := ${(0, debug_1.toDebugString)(toAssign.value)}`);\n    }\n  }\n  return {\n    result: true,\n    referenceRecord: conditionsReferenceRecord\n  };\n};\nexports.evaluateConditions = evaluateConditions;","map":{"version":3,"names":["Object","defineProperty","exports","value","evaluateConditions","debug_1","require","evaluateCondition_1","conditions","options","_a","_b","conditionsReferenceRecord","condition","result","toAssign","evaluateCondition","referenceRecord","name","logger","debug","call","debugId","toDebugString"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateConditions.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.evaluateConditions = void 0;\r\nconst debug_1 = require(\"../debug\");\r\nconst evaluateCondition_1 = require(\"./evaluateCondition\");\r\nconst evaluateConditions = (conditions = [], options) => {\r\n    var _a, _b;\r\n    const conditionsReferenceRecord = {};\r\n    for (const condition of conditions) {\r\n        const { result, toAssign } = (0, evaluateCondition_1.evaluateCondition)(condition, {\r\n            ...options,\r\n            referenceRecord: {\r\n                ...options.referenceRecord,\r\n                ...conditionsReferenceRecord,\r\n            },\r\n        });\r\n        if (!result) {\r\n            return { result };\r\n        }\r\n        if (toAssign) {\r\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\r\n            (_b = (_a = options.logger) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, debug_1.debugId, `assign: ${toAssign.name} := ${(0, debug_1.toDebugString)(toAssign.value)}`);\r\n        }\r\n    }\r\n    return { result: true, referenceRecord: conditionsReferenceRecord };\r\n};\r\nexports.evaluateConditions = evaluateConditions;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAMF,kBAAkB,GAAG,YAA8B;EAAA,IAA7BI,UAAU,uEAAG,EAAE;EAAA,IAAEC,OAAO;EAChD,IAAIC,EAAE,EAAEC,EAAE;EACV,MAAMC,yBAAyB,GAAG,CAAC,CAAC;EACpC,KAAK,MAAMC,SAAS,IAAIL,UAAU,EAAE;IAChC,MAAM;MAAEM,MAAM;MAAEC;IAAS,CAAC,GAAG,CAAC,CAAC,EAAER,mBAAmB,CAACS,iBAAiB,EAAEH,SAAS,EAAE;MAC/E,GAAGJ,OAAO;MACVQ,eAAe,EAAE;QACb,GAAGR,OAAO,CAACQ,eAAe;QAC1B,GAAGL;MACP;IACJ,CAAC,CAAC;IACF,IAAI,CAACE,MAAM,EAAE;MACT,OAAO;QAAEA;MAAO,CAAC;IACrB;IACA,IAAIC,QAAQ,EAAE;MACVH,yBAAyB,CAACG,QAAQ,CAACG,IAAI,CAAC,GAAGH,QAAQ,CAACZ,KAAK;MACzD,CAACQ,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,CAACU,MAAM,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,KAAK,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,IAAI,CAACX,EAAE,EAAEL,OAAO,CAACiB,OAAO,EAAG,WAAUP,QAAQ,CAACG,IAAK,OAAM,CAAC,CAAC,EAAEb,OAAO,CAACkB,aAAa,EAAER,QAAQ,CAACZ,KAAK,CAAE,EAAC,CAAC;IAC7N;EACJ;EACA,OAAO;IAAEW,MAAM,EAAE,IAAI;IAAEG,eAAe,EAAEL;EAA0B,CAAC;AACvE,CAAC;AACDV,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}