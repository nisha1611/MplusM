{"ast":null,"code":"import { memoize } from \"@aws-sdk/property-provider\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = function () {\n  let {\n    defaultsMode\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n      case \"auto\":\n        return Promise.resolve(\"mobile\");\n      case \"mobile\":\n      case \"in-region\":\n      case \"cross-region\":\n      case \"standard\":\n      case \"legacy\":\n        return Promise.resolve(mode?.toLocaleLowerCase());\n      case undefined:\n        return Promise.resolve(\"legacy\");\n      default:\n        throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n  });\n};","map":{"version":3,"names":["memoize","DEFAULTS_MODE_OPTIONS","resolveDefaultsModeConfig","defaultsMode","mode","toLowerCase","Promise","resolve","toLocaleLowerCase","undefined","Error","join"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.native.js"],"sourcesContent":["import { memoize } from \"@aws-sdk/property-provider\";\r\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\r\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\r\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\r\n    switch (mode?.toLowerCase()) {\r\n        case \"auto\":\r\n            return Promise.resolve(\"mobile\");\r\n        case \"mobile\":\r\n        case \"in-region\":\r\n        case \"cross-region\":\r\n        case \"standard\":\r\n        case \"legacy\":\r\n            return Promise.resolve(mode?.toLocaleLowerCase());\r\n        case undefined:\r\n            return Promise.resolve(\"legacy\");\r\n        default:\r\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\r\n    }\r\n});\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,4BAA4B;AACpD,SAASC,qBAAqB,QAAQ,aAAa;AACnD,OAAO,MAAMC,yBAAyB,GAAG;EAAA,IAAC;IAAEC;EAAc,CAAC,uEAAG,CAAC,CAAC;EAAA,OAAKH,OAAO,CAAC,YAAY;IACrF,MAAMI,IAAI,GAAG,OAAOD,YAAY,KAAK,UAAU,GAAG,MAAMA,YAAY,EAAE,GAAGA,YAAY;IACrF,QAAQC,IAAI,EAAEC,WAAW,EAAE;MACvB,KAAK,MAAM;QACP,OAAOC,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;MACpC,KAAK,QAAQ;MACb,KAAK,WAAW;MAChB,KAAK,cAAc;MACnB,KAAK,UAAU;MACf,KAAK,QAAQ;QACT,OAAOD,OAAO,CAACC,OAAO,CAACH,IAAI,EAAEI,iBAAiB,EAAE,CAAC;MACrD,KAAKC,SAAS;QACV,OAAOH,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;MACpC;QACI,MAAM,IAAIG,KAAK,CAAE,gDAA+CT,qBAAqB,CAACU,IAAI,CAAC,IAAI,CAAE,SAAQP,IAAK,EAAC,CAAC;IAAC;EAE7H,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}