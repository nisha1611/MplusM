{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvedPath = void 0;\nconst extended_encode_uri_component_1 = require(\"./extended-encode-uri-component\");\nconst resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n  if (input != null && input[memberName] !== undefined) {\n    const labelValue = labelValueProvider();\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n    }\n    resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel ? labelValue.split(\"/\").map(segment => (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(segment)).join(\"/\") : (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n  }\n  return resolvedPath;\n};\nexports.resolvedPath = resolvedPath;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolvedPath","extended_encode_uri_component_1","require","input","memberName","labelValueProvider","uriLabel","isGreedyLabel","undefined","labelValue","length","Error","replace","split","map","segment","extendedEncodeURIComponent","join"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/smithy-client/dist-cjs/resolve-path.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolvedPath = void 0;\r\nconst extended_encode_uri_component_1 = require(\"./extended-encode-uri-component\");\r\nconst resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\r\n    if (input != null && input[memberName] !== undefined) {\r\n        const labelValue = labelValueProvider();\r\n        if (labelValue.length <= 0) {\r\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\r\n        }\r\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\r\n            ? labelValue\r\n                .split(\"/\")\r\n                .map((segment) => (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(segment))\r\n                .join(\"/\")\r\n            : (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(labelValue));\r\n    }\r\n    else {\r\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\r\n    }\r\n    return resolvedPath;\r\n};\r\nexports.resolvedPath = resolvedPath;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,+BAA+B,GAAGC,OAAO,CAAC,iCAAiC,CAAC;AAClF,MAAMF,YAAY,GAAG,CAACA,YAAY,EAAEG,KAAK,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,aAAa,KAAK;EACnG,IAAIJ,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACC,UAAU,CAAC,KAAKI,SAAS,EAAE;IAClD,MAAMC,UAAU,GAAGJ,kBAAkB,EAAE;IACvC,IAAII,UAAU,CAACC,MAAM,IAAI,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,GAAGP,UAAU,GAAG,GAAG,CAAC;IACrF;IACAJ,YAAY,GAAGA,YAAY,CAACY,OAAO,CAACN,QAAQ,EAAEC,aAAa,GACrDE,UAAU,CACPI,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,OAAO,IAAK,CAAC,CAAC,EAAEd,+BAA+B,CAACe,0BAA0B,EAAED,OAAO,CAAC,CAAC,CAC1FE,IAAI,CAAC,GAAG,CAAC,GACZ,CAAC,CAAC,EAAEhB,+BAA+B,CAACe,0BAA0B,EAAEP,UAAU,CAAC,CAAC;EACtF,CAAC,MACI;IACD,MAAM,IAAIE,KAAK,CAAC,0CAA0C,GAAGP,UAAU,GAAG,GAAG,CAAC;EAClF;EACA,OAAOJ,YAAY;AACvB,CAAC;AACDF,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}