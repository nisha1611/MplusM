{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass LoaderImportDependency extends ModuleDependency {\n  /**\r\n   * @param {string} request request string\r\n   */\n  constructor(request) {\n    super(request);\n    this.weak = true;\n  }\n  get type() {\n    return \"loader import\";\n  }\n  get category() {\n    return \"loaderImport\";\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\r\n   */\n  getCondition(moduleGraph) {\n    return false;\n  }\n}\nmodule.exports = LoaderImportDependency;","map":{"version":3,"names":["ModuleDependency","require","LoaderImportDependency","constructor","request","weak","type","category","getCondition","moduleGraph","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/LoaderImportDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst ModuleDependency = require(\"./ModuleDependency\");\r\n\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\r\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\r\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\nclass LoaderImportDependency extends ModuleDependency {\r\n\t/**\r\n\t * @param {string} request request string\r\n\t */\r\n\tconstructor(request) {\r\n\t\tsuper(request);\r\n\t\tthis.weak = true;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"loader import\";\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"loaderImport\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\r\n\t */\r\n\tgetCondition(moduleGraph) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = LoaderImportDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;;AAEA,MAAMC,sBAAsB,SAASF,gBAAgB,CAAC;EACrD;AACD;AACA;EACCG,WAAW,CAACC,OAAO,EAAE;IACpB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,IAAI;EACjB;EAEA,IAAIC,IAAI,GAAG;IACV,OAAO,eAAe;EACvB;EAEA,IAAIC,QAAQ,GAAG;IACd,OAAO,cAAc;EACtB;;EAEA;AACD;AACA;AACA;EACCC,YAAY,CAACC,WAAW,EAAE;IACzB,OAAO,KAAK;EACb;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGT,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}