{"ast":null,"code":"/*!\r\n * Module dependencies.\r\n */\n\n'use strict';\n\nconst Document = require('../../document');\nconst mongooseArrayMethods = require('./methods');\nconst arrayAtomicsSymbol = require('../../helpers/symbols').arrayAtomicsSymbol;\nconst arrayAtomicsBackupSymbol = require('../../helpers/symbols').arrayAtomicsBackupSymbol;\nconst arrayParentSymbol = require('../../helpers/symbols').arrayParentSymbol;\nconst arrayPathSymbol = require('../../helpers/symbols').arrayPathSymbol;\nconst arraySchemaSymbol = require('../../helpers/symbols').arraySchemaSymbol;\n\n/**\r\n * Mongoose Array constructor.\r\n *\r\n * #### Note:\r\n *\r\n * _Values always have to be passed to the constructor to initialize, otherwise `MongooseArray#push` will mark the array as modified._\r\n *\r\n * @param {Array} values\r\n * @param {String} path\r\n * @param {Document} doc parent document\r\n * @api private\r\n * @inherits Array\r\n * @see https://bit.ly/f6CnZU\r\n */\nconst _basePush = Array.prototype.push;\nconst numberRE = /^\\d+$/;\nfunction MongooseArray(values, path, doc, schematype) {\n  let __array;\n  if (Array.isArray(values)) {\n    const len = values.length;\n\n    // Perf optimizations for small arrays: much faster to use `...` than `for` + `push`,\n    // but large arrays may cause stack overflows. And for arrays of length 0/1, just\n    // modifying the array is faster. Seems small, but adds up when you have a document\n    // with thousands of nested arrays.\n    if (len === 0) {\n      __array = new Array();\n    } else if (len === 1) {\n      __array = new Array(1);\n      __array[0] = values[0];\n    } else if (len < 10000) {\n      __array = new Array();\n      _basePush.apply(__array, values);\n    } else {\n      __array = new Array();\n      for (let i = 0; i < len; ++i) {\n        _basePush.call(__array, values[i]);\n      }\n    }\n  } else {\n    __array = [];\n  }\n  const internals = {\n    [arrayAtomicsSymbol]: {},\n    [arrayAtomicsBackupSymbol]: void 0,\n    [arrayPathSymbol]: path,\n    [arraySchemaSymbol]: schematype,\n    [arrayParentSymbol]: void 0,\n    isMongooseArray: true,\n    isMongooseArrayProxy: true,\n    __array: __array\n  };\n  if (values && values[arrayAtomicsSymbol] != null) {\n    internals[arrayAtomicsSymbol] = values[arrayAtomicsSymbol];\n  }\n\n  // Because doc comes from the context of another function, doc === global\n  // can happen if there was a null somewhere up the chain (see #3020)\n  // RB Jun 17, 2015 updated to check for presence of expected paths instead\n  // to make more proof against unusual node environments\n  if (doc != null && doc instanceof Document) {\n    internals[arrayParentSymbol] = doc;\n    internals[arraySchemaSymbol] = schematype || doc.schema.path(path);\n  }\n  const proxy = new Proxy(__array, {\n    get: function (target, prop) {\n      if (internals.hasOwnProperty(prop)) {\n        return internals[prop];\n      }\n      if (mongooseArrayMethods.hasOwnProperty(prop)) {\n        return mongooseArrayMethods[prop];\n      }\n      return __array[prop];\n    },\n    set: function (target, prop, value) {\n      if (typeof prop === 'string' && numberRE.test(prop)) {\n        mongooseArrayMethods.set.call(proxy, prop, value, false);\n      } else if (internals.hasOwnProperty(prop)) {\n        internals[prop] = value;\n      } else {\n        __array[prop] = value;\n      }\n      return true;\n    }\n  });\n  return proxy;\n}\n\n/*!\r\n * Module exports.\r\n */\n\nmodule.exports = exports = MongooseArray;","map":{"version":3,"names":["Document","require","mongooseArrayMethods","arrayAtomicsSymbol","arrayAtomicsBackupSymbol","arrayParentSymbol","arrayPathSymbol","arraySchemaSymbol","_basePush","Array","prototype","push","numberRE","MongooseArray","values","path","doc","schematype","__array","isArray","len","length","apply","i","call","internals","isMongooseArray","isMongooseArrayProxy","schema","proxy","Proxy","get","target","prop","hasOwnProperty","set","value","test","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/types/array/index.js"],"sourcesContent":["/*!\r\n * Module dependencies.\r\n */\r\n\r\n'use strict';\r\n\r\nconst Document = require('../../document');\r\nconst mongooseArrayMethods = require('./methods');\r\n\r\nconst arrayAtomicsSymbol = require('../../helpers/symbols').arrayAtomicsSymbol;\r\nconst arrayAtomicsBackupSymbol = require('../../helpers/symbols').arrayAtomicsBackupSymbol;\r\nconst arrayParentSymbol = require('../../helpers/symbols').arrayParentSymbol;\r\nconst arrayPathSymbol = require('../../helpers/symbols').arrayPathSymbol;\r\nconst arraySchemaSymbol = require('../../helpers/symbols').arraySchemaSymbol;\r\n\r\n/**\r\n * Mongoose Array constructor.\r\n *\r\n * #### Note:\r\n *\r\n * _Values always have to be passed to the constructor to initialize, otherwise `MongooseArray#push` will mark the array as modified._\r\n *\r\n * @param {Array} values\r\n * @param {String} path\r\n * @param {Document} doc parent document\r\n * @api private\r\n * @inherits Array\r\n * @see https://bit.ly/f6CnZU\r\n */\r\nconst _basePush = Array.prototype.push;\r\nconst numberRE = /^\\d+$/;\r\n\r\nfunction MongooseArray(values, path, doc, schematype) {\r\n  let __array;\r\n\r\n  if (Array.isArray(values)) {\r\n    const len = values.length;\r\n\r\n    // Perf optimizations for small arrays: much faster to use `...` than `for` + `push`,\r\n    // but large arrays may cause stack overflows. And for arrays of length 0/1, just\r\n    // modifying the array is faster. Seems small, but adds up when you have a document\r\n    // with thousands of nested arrays.\r\n    if (len === 0) {\r\n      __array = new Array();\r\n    } else if (len === 1) {\r\n      __array = new Array(1);\r\n      __array[0] = values[0];\r\n    } else if (len < 10000) {\r\n      __array = new Array();\r\n      _basePush.apply(__array, values);\r\n    } else {\r\n      __array = new Array();\r\n      for (let i = 0; i < len; ++i) {\r\n        _basePush.call(__array, values[i]);\r\n      }\r\n    }\r\n  } else {\r\n    __array = [];\r\n  }\r\n\r\n  const internals = {\r\n    [arrayAtomicsSymbol]: {},\r\n    [arrayAtomicsBackupSymbol]: void 0,\r\n    [arrayPathSymbol]: path,\r\n    [arraySchemaSymbol]: schematype,\r\n    [arrayParentSymbol]: void 0,\r\n    isMongooseArray: true,\r\n    isMongooseArrayProxy: true,\r\n    __array: __array\r\n  };\r\n\r\n  if (values && values[arrayAtomicsSymbol] != null) {\r\n    internals[arrayAtomicsSymbol] = values[arrayAtomicsSymbol];\r\n  }\r\n\r\n  // Because doc comes from the context of another function, doc === global\r\n  // can happen if there was a null somewhere up the chain (see #3020)\r\n  // RB Jun 17, 2015 updated to check for presence of expected paths instead\r\n  // to make more proof against unusual node environments\r\n  if (doc != null && doc instanceof Document) {\r\n    internals[arrayParentSymbol] = doc;\r\n    internals[arraySchemaSymbol] = schematype || doc.schema.path(path);\r\n  }\r\n\r\n  const proxy = new Proxy(__array, {\r\n    get: function(target, prop) {\r\n      if (internals.hasOwnProperty(prop)) {\r\n        return internals[prop];\r\n      }\r\n      if (mongooseArrayMethods.hasOwnProperty(prop)) {\r\n        return mongooseArrayMethods[prop];\r\n      }\r\n\r\n      return __array[prop];\r\n    },\r\n    set: function(target, prop, value) {\r\n      if (typeof prop === 'string' && numberRE.test(prop)) {\r\n        mongooseArrayMethods.set.call(proxy, prop, value, false);\r\n      } else if (internals.hasOwnProperty(prop)) {\r\n        internals[prop] = value;\r\n      } else {\r\n        __array[prop] = value;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  return proxy;\r\n}\r\n\r\n/*!\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = MongooseArray;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}