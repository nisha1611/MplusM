{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\nclass AsyncDependenciesBlock extends DependenciesBlock {\n  /**\r\n   * @param {ChunkGroupOptions & { entryOptions?: EntryOptions }} groupOptions options for the group\r\n   * @param {DependencyLocation=} loc the line of code\r\n   * @param {string=} request the request\r\n   */\n  constructor(groupOptions, loc, request) {\n    super();\n    if (typeof groupOptions === \"string\") {\n      groupOptions = {\n        name: groupOptions\n      };\n    } else if (!groupOptions) {\n      groupOptions = {\n        name: undefined\n      };\n    }\n    this.groupOptions = groupOptions;\n    this.loc = loc;\n    this.request = request;\n    this._stringifiedGroupOptions = undefined;\n  }\n\n  /**\r\n   * @returns {string} The name of the chunk\r\n   */\n  get chunkName() {\n    return this.groupOptions.name;\n  }\n\n  /**\r\n   * @param {string} value The new chunk name\r\n   * @returns {void}\r\n   */\n  set chunkName(value) {\n    if (this.groupOptions.name !== value) {\n      this.groupOptions.name = value;\n      this._stringifiedGroupOptions = undefined;\n    }\n  }\n\n  /**\r\n   * @param {Hash} hash the hash used to track dependencies\r\n   * @param {UpdateHashContext} context context\r\n   * @returns {void}\r\n   */\n  updateHash(hash, context) {\n    const {\n      chunkGraph\n    } = context;\n    if (this._stringifiedGroupOptions === undefined) {\n      this._stringifiedGroupOptions = JSON.stringify(this.groupOptions);\n    }\n    const chunkGroup = chunkGraph.getBlockChunkGroup(this);\n    hash.update(`${this._stringifiedGroupOptions}${chunkGroup ? chunkGroup.id : \"\"}`);\n    super.updateHash(hash, context);\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.groupOptions);\n    write(this.loc);\n    write(this.request);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.groupOptions = read();\n    this.loc = read();\n    this.request = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(AsyncDependenciesBlock, \"webpack/lib/AsyncDependenciesBlock\");\nObject.defineProperty(AsyncDependenciesBlock.prototype, \"module\", {\n  get() {\n    throw new Error(\"module property was removed from AsyncDependenciesBlock (it's not needed)\");\n  },\n  set() {\n    throw new Error(\"module property was removed from AsyncDependenciesBlock (it's not needed)\");\n  }\n});\nmodule.exports = AsyncDependenciesBlock;","map":{"version":3,"names":["DependenciesBlock","require","makeSerializable","AsyncDependenciesBlock","constructor","groupOptions","loc","request","name","undefined","_stringifiedGroupOptions","chunkName","value","updateHash","hash","context","chunkGraph","JSON","stringify","chunkGroup","getBlockChunkGroup","update","id","serialize","write","deserialize","read","Object","defineProperty","prototype","get","Error","set","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/AsyncDependenciesBlock.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst DependenciesBlock = require(\"./DependenciesBlock\");\r\nconst makeSerializable = require(\"./util/makeSerializable\");\r\n\r\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\r\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\r\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\r\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\r\n/** @typedef {import(\"./Module\")} Module */\r\n/** @typedef {import(\"./util/Hash\")} Hash */\r\n\r\nclass AsyncDependenciesBlock extends DependenciesBlock {\r\n\t/**\r\n\t * @param {ChunkGroupOptions & { entryOptions?: EntryOptions }} groupOptions options for the group\r\n\t * @param {DependencyLocation=} loc the line of code\r\n\t * @param {string=} request the request\r\n\t */\r\n\tconstructor(groupOptions, loc, request) {\r\n\t\tsuper();\r\n\t\tif (typeof groupOptions === \"string\") {\r\n\t\t\tgroupOptions = { name: groupOptions };\r\n\t\t} else if (!groupOptions) {\r\n\t\t\tgroupOptions = { name: undefined };\r\n\t\t}\r\n\t\tthis.groupOptions = groupOptions;\r\n\t\tthis.loc = loc;\r\n\t\tthis.request = request;\r\n\t\tthis._stringifiedGroupOptions = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} The name of the chunk\r\n\t */\r\n\tget chunkName() {\r\n\t\treturn this.groupOptions.name;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} value The new chunk name\r\n\t * @returns {void}\r\n\t */\r\n\tset chunkName(value) {\r\n\t\tif (this.groupOptions.name !== value) {\r\n\t\t\tthis.groupOptions.name = value;\r\n\t\t\tthis._stringifiedGroupOptions = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Hash} hash the hash used to track dependencies\r\n\t * @param {UpdateHashContext} context context\r\n\t * @returns {void}\r\n\t */\r\n\tupdateHash(hash, context) {\r\n\t\tconst { chunkGraph } = context;\r\n\t\tif (this._stringifiedGroupOptions === undefined) {\r\n\t\t\tthis._stringifiedGroupOptions = JSON.stringify(this.groupOptions);\r\n\t\t}\r\n\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(this);\r\n\t\thash.update(\r\n\t\t\t`${this._stringifiedGroupOptions}${chunkGroup ? chunkGroup.id : \"\"}`\r\n\t\t);\r\n\t\tsuper.updateHash(hash, context);\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.groupOptions);\r\n\t\twrite(this.loc);\r\n\t\twrite(this.request);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.groupOptions = read();\r\n\t\tthis.loc = read();\r\n\t\tthis.request = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmakeSerializable(AsyncDependenciesBlock, \"webpack/lib/AsyncDependenciesBlock\");\r\n\r\nObject.defineProperty(AsyncDependenciesBlock.prototype, \"module\", {\r\n\tget() {\r\n\t\tthrow new Error(\r\n\t\t\t\"module property was removed from AsyncDependenciesBlock (it's not needed)\"\r\n\t\t);\r\n\t},\r\n\tset() {\r\n\t\tthrow new Error(\r\n\t\t\t\"module property was removed from AsyncDependenciesBlock (it's not needed)\"\r\n\t\t);\r\n\t}\r\n});\r\n\r\nmodule.exports = AsyncDependenciesBlock;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}