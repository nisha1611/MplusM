{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remoteProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst remoteProvider = init => {\n  if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n    return (0, credential_provider_imds_1.fromContainerMetadata)(init);\n  }\n  if (process.env[exports.ENV_IMDS_DISABLED]) {\n    return async () => {\n      throw new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n    };\n  }\n  return (0, credential_provider_imds_1.fromInstanceMetadata)(init);\n};\nexports.remoteProvider = remoteProvider;","map":{"version":3,"names":["Object","defineProperty","exports","value","remoteProvider","ENV_IMDS_DISABLED","credential_provider_imds_1","require","property_provider_1","init","process","env","ENV_CMDS_RELATIVE_URI","ENV_CMDS_FULL_URI","fromContainerMetadata","CredentialsProviderError","fromInstanceMetadata"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-node/dist-cjs/remoteProvider.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.remoteProvider = exports.ENV_IMDS_DISABLED = void 0;\r\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\r\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\r\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\r\nconst remoteProvider = (init) => {\r\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\r\n        return (0, credential_provider_imds_1.fromContainerMetadata)(init);\r\n    }\r\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\r\n        return async () => {\r\n            throw new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\r\n        };\r\n    }\r\n    return (0, credential_provider_imds_1.fromInstanceMetadata)(init);\r\n};\r\nexports.remoteProvider = remoteProvider;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,iBAAiB,GAAG,KAAK,CAAC;AAC3D,MAAMC,0BAA0B,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAC/E,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACjEL,OAAO,CAACG,iBAAiB,GAAG,2BAA2B;AACvD,MAAMD,cAAc,GAAIK,IAAI,IAAK;EAC7B,IAAIC,OAAO,CAACC,GAAG,CAACL,0BAA0B,CAACM,qBAAqB,CAAC,IAAIF,OAAO,CAACC,GAAG,CAACL,0BAA0B,CAACO,iBAAiB,CAAC,EAAE;IAC5H,OAAO,CAAC,CAAC,EAAEP,0BAA0B,CAACQ,qBAAqB,EAAEL,IAAI,CAAC;EACtE;EACA,IAAIC,OAAO,CAACC,GAAG,CAACT,OAAO,CAACG,iBAAiB,CAAC,EAAE;IACxC,OAAO,YAAY;MACf,MAAM,IAAIG,mBAAmB,CAACO,wBAAwB,CAAC,+CAA+C,CAAC;IAC3G,CAAC;EACL;EACA,OAAO,CAAC,CAAC,EAAET,0BAA0B,CAACU,oBAAoB,EAAEP,IAAI,CAAC;AACrE,CAAC;AACDP,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}