{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst {\n  isSubset\n} = require(\"../util/SetHelpers\");\nconst {\n  getAllChunks\n} = require(\"./ChunkHelpers\");\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGraph\").EntryModuleWithChunkGroup} EntryModuleWithChunkGroup */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {(string|number)[]} EntryItem */\n\nconst EXPORT_PREFIX = \"var __webpack_exports__ = \";\n\n/**\r\n * @param {ChunkGraph} chunkGraph chunkGraph\r\n * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\r\n * @param {EntryModuleWithChunkGroup[]} entries entries\r\n * @param {Chunk} chunk chunk\r\n * @param {boolean} passive true: passive startup with on chunks loaded\r\n * @returns {string} runtime code\r\n */\nexports.generateEntryStartup = (chunkGraph, runtimeTemplate, entries, chunk, passive) => {\n  /** @type {string[]} */\n  const runtime = [`var __webpack_exec__ = ${runtimeTemplate.returningFunction(`__webpack_require__(${RuntimeGlobals.entryModuleId} = moduleId)`, \"moduleId\")}`];\n  const runModule = id => {\n    return `__webpack_exec__(${JSON.stringify(id)})`;\n  };\n  const outputCombination = (chunks, moduleIds, final) => {\n    if (chunks.size === 0) {\n      runtime.push(`${final ? EXPORT_PREFIX : \"\"}(${moduleIds.map(runModule).join(\", \")});`);\n    } else {\n      const fn = runtimeTemplate.returningFunction(moduleIds.map(runModule).join(\", \"));\n      runtime.push(`${final && !passive ? EXPORT_PREFIX : \"\"}${passive ? RuntimeGlobals.onChunksLoaded : RuntimeGlobals.startupEntrypoint}(0, ${JSON.stringify(Array.from(chunks, c => c.id))}, ${fn});`);\n      if (final && passive) {\n        runtime.push(`${EXPORT_PREFIX}${RuntimeGlobals.onChunksLoaded}();`);\n      }\n    }\n  };\n  let currentChunks = undefined;\n  let currentModuleIds = undefined;\n  for (const [module, entrypoint] of entries) {\n    const runtimeChunk = entrypoint.getRuntimeChunk();\n    const moduleId = chunkGraph.getModuleId(module);\n    const chunks = getAllChunks(entrypoint, chunk, runtimeChunk);\n    if (currentChunks && currentChunks.size === chunks.size && isSubset(currentChunks, chunks)) {\n      currentModuleIds.push(moduleId);\n    } else {\n      if (currentChunks) {\n        outputCombination(currentChunks, currentModuleIds);\n      }\n      currentChunks = chunks;\n      currentModuleIds = [moduleId];\n    }\n  }\n\n  // output current modules with export prefix\n  if (currentChunks) {\n    outputCombination(currentChunks, currentModuleIds, true);\n  }\n  runtime.push(\"\");\n  return Template.asString(runtime);\n};\n\n/**\r\n * @param {Hash} hash the hash to update\r\n * @param {ChunkGraph} chunkGraph chunkGraph\r\n * @param {EntryModuleWithChunkGroup[]} entries entries\r\n * @param {Chunk} chunk chunk\r\n * @returns {void}\r\n */\nexports.updateHashForEntryStartup = (hash, chunkGraph, entries, chunk) => {\n  for (const [module, entrypoint] of entries) {\n    const runtimeChunk = entrypoint.getRuntimeChunk();\n    const moduleId = chunkGraph.getModuleId(module);\n    hash.update(`${moduleId}`);\n    for (const c of getAllChunks(entrypoint, chunk, runtimeChunk)) hash.update(`${c.id}`);\n  }\n};\n\n/**\r\n * @param {Chunk} chunk the chunk\r\n * @param {ChunkGraph} chunkGraph the chunk graph\r\n * @param {function(Chunk, ChunkGraph): boolean} filterFn filter function\r\n * @returns {Set<number | string>} initially fulfilled chunk ids\r\n */\nexports.getInitialChunkIds = (chunk, chunkGraph, filterFn) => {\n  const initialChunkIds = new Set(chunk.ids);\n  for (const c of chunk.getAllInitialChunks()) {\n    if (c === chunk || filterFn(c, chunkGraph)) continue;\n    for (const id of c.ids) initialChunkIds.add(id);\n  }\n  return initialChunkIds;\n};","map":{"version":3,"names":["RuntimeGlobals","require","Template","isSubset","getAllChunks","EXPORT_PREFIX","exports","generateEntryStartup","chunkGraph","runtimeTemplate","entries","chunk","passive","runtime","returningFunction","entryModuleId","runModule","id","JSON","stringify","outputCombination","chunks","moduleIds","final","size","push","map","join","fn","onChunksLoaded","startupEntrypoint","Array","from","c","currentChunks","undefined","currentModuleIds","module","entrypoint","runtimeChunk","getRuntimeChunk","moduleId","getModuleId","asString","updateHashForEntryStartup","hash","update","getInitialChunkIds","filterFn","initialChunkIds","Set","ids","getAllInitialChunks","add"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/javascript/StartupHelpers.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst Template = require(\"../Template\");\r\nconst { isSubset } = require(\"../util/SetHelpers\");\r\nconst { getAllChunks } = require(\"./ChunkHelpers\");\r\n\r\n/** @typedef {import(\"../util/Hash\")} Hash */\r\n/** @typedef {import(\"../Chunk\")} Chunk */\r\n/** @typedef {import(\"../Compilation\")} Compilation */\r\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"../ChunkGraph\").EntryModuleWithChunkGroup} EntryModuleWithChunkGroup */\r\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n/** @typedef {(string|number)[]} EntryItem */\r\n\r\nconst EXPORT_PREFIX = \"var __webpack_exports__ = \";\r\n\r\n/**\r\n * @param {ChunkGraph} chunkGraph chunkGraph\r\n * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\r\n * @param {EntryModuleWithChunkGroup[]} entries entries\r\n * @param {Chunk} chunk chunk\r\n * @param {boolean} passive true: passive startup with on chunks loaded\r\n * @returns {string} runtime code\r\n */\r\nexports.generateEntryStartup = (\r\n\tchunkGraph,\r\n\truntimeTemplate,\r\n\tentries,\r\n\tchunk,\r\n\tpassive\r\n) => {\r\n\t/** @type {string[]} */\r\n\tconst runtime = [\r\n\t\t`var __webpack_exec__ = ${runtimeTemplate.returningFunction(\r\n\t\t\t`__webpack_require__(${RuntimeGlobals.entryModuleId} = moduleId)`,\r\n\t\t\t\"moduleId\"\r\n\t\t)}`\r\n\t];\r\n\r\n\tconst runModule = id => {\r\n\t\treturn `__webpack_exec__(${JSON.stringify(id)})`;\r\n\t};\r\n\tconst outputCombination = (chunks, moduleIds, final) => {\r\n\t\tif (chunks.size === 0) {\r\n\t\t\truntime.push(\r\n\t\t\t\t`${final ? EXPORT_PREFIX : \"\"}(${moduleIds.map(runModule).join(\", \")});`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst fn = runtimeTemplate.returningFunction(\r\n\t\t\t\tmoduleIds.map(runModule).join(\", \")\r\n\t\t\t);\r\n\t\t\truntime.push(\r\n\t\t\t\t`${final && !passive ? EXPORT_PREFIX : \"\"}${\r\n\t\t\t\t\tpassive\r\n\t\t\t\t\t\t? RuntimeGlobals.onChunksLoaded\r\n\t\t\t\t\t\t: RuntimeGlobals.startupEntrypoint\r\n\t\t\t\t}(0, ${JSON.stringify(Array.from(chunks, c => c.id))}, ${fn});`\r\n\t\t\t);\r\n\t\t\tif (final && passive) {\r\n\t\t\t\truntime.push(`${EXPORT_PREFIX}${RuntimeGlobals.onChunksLoaded}();`);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlet currentChunks = undefined;\r\n\tlet currentModuleIds = undefined;\r\n\r\n\tfor (const [module, entrypoint] of entries) {\r\n\t\tconst runtimeChunk = entrypoint.getRuntimeChunk();\r\n\t\tconst moduleId = chunkGraph.getModuleId(module);\r\n\t\tconst chunks = getAllChunks(entrypoint, chunk, runtimeChunk);\r\n\t\tif (\r\n\t\t\tcurrentChunks &&\r\n\t\t\tcurrentChunks.size === chunks.size &&\r\n\t\t\tisSubset(currentChunks, chunks)\r\n\t\t) {\r\n\t\t\tcurrentModuleIds.push(moduleId);\r\n\t\t} else {\r\n\t\t\tif (currentChunks) {\r\n\t\t\t\toutputCombination(currentChunks, currentModuleIds);\r\n\t\t\t}\r\n\t\t\tcurrentChunks = chunks;\r\n\t\t\tcurrentModuleIds = [moduleId];\r\n\t\t}\r\n\t}\r\n\r\n\t// output current modules with export prefix\r\n\tif (currentChunks) {\r\n\t\toutputCombination(currentChunks, currentModuleIds, true);\r\n\t}\r\n\truntime.push(\"\");\r\n\treturn Template.asString(runtime);\r\n};\r\n\r\n/**\r\n * @param {Hash} hash the hash to update\r\n * @param {ChunkGraph} chunkGraph chunkGraph\r\n * @param {EntryModuleWithChunkGroup[]} entries entries\r\n * @param {Chunk} chunk chunk\r\n * @returns {void}\r\n */\r\nexports.updateHashForEntryStartup = (hash, chunkGraph, entries, chunk) => {\r\n\tfor (const [module, entrypoint] of entries) {\r\n\t\tconst runtimeChunk = entrypoint.getRuntimeChunk();\r\n\t\tconst moduleId = chunkGraph.getModuleId(module);\r\n\t\thash.update(`${moduleId}`);\r\n\t\tfor (const c of getAllChunks(entrypoint, chunk, runtimeChunk))\r\n\t\t\thash.update(`${c.id}`);\r\n\t}\r\n};\r\n\r\n/**\r\n * @param {Chunk} chunk the chunk\r\n * @param {ChunkGraph} chunkGraph the chunk graph\r\n * @param {function(Chunk, ChunkGraph): boolean} filterFn filter function\r\n * @returns {Set<number | string>} initially fulfilled chunk ids\r\n */\r\nexports.getInitialChunkIds = (chunk, chunkGraph, filterFn) => {\r\n\tconst initialChunkIds = new Set(chunk.ids);\r\n\tfor (const c of chunk.getAllInitialChunks()) {\r\n\t\tif (c === chunk || filterFn(c, chunkGraph)) continue;\r\n\t\tfor (const id of c.ids) initialChunkIds.add(id);\r\n\t}\r\n\treturn initialChunkIds;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,MAAM;EAAEE;AAAS,CAAC,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAClD,MAAM;EAAEG;AAAa,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,aAAa,GAAG,4BAA4B;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,OAAO,CAACC,oBAAoB,GAAG,CAC9BC,UAAU,EACVC,eAAe,EACfC,OAAO,EACPC,KAAK,EACLC,OAAO,KACH;EACJ;EACA,MAAMC,OAAO,GAAG,CACd,0BAAyBJ,eAAe,CAACK,iBAAiB,CACzD,uBAAsBd,cAAc,CAACe,aAAc,cAAa,EACjE,UAAU,CACT,EAAC,CACH;EAED,MAAMC,SAAS,GAAGC,EAAE,IAAI;IACvB,OAAQ,oBAAmBC,IAAI,CAACC,SAAS,CAACF,EAAE,CAAE,GAAE;EACjD,CAAC;EACD,MAAMG,iBAAiB,GAAG,CAACC,MAAM,EAAEC,SAAS,EAAEC,KAAK,KAAK;IACvD,IAAIF,MAAM,CAACG,IAAI,KAAK,CAAC,EAAE;MACtBX,OAAO,CAACY,IAAI,CACV,GAAEF,KAAK,GAAGlB,aAAa,GAAG,EAAG,IAAGiB,SAAS,CAACI,GAAG,CAACV,SAAS,CAAC,CAACW,IAAI,CAAC,IAAI,CAAE,IAAG,CACxE;IACF,CAAC,MAAM;MACN,MAAMC,EAAE,GAAGnB,eAAe,CAACK,iBAAiB,CAC3CQ,SAAS,CAACI,GAAG,CAACV,SAAS,CAAC,CAACW,IAAI,CAAC,IAAI,CAAC,CACnC;MACDd,OAAO,CAACY,IAAI,CACV,GAAEF,KAAK,IAAI,CAACX,OAAO,GAAGP,aAAa,GAAG,EAAG,GACzCO,OAAO,GACJZ,cAAc,CAAC6B,cAAc,GAC7B7B,cAAc,CAAC8B,iBAClB,OAAMZ,IAAI,CAACC,SAAS,CAACY,KAAK,CAACC,IAAI,CAACX,MAAM,EAAEY,CAAC,IAAIA,CAAC,CAAChB,EAAE,CAAC,CAAE,KAAIW,EAAG,IAAG,CAC/D;MACD,IAAIL,KAAK,IAAIX,OAAO,EAAE;QACrBC,OAAO,CAACY,IAAI,CAAE,GAAEpB,aAAc,GAAEL,cAAc,CAAC6B,cAAe,KAAI,CAAC;MACpE;IACD;EACD,CAAC;EAED,IAAIK,aAAa,GAAGC,SAAS;EAC7B,IAAIC,gBAAgB,GAAGD,SAAS;EAEhC,KAAK,MAAM,CAACE,MAAM,EAAEC,UAAU,CAAC,IAAI5B,OAAO,EAAE;IAC3C,MAAM6B,YAAY,GAAGD,UAAU,CAACE,eAAe,EAAE;IACjD,MAAMC,QAAQ,GAAGjC,UAAU,CAACkC,WAAW,CAACL,MAAM,CAAC;IAC/C,MAAMhB,MAAM,GAAGjB,YAAY,CAACkC,UAAU,EAAE3B,KAAK,EAAE4B,YAAY,CAAC;IAC5D,IACCL,aAAa,IACbA,aAAa,CAACV,IAAI,KAAKH,MAAM,CAACG,IAAI,IAClCrB,QAAQ,CAAC+B,aAAa,EAAEb,MAAM,CAAC,EAC9B;MACDe,gBAAgB,CAACX,IAAI,CAACgB,QAAQ,CAAC;IAChC,CAAC,MAAM;MACN,IAAIP,aAAa,EAAE;QAClBd,iBAAiB,CAACc,aAAa,EAAEE,gBAAgB,CAAC;MACnD;MACAF,aAAa,GAAGb,MAAM;MACtBe,gBAAgB,GAAG,CAACK,QAAQ,CAAC;IAC9B;EACD;;EAEA;EACA,IAAIP,aAAa,EAAE;IAClBd,iBAAiB,CAACc,aAAa,EAAEE,gBAAgB,EAAE,IAAI,CAAC;EACzD;EACAvB,OAAO,CAACY,IAAI,CAAC,EAAE,CAAC;EAChB,OAAOvB,QAAQ,CAACyC,QAAQ,CAAC9B,OAAO,CAAC;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,OAAO,CAACsC,yBAAyB,GAAG,CAACC,IAAI,EAAErC,UAAU,EAAEE,OAAO,EAAEC,KAAK,KAAK;EACzE,KAAK,MAAM,CAAC0B,MAAM,EAAEC,UAAU,CAAC,IAAI5B,OAAO,EAAE;IAC3C,MAAM6B,YAAY,GAAGD,UAAU,CAACE,eAAe,EAAE;IACjD,MAAMC,QAAQ,GAAGjC,UAAU,CAACkC,WAAW,CAACL,MAAM,CAAC;IAC/CQ,IAAI,CAACC,MAAM,CAAE,GAAEL,QAAS,EAAC,CAAC;IAC1B,KAAK,MAAMR,CAAC,IAAI7B,YAAY,CAACkC,UAAU,EAAE3B,KAAK,EAAE4B,YAAY,CAAC,EAC5DM,IAAI,CAACC,MAAM,CAAE,GAAEb,CAAC,CAAChB,EAAG,EAAC,CAAC;EACxB;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAX,OAAO,CAACyC,kBAAkB,GAAG,CAACpC,KAAK,EAAEH,UAAU,EAAEwC,QAAQ,KAAK;EAC7D,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAACvC,KAAK,CAACwC,GAAG,CAAC;EAC1C,KAAK,MAAMlB,CAAC,IAAItB,KAAK,CAACyC,mBAAmB,EAAE,EAAE;IAC5C,IAAInB,CAAC,KAAKtB,KAAK,IAAIqC,QAAQ,CAACf,CAAC,EAAEzB,UAAU,CAAC,EAAE;IAC5C,KAAK,MAAMS,EAAE,IAAIgB,CAAC,CAACkB,GAAG,EAAEF,eAAe,CAACI,GAAG,CAACpC,EAAE,CAAC;EAChD;EACA,OAAOgC,eAAe;AACvB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}