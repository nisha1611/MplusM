{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserializeAws_restJson1StartDeviceAuthorizationCommand = exports.deserializeAws_restJson1RegisterClientCommand = exports.deserializeAws_restJson1CreateTokenCommand = exports.serializeAws_restJson1StartDeviceAuthorizationCommand = exports.serializeAws_restJson1RegisterClientCommand = exports.serializeAws_restJson1CreateTokenCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst SSOOIDCServiceException_1 = require(\"../models/SSOOIDCServiceException\");\nconst serializeAws_restJson1CreateTokenCommand = async (input, context) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\n  let body;\n  body = JSON.stringify({\n    ...(input.clientId != null && {\n      clientId: input.clientId\n    }),\n    ...(input.clientSecret != null && {\n      clientSecret: input.clientSecret\n    }),\n    ...(input.code != null && {\n      code: input.code\n    }),\n    ...(input.deviceCode != null && {\n      deviceCode: input.deviceCode\n    }),\n    ...(input.grantType != null && {\n      grantType: input.grantType\n    }),\n    ...(input.redirectUri != null && {\n      redirectUri: input.redirectUri\n    }),\n    ...(input.refreshToken != null && {\n      refreshToken: input.refreshToken\n    }),\n    ...(input.scope != null && {\n      scope: serializeAws_restJson1Scopes(input.scope, context)\n    })\n  });\n  return new protocol_http_1.HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body\n  });\n};\nexports.serializeAws_restJson1CreateTokenCommand = serializeAws_restJson1CreateTokenCommand;\nconst serializeAws_restJson1RegisterClientCommand = async (input, context) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\n  let body;\n  body = JSON.stringify({\n    ...(input.clientName != null && {\n      clientName: input.clientName\n    }),\n    ...(input.clientType != null && {\n      clientType: input.clientType\n    }),\n    ...(input.scopes != null && {\n      scopes: serializeAws_restJson1Scopes(input.scopes, context)\n    })\n  });\n  return new protocol_http_1.HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body\n  });\n};\nexports.serializeAws_restJson1RegisterClientCommand = serializeAws_restJson1RegisterClientCommand;\nconst serializeAws_restJson1StartDeviceAuthorizationCommand = async (input, context) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\n  let body;\n  body = JSON.stringify({\n    ...(input.clientId != null && {\n      clientId: input.clientId\n    }),\n    ...(input.clientSecret != null && {\n      clientSecret: input.clientSecret\n    }),\n    ...(input.startUrl != null && {\n      startUrl: input.startUrl\n    })\n  });\n  return new protocol_http_1.HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body\n  });\n};\nexports.serializeAws_restJson1StartDeviceAuthorizationCommand = serializeAws_restJson1StartDeviceAuthorizationCommand;\nconst deserializeAws_restJson1CreateTokenCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateTokenCommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n  if (data.accessToken != null) {\n    contents.accessToken = (0, smithy_client_1.expectString)(data.accessToken);\n  }\n  if (data.expiresIn != null) {\n    contents.expiresIn = (0, smithy_client_1.expectInt32)(data.expiresIn);\n  }\n  if (data.idToken != null) {\n    contents.idToken = (0, smithy_client_1.expectString)(data.idToken);\n  }\n  if (data.refreshToken != null) {\n    contents.refreshToken = (0, smithy_client_1.expectString)(data.refreshToken);\n  }\n  if (data.tokenType != null) {\n    contents.tokenType = (0, smithy_client_1.expectString)(data.tokenType);\n  }\n  return contents;\n};\nexports.deserializeAws_restJson1CreateTokenCommand = deserializeAws_restJson1CreateTokenCommand;\nconst deserializeAws_restJson1CreateTokenCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.ssooidc#AccessDeniedException\":\n      throw await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context);\n    case \"AuthorizationPendingException\":\n    case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n      throw await deserializeAws_restJson1AuthorizationPendingExceptionResponse(parsedOutput, context);\n    case \"ExpiredTokenException\":\n    case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n      throw await deserializeAws_restJson1ExpiredTokenExceptionResponse(parsedOutput, context);\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n    case \"InvalidClientException\":\n    case \"com.amazonaws.ssooidc#InvalidClientException\":\n      throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\n    case \"InvalidGrantException\":\n    case \"com.amazonaws.ssooidc#InvalidGrantException\":\n      throw await deserializeAws_restJson1InvalidGrantExceptionResponse(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n    case \"InvalidScopeException\":\n    case \"com.amazonaws.ssooidc#InvalidScopeException\":\n      throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\n    case \"SlowDownException\":\n    case \"com.amazonaws.ssooidc#SlowDownException\":\n      throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\n    case \"UnauthorizedClientException\":\n    case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n      throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n    case \"UnsupportedGrantTypeException\":\n    case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n      throw await deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      (0, smithy_client_1.throwDefaultError)({\n        output,\n        parsedBody,\n        exceptionCtor: SSOOIDCServiceException_1.SSOOIDCServiceException,\n        errorCode\n      });\n  }\n};\nconst deserializeAws_restJson1RegisterClientCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RegisterClientCommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n  if (data.authorizationEndpoint != null) {\n    contents.authorizationEndpoint = (0, smithy_client_1.expectString)(data.authorizationEndpoint);\n  }\n  if (data.clientId != null) {\n    contents.clientId = (0, smithy_client_1.expectString)(data.clientId);\n  }\n  if (data.clientIdIssuedAt != null) {\n    contents.clientIdIssuedAt = (0, smithy_client_1.expectLong)(data.clientIdIssuedAt);\n  }\n  if (data.clientSecret != null) {\n    contents.clientSecret = (0, smithy_client_1.expectString)(data.clientSecret);\n  }\n  if (data.clientSecretExpiresAt != null) {\n    contents.clientSecretExpiresAt = (0, smithy_client_1.expectLong)(data.clientSecretExpiresAt);\n  }\n  if (data.tokenEndpoint != null) {\n    contents.tokenEndpoint = (0, smithy_client_1.expectString)(data.tokenEndpoint);\n  }\n  return contents;\n};\nexports.deserializeAws_restJson1RegisterClientCommand = deserializeAws_restJson1RegisterClientCommand;\nconst deserializeAws_restJson1RegisterClientCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n    case \"InvalidClientMetadataException\":\n    case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n      throw await deserializeAws_restJson1InvalidClientMetadataExceptionResponse(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n    case \"InvalidScopeException\":\n    case \"com.amazonaws.ssooidc#InvalidScopeException\":\n      throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      (0, smithy_client_1.throwDefaultError)({\n        output,\n        parsedBody,\n        exceptionCtor: SSOOIDCServiceException_1.SSOOIDCServiceException,\n        errorCode\n      });\n  }\n};\nconst deserializeAws_restJson1StartDeviceAuthorizationCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1StartDeviceAuthorizationCommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n  if (data.deviceCode != null) {\n    contents.deviceCode = (0, smithy_client_1.expectString)(data.deviceCode);\n  }\n  if (data.expiresIn != null) {\n    contents.expiresIn = (0, smithy_client_1.expectInt32)(data.expiresIn);\n  }\n  if (data.interval != null) {\n    contents.interval = (0, smithy_client_1.expectInt32)(data.interval);\n  }\n  if (data.userCode != null) {\n    contents.userCode = (0, smithy_client_1.expectString)(data.userCode);\n  }\n  if (data.verificationUri != null) {\n    contents.verificationUri = (0, smithy_client_1.expectString)(data.verificationUri);\n  }\n  if (data.verificationUriComplete != null) {\n    contents.verificationUriComplete = (0, smithy_client_1.expectString)(data.verificationUriComplete);\n  }\n  return contents;\n};\nexports.deserializeAws_restJson1StartDeviceAuthorizationCommand = deserializeAws_restJson1StartDeviceAuthorizationCommand;\nconst deserializeAws_restJson1StartDeviceAuthorizationCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n    case \"InvalidClientException\":\n    case \"com.amazonaws.ssooidc#InvalidClientException\":\n      throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n    case \"SlowDownException\":\n    case \"com.amazonaws.ssooidc#SlowDownException\":\n      throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\n    case \"UnauthorizedClientException\":\n    case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n      throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      (0, smithy_client_1.throwDefaultError)({\n        output,\n        parsedBody,\n        exceptionCtor: SSOOIDCServiceException_1.SSOOIDCServiceException,\n        errorCode\n      });\n  }\n};\nconst map = smithy_client_1.map;\nconst deserializeAws_restJson1AccessDeniedExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.AccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1AuthorizationPendingExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.AuthorizationPendingException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.ExpiredTokenException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InternalServerExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.InternalServerException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidClientExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.InvalidClientException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidClientMetadataExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.InvalidClientMetadataException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidGrantExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.InvalidGrantException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.InvalidRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidScopeExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.InvalidScopeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1SlowDownExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.SlowDownException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedClientExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.UnauthorizedClientException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  if (data.error != null) {\n    contents.error = (0, smithy_client_1.expectString)(data.error);\n  }\n  if (data.error_description != null) {\n    contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\n  }\n  const exception = new models_0_1.UnsupportedGrantTypeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst serializeAws_restJson1Scopes = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBody = function () {\n  let streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n  let context = arguments.length > 1 ? arguments[1] : undefined;\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst isSerializableHeaderValue = value => value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    return JSON.parse(encoded);\n  }\n  return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n  const value = await parseBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","deserializeAws_restJson1StartDeviceAuthorizationCommand","deserializeAws_restJson1RegisterClientCommand","deserializeAws_restJson1CreateTokenCommand","serializeAws_restJson1StartDeviceAuthorizationCommand","serializeAws_restJson1RegisterClientCommand","serializeAws_restJson1CreateTokenCommand","protocol_http_1","require","smithy_client_1","models_0_1","SSOOIDCServiceException_1","input","context","hostname","protocol","port","path","basePath","endpoint","headers","resolvedPath","endsWith","slice","body","JSON","stringify","clientId","clientSecret","code","deviceCode","grantType","redirectUri","refreshToken","scope","serializeAws_restJson1Scopes","HttpRequest","method","clientName","clientType","scopes","startUrl","output","statusCode","deserializeAws_restJson1CreateTokenCommandError","contents","map","$metadata","deserializeMetadata","data","expectNonNull","expectObject","parseBody","accessToken","expectString","expiresIn","expectInt32","idToken","tokenType","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1AccessDeniedExceptionResponse","deserializeAws_restJson1AuthorizationPendingExceptionResponse","deserializeAws_restJson1ExpiredTokenExceptionResponse","deserializeAws_restJson1InternalServerExceptionResponse","deserializeAws_restJson1InvalidClientExceptionResponse","deserializeAws_restJson1InvalidGrantExceptionResponse","deserializeAws_restJson1InvalidRequestExceptionResponse","deserializeAws_restJson1InvalidScopeExceptionResponse","deserializeAws_restJson1SlowDownExceptionResponse","deserializeAws_restJson1UnauthorizedClientExceptionResponse","deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse","parsedBody","throwDefaultError","exceptionCtor","SSOOIDCServiceException","deserializeAws_restJson1RegisterClientCommandError","authorizationEndpoint","clientIdIssuedAt","expectLong","clientSecretExpiresAt","tokenEndpoint","deserializeAws_restJson1InvalidClientMetadataExceptionResponse","deserializeAws_restJson1StartDeviceAuthorizationCommandError","interval","userCode","verificationUri","verificationUriComplete","error","error_description","exception","AccessDeniedException","decorateServiceException","AuthorizationPendingException","ExpiredTokenException","InternalServerException","InvalidClientException","InvalidClientMetadataException","InvalidGrantException","InvalidRequestException","InvalidScopeException","SlowDownException","UnauthorizedClientException","UnsupportedGrantTypeException","filter","e","entry","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","Uint8Array","Promise","resolve","streamCollector","collectBodyString","then","utf8Encoder","isSerializableHeaderValue","undefined","getOwnPropertyNames","includes","length","size","encoded","parse","errorBody","message","Message","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","toString","indexOf","split","headerKey"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/protocols/Aws_restJson1.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deserializeAws_restJson1StartDeviceAuthorizationCommand = exports.deserializeAws_restJson1RegisterClientCommand = exports.deserializeAws_restJson1CreateTokenCommand = exports.serializeAws_restJson1StartDeviceAuthorizationCommand = exports.serializeAws_restJson1RegisterClientCommand = exports.serializeAws_restJson1CreateTokenCommand = void 0;\r\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\r\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\r\nconst models_0_1 = require(\"../models/models_0\");\r\nconst SSOOIDCServiceException_1 = require(\"../models/SSOOIDCServiceException\");\r\nconst serializeAws_restJson1CreateTokenCommand = async (input, context) => {\r\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\r\n    const headers = {\r\n        \"content-type\": \"application/json\",\r\n    };\r\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\r\n    let body;\r\n    body = JSON.stringify({\r\n        ...(input.clientId != null && { clientId: input.clientId }),\r\n        ...(input.clientSecret != null && { clientSecret: input.clientSecret }),\r\n        ...(input.code != null && { code: input.code }),\r\n        ...(input.deviceCode != null && { deviceCode: input.deviceCode }),\r\n        ...(input.grantType != null && { grantType: input.grantType }),\r\n        ...(input.redirectUri != null && { redirectUri: input.redirectUri }),\r\n        ...(input.refreshToken != null && { refreshToken: input.refreshToken }),\r\n        ...(input.scope != null && { scope: serializeAws_restJson1Scopes(input.scope, context) }),\r\n    });\r\n    return new protocol_http_1.HttpRequest({\r\n        protocol,\r\n        hostname,\r\n        port,\r\n        method: \"POST\",\r\n        headers,\r\n        path: resolvedPath,\r\n        body,\r\n    });\r\n};\r\nexports.serializeAws_restJson1CreateTokenCommand = serializeAws_restJson1CreateTokenCommand;\r\nconst serializeAws_restJson1RegisterClientCommand = async (input, context) => {\r\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\r\n    const headers = {\r\n        \"content-type\": \"application/json\",\r\n    };\r\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\r\n    let body;\r\n    body = JSON.stringify({\r\n        ...(input.clientName != null && { clientName: input.clientName }),\r\n        ...(input.clientType != null && { clientType: input.clientType }),\r\n        ...(input.scopes != null && { scopes: serializeAws_restJson1Scopes(input.scopes, context) }),\r\n    });\r\n    return new protocol_http_1.HttpRequest({\r\n        protocol,\r\n        hostname,\r\n        port,\r\n        method: \"POST\",\r\n        headers,\r\n        path: resolvedPath,\r\n        body,\r\n    });\r\n};\r\nexports.serializeAws_restJson1RegisterClientCommand = serializeAws_restJson1RegisterClientCommand;\r\nconst serializeAws_restJson1StartDeviceAuthorizationCommand = async (input, context) => {\r\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\r\n    const headers = {\r\n        \"content-type\": \"application/json\",\r\n    };\r\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\r\n    let body;\r\n    body = JSON.stringify({\r\n        ...(input.clientId != null && { clientId: input.clientId }),\r\n        ...(input.clientSecret != null && { clientSecret: input.clientSecret }),\r\n        ...(input.startUrl != null && { startUrl: input.startUrl }),\r\n    });\r\n    return new protocol_http_1.HttpRequest({\r\n        protocol,\r\n        hostname,\r\n        port,\r\n        method: \"POST\",\r\n        headers,\r\n        path: resolvedPath,\r\n        body,\r\n    });\r\n};\r\nexports.serializeAws_restJson1StartDeviceAuthorizationCommand = serializeAws_restJson1StartDeviceAuthorizationCommand;\r\nconst deserializeAws_restJson1CreateTokenCommand = async (output, context) => {\r\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\r\n        return deserializeAws_restJson1CreateTokenCommandError(output, context);\r\n    }\r\n    const contents = map({\r\n        $metadata: deserializeMetadata(output),\r\n    });\r\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\r\n    if (data.accessToken != null) {\r\n        contents.accessToken = (0, smithy_client_1.expectString)(data.accessToken);\r\n    }\r\n    if (data.expiresIn != null) {\r\n        contents.expiresIn = (0, smithy_client_1.expectInt32)(data.expiresIn);\r\n    }\r\n    if (data.idToken != null) {\r\n        contents.idToken = (0, smithy_client_1.expectString)(data.idToken);\r\n    }\r\n    if (data.refreshToken != null) {\r\n        contents.refreshToken = (0, smithy_client_1.expectString)(data.refreshToken);\r\n    }\r\n    if (data.tokenType != null) {\r\n        contents.tokenType = (0, smithy_client_1.expectString)(data.tokenType);\r\n    }\r\n    return contents;\r\n};\r\nexports.deserializeAws_restJson1CreateTokenCommand = deserializeAws_restJson1CreateTokenCommand;\r\nconst deserializeAws_restJson1CreateTokenCommandError = async (output, context) => {\r\n    const parsedOutput = {\r\n        ...output,\r\n        body: await parseErrorBody(output.body, context),\r\n    };\r\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\r\n    switch (errorCode) {\r\n        case \"AccessDeniedException\":\r\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\r\n            throw await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context);\r\n        case \"AuthorizationPendingException\":\r\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\r\n            throw await deserializeAws_restJson1AuthorizationPendingExceptionResponse(parsedOutput, context);\r\n        case \"ExpiredTokenException\":\r\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\r\n            throw await deserializeAws_restJson1ExpiredTokenExceptionResponse(parsedOutput, context);\r\n        case \"InternalServerException\":\r\n        case \"com.amazonaws.ssooidc#InternalServerException\":\r\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\r\n        case \"InvalidClientException\":\r\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\r\n            throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\r\n        case \"InvalidGrantException\":\r\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\r\n            throw await deserializeAws_restJson1InvalidGrantExceptionResponse(parsedOutput, context);\r\n        case \"InvalidRequestException\":\r\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\r\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\r\n        case \"InvalidScopeException\":\r\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\r\n            throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\r\n        case \"SlowDownException\":\r\n        case \"com.amazonaws.ssooidc#SlowDownException\":\r\n            throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\r\n        case \"UnauthorizedClientException\":\r\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\r\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\r\n        case \"UnsupportedGrantTypeException\":\r\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\r\n            throw await deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse(parsedOutput, context);\r\n        default:\r\n            const parsedBody = parsedOutput.body;\r\n            (0, smithy_client_1.throwDefaultError)({\r\n                output,\r\n                parsedBody,\r\n                exceptionCtor: SSOOIDCServiceException_1.SSOOIDCServiceException,\r\n                errorCode,\r\n            });\r\n    }\r\n};\r\nconst deserializeAws_restJson1RegisterClientCommand = async (output, context) => {\r\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\r\n        return deserializeAws_restJson1RegisterClientCommandError(output, context);\r\n    }\r\n    const contents = map({\r\n        $metadata: deserializeMetadata(output),\r\n    });\r\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\r\n    if (data.authorizationEndpoint != null) {\r\n        contents.authorizationEndpoint = (0, smithy_client_1.expectString)(data.authorizationEndpoint);\r\n    }\r\n    if (data.clientId != null) {\r\n        contents.clientId = (0, smithy_client_1.expectString)(data.clientId);\r\n    }\r\n    if (data.clientIdIssuedAt != null) {\r\n        contents.clientIdIssuedAt = (0, smithy_client_1.expectLong)(data.clientIdIssuedAt);\r\n    }\r\n    if (data.clientSecret != null) {\r\n        contents.clientSecret = (0, smithy_client_1.expectString)(data.clientSecret);\r\n    }\r\n    if (data.clientSecretExpiresAt != null) {\r\n        contents.clientSecretExpiresAt = (0, smithy_client_1.expectLong)(data.clientSecretExpiresAt);\r\n    }\r\n    if (data.tokenEndpoint != null) {\r\n        contents.tokenEndpoint = (0, smithy_client_1.expectString)(data.tokenEndpoint);\r\n    }\r\n    return contents;\r\n};\r\nexports.deserializeAws_restJson1RegisterClientCommand = deserializeAws_restJson1RegisterClientCommand;\r\nconst deserializeAws_restJson1RegisterClientCommandError = async (output, context) => {\r\n    const parsedOutput = {\r\n        ...output,\r\n        body: await parseErrorBody(output.body, context),\r\n    };\r\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\r\n    switch (errorCode) {\r\n        case \"InternalServerException\":\r\n        case \"com.amazonaws.ssooidc#InternalServerException\":\r\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\r\n        case \"InvalidClientMetadataException\":\r\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\r\n            throw await deserializeAws_restJson1InvalidClientMetadataExceptionResponse(parsedOutput, context);\r\n        case \"InvalidRequestException\":\r\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\r\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\r\n        case \"InvalidScopeException\":\r\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\r\n            throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\r\n        default:\r\n            const parsedBody = parsedOutput.body;\r\n            (0, smithy_client_1.throwDefaultError)({\r\n                output,\r\n                parsedBody,\r\n                exceptionCtor: SSOOIDCServiceException_1.SSOOIDCServiceException,\r\n                errorCode,\r\n            });\r\n    }\r\n};\r\nconst deserializeAws_restJson1StartDeviceAuthorizationCommand = async (output, context) => {\r\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\r\n        return deserializeAws_restJson1StartDeviceAuthorizationCommandError(output, context);\r\n    }\r\n    const contents = map({\r\n        $metadata: deserializeMetadata(output),\r\n    });\r\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\r\n    if (data.deviceCode != null) {\r\n        contents.deviceCode = (0, smithy_client_1.expectString)(data.deviceCode);\r\n    }\r\n    if (data.expiresIn != null) {\r\n        contents.expiresIn = (0, smithy_client_1.expectInt32)(data.expiresIn);\r\n    }\r\n    if (data.interval != null) {\r\n        contents.interval = (0, smithy_client_1.expectInt32)(data.interval);\r\n    }\r\n    if (data.userCode != null) {\r\n        contents.userCode = (0, smithy_client_1.expectString)(data.userCode);\r\n    }\r\n    if (data.verificationUri != null) {\r\n        contents.verificationUri = (0, smithy_client_1.expectString)(data.verificationUri);\r\n    }\r\n    if (data.verificationUriComplete != null) {\r\n        contents.verificationUriComplete = (0, smithy_client_1.expectString)(data.verificationUriComplete);\r\n    }\r\n    return contents;\r\n};\r\nexports.deserializeAws_restJson1StartDeviceAuthorizationCommand = deserializeAws_restJson1StartDeviceAuthorizationCommand;\r\nconst deserializeAws_restJson1StartDeviceAuthorizationCommandError = async (output, context) => {\r\n    const parsedOutput = {\r\n        ...output,\r\n        body: await parseErrorBody(output.body, context),\r\n    };\r\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\r\n    switch (errorCode) {\r\n        case \"InternalServerException\":\r\n        case \"com.amazonaws.ssooidc#InternalServerException\":\r\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\r\n        case \"InvalidClientException\":\r\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\r\n            throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\r\n        case \"InvalidRequestException\":\r\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\r\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\r\n        case \"SlowDownException\":\r\n        case \"com.amazonaws.ssooidc#SlowDownException\":\r\n            throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\r\n        case \"UnauthorizedClientException\":\r\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\r\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\r\n        default:\r\n            const parsedBody = parsedOutput.body;\r\n            (0, smithy_client_1.throwDefaultError)({\r\n                output,\r\n                parsedBody,\r\n                exceptionCtor: SSOOIDCServiceException_1.SSOOIDCServiceException,\r\n                errorCode,\r\n            });\r\n    }\r\n};\r\nconst map = smithy_client_1.map;\r\nconst deserializeAws_restJson1AccessDeniedExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.AccessDeniedException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1AuthorizationPendingExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.AuthorizationPendingException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1ExpiredTokenExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.ExpiredTokenException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InternalServerExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.InternalServerException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidClientExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.InvalidClientException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidClientMetadataExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.InvalidClientMetadataException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidGrantExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.InvalidGrantException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.InvalidRequestException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1InvalidScopeExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.InvalidScopeException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1SlowDownExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.SlowDownException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1UnauthorizedClientExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.UnauthorizedClientException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse = async (parsedOutput, context) => {\r\n    const contents = map({});\r\n    const data = parsedOutput.body;\r\n    if (data.error != null) {\r\n        contents.error = (0, smithy_client_1.expectString)(data.error);\r\n    }\r\n    if (data.error_description != null) {\r\n        contents.error_description = (0, smithy_client_1.expectString)(data.error_description);\r\n    }\r\n    const exception = new models_0_1.UnsupportedGrantTypeException({\r\n        $metadata: deserializeMetadata(parsedOutput),\r\n        ...contents,\r\n    });\r\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\r\n};\r\nconst serializeAws_restJson1Scopes = (input, context) => {\r\n    return input\r\n        .filter((e) => e != null)\r\n        .map((entry) => {\r\n        return entry;\r\n    });\r\n};\r\nconst deserializeMetadata = (output) => ({\r\n    httpStatusCode: output.statusCode,\r\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\r\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\r\n    cfId: output.headers[\"x-amz-cf-id\"],\r\n});\r\nconst collectBody = (streamBody = new Uint8Array(), context) => {\r\n    if (streamBody instanceof Uint8Array) {\r\n        return Promise.resolve(streamBody);\r\n    }\r\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\r\n};\r\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\r\nconst isSerializableHeaderValue = (value) => value !== undefined &&\r\n    value !== null &&\r\n    value !== \"\" &&\r\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\r\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\r\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\r\n    if (encoded.length) {\r\n        return JSON.parse(encoded);\r\n    }\r\n    return {};\r\n});\r\nconst parseErrorBody = async (errorBody, context) => {\r\n    const value = await parseBody(errorBody, context);\r\n    value.message = value.message ?? value.Message;\r\n    return value;\r\n};\r\nconst loadRestJsonErrorCode = (output, data) => {\r\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\r\n    const sanitizeErrorCode = (rawValue) => {\r\n        let cleanValue = rawValue;\r\n        if (typeof cleanValue === \"number\") {\r\n            cleanValue = cleanValue.toString();\r\n        }\r\n        if (cleanValue.indexOf(\",\") >= 0) {\r\n            cleanValue = cleanValue.split(\",\")[0];\r\n        }\r\n        if (cleanValue.indexOf(\":\") >= 0) {\r\n            cleanValue = cleanValue.split(\":\")[0];\r\n        }\r\n        if (cleanValue.indexOf(\"#\") >= 0) {\r\n            cleanValue = cleanValue.split(\"#\")[1];\r\n        }\r\n        return cleanValue;\r\n    };\r\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\r\n    if (headerKey !== undefined) {\r\n        return sanitizeErrorCode(output.headers[headerKey]);\r\n    }\r\n    if (data.code !== undefined) {\r\n        return sanitizeErrorCode(data.code);\r\n    }\r\n    if (data[\"__type\"] !== undefined) {\r\n        return sanitizeErrorCode(data[\"__type\"]);\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}