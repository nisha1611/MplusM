{"ast":null,"code":"'use strict';\n\nmodule.exports = pluralize;\n\n/**\r\n * Pluralization rules.\r\n */\n\nexports.pluralization = [[/(m)an$/gi, '$1en'], [/(pe)rson$/gi, '$1ople'], [/(child)$/gi, '$1ren'], [/^(ox)$/gi, '$1en'], [/(ax|test)is$/gi, '$1es'], [/(octop|vir)us$/gi, '$1i'], [/(alias|status)$/gi, '$1es'], [/(bu)s$/gi, '$1ses'], [/(buffal|tomat|potat)o$/gi, '$1oes'], [/([ti])um$/gi, '$1a'], [/sis$/gi, 'ses'], [/(?:([^f])fe|([lr])f)$/gi, '$1$2ves'], [/(hive)$/gi, '$1s'], [/([^aeiouy]|qu)y$/gi, '$1ies'], [/(x|ch|ss|sh)$/gi, '$1es'], [/(matr|vert|ind)ix|ex$/gi, '$1ices'], [/([m|l])ouse$/gi, '$1ice'], [/(kn|w|l)ife$/gi, '$1ives'], [/(quiz)$/gi, '$1zes'], [/^goose$/i, 'geese'], [/s$/gi, 's'], [/([^a-z])$/, '$1'], [/$/gi, 's']];\nconst rules = exports.pluralization;\n\n/**\r\n * Uncountable words.\r\n *\r\n * These words are applied while processing the argument to `toCollectionName`.\r\n * @api public\r\n */\n\nexports.uncountables = ['advice', 'energy', 'excretion', 'digestion', 'cooperation', 'health', 'justice', 'labour', 'machinery', 'equipment', 'information', 'pollution', 'sewage', 'paper', 'money', 'species', 'series', 'rain', 'rice', 'fish', 'sheep', 'moose', 'deer', 'news', 'expertise', 'status', 'media'];\nconst uncountables = exports.uncountables;\n\n/**\r\n * Pluralize function.\r\n *\r\n * @author TJ Holowaychuk (extracted from _ext.js_)\r\n * @param {String} string to pluralize\r\n * @api private\r\n */\n\nfunction pluralize(str) {\n  let found;\n  str = str.toLowerCase();\n  if (!~uncountables.indexOf(str)) {\n    found = rules.filter(function (rule) {\n      return str.match(rule[0]);\n    });\n    if (found[0]) {\n      return str.replace(found[0][0], found[0][1]);\n    }\n  }\n  return str;\n}","map":{"version":3,"names":["module","exports","pluralize","pluralization","rules","uncountables","str","found","toLowerCase","indexOf","filter","rule","match","replace"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/pluralize.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = pluralize;\r\n\r\n/**\r\n * Pluralization rules.\r\n */\r\n\r\nexports.pluralization = [\r\n  [/(m)an$/gi, '$1en'],\r\n  [/(pe)rson$/gi, '$1ople'],\r\n  [/(child)$/gi, '$1ren'],\r\n  [/^(ox)$/gi, '$1en'],\r\n  [/(ax|test)is$/gi, '$1es'],\r\n  [/(octop|vir)us$/gi, '$1i'],\r\n  [/(alias|status)$/gi, '$1es'],\r\n  [/(bu)s$/gi, '$1ses'],\r\n  [/(buffal|tomat|potat)o$/gi, '$1oes'],\r\n  [/([ti])um$/gi, '$1a'],\r\n  [/sis$/gi, 'ses'],\r\n  [/(?:([^f])fe|([lr])f)$/gi, '$1$2ves'],\r\n  [/(hive)$/gi, '$1s'],\r\n  [/([^aeiouy]|qu)y$/gi, '$1ies'],\r\n  [/(x|ch|ss|sh)$/gi, '$1es'],\r\n  [/(matr|vert|ind)ix|ex$/gi, '$1ices'],\r\n  [/([m|l])ouse$/gi, '$1ice'],\r\n  [/(kn|w|l)ife$/gi, '$1ives'],\r\n  [/(quiz)$/gi, '$1zes'],\r\n  [/^goose$/i, 'geese'],\r\n  [/s$/gi, 's'],\r\n  [/([^a-z])$/, '$1'],\r\n  [/$/gi, 's']\r\n];\r\nconst rules = exports.pluralization;\r\n\r\n/**\r\n * Uncountable words.\r\n *\r\n * These words are applied while processing the argument to `toCollectionName`.\r\n * @api public\r\n */\r\n\r\nexports.uncountables = [\r\n  'advice',\r\n  'energy',\r\n  'excretion',\r\n  'digestion',\r\n  'cooperation',\r\n  'health',\r\n  'justice',\r\n  'labour',\r\n  'machinery',\r\n  'equipment',\r\n  'information',\r\n  'pollution',\r\n  'sewage',\r\n  'paper',\r\n  'money',\r\n  'species',\r\n  'series',\r\n  'rain',\r\n  'rice',\r\n  'fish',\r\n  'sheep',\r\n  'moose',\r\n  'deer',\r\n  'news',\r\n  'expertise',\r\n  'status',\r\n  'media'\r\n];\r\nconst uncountables = exports.uncountables;\r\n\r\n/**\r\n * Pluralize function.\r\n *\r\n * @author TJ Holowaychuk (extracted from _ext.js_)\r\n * @param {String} string to pluralize\r\n * @api private\r\n */\r\n\r\nfunction pluralize(str) {\r\n  let found;\r\n  str = str.toLowerCase();\r\n  if (!~uncountables.indexOf(str)) {\r\n    found = rules.filter(function(rule) {\r\n      return str.match(rule[0]);\r\n    });\r\n    if (found[0]) {\r\n      return str.replace(found[0][0], found[0][1]);\r\n    }\r\n  }\r\n  return str;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,SAAS;;AAE1B;AACA;AACA;;AAEAD,OAAO,CAACE,aAAa,GAAG,CACtB,CAAC,UAAU,EAAE,MAAM,CAAC,EACpB,CAAC,aAAa,EAAE,QAAQ,CAAC,EACzB,CAAC,YAAY,EAAE,OAAO,CAAC,EACvB,CAAC,UAAU,EAAE,MAAM,CAAC,EACpB,CAAC,gBAAgB,EAAE,MAAM,CAAC,EAC1B,CAAC,kBAAkB,EAAE,KAAK,CAAC,EAC3B,CAAC,mBAAmB,EAAE,MAAM,CAAC,EAC7B,CAAC,UAAU,EAAE,OAAO,CAAC,EACrB,CAAC,0BAA0B,EAAE,OAAO,CAAC,EACrC,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,QAAQ,EAAE,KAAK,CAAC,EACjB,CAAC,yBAAyB,EAAE,SAAS,CAAC,EACtC,CAAC,WAAW,EAAE,KAAK,CAAC,EACpB,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAC/B,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAC3B,CAAC,yBAAyB,EAAE,QAAQ,CAAC,EACrC,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAC3B,CAAC,gBAAgB,EAAE,QAAQ,CAAC,EAC5B,CAAC,WAAW,EAAE,OAAO,CAAC,EACtB,CAAC,UAAU,EAAE,OAAO,CAAC,EACrB,CAAC,MAAM,EAAE,GAAG,CAAC,EACb,CAAC,WAAW,EAAE,IAAI,CAAC,EACnB,CAAC,KAAK,EAAE,GAAG,CAAC,CACb;AACD,MAAMC,KAAK,GAAGH,OAAO,CAACE,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEAF,OAAO,CAACI,YAAY,GAAG,CACrB,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,WAAW,EACX,aAAa,EACb,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,WAAW,EACX,WAAW,EACX,aAAa,EACb,WAAW,EACX,QAAQ,EACR,OAAO,EACP,OAAO,EACP,SAAS,EACT,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,WAAW,EACX,QAAQ,EACR,OAAO,CACR;AACD,MAAMA,YAAY,GAAGJ,OAAO,CAACI,YAAY;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASH,SAAS,CAACI,GAAG,EAAE;EACtB,IAAIC,KAAK;EACTD,GAAG,GAAGA,GAAG,CAACE,WAAW,EAAE;EACvB,IAAI,CAAC,CAACH,YAAY,CAACI,OAAO,CAACH,GAAG,CAAC,EAAE;IAC/BC,KAAK,GAAGH,KAAK,CAACM,MAAM,CAAC,UAASC,IAAI,EAAE;MAClC,OAAOL,GAAG,CAACM,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;IACF,IAAIJ,KAAK,CAAC,CAAC,CAAC,EAAE;MACZ,OAAOD,GAAG,CAACO,OAAO,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C;EACF;EACA,OAAOD,GAAG;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}