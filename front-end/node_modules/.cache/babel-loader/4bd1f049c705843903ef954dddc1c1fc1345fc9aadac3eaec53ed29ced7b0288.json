{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst formatLocation = require(\"../formatLocation\");\nconst UnsupportedWebAssemblyFeatureError = require(\"./UnsupportedWebAssemblyFeatureError\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass WasmFinalizeExportsPlugin {\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"WasmFinalizeExportsPlugin\", compilation => {\n      compilation.hooks.finishModules.tap(\"WasmFinalizeExportsPlugin\", modules => {\n        for (const module of modules) {\n          // 1. if a WebAssembly module\n          if (module.type.startsWith(\"webassembly\") === true) {\n            const jsIncompatibleExports = module.buildMeta.jsIncompatibleExports;\n            if (jsIncompatibleExports === undefined) {\n              continue;\n            }\n            for (const connection of compilation.moduleGraph.getIncomingConnections(module)) {\n              // 2. is active and referenced by a non-WebAssembly module\n              if (connection.isTargetActive(undefined) && connection.originModule.type.startsWith(\"webassembly\") === false) {\n                const referencedExports = compilation.getDependencyReferencedExports(connection.dependency, undefined);\n                for (const info of referencedExports) {\n                  const names = Array.isArray(info) ? info : info.name;\n                  if (names.length === 0) continue;\n                  const name = names[0];\n                  if (typeof name === \"object\") continue;\n                  // 3. and uses a func with an incompatible JS signature\n                  if (Object.prototype.hasOwnProperty.call(jsIncompatibleExports, name)) {\n                    // 4. error\n                    const error = new UnsupportedWebAssemblyFeatureError(`Export \"${name}\" with ${jsIncompatibleExports[name]} can only be used for direct wasm to wasm dependencies\\n` + `It's used from ${connection.originModule.readableIdentifier(compilation.requestShortener)} at ${formatLocation(connection.dependency.loc)}.`);\n                    error.module = module;\n                    compilation.errors.push(error);\n                  }\n                }\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n}\nmodule.exports = WasmFinalizeExportsPlugin;","map":{"version":3,"names":["formatLocation","require","UnsupportedWebAssemblyFeatureError","WasmFinalizeExportsPlugin","apply","compiler","hooks","compilation","tap","finishModules","modules","module","type","startsWith","jsIncompatibleExports","buildMeta","undefined","connection","moduleGraph","getIncomingConnections","isTargetActive","originModule","referencedExports","getDependencyReferencedExports","dependency","info","names","Array","isArray","name","length","Object","prototype","hasOwnProperty","call","error","readableIdentifier","requestShortener","loc","errors","push","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/wasm-sync/WasmFinalizeExportsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst formatLocation = require(\"../formatLocation\");\r\nconst UnsupportedWebAssemblyFeatureError = require(\"./UnsupportedWebAssemblyFeatureError\");\r\n\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n\r\nclass WasmFinalizeExportsPlugin {\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compilation.tap(\"WasmFinalizeExportsPlugin\", compilation => {\r\n\t\t\tcompilation.hooks.finishModules.tap(\r\n\t\t\t\t\"WasmFinalizeExportsPlugin\",\r\n\t\t\t\tmodules => {\r\n\t\t\t\t\tfor (const module of modules) {\r\n\t\t\t\t\t\t// 1. if a WebAssembly module\r\n\t\t\t\t\t\tif (module.type.startsWith(\"webassembly\") === true) {\r\n\t\t\t\t\t\t\tconst jsIncompatibleExports =\r\n\t\t\t\t\t\t\t\tmodule.buildMeta.jsIncompatibleExports;\r\n\r\n\t\t\t\t\t\t\tif (jsIncompatibleExports === undefined) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (const connection of compilation.moduleGraph.getIncomingConnections(\r\n\t\t\t\t\t\t\t\tmodule\r\n\t\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\t\t// 2. is active and referenced by a non-WebAssembly module\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tconnection.isTargetActive(undefined) &&\r\n\t\t\t\t\t\t\t\t\tconnection.originModule.type.startsWith(\"webassembly\") ===\r\n\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tconst referencedExports =\r\n\t\t\t\t\t\t\t\t\t\tcompilation.getDependencyReferencedExports(\r\n\t\t\t\t\t\t\t\t\t\t\tconnection.dependency,\r\n\t\t\t\t\t\t\t\t\t\t\tundefined\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\tfor (const info of referencedExports) {\r\n\t\t\t\t\t\t\t\t\t\tconst names = Array.isArray(info) ? info : info.name;\r\n\t\t\t\t\t\t\t\t\t\tif (names.length === 0) continue;\r\n\t\t\t\t\t\t\t\t\t\tconst name = names[0];\r\n\t\t\t\t\t\t\t\t\t\tif (typeof name === \"object\") continue;\r\n\t\t\t\t\t\t\t\t\t\t// 3. and uses a func with an incompatible JS signature\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\r\n\t\t\t\t\t\t\t\t\t\t\t\tjsIncompatibleExports,\r\n\t\t\t\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t// 4. error\r\n\t\t\t\t\t\t\t\t\t\t\tconst error = new UnsupportedWebAssemblyFeatureError(\r\n\t\t\t\t\t\t\t\t\t\t\t\t`Export \"${name}\" with ${jsIncompatibleExports[name]} can only be used for direct wasm to wasm dependencies\\n` +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`It's used from ${connection.originModule.readableIdentifier(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompilation.requestShortener\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} at ${formatLocation(connection.dependency.loc)}.`\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\terror.module = module;\r\n\t\t\t\t\t\t\t\t\t\t\tcompilation.errors.push(error);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = WasmFinalizeExportsPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,kCAAkC,GAAGD,OAAO,CAAC,sCAAsC,CAAC;;AAE1F;;AAEA,MAAME,yBAAyB,CAAC;EAC/B;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,2BAA2B,EAAED,WAAW,IAAI;MAC1EA,WAAW,CAACD,KAAK,CAACG,aAAa,CAACD,GAAG,CAClC,2BAA2B,EAC3BE,OAAO,IAAI;QACV,KAAK,MAAMC,MAAM,IAAID,OAAO,EAAE;UAC7B;UACA,IAAIC,MAAM,CAACC,IAAI,CAACC,UAAU,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE;YACnD,MAAMC,qBAAqB,GAC1BH,MAAM,CAACI,SAAS,CAACD,qBAAqB;YAEvC,IAAIA,qBAAqB,KAAKE,SAAS,EAAE;cACxC;YACD;YAEA,KAAK,MAAMC,UAAU,IAAIV,WAAW,CAACW,WAAW,CAACC,sBAAsB,CACtER,MAAM,CACN,EAAE;cACF;cACA,IACCM,UAAU,CAACG,cAAc,CAACJ,SAAS,CAAC,IACpCC,UAAU,CAACI,YAAY,CAACT,IAAI,CAACC,UAAU,CAAC,aAAa,CAAC,KACrD,KAAK,EACL;gBACD,MAAMS,iBAAiB,GACtBf,WAAW,CAACgB,8BAA8B,CACzCN,UAAU,CAACO,UAAU,EACrBR,SAAS,CACT;gBAEF,KAAK,MAAMS,IAAI,IAAIH,iBAAiB,EAAE;kBACrC,MAAMI,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACI,IAAI;kBACpD,IAAIH,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;kBACxB,MAAMD,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;kBACrB,IAAI,OAAOG,IAAI,KAAK,QAAQ,EAAE;kBAC9B;kBACA,IACCE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CACnCpB,qBAAqB,EACrBe,IAAI,CACJ,EACA;oBACD;oBACA,MAAMM,KAAK,GAAG,IAAIjC,kCAAkC,CAClD,WAAU2B,IAAK,UAASf,qBAAqB,CAACe,IAAI,CAAE,0DAAyD,GAC5G,kBAAiBZ,UAAU,CAACI,YAAY,CAACe,kBAAkB,CAC3D7B,WAAW,CAAC8B,gBAAgB,CAC3B,OAAMrC,cAAc,CAACiB,UAAU,CAACO,UAAU,CAACc,GAAG,CAAE,GAAE,CACrD;oBACDH,KAAK,CAACxB,MAAM,GAAGA,MAAM;oBACrBJ,WAAW,CAACgC,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC;kBAC/B;gBACD;cACD;YACD;UACD;QACD;MACD,CAAC,CACD;IACF,CAAC,CAAC;EACH;AACD;AAEAxB,MAAM,CAAC8B,OAAO,GAAGtC,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}