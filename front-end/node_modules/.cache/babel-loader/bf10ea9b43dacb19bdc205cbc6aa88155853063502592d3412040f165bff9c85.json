{"ast":null,"code":"'use strict';\n\nconst assert = require('assert');\nconst StreamSearch = require('../lib/sbmh.js');\n[{\n  needle: '\\r\\n',\n  chunks: ['foo', ' bar', '\\r', '\\n', 'baz, hello\\r', '\\n world.', '\\r\\n Node.JS rules!!\\r\\n\\r\\n'],\n  expect: [[false, 'foo'], [false, ' bar'], [true, null], [false, 'baz, hello'], [true, null], [false, ' world.'], [true, null], [true, ' Node.JS rules!!'], [true, '']]\n}, {\n  needle: '---foobarbaz',\n  chunks: ['---foobarbaz', 'asdf', '\\r\\n', '---foobarba', '---foobar', 'ba', '\\r\\n---foobarbaz--\\r\\n'],\n  expect: [[true, null], [false, 'asdf'], [false, '\\r\\n'], [false, '---foobarba'], [false, '---foobarba'], [true, '\\r\\n'], [false, '--\\r\\n']]\n}].forEach((test, i) => {\n  console.log(`Running test #${i + 1}`);\n  const {\n    needle,\n    chunks,\n    expect\n  } = test;\n  const results = [];\n  const ss = new StreamSearch(Buffer.from(needle), (isMatch, data, start, end) => {\n    if (data) data = data.toString('latin1', start, end);else data = null;\n    results.push([isMatch, data]);\n  });\n  for (const chunk of chunks) ss.push(Buffer.from(chunk));\n  assert.deepStrictEqual(results, expect);\n});","map":{"version":3,"names":["assert","require","StreamSearch","needle","chunks","expect","forEach","test","i","console","log","results","ss","Buffer","from","isMatch","data","start","end","toString","push","chunk","deepStrictEqual"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/streamsearch/test/test.js"],"sourcesContent":["'use strict';\n\nconst assert = require('assert');\n\nconst StreamSearch = require('../lib/sbmh.js');\n\n[\n  {\n    needle: '\\r\\n',\n    chunks: [\n      'foo',\n      ' bar',\n      '\\r',\n      '\\n',\n      'baz, hello\\r',\n      '\\n world.',\n      '\\r\\n Node.JS rules!!\\r\\n\\r\\n',\n    ],\n    expect: [\n      [false, 'foo'],\n      [false, ' bar'],\n      [ true, null],\n      [false, 'baz, hello'],\n      [ true, null],\n      [false, ' world.'],\n      [ true, null],\n      [ true, ' Node.JS rules!!'],\n      [ true, ''],\n    ],\n  },\n  {\n    needle: '---foobarbaz',\n    chunks: [\n      '---foobarbaz',\n      'asdf',\n      '\\r\\n',\n      '---foobarba',\n      '---foobar',\n      'ba',\n      '\\r\\n---foobarbaz--\\r\\n',\n    ],\n    expect: [\n      [ true, null],\n      [false, 'asdf'],\n      [false, '\\r\\n'],\n      [false, '---foobarba'],\n      [false, '---foobarba'],\n      [ true, '\\r\\n'],\n      [false, '--\\r\\n'],\n    ],\n  },\n].forEach((test, i) => {\n  console.log(`Running test #${i + 1}`);\n  const { needle, chunks, expect } = test;\n\n  const results = [];\n  const ss = new StreamSearch(Buffer.from(needle),\n                              (isMatch, data, start, end) => {\n    if (data)\n      data = data.toString('latin1', start, end);\n    else\n      data = null;\n    results.push([isMatch, data]);\n  });\n\n  for (const chunk of chunks)\n    ss.push(Buffer.from(chunk));\n\n  assert.deepStrictEqual(results, expect);\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE9C,CACE;EACEE,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE,CACN,KAAK,EACL,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,WAAW,EACX,8BAA8B,CAC/B;EACDC,MAAM,EAAE,CACN,CAAC,KAAK,EAAE,KAAK,CAAC,EACd,CAAC,KAAK,EAAE,MAAM,CAAC,EACf,CAAE,IAAI,EAAE,IAAI,CAAC,EACb,CAAC,KAAK,EAAE,YAAY,CAAC,EACrB,CAAE,IAAI,EAAE,IAAI,CAAC,EACb,CAAC,KAAK,EAAE,SAAS,CAAC,EAClB,CAAE,IAAI,EAAE,IAAI,CAAC,EACb,CAAE,IAAI,EAAE,kBAAkB,CAAC,EAC3B,CAAE,IAAI,EAAE,EAAE,CAAC;AAEf,CAAC,EACD;EACEF,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE,CACN,cAAc,EACd,MAAM,EACN,MAAM,EACN,aAAa,EACb,WAAW,EACX,IAAI,EACJ,wBAAwB,CACzB;EACDC,MAAM,EAAE,CACN,CAAE,IAAI,EAAE,IAAI,CAAC,EACb,CAAC,KAAK,EAAE,MAAM,CAAC,EACf,CAAC,KAAK,EAAE,MAAM,CAAC,EACf,CAAC,KAAK,EAAE,aAAa,CAAC,EACtB,CAAC,KAAK,EAAE,aAAa,CAAC,EACtB,CAAE,IAAI,EAAE,MAAM,CAAC,EACf,CAAC,KAAK,EAAE,QAAQ,CAAC;AAErB,CAAC,CACF,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;EACrBC,OAAO,CAACC,GAAG,CAAE,iBAAgBF,CAAC,GAAG,CAAE,EAAC,CAAC;EACrC,MAAM;IAAEL,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGE,IAAI;EAEvC,MAAMI,OAAO,GAAG,EAAE;EAClB,MAAMC,EAAE,GAAG,IAAIV,YAAY,CAACW,MAAM,CAACC,IAAI,CAACX,MAAM,CAAC,EACnB,CAACY,OAAO,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,KAAK;IACzD,IAAIF,IAAI,EACNA,IAAI,GAAGA,IAAI,CAACG,QAAQ,CAAC,QAAQ,EAAEF,KAAK,EAAEC,GAAG,CAAC,CAAC,KAE3CF,IAAI,GAAG,IAAI;IACbL,OAAO,CAACS,IAAI,CAAC,CAACL,OAAO,EAAEC,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC;EAEF,KAAK,MAAMK,KAAK,IAAIjB,MAAM,EACxBQ,EAAE,CAACQ,IAAI,CAACP,MAAM,CAACC,IAAI,CAACO,KAAK,CAAC,CAAC;EAE7BrB,MAAM,CAACsB,eAAe,CAACX,OAAO,EAAEN,MAAM,CAAC;AACzC,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}