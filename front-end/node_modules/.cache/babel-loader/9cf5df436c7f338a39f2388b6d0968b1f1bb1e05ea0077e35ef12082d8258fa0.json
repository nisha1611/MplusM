{"ast":null,"code":"'use strict';\n\nconst buffers = [Buffer.from(new Array(900).fill('').map((_, i) => `key${i}=value${i}`).join('&'))];\nconst calls = {\n  field: 0,\n  end: 0\n};\nconst moduleName = process.argv[2];\nswitch (moduleName) {\n  case 'busboy':\n    {\n      const busboy = require('busboy');\n      console.time(moduleName);\n      const parser = busboy({\n        limits: {\n          fieldSizeLimit: Infinity\n        },\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded; charset=utf-8'\n        }\n      });\n      parser.on('field', (name, val, info) => {\n        ++calls.field;\n      }).on('close', () => {\n        ++calls.end;\n        console.timeEnd(moduleName);\n      });\n      for (const buf of buffers) parser.write(buf);\n      parser.end();\n      break;\n    }\n  case 'formidable':\n    {\n      const QuerystringParser = require('formidable/src/parsers/Querystring.js');\n      console.time(moduleName);\n      const parser = new QuerystringParser();\n      parser.on('data', obj => {\n        ++calls.field;\n      }).on('end', () => {\n        ++calls.end;\n        console.timeEnd(moduleName);\n      });\n      for (const buf of buffers) parser.write(buf);\n      parser.end();\n      break;\n    }\n  case 'formidable-streaming':\n    {\n      const QuerystringParser = require('formidable/src/parsers/StreamingQuerystring.js');\n      console.time(moduleName);\n      const parser = new QuerystringParser();\n      parser.on('data', obj => {\n        ++calls.field;\n      }).on('end', () => {\n        ++calls.end;\n        console.timeEnd(moduleName);\n      });\n      for (const buf of buffers) parser.write(buf);\n      parser.end();\n      break;\n    }\n  default:\n    if (moduleName === undefined) console.error('Missing parser module name');else console.error(`Invalid parser module name: ${moduleName}`);\n    process.exit(1);\n}","map":{"version":3,"names":["buffers","Buffer","from","Array","fill","map","_","i","join","calls","field","end","moduleName","process","argv","busboy","require","console","time","parser","limits","fieldSizeLimit","Infinity","headers","on","name","val","info","timeEnd","buf","write","QuerystringParser","obj","undefined","error","exit"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/busboy/bench/bench-urlencoded-fields-900pairs-small-alt.js"],"sourcesContent":["'use strict';\n\nconst buffers = [\n  Buffer.from(\n    (new Array(900)).fill('').map((_, i) => `key${i}=value${i}`).join('&')\n  ),\n];\nconst calls = {\n  field: 0,\n  end: 0,\n};\n\nconst moduleName = process.argv[2];\nswitch (moduleName) {\n  case 'busboy': {\n    const busboy = require('busboy');\n\n    console.time(moduleName);\n    const parser = busboy({\n      limits: {\n        fieldSizeLimit: Infinity,\n      },\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded; charset=utf-8',\n      },\n    });\n    parser.on('field', (name, val, info) => {\n      ++calls.field;\n    }).on('close', () => {\n      ++calls.end;\n      console.timeEnd(moduleName);\n    });\n\n    for (const buf of buffers)\n      parser.write(buf);\n    parser.end();\n    break;\n  }\n\n  case 'formidable': {\n    const QuerystringParser =\n      require('formidable/src/parsers/Querystring.js');\n\n    console.time(moduleName);\n    const parser = new QuerystringParser();\n    parser.on('data', (obj) => {\n      ++calls.field;\n    }).on('end', () => {\n      ++calls.end;\n      console.timeEnd(moduleName);\n    });\n\n    for (const buf of buffers)\n      parser.write(buf);\n    parser.end();\n    break;\n  }\n\n  case 'formidable-streaming': {\n    const QuerystringParser =\n      require('formidable/src/parsers/StreamingQuerystring.js');\n\n    console.time(moduleName);\n    const parser = new QuerystringParser();\n    parser.on('data', (obj) => {\n      ++calls.field;\n    }).on('end', () => {\n      ++calls.end;\n      console.timeEnd(moduleName);\n    });\n\n    for (const buf of buffers)\n      parser.write(buf);\n    parser.end();\n    break;\n  }\n\n  default:\n    if (moduleName === undefined)\n      console.error('Missing parser module name');\n    else\n      console.error(`Invalid parser module name: ${moduleName}`);\n    process.exit(1);\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAG,CACdC,MAAM,CAACC,IAAI,CACR,IAAIC,KAAK,CAAC,GAAG,CAAC,CAAEC,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAM,MAAKA,CAAE,SAAQA,CAAE,EAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CACvE,CACF;AACD,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,UAAU,GAAGC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;AAClC,QAAQF,UAAU;EAChB,KAAK,QAAQ;IAAE;MACb,MAAMG,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;MAEhCC,OAAO,CAACC,IAAI,CAACN,UAAU,CAAC;MACxB,MAAMO,MAAM,GAAGJ,MAAM,CAAC;QACpBK,MAAM,EAAE;UACNC,cAAc,EAAEC;QAClB,CAAC;QACDC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFJ,MAAM,CAACK,EAAE,CAAC,OAAO,EAAE,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,KAAK;QACtC,EAAElB,KAAK,CAACC,KAAK;MACf,CAAC,CAAC,CAACc,EAAE,CAAC,OAAO,EAAE,MAAM;QACnB,EAAEf,KAAK,CAACE,GAAG;QACXM,OAAO,CAACW,OAAO,CAAChB,UAAU,CAAC;MAC7B,CAAC,CAAC;MAEF,KAAK,MAAMiB,GAAG,IAAI7B,OAAO,EACvBmB,MAAM,CAACW,KAAK,CAACD,GAAG,CAAC;MACnBV,MAAM,CAACR,GAAG,EAAE;MACZ;IACF;EAEA,KAAK,YAAY;IAAE;MACjB,MAAMoB,iBAAiB,GACrBf,OAAO,CAAC,uCAAuC,CAAC;MAElDC,OAAO,CAACC,IAAI,CAACN,UAAU,CAAC;MACxB,MAAMO,MAAM,GAAG,IAAIY,iBAAiB,EAAE;MACtCZ,MAAM,CAACK,EAAE,CAAC,MAAM,EAAGQ,GAAG,IAAK;QACzB,EAAEvB,KAAK,CAACC,KAAK;MACf,CAAC,CAAC,CAACc,EAAE,CAAC,KAAK,EAAE,MAAM;QACjB,EAAEf,KAAK,CAACE,GAAG;QACXM,OAAO,CAACW,OAAO,CAAChB,UAAU,CAAC;MAC7B,CAAC,CAAC;MAEF,KAAK,MAAMiB,GAAG,IAAI7B,OAAO,EACvBmB,MAAM,CAACW,KAAK,CAACD,GAAG,CAAC;MACnBV,MAAM,CAACR,GAAG,EAAE;MACZ;IACF;EAEA,KAAK,sBAAsB;IAAE;MAC3B,MAAMoB,iBAAiB,GACrBf,OAAO,CAAC,gDAAgD,CAAC;MAE3DC,OAAO,CAACC,IAAI,CAACN,UAAU,CAAC;MACxB,MAAMO,MAAM,GAAG,IAAIY,iBAAiB,EAAE;MACtCZ,MAAM,CAACK,EAAE,CAAC,MAAM,EAAGQ,GAAG,IAAK;QACzB,EAAEvB,KAAK,CAACC,KAAK;MACf,CAAC,CAAC,CAACc,EAAE,CAAC,KAAK,EAAE,MAAM;QACjB,EAAEf,KAAK,CAACE,GAAG;QACXM,OAAO,CAACW,OAAO,CAAChB,UAAU,CAAC;MAC7B,CAAC,CAAC;MAEF,KAAK,MAAMiB,GAAG,IAAI7B,OAAO,EACvBmB,MAAM,CAACW,KAAK,CAACD,GAAG,CAAC;MACnBV,MAAM,CAACR,GAAG,EAAE;MACZ;IACF;EAEA;IACE,IAAIC,UAAU,KAAKqB,SAAS,EAC1BhB,OAAO,CAACiB,KAAK,CAAC,4BAA4B,CAAC,CAAC,KAE5CjB,OAAO,CAACiB,KAAK,CAAE,+BAA8BtB,UAAW,EAAC,CAAC;IAC5DC,OAAO,CAACsB,IAAI,CAAC,CAAC,CAAC;AAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}