{"ast":null,"code":"import { fromString } from \"@aws-sdk/util-buffer-from\";\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nexport const fromBase64 = input => {\n  if (input.length * 3 % 4 !== 0) {\n    throw new TypeError(`Incorrect padding on base64 string.`);\n  }\n  if (!BASE64_REGEX.exec(input)) {\n    throw new TypeError(`Invalid base64 string.`);\n  }\n  const buffer = fromString(input, \"base64\");\n  return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};","map":{"version":3,"names":["fromString","BASE64_REGEX","fromBase64","input","length","TypeError","exec","buffer","Uint8Array","byteOffset","byteLength"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-base64/dist-es/fromBase64.js"],"sourcesContent":["import { fromString } from \"@aws-sdk/util-buffer-from\";\r\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\r\nexport const fromBase64 = (input) => {\r\n    if ((input.length * 3) % 4 !== 0) {\r\n        throw new TypeError(`Incorrect padding on base64 string.`);\r\n    }\r\n    if (!BASE64_REGEX.exec(input)) {\r\n        throw new TypeError(`Invalid base64 string.`);\r\n    }\r\n    const buffer = fromString(input, \"base64\");\r\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,2BAA2B;AACtD,MAAMC,YAAY,GAAG,wBAAwB;AAC7C,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACjC,IAAKA,KAAK,CAACC,MAAM,GAAG,CAAC,GAAI,CAAC,KAAK,CAAC,EAAE;IAC9B,MAAM,IAAIC,SAAS,CAAE,qCAAoC,CAAC;EAC9D;EACA,IAAI,CAACJ,YAAY,CAACK,IAAI,CAACH,KAAK,CAAC,EAAE;IAC3B,MAAM,IAAIE,SAAS,CAAE,wBAAuB,CAAC;EACjD;EACA,MAAME,MAAM,GAAGP,UAAU,CAACG,KAAK,EAAE,QAAQ,CAAC;EAC1C,OAAO,IAAIK,UAAU,CAACD,MAAM,CAACA,MAAM,EAAEA,MAAM,CAACE,UAAU,EAAEF,MAAM,CAACG,UAAU,CAAC;AAC9E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}