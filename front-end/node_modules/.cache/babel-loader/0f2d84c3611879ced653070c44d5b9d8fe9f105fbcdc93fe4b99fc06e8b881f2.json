{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ImportDependency = require(\"./ImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\nclass ImportEagerDependency extends ImportDependency {\n  /**\r\n   * @param {string} request the request\r\n   * @param {[number, number]} range expression range\r\n   * @param {string[][]=} referencedExports list of referenced exports\r\n   */\n  constructor(request, range, referencedExports) {\n    super(request, range, referencedExports);\n  }\n  get type() {\n    return \"import() eager\";\n  }\n  get category() {\n    return \"esm\";\n  }\n}\nmakeSerializable(ImportEagerDependency, \"webpack/lib/dependencies/ImportEagerDependency\");\nImportEagerDependency.Template = class ImportEagerDependencyTemplate extends ImportDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      module,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref;\n    const dep = /** @type {ImportEagerDependency} */dependency;\n    const content = runtimeTemplate.moduleNamespacePromise({\n      chunkGraph,\n      module: moduleGraph.getModule(dep),\n      request: dep.request,\n      strict: module.buildMeta.strictHarmonyModule,\n      message: \"import() eager\",\n      runtimeRequirements\n    });\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n};\nmodule.exports = ImportEagerDependency;","map":{"version":3,"names":["makeSerializable","require","ImportDependency","ImportEagerDependency","constructor","request","range","referencedExports","type","category","Template","ImportEagerDependencyTemplate","apply","dependency","source","runtimeTemplate","module","moduleGraph","chunkGraph","runtimeRequirements","dep","content","moduleNamespacePromise","getModule","strict","buildMeta","strictHarmonyModule","message","replace","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/ImportEagerDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst ImportDependency = require(\"./ImportDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../Dependency\")} Dependency */\r\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n\r\nclass ImportEagerDependency extends ImportDependency {\r\n\t/**\r\n\t * @param {string} request the request\r\n\t * @param {[number, number]} range expression range\r\n\t * @param {string[][]=} referencedExports list of referenced exports\r\n\t */\r\n\tconstructor(request, range, referencedExports) {\r\n\t\tsuper(request, range, referencedExports);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"import() eager\";\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"esm\";\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tImportEagerDependency,\r\n\t\"webpack/lib/dependencies/ImportEagerDependency\"\r\n);\r\n\r\nImportEagerDependency.Template = class ImportEagerDependencyTemplate extends (\r\n\tImportDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(\r\n\t\tdependency,\r\n\t\tsource,\r\n\t\t{ runtimeTemplate, module, moduleGraph, chunkGraph, runtimeRequirements }\r\n\t) {\r\n\t\tconst dep = /** @type {ImportEagerDependency} */ (dependency);\r\n\t\tconst content = runtimeTemplate.moduleNamespacePromise({\r\n\t\t\tchunkGraph,\r\n\t\t\tmodule: moduleGraph.getModule(dep),\r\n\t\t\trequest: dep.request,\r\n\t\t\tstrict: module.buildMeta.strictHarmonyModule,\r\n\t\t\tmessage: \"import() eager\",\r\n\t\t\truntimeRequirements\r\n\t\t});\r\n\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\r\n\t}\r\n};\r\n\r\nmodule.exports = ImportEagerDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;;AAEA,MAAME,qBAAqB,SAASD,gBAAgB,CAAC;EACpD;AACD;AACA;AACA;AACA;EACCE,WAAW,CAACC,OAAO,EAAEC,KAAK,EAAEC,iBAAiB,EAAE;IAC9C,KAAK,CAACF,OAAO,EAAEC,KAAK,EAAEC,iBAAiB,CAAC;EACzC;EAEA,IAAIC,IAAI,GAAG;IACV,OAAO,gBAAgB;EACxB;EAEA,IAAIC,QAAQ,GAAG;IACd,OAAO,KAAK;EACb;AACD;AAEAT,gBAAgB,CACfG,qBAAqB,EACrB,gDAAgD,CAChD;AAEDA,qBAAqB,CAACO,QAAQ,GAAG,MAAMC,6BAA6B,SACnET,gBAAgB,CAACQ,QAAQ,CACxB;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAK,CACJC,UAAU,EACVC,MAAM,QAEL;IAAA,IADD;MAAEC,eAAe;MAAEC,MAAM;MAAEC,WAAW;MAAEC,UAAU;MAAEC;IAAoB,CAAC;IAEzE,MAAMC,GAAG,GAAG,oCAAsCP,UAAW;IAC7D,MAAMQ,OAAO,GAAGN,eAAe,CAACO,sBAAsB,CAAC;MACtDJ,UAAU;MACVF,MAAM,EAAEC,WAAW,CAACM,SAAS,CAACH,GAAG,CAAC;MAClCf,OAAO,EAAEe,GAAG,CAACf,OAAO;MACpBmB,MAAM,EAAER,MAAM,CAACS,SAAS,CAACC,mBAAmB;MAC5CC,OAAO,EAAE,gBAAgB;MACzBR;IACD,CAAC,CAAC;IAEFL,MAAM,CAACc,OAAO,CAACR,GAAG,CAACd,KAAK,CAAC,CAAC,CAAC,EAAEc,GAAG,CAACd,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEe,OAAO,CAAC;EACxD;AACD,CAAC;AAEDL,MAAM,CAACa,OAAO,GAAG1B,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}