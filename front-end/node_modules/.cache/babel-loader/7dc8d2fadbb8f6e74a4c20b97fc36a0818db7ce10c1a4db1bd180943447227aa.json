{"ast":null,"code":"'use strict';\n\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function difference(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = clone(O);\n  if (size(O) <= otherRec.size) iterateSet(O, function (e) {\n    if (otherRec.includes(e)) remove(result, e);\n  });else iterateSimple(otherRec.getIterator(), function (e) {\n    if (has(O, e)) remove(result, e);\n  });\n  return result;\n};","map":{"version":3,"names":["aSet","require","SetHelpers","clone","size","getSetRecord","iterateSet","iterateSimple","has","remove","module","exports","difference","other","O","otherRec","result","e","includes","getIterator"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/core-js/internals/set-difference.js"],"sourcesContent":["'use strict';\r\nvar aSet = require('../internals/a-set');\r\nvar SetHelpers = require('../internals/set-helpers');\r\nvar clone = require('../internals/set-clone');\r\nvar size = require('../internals/set-size');\r\nvar getSetRecord = require('../internals/get-set-record');\r\nvar iterateSet = require('../internals/set-iterate');\r\nvar iterateSimple = require('../internals/iterate-simple');\r\n\r\nvar has = SetHelpers.has;\r\nvar remove = SetHelpers.remove;\r\n\r\n// `Set.prototype.difference` method\r\n// https://github.com/tc39/proposal-set-methods\r\nmodule.exports = function difference(other) {\r\n  var O = aSet(this);\r\n  var otherRec = getSetRecord(other);\r\n  var result = clone(O);\r\n  if (size(O) <= otherRec.size) iterateSet(O, function (e) {\r\n    if (otherRec.includes(e)) remove(result, e);\r\n  });\r\n  else iterateSimple(otherRec.getIterator(), function (e) {\r\n    if (has(O, e)) remove(result, e);\r\n  });\r\n  return result;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACxC,IAAIC,UAAU,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIE,KAAK,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAC7C,IAAIG,IAAI,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAC3C,IAAII,YAAY,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AACzD,IAAIK,UAAU,GAAGL,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIM,aAAa,GAAGN,OAAO,CAAC,6BAA6B,CAAC;AAE1D,IAAIO,GAAG,GAAGN,UAAU,CAACM,GAAG;AACxB,IAAIC,MAAM,GAAGP,UAAU,CAACO,MAAM;;AAE9B;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,UAAU,CAACC,KAAK,EAAE;EAC1C,IAAIC,CAAC,GAAGd,IAAI,CAAC,IAAI,CAAC;EAClB,IAAIe,QAAQ,GAAGV,YAAY,CAACQ,KAAK,CAAC;EAClC,IAAIG,MAAM,GAAGb,KAAK,CAACW,CAAC,CAAC;EACrB,IAAIV,IAAI,CAACU,CAAC,CAAC,IAAIC,QAAQ,CAACX,IAAI,EAAEE,UAAU,CAACQ,CAAC,EAAE,UAAUG,CAAC,EAAE;IACvD,IAAIF,QAAQ,CAACG,QAAQ,CAACD,CAAC,CAAC,EAAER,MAAM,CAACO,MAAM,EAAEC,CAAC,CAAC;EAC7C,CAAC,CAAC,CAAC,KACEV,aAAa,CAACQ,QAAQ,CAACI,WAAW,EAAE,EAAE,UAAUF,CAAC,EAAE;IACtD,IAAIT,GAAG,CAACM,CAAC,EAAEG,CAAC,CAAC,EAAER,MAAM,CAACO,MAAM,EAAEC,CAAC,CAAC;EAClC,CAAC,CAAC;EACF,OAAOD,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}