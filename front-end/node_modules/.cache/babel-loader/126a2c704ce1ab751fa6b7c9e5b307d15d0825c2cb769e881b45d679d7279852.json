{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveProcessCredentials = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst child_process_1 = require(\"child_process\");\nconst util_1 = require(\"util\");\nconst getValidatedProcessCredentials_1 = require(\"./getValidatedProcessCredentials\");\nconst resolveProcessCredentials = async (profileName, profiles) => {\n  const profile = profiles[profileName];\n  if (profiles[profileName]) {\n    const credentialProcess = profile[\"credential_process\"];\n    if (credentialProcess !== undefined) {\n      const execPromise = (0, util_1.promisify)(child_process_1.exec);\n      try {\n        const {\n          stdout\n        } = await execPromise(credentialProcess);\n        let data;\n        try {\n          data = JSON.parse(stdout.trim());\n        } catch (_a) {\n          throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n        }\n        return (0, getValidatedProcessCredentials_1.getValidatedProcessCredentials)(profileName, data);\n      } catch (error) {\n        throw new property_provider_1.CredentialsProviderError(error.message);\n      }\n    } else {\n      throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n    }\n  } else {\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n  }\n};\nexports.resolveProcessCredentials = resolveProcessCredentials;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveProcessCredentials","property_provider_1","require","child_process_1","util_1","getValidatedProcessCredentials_1","profileName","profiles","profile","credentialProcess","undefined","execPromise","promisify","exec","stdout","data","JSON","parse","trim","_a","Error","getValidatedProcessCredentials","error","CredentialsProviderError","message"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-process/dist-cjs/resolveProcessCredentials.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveProcessCredentials = void 0;\r\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\r\nconst child_process_1 = require(\"child_process\");\r\nconst util_1 = require(\"util\");\r\nconst getValidatedProcessCredentials_1 = require(\"./getValidatedProcessCredentials\");\r\nconst resolveProcessCredentials = async (profileName, profiles) => {\r\n    const profile = profiles[profileName];\r\n    if (profiles[profileName]) {\r\n        const credentialProcess = profile[\"credential_process\"];\r\n        if (credentialProcess !== undefined) {\r\n            const execPromise = (0, util_1.promisify)(child_process_1.exec);\r\n            try {\r\n                const { stdout } = await execPromise(credentialProcess);\r\n                let data;\r\n                try {\r\n                    data = JSON.parse(stdout.trim());\r\n                }\r\n                catch (_a) {\r\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\r\n                }\r\n                return (0, getValidatedProcessCredentials_1.getValidatedProcessCredentials)(profileName, data);\r\n            }\r\n            catch (error) {\r\n                throw new property_provider_1.CredentialsProviderError(error.message);\r\n            }\r\n        }\r\n        else {\r\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\r\n        }\r\n    }\r\n    else {\r\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\r\n    }\r\n};\r\nexports.resolveProcessCredentials = resolveProcessCredentials;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAG,KAAK,CAAC;AAC1C,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAMC,eAAe,GAAGD,OAAO,CAAC,eAAe,CAAC;AAChD,MAAME,MAAM,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMG,gCAAgC,GAAGH,OAAO,CAAC,kCAAkC,CAAC;AACpF,MAAMF,yBAAyB,GAAG,OAAOM,WAAW,EAAEC,QAAQ,KAAK;EAC/D,MAAMC,OAAO,GAAGD,QAAQ,CAACD,WAAW,CAAC;EACrC,IAAIC,QAAQ,CAACD,WAAW,CAAC,EAAE;IACvB,MAAMG,iBAAiB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;IACvD,IAAIC,iBAAiB,KAAKC,SAAS,EAAE;MACjC,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAEP,MAAM,CAACQ,SAAS,EAAET,eAAe,CAACU,IAAI,CAAC;MAC/D,IAAI;QACA,MAAM;UAAEC;QAAO,CAAC,GAAG,MAAMH,WAAW,CAACF,iBAAiB,CAAC;QACvD,IAAIM,IAAI;QACR,IAAI;UACAA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,EAAE,CAAC;QACpC,CAAC,CACD,OAAOC,EAAE,EAAE;UACP,MAAMC,KAAK,CAAE,WAAUd,WAAY,4CAA2C,CAAC;QACnF;QACA,OAAO,CAAC,CAAC,EAAED,gCAAgC,CAACgB,8BAA8B,EAAEf,WAAW,EAAES,IAAI,CAAC;MAClG,CAAC,CACD,OAAOO,KAAK,EAAE;QACV,MAAM,IAAIrB,mBAAmB,CAACsB,wBAAwB,CAACD,KAAK,CAACE,OAAO,CAAC;MACzE;IACJ,CAAC,MACI;MACD,MAAM,IAAIvB,mBAAmB,CAACsB,wBAAwB,CAAE,WAAUjB,WAAY,sCAAqC,CAAC;IACxH;EACJ,CAAC,MACI;IACD,MAAM,IAAIL,mBAAmB,CAACsB,wBAAwB,CAAE,WAAUjB,WAAY,iDAAgD,CAAC;EACnI;AACJ,CAAC;AACDR,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}