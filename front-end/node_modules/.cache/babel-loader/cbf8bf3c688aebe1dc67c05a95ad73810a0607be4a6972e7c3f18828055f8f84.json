{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"./ConcatenationScope\");\nconst {\n  UsageState\n} = require(\"./ExportsInfo\");\nconst InitFragment = require(\"./InitFragment\");\nconst Module = require(\"./Module\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst createHash = require(\"./util/createHash\");\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst {\n  register\n} = require(\"./util/serialization\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\r\n * @typedef {Object} SourceData\r\n * @property {boolean=} iife\r\n * @property {string=} init\r\n * @property {string} expression\r\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\r\n * @property {ReadonlySet<string>=} runtimeRequirements\r\n */\n\nconst TYPES = new Set([\"javascript\"]);\nconst CSS_TYPES = new Set([\"css-import\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([RuntimeGlobals.definePropertyGetters]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\r\n * @param {string|string[]} variableName the variable name or path\r\n * @param {string} type the module system\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n  if (!Array.isArray(variableName)) {\n    // make it an array as the look up works the same basically\n    variableName = [variableName];\n  }\n\n  // needed for e.g. window[\"some\"][\"thing\"]\n  const objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n  return {\n    iife: type === \"this\",\n    expression: `${type}${objectLookup}`\n  };\n};\n\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n    };\n  }\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `require(${JSON.stringify(moduleName)})${propertyAccess(moduleAndSpecifiers, 1)}`\n  };\n};\n\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForCommonJsExternalInNodeModule = moduleAndSpecifiers => {\n  const chunkInitFragments = [new InitFragment('import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n', InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module node-commonjs\")];\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(moduleAndSpecifiers)})`,\n      chunkInitFragments\n    };\n  }\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(moduleName)})${propertyAccess(moduleAndSpecifiers, 1)}`,\n    chunkInitFragments\n  };\n};\n\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate) => {\n  const importName = runtimeTemplate.outputOptions.importFunctionName;\n  if (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n    throw new Error(\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\");\n  }\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `${importName}(${JSON.stringify(moduleAndSpecifiers)});`\n    };\n  }\n  if (moduleAndSpecifiers.length === 1) {\n    return {\n      expression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])});`\n    };\n  }\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `${importName}(${JSON.stringify(moduleName)}).then(${runtimeTemplate.returningFunction(`module${propertyAccess(moduleAndSpecifiers, 1)}`, \"module\")});`\n  };\n};\nclass ModuleExternalInitFragment extends InitFragment {\n  /**\r\n   * @param {string} request import source\r\n   * @param {string=} ident recomputed ident\r\n   * @param {string | HashConstructor=} hashFunction the hash function to use\r\n   */\n  constructor(request, ident) {\n    let hashFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"md4\";\n    if (ident === undefined) {\n      ident = Template.toIdentifier(request);\n      if (ident !== request) {\n        ident += `_${createHash(hashFunction).update(request).digest(\"hex\").slice(0, 8)}`;\n      }\n    }\n    const identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n    super(`import * as ${identifier} from ${JSON.stringify(request)};\\n`, InitFragment.STAGE_HARMONY_IMPORTS, 0, `external module import ${ident}`);\n    this._ident = ident;\n    this._identifier = identifier;\n    this._request = request;\n  }\n  getNamespaceIdentifier() {\n    return this._identifier;\n  }\n}\nregister(ModuleExternalInitFragment, \"webpack/lib/ExternalModule\", \"ModuleExternalInitFragment\", {\n  serialize(obj, _ref) {\n    let {\n      write\n    } = _ref;\n    write(obj._request);\n    write(obj._ident);\n  },\n  deserialize(_ref2) {\n    let {\n      read\n    } = _ref2;\n    return new ModuleExternalInitFragment(read(), read());\n  }\n});\nconst generateModuleRemapping = (input, exportsInfo, runtime) => {\n  if (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n    const properties = [];\n    for (const exportInfo of exportsInfo.orderedExports) {\n      const used = exportInfo.getUsedName(exportInfo.name, runtime);\n      if (!used) continue;\n      const nestedInfo = exportInfo.getNestedExportsInfo();\n      if (nestedInfo) {\n        const nestedExpr = generateModuleRemapping(`${input}${propertyAccess([exportInfo.name])}`, nestedInfo);\n        if (nestedExpr) {\n          properties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n          continue;\n        }\n      }\n      properties.push(`[${JSON.stringify(used)}]: () => ${input}${propertyAccess([exportInfo.name])}`);\n    }\n    return `x({ ${properties.join(\", \")} })`;\n  }\n};\n\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @param {ExportsInfo} exportsInfo exports info of this module\r\n * @param {RuntimeSpec} runtime the runtime\r\n * @param {string | HashConstructor=} hashFunction the hash function to use\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForModuleExternal = (moduleAndSpecifiers, exportsInfo, runtime, hashFunction) => {\n  if (!Array.isArray(moduleAndSpecifiers)) moduleAndSpecifiers = [moduleAndSpecifiers];\n  const initFragment = new ModuleExternalInitFragment(moduleAndSpecifiers[0], undefined, hashFunction);\n  const baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(moduleAndSpecifiers, 1)}`;\n  const moduleRemapping = generateModuleRemapping(baseAccess, exportsInfo, runtime);\n  let expression = moduleRemapping || baseAccess;\n  return {\n    expression,\n    init: `var x = y => { var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x; }\\nvar y = x => () => x`,\n    runtimeRequirements: moduleRemapping ? RUNTIME_REQUIREMENTS_FOR_MODULE : undefined,\n    chunkInitFragments: [initFragment]\n  };\n};\n\n/**\r\n * @param {string|string[]} urlAndGlobal the script request\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n  if (typeof urlAndGlobal === \"string\") {\n    urlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n  }\n  const url = urlAndGlobal[0];\n  const globalName = urlAndGlobal[1];\n  return {\n    init: \"var __webpack_error__ = new Error();\",\n    expression: `new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`if(typeof ${globalName} !== \"undefined\") return resolve();`, `${RuntimeGlobals.loadScript}(${JSON.stringify(url)}, ${runtimeTemplate.basicFunction(\"event\", [`if(typeof ${globalName} !== \"undefined\") return resolve();`, \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"__webpack_error__.name = 'ScriptExternalLoadError';\", \"__webpack_error__.type = errorType;\", \"__webpack_error__.request = realSrc;\", \"reject(__webpack_error__);\"])}, ${JSON.stringify(globalName)});`])}).then(${runtimeTemplate.returningFunction(`${globalName}${propertyAccess(urlAndGlobal, 2)}`)})`,\n    runtimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n  };\n};\n\n/**\r\n * @param {string} variableName the variable name to check\r\n * @param {string} request the request path\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {string} the generated source\r\n */\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => {\n  return `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock({\n    request\n  })} }\\n`;\n};\n\n/**\r\n * @param {string|number} id the module id\r\n * @param {boolean} optional true, if the module is optional\r\n * @param {string|string[]} request the request path\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForAmdOrUmdExternal = (id, optional, request, runtimeTemplate) => {\n  const externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${id}`)}__`;\n  return {\n    init: optional ? checkExternalVariable(externalVariable, Array.isArray(request) ? request.join(\".\") : request, runtimeTemplate) : undefined,\n    expression: externalVariable\n  };\n};\n\n/**\r\n * @param {boolean} optional true, if the module is optional\r\n * @param {string|string[]} request the request path\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n  if (!Array.isArray(request)) {\n    // make it an array as the look up works the same basically\n    request = [request];\n  }\n  const variableName = request[0];\n  const objectLookup = propertyAccess(request, 1);\n  return {\n    init: optional ? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate) : undefined,\n    expression: `${variableName}${objectLookup}`\n  };\n};\nclass ExternalModule extends Module {\n  constructor(request, type, userRequest) {\n    super(\"javascript/dynamic\", null);\n\n    // Info from Factory\n    /** @type {string | string[] | Record<string, string | string[]>} */\n    this.request = request;\n    /** @type {string} */\n    this.externalType = type;\n    /** @type {string} */\n    this.userRequest = userRequest;\n  }\n\n  /**\r\n   * @returns {Set<string>} types available (do not mutate)\r\n   */\n  getSourceTypes() {\n    return this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n  }\n\n  /**\r\n   * @param {LibIdentOptions} options options\r\n   * @returns {string | null} an identifier for library inclusion\r\n   */\n  libIdent(options) {\n    return this.userRequest;\n  }\n\n  /**\r\n   * @param {Chunk} chunk the chunk which condition should be checked\r\n   * @param {Compilation} compilation the compilation\r\n   * @returns {boolean} true, if the chunk is ok for the module\r\n   */\n  chunkCondition(chunk, _ref3) {\n    let {\n      chunkGraph\n    } = _ref3;\n    return this.externalType === \"css-import\" ? true : chunkGraph.getNumberOfEntryModules(chunk) > 0;\n  }\n\n  /**\r\n   * @returns {string} a unique identifier of the module\r\n   */\n  identifier() {\n    return `external ${this.externalType} ${JSON.stringify(this.request)}`;\n  }\n\n  /**\r\n   * @param {RequestShortener} requestShortener the request shortener\r\n   * @returns {string} a user readable identifier of the module\r\n   */\n  readableIdentifier(requestShortener) {\n    return \"external \" + JSON.stringify(this.request);\n  }\n\n  /**\r\n   * @param {NeedBuildContext} context context info\r\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\r\n   * @returns {void}\r\n   */\n  needBuild(context, callback) {\n    return callback(null, !this.buildMeta);\n  }\n\n  /**\r\n   * @param {WebpackOptions} options webpack options\r\n   * @param {Compilation} compilation the compilation\r\n   * @param {ResolverWithOptions} resolver the resolver\r\n   * @param {InputFileSystem} fs the file system\r\n   * @param {function(WebpackError=): void} callback callback function\r\n   * @returns {void}\r\n   */\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {\n      async: false,\n      exportsType: undefined\n    };\n    this.buildInfo = {\n      strict: true,\n      topLevelDeclarations: new Set(),\n      module: compilation.outputOptions.module\n    };\n    const {\n      request,\n      externalType\n    } = this._getRequestAndExternalType();\n    this.buildMeta.exportsType = \"dynamic\";\n    let canMangle = false;\n    this.clearDependenciesAndBlocks();\n    switch (externalType) {\n      case \"this\":\n        this.buildInfo.strict = false;\n        break;\n      case \"system\":\n        if (!Array.isArray(request) || request.length === 1) {\n          this.buildMeta.exportsType = \"namespace\";\n          canMangle = true;\n        }\n        break;\n      case \"module\":\n        if (this.buildInfo.module) {\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = true;\n          }\n        } else {\n          this.buildMeta.async = true;\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = false;\n          }\n        }\n        break;\n      case \"script\":\n      case \"promise\":\n        this.buildMeta.async = true;\n        break;\n      case \"import\":\n        this.buildMeta.async = true;\n        if (!Array.isArray(request) || request.length === 1) {\n          this.buildMeta.exportsType = \"namespace\";\n          canMangle = false;\n        }\n        break;\n    }\n    this.addDependency(new StaticExportsDependency(true, canMangle));\n    callback();\n  }\n  restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n  }\n\n  /**\r\n   * @param {ConcatenationBailoutReasonContext} context context\r\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\r\n   */\n  getConcatenationBailoutReason(_ref4) {\n    let {\n      moduleGraph\n    } = _ref4;\n    switch (this.externalType) {\n      case \"amd\":\n      case \"amd-require\":\n      case \"umd\":\n      case \"umd2\":\n      case \"system\":\n      case \"jsonp\":\n        return `${this.externalType} externals can't be concatenated`;\n    }\n    return undefined;\n  }\n  _getRequestAndExternalType() {\n    let {\n      request,\n      externalType\n    } = this;\n    if (typeof request === \"object\" && !Array.isArray(request)) request = request[externalType];\n    return {\n      request,\n      externalType\n    };\n  }\n  _getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime) {\n    switch (externalType) {\n      case \"this\":\n      case \"window\":\n      case \"self\":\n        return getSourceForGlobalVariableExternal(request, this.externalType);\n      case \"global\":\n        return getSourceForGlobalVariableExternal(request, runtimeTemplate.globalObject);\n      case \"commonjs\":\n      case \"commonjs2\":\n      case \"commonjs-module\":\n      case \"commonjs-static\":\n        return getSourceForCommonJsExternal(request);\n      case \"node-commonjs\":\n        return this.buildInfo.module ? getSourceForCommonJsExternalInNodeModule(request) : getSourceForCommonJsExternal(request);\n      case \"amd\":\n      case \"amd-require\":\n      case \"umd\":\n      case \"umd2\":\n      case \"system\":\n      case \"jsonp\":\n        {\n          const id = chunkGraph.getModuleId(this);\n          return getSourceForAmdOrUmdExternal(id !== null ? id : this.identifier(), this.isOptional(moduleGraph), request, runtimeTemplate);\n        }\n      case \"import\":\n        return getSourceForImportExternal(request, runtimeTemplate);\n      case \"script\":\n        return getSourceForScriptExternal(request, runtimeTemplate);\n      case \"module\":\n        {\n          if (!this.buildInfo.module) {\n            if (!runtimeTemplate.supportsDynamicImport()) {\n              throw new Error(\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" + (runtimeTemplate.supportsEcmaScriptModuleSyntax() ? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\" : \"\"));\n            }\n            return getSourceForImportExternal(request, runtimeTemplate);\n          }\n          if (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n            throw new Error(\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\");\n          }\n          return getSourceForModuleExternal(request, moduleGraph.getExportsInfo(this), runtime, runtimeTemplate.outputOptions.hashFunction);\n        }\n      case \"var\":\n      case \"promise\":\n      case \"const\":\n      case \"let\":\n      case \"assign\":\n      default:\n        return getSourceForDefaultCase(this.isOptional(moduleGraph), request, runtimeTemplate);\n    }\n  }\n\n  /**\r\n   * @param {CodeGenerationContext} context context for code generation\r\n   * @returns {CodeGenerationResult} result\r\n   */\n  codeGeneration(_ref5) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtime,\n      concatenationScope\n    } = _ref5;\n    const {\n      request,\n      externalType\n    } = this._getRequestAndExternalType();\n    switch (externalType) {\n      case \"asset\":\n        {\n          const sources = new Map();\n          sources.set(\"javascript\", new RawSource(`module.exports = ${JSON.stringify(request)};`));\n          const data = new Map();\n          data.set(\"url\", request);\n          return {\n            sources,\n            runtimeRequirements: RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n      case \"css-import\":\n        {\n          const sources = new Map();\n          sources.set(\"css-import\", new RawSource(`@import url(${JSON.stringify(request)});`));\n          return {\n            sources,\n            runtimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n          };\n        }\n      default:\n        {\n          const sourceData = this._getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime);\n          let sourceString = sourceData.expression;\n          if (sourceData.iife) sourceString = `(function() { return ${sourceString}; }())`;\n          if (concatenationScope) {\n            sourceString = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n            concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n          } else {\n            sourceString = `module.exports = ${sourceString};`;\n          }\n          if (sourceData.init) sourceString = `${sourceData.init}\\n${sourceString}`;\n          let data = undefined;\n          if (sourceData.chunkInitFragments) {\n            data = new Map();\n            data.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n          }\n          const sources = new Map();\n          if (this.useSourceMap || this.useSimpleSourceMap) {\n            sources.set(\"javascript\", new OriginalSource(sourceString, this.identifier()));\n          } else {\n            sources.set(\"javascript\", new RawSource(sourceString));\n          }\n          let runtimeRequirements = sourceData.runtimeRequirements;\n          if (!concatenationScope) {\n            if (!runtimeRequirements) {\n              runtimeRequirements = RUNTIME_REQUIREMENTS;\n            } else {\n              const set = new Set(runtimeRequirements);\n              set.add(RuntimeGlobals.module);\n              runtimeRequirements = set;\n            }\n          }\n          return {\n            sources,\n            runtimeRequirements: runtimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n    }\n  }\n\n  /**\r\n   * @param {string=} type the source type for which the size should be estimated\r\n   * @returns {number} the estimated size of the module (must be non-zero)\r\n   */\n  size(type) {\n    return 42;\n  }\n\n  /**\r\n   * @param {Hash} hash the hash used to track dependencies\r\n   * @param {UpdateHashContext} context context\r\n   * @returns {void}\r\n   */\n  updateHash(hash, context) {\n    const {\n      chunkGraph\n    } = context;\n    hash.update(`${this.externalType}${JSON.stringify(this.request)}${this.isOptional(chunkGraph.moduleGraph)}`);\n    super.updateHash(hash, context);\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.externalType);\n    write(this.userRequest);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.request = read();\n    this.externalType = read();\n    this.userRequest = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\nmodule.exports = ExternalModule;","map":{"version":3,"names":["OriginalSource","RawSource","require","ConcatenationScope","UsageState","InitFragment","Module","RuntimeGlobals","Template","StaticExportsDependency","createHash","extractUrlAndGlobal","makeSerializable","propertyAccess","register","TYPES","Set","CSS_TYPES","RUNTIME_REQUIREMENTS","module","RUNTIME_REQUIREMENTS_FOR_SCRIPT","loadScript","RUNTIME_REQUIREMENTS_FOR_MODULE","definePropertyGetters","EMPTY_RUNTIME_REQUIREMENTS","getSourceForGlobalVariableExternal","variableName","type","Array","isArray","objectLookup","map","r","JSON","stringify","join","iife","expression","getSourceForCommonJsExternal","moduleAndSpecifiers","moduleName","getSourceForCommonJsExternalInNodeModule","chunkInitFragments","STAGE_HARMONY_IMPORTS","getSourceForImportExternal","runtimeTemplate","importName","outputOptions","importFunctionName","supportsDynamicImport","Error","length","returningFunction","ModuleExternalInitFragment","constructor","request","ident","hashFunction","undefined","toIdentifier","update","digest","slice","identifier","_ident","_identifier","_request","getNamespaceIdentifier","serialize","obj","write","deserialize","read","generateModuleRemapping","input","exportsInfo","runtime","otherExportsInfo","getUsed","Unused","properties","exportInfo","orderedExports","used","getUsedName","name","nestedInfo","getNestedExportsInfo","nestedExpr","push","getSourceForModuleExternal","initFragment","baseAccess","moduleRemapping","init","runtimeRequirements","getSourceForScriptExternal","urlAndGlobal","url","globalName","basicFunction","checkExternalVariable","throwMissingModuleErrorBlock","getSourceForAmdOrUmdExternal","id","optional","externalVariable","getSourceForDefaultCase","ExternalModule","userRequest","externalType","getSourceTypes","libIdent","options","chunkCondition","chunk","chunkGraph","getNumberOfEntryModules","readableIdentifier","requestShortener","needBuild","context","callback","buildMeta","build","compilation","resolver","fs","async","exportsType","buildInfo","strict","topLevelDeclarations","_getRequestAndExternalType","canMangle","clearDependenciesAndBlocks","addDependency","restoreFromUnsafeCache","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","getConcatenationBailoutReason","moduleGraph","_getSourceData","globalObject","getModuleId","isOptional","supportsEcmaScriptModuleSyntax","getExportsInfo","codeGeneration","concatenationScope","sources","Map","set","data","sourceData","sourceString","supportsConst","NAMESPACE_OBJECT_EXPORT","registerNamespaceExport","useSourceMap","useSimpleSourceMap","add","size","updateHash","hash","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/ExternalModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\r\nconst ConcatenationScope = require(\"./ConcatenationScope\");\r\nconst { UsageState } = require(\"./ExportsInfo\");\r\nconst InitFragment = require(\"./InitFragment\");\r\nconst Module = require(\"./Module\");\r\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\r\nconst Template = require(\"./Template\");\r\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\r\nconst createHash = require(\"./util/createHash\");\r\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\r\nconst makeSerializable = require(\"./util/makeSerializable\");\r\nconst propertyAccess = require(\"./util/propertyAccess\");\r\nconst { register } = require(\"./util/serialization\");\r\n\r\n/** @typedef {import(\"webpack-sources\").Source} Source */\r\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\r\n/** @typedef {import(\"./Chunk\")} Chunk */\r\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\r\n/** @typedef {import(\"./Compilation\")} Compilation */\r\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\r\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\r\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\r\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\r\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\r\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\r\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\r\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\r\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\r\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\r\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\r\n/** @typedef {import(\"./WebpackError\")} WebpackError */\r\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\r\n/** @typedef {import(\"./util/Hash\")} Hash */\r\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\r\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\r\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\r\n\r\n/**\r\n * @typedef {Object} SourceData\r\n * @property {boolean=} iife\r\n * @property {string=} init\r\n * @property {string} expression\r\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\r\n * @property {ReadonlySet<string>=} runtimeRequirements\r\n */\r\n\r\nconst TYPES = new Set([\"javascript\"]);\r\nconst CSS_TYPES = new Set([\"css-import\"]);\r\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\r\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\r\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([\r\n\tRuntimeGlobals.definePropertyGetters\r\n]);\r\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\r\n\r\n/**\r\n * @param {string|string[]} variableName the variable name or path\r\n * @param {string} type the module system\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\r\n\tif (!Array.isArray(variableName)) {\r\n\t\t// make it an array as the look up works the same basically\r\n\t\tvariableName = [variableName];\r\n\t}\r\n\r\n\t// needed for e.g. window[\"some\"][\"thing\"]\r\n\tconst objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\r\n\treturn {\r\n\t\tiife: type === \"this\",\r\n\t\texpression: `${type}${objectLookup}`\r\n\t};\r\n};\r\n\r\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\r\n\tif (!Array.isArray(moduleAndSpecifiers)) {\r\n\t\treturn {\r\n\t\t\texpression: `require(${JSON.stringify(moduleAndSpecifiers)})`\r\n\t\t};\r\n\t}\r\n\tconst moduleName = moduleAndSpecifiers[0];\r\n\treturn {\r\n\t\texpression: `require(${JSON.stringify(moduleName)})${propertyAccess(\r\n\t\t\tmoduleAndSpecifiers,\r\n\t\t\t1\r\n\t\t)}`\r\n\t};\r\n};\r\n\r\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForCommonJsExternalInNodeModule = moduleAndSpecifiers => {\r\n\tconst chunkInitFragments = [\r\n\t\tnew InitFragment(\r\n\t\t\t'import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n',\r\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\r\n\t\t\t0,\r\n\t\t\t\"external module node-commonjs\"\r\n\t\t)\r\n\t];\r\n\tif (!Array.isArray(moduleAndSpecifiers)) {\r\n\t\treturn {\r\n\t\t\texpression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(\r\n\t\t\t\tmoduleAndSpecifiers\r\n\t\t\t)})`,\r\n\t\t\tchunkInitFragments\r\n\t\t};\r\n\t}\r\n\tconst moduleName = moduleAndSpecifiers[0];\r\n\treturn {\r\n\t\texpression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(\r\n\t\t\tmoduleName\r\n\t\t)})${propertyAccess(moduleAndSpecifiers, 1)}`,\r\n\t\tchunkInitFragments\r\n\t};\r\n};\r\n\r\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate) => {\r\n\tconst importName = runtimeTemplate.outputOptions.importFunctionName;\r\n\tif (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\r\n\t\tthrow new Error(\r\n\t\t\t\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\"\r\n\t\t);\r\n\t}\r\n\tif (!Array.isArray(moduleAndSpecifiers)) {\r\n\t\treturn {\r\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers)});`\r\n\t\t};\r\n\t}\r\n\tif (moduleAndSpecifiers.length === 1) {\r\n\t\treturn {\r\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])});`\r\n\t\t};\r\n\t}\r\n\tconst moduleName = moduleAndSpecifiers[0];\r\n\treturn {\r\n\t\texpression: `${importName}(${JSON.stringify(\r\n\t\t\tmoduleName\r\n\t\t)}).then(${runtimeTemplate.returningFunction(\r\n\t\t\t`module${propertyAccess(moduleAndSpecifiers, 1)}`,\r\n\t\t\t\"module\"\r\n\t\t)});`\r\n\t};\r\n};\r\n\r\nclass ModuleExternalInitFragment extends InitFragment {\r\n\t/**\r\n\t * @param {string} request import source\r\n\t * @param {string=} ident recomputed ident\r\n\t * @param {string | HashConstructor=} hashFunction the hash function to use\r\n\t */\r\n\tconstructor(request, ident, hashFunction = \"md4\") {\r\n\t\tif (ident === undefined) {\r\n\t\t\tident = Template.toIdentifier(request);\r\n\t\t\tif (ident !== request) {\r\n\t\t\t\tident += `_${createHash(hashFunction)\r\n\t\t\t\t\t.update(request)\r\n\t\t\t\t\t.digest(\"hex\")\r\n\t\t\t\t\t.slice(0, 8)}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\r\n\t\tsuper(\r\n\t\t\t`import * as ${identifier} from ${JSON.stringify(request)};\\n`,\r\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\r\n\t\t\t0,\r\n\t\t\t`external module import ${ident}`\r\n\t\t);\r\n\t\tthis._ident = ident;\r\n\t\tthis._identifier = identifier;\r\n\t\tthis._request = request;\r\n\t}\r\n\r\n\tgetNamespaceIdentifier() {\r\n\t\treturn this._identifier;\r\n\t}\r\n}\r\n\r\nregister(\r\n\tModuleExternalInitFragment,\r\n\t\"webpack/lib/ExternalModule\",\r\n\t\"ModuleExternalInitFragment\",\r\n\t{\r\n\t\tserialize(obj, { write }) {\r\n\t\t\twrite(obj._request);\r\n\t\t\twrite(obj._ident);\r\n\t\t},\r\n\t\tdeserialize({ read }) {\r\n\t\t\treturn new ModuleExternalInitFragment(read(), read());\r\n\t\t}\r\n\t}\r\n);\r\n\r\nconst generateModuleRemapping = (input, exportsInfo, runtime) => {\r\n\tif (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\r\n\t\tconst properties = [];\r\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\r\n\t\t\tconst used = exportInfo.getUsedName(exportInfo.name, runtime);\r\n\t\t\tif (!used) continue;\r\n\t\t\tconst nestedInfo = exportInfo.getNestedExportsInfo();\r\n\t\t\tif (nestedInfo) {\r\n\t\t\t\tconst nestedExpr = generateModuleRemapping(\r\n\t\t\t\t\t`${input}${propertyAccess([exportInfo.name])}`,\r\n\t\t\t\t\tnestedInfo\r\n\t\t\t\t);\r\n\t\t\t\tif (nestedExpr) {\r\n\t\t\t\t\tproperties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tproperties.push(\r\n\t\t\t\t`[${JSON.stringify(used)}]: () => ${input}${propertyAccess([\r\n\t\t\t\t\texportInfo.name\r\n\t\t\t\t])}`\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn `x({ ${properties.join(\", \")} })`;\r\n\t}\r\n};\r\n\r\n/**\r\n * @param {string|string[]} moduleAndSpecifiers the module request\r\n * @param {ExportsInfo} exportsInfo exports info of this module\r\n * @param {RuntimeSpec} runtime the runtime\r\n * @param {string | HashConstructor=} hashFunction the hash function to use\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForModuleExternal = (\r\n\tmoduleAndSpecifiers,\r\n\texportsInfo,\r\n\truntime,\r\n\thashFunction\r\n) => {\r\n\tif (!Array.isArray(moduleAndSpecifiers))\r\n\t\tmoduleAndSpecifiers = [moduleAndSpecifiers];\r\n\tconst initFragment = new ModuleExternalInitFragment(\r\n\t\tmoduleAndSpecifiers[0],\r\n\t\tundefined,\r\n\t\thashFunction\r\n\t);\r\n\tconst baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(\r\n\t\tmoduleAndSpecifiers,\r\n\t\t1\r\n\t)}`;\r\n\tconst moduleRemapping = generateModuleRemapping(\r\n\t\tbaseAccess,\r\n\t\texportsInfo,\r\n\t\truntime\r\n\t);\r\n\tlet expression = moduleRemapping || baseAccess;\r\n\treturn {\r\n\t\texpression,\r\n\t\tinit: `var x = y => { var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x; }\\nvar y = x => () => x`,\r\n\t\truntimeRequirements: moduleRemapping\r\n\t\t\t? RUNTIME_REQUIREMENTS_FOR_MODULE\r\n\t\t\t: undefined,\r\n\t\tchunkInitFragments: [initFragment]\r\n\t};\r\n};\r\n\r\n/**\r\n * @param {string|string[]} urlAndGlobal the script request\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\r\n\tif (typeof urlAndGlobal === \"string\") {\r\n\t\turlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\r\n\t}\r\n\tconst url = urlAndGlobal[0];\r\n\tconst globalName = urlAndGlobal[1];\r\n\treturn {\r\n\t\tinit: \"var __webpack_error__ = new Error();\",\r\n\t\texpression: `new Promise(${runtimeTemplate.basicFunction(\r\n\t\t\t\"resolve, reject\",\r\n\t\t\t[\r\n\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\r\n\t\t\t\t`${RuntimeGlobals.loadScript}(${JSON.stringify(\r\n\t\t\t\t\turl\r\n\t\t\t\t)}, ${runtimeTemplate.basicFunction(\"event\", [\r\n\t\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\r\n\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\r\n\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\r\n\t\t\t\t\t\"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\r\n\t\t\t\t\t\"__webpack_error__.name = 'ScriptExternalLoadError';\",\r\n\t\t\t\t\t\"__webpack_error__.type = errorType;\",\r\n\t\t\t\t\t\"__webpack_error__.request = realSrc;\",\r\n\t\t\t\t\t\"reject(__webpack_error__);\"\r\n\t\t\t\t])}, ${JSON.stringify(globalName)});`\r\n\t\t\t]\r\n\t\t)}).then(${runtimeTemplate.returningFunction(\r\n\t\t\t`${globalName}${propertyAccess(urlAndGlobal, 2)}`\r\n\t\t)})`,\r\n\t\truntimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\r\n\t};\r\n};\r\n\r\n/**\r\n * @param {string} variableName the variable name to check\r\n * @param {string} request the request path\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {string} the generated source\r\n */\r\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => {\r\n\treturn `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock(\r\n\t\t{ request }\r\n\t)} }\\n`;\r\n};\r\n\r\n/**\r\n * @param {string|number} id the module id\r\n * @param {boolean} optional true, if the module is optional\r\n * @param {string|string[]} request the request path\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForAmdOrUmdExternal = (\r\n\tid,\r\n\toptional,\r\n\trequest,\r\n\truntimeTemplate\r\n) => {\r\n\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\r\n\t\t`${id}`\r\n\t)}__`;\r\n\treturn {\r\n\t\tinit: optional\r\n\t\t\t? checkExternalVariable(\r\n\t\t\t\t\texternalVariable,\r\n\t\t\t\t\tArray.isArray(request) ? request.join(\".\") : request,\r\n\t\t\t\t\truntimeTemplate\r\n\t\t\t  )\r\n\t\t\t: undefined,\r\n\t\texpression: externalVariable\r\n\t};\r\n};\r\n\r\n/**\r\n * @param {boolean} optional true, if the module is optional\r\n * @param {string|string[]} request the request path\r\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\r\n * @returns {SourceData} the generated source\r\n */\r\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\r\n\tif (!Array.isArray(request)) {\r\n\t\t// make it an array as the look up works the same basically\r\n\t\trequest = [request];\r\n\t}\r\n\r\n\tconst variableName = request[0];\r\n\tconst objectLookup = propertyAccess(request, 1);\r\n\treturn {\r\n\t\tinit: optional\r\n\t\t\t? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate)\r\n\t\t\t: undefined,\r\n\t\texpression: `${variableName}${objectLookup}`\r\n\t};\r\n};\r\n\r\nclass ExternalModule extends Module {\r\n\tconstructor(request, type, userRequest) {\r\n\t\tsuper(\"javascript/dynamic\", null);\r\n\r\n\t\t// Info from Factory\r\n\t\t/** @type {string | string[] | Record<string, string | string[]>} */\r\n\t\tthis.request = request;\r\n\t\t/** @type {string} */\r\n\t\tthis.externalType = type;\r\n\t\t/** @type {string} */\r\n\t\tthis.userRequest = userRequest;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Set<string>} types available (do not mutate)\r\n\t */\r\n\tgetSourceTypes() {\r\n\t\treturn this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {LibIdentOptions} options options\r\n\t * @returns {string | null} an identifier for library inclusion\r\n\t */\r\n\tlibIdent(options) {\r\n\t\treturn this.userRequest;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Chunk} chunk the chunk which condition should be checked\r\n\t * @param {Compilation} compilation the compilation\r\n\t * @returns {boolean} true, if the chunk is ok for the module\r\n\t */\r\n\tchunkCondition(chunk, { chunkGraph }) {\r\n\t\treturn this.externalType === \"css-import\"\r\n\t\t\t? true\r\n\t\t\t: chunkGraph.getNumberOfEntryModules(chunk) > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} a unique identifier of the module\r\n\t */\r\n\tidentifier() {\r\n\t\treturn `external ${this.externalType} ${JSON.stringify(this.request)}`;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {RequestShortener} requestShortener the request shortener\r\n\t * @returns {string} a user readable identifier of the module\r\n\t */\r\n\treadableIdentifier(requestShortener) {\r\n\t\treturn \"external \" + JSON.stringify(this.request);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NeedBuildContext} context context info\r\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\r\n\t * @returns {void}\r\n\t */\r\n\tneedBuild(context, callback) {\r\n\t\treturn callback(null, !this.buildMeta);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {WebpackOptions} options webpack options\r\n\t * @param {Compilation} compilation the compilation\r\n\t * @param {ResolverWithOptions} resolver the resolver\r\n\t * @param {InputFileSystem} fs the file system\r\n\t * @param {function(WebpackError=): void} callback callback function\r\n\t * @returns {void}\r\n\t */\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.buildMeta = {\r\n\t\t\tasync: false,\r\n\t\t\texportsType: undefined\r\n\t\t};\r\n\t\tthis.buildInfo = {\r\n\t\t\tstrict: true,\r\n\t\t\ttopLevelDeclarations: new Set(),\r\n\t\t\tmodule: compilation.outputOptions.module\r\n\t\t};\r\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\r\n\t\tthis.buildMeta.exportsType = \"dynamic\";\r\n\t\tlet canMangle = false;\r\n\t\tthis.clearDependenciesAndBlocks();\r\n\t\tswitch (externalType) {\r\n\t\t\tcase \"this\":\r\n\t\t\t\tthis.buildInfo.strict = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"system\":\r\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\r\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\r\n\t\t\t\t\tcanMangle = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"module\":\r\n\t\t\t\tif (this.buildInfo.module) {\r\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\r\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\r\n\t\t\t\t\t\tcanMangle = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.buildMeta.async = true;\r\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\r\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\r\n\t\t\t\t\t\tcanMangle = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"script\":\r\n\t\t\tcase \"promise\":\r\n\t\t\t\tthis.buildMeta.async = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis.buildMeta.async = true;\r\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\r\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\r\n\t\t\t\t\tcanMangle = false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.addDependency(new StaticExportsDependency(true, canMangle));\r\n\t\tcallback();\r\n\t}\r\n\r\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\r\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ConcatenationBailoutReasonContext} context context\r\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\r\n\t */\r\n\tgetConcatenationBailoutReason({ moduleGraph }) {\r\n\t\tswitch (this.externalType) {\r\n\t\t\tcase \"amd\":\r\n\t\t\tcase \"amd-require\":\r\n\t\t\tcase \"umd\":\r\n\t\t\tcase \"umd2\":\r\n\t\t\tcase \"system\":\r\n\t\t\tcase \"jsonp\":\r\n\t\t\t\treturn `${this.externalType} externals can't be concatenated`;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t_getRequestAndExternalType() {\r\n\t\tlet { request, externalType } = this;\r\n\t\tif (typeof request === \"object\" && !Array.isArray(request))\r\n\t\t\trequest = request[externalType];\r\n\t\treturn { request, externalType };\r\n\t}\r\n\r\n\t_getSourceData(\r\n\t\trequest,\r\n\t\texternalType,\r\n\t\truntimeTemplate,\r\n\t\tmoduleGraph,\r\n\t\tchunkGraph,\r\n\t\truntime\r\n\t) {\r\n\t\tswitch (externalType) {\r\n\t\t\tcase \"this\":\r\n\t\t\tcase \"window\":\r\n\t\t\tcase \"self\":\r\n\t\t\t\treturn getSourceForGlobalVariableExternal(request, this.externalType);\r\n\t\t\tcase \"global\":\r\n\t\t\t\treturn getSourceForGlobalVariableExternal(\r\n\t\t\t\t\trequest,\r\n\t\t\t\t\truntimeTemplate.globalObject\r\n\t\t\t\t);\r\n\t\t\tcase \"commonjs\":\r\n\t\t\tcase \"commonjs2\":\r\n\t\t\tcase \"commonjs-module\":\r\n\t\t\tcase \"commonjs-static\":\r\n\t\t\t\treturn getSourceForCommonJsExternal(request);\r\n\t\t\tcase \"node-commonjs\":\r\n\t\t\t\treturn this.buildInfo.module\r\n\t\t\t\t\t? getSourceForCommonJsExternalInNodeModule(request)\r\n\t\t\t\t\t: getSourceForCommonJsExternal(request);\r\n\t\t\tcase \"amd\":\r\n\t\t\tcase \"amd-require\":\r\n\t\t\tcase \"umd\":\r\n\t\t\tcase \"umd2\":\r\n\t\t\tcase \"system\":\r\n\t\t\tcase \"jsonp\": {\r\n\t\t\t\tconst id = chunkGraph.getModuleId(this);\r\n\t\t\t\treturn getSourceForAmdOrUmdExternal(\r\n\t\t\t\t\tid !== null ? id : this.identifier(),\r\n\t\t\t\t\tthis.isOptional(moduleGraph),\r\n\t\t\t\t\trequest,\r\n\t\t\t\t\truntimeTemplate\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tcase \"import\":\r\n\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\r\n\t\t\tcase \"script\":\r\n\t\t\t\treturn getSourceForScriptExternal(request, runtimeTemplate);\r\n\t\t\tcase \"module\": {\r\n\t\t\t\tif (!this.buildInfo.module) {\r\n\t\t\t\t\tif (!runtimeTemplate.supportsDynamicImport()) {\r\n\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" +\r\n\t\t\t\t\t\t\t\t(runtimeTemplate.supportsEcmaScriptModuleSyntax()\r\n\t\t\t\t\t\t\t\t\t? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\"\r\n\t\t\t\t\t\t\t\t\t: \"\")\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\r\n\t\t\t\t}\r\n\t\t\t\tif (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn getSourceForModuleExternal(\r\n\t\t\t\t\trequest,\r\n\t\t\t\t\tmoduleGraph.getExportsInfo(this),\r\n\t\t\t\t\truntime,\r\n\t\t\t\t\truntimeTemplate.outputOptions.hashFunction\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tcase \"var\":\r\n\t\t\tcase \"promise\":\r\n\t\t\tcase \"const\":\r\n\t\t\tcase \"let\":\r\n\t\t\tcase \"assign\":\r\n\t\t\tdefault:\r\n\t\t\t\treturn getSourceForDefaultCase(\r\n\t\t\t\t\tthis.isOptional(moduleGraph),\r\n\t\t\t\t\trequest,\r\n\t\t\t\t\truntimeTemplate\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CodeGenerationContext} context context for code generation\r\n\t * @returns {CodeGenerationResult} result\r\n\t */\r\n\tcodeGeneration({\r\n\t\truntimeTemplate,\r\n\t\tmoduleGraph,\r\n\t\tchunkGraph,\r\n\t\truntime,\r\n\t\tconcatenationScope\r\n\t}) {\r\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\r\n\t\tswitch (externalType) {\r\n\t\t\tcase \"asset\": {\r\n\t\t\t\tconst sources = new Map();\r\n\t\t\t\tsources.set(\r\n\t\t\t\t\t\"javascript\",\r\n\t\t\t\t\tnew RawSource(`module.exports = ${JSON.stringify(request)};`)\r\n\t\t\t\t);\r\n\t\t\t\tconst data = new Map();\r\n\t\t\t\tdata.set(\"url\", request);\r\n\t\t\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS, data };\r\n\t\t\t}\r\n\t\t\tcase \"css-import\": {\r\n\t\t\t\tconst sources = new Map();\r\n\t\t\t\tsources.set(\r\n\t\t\t\t\t\"css-import\",\r\n\t\t\t\t\tnew RawSource(`@import url(${JSON.stringify(request)});`)\r\n\t\t\t\t);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsources,\r\n\t\t\t\t\truntimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tconst sourceData = this._getSourceData(\r\n\t\t\t\t\trequest,\r\n\t\t\t\t\texternalType,\r\n\t\t\t\t\truntimeTemplate,\r\n\t\t\t\t\tmoduleGraph,\r\n\t\t\t\t\tchunkGraph,\r\n\t\t\t\t\truntime\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlet sourceString = sourceData.expression;\r\n\t\t\t\tif (sourceData.iife)\r\n\t\t\t\t\tsourceString = `(function() { return ${sourceString}; }())`;\r\n\t\t\t\tif (concatenationScope) {\r\n\t\t\t\t\tsourceString = `${\r\n\t\t\t\t\t\truntimeTemplate.supportsConst() ? \"const\" : \"var\"\r\n\t\t\t\t\t} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\r\n\t\t\t\t\tconcatenationScope.registerNamespaceExport(\r\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsourceString = `module.exports = ${sourceString};`;\r\n\t\t\t\t}\r\n\t\t\t\tif (sourceData.init)\r\n\t\t\t\t\tsourceString = `${sourceData.init}\\n${sourceString}`;\r\n\r\n\t\t\t\tlet data = undefined;\r\n\t\t\t\tif (sourceData.chunkInitFragments) {\r\n\t\t\t\t\tdata = new Map();\r\n\t\t\t\t\tdata.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst sources = new Map();\r\n\t\t\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\r\n\t\t\t\t\tsources.set(\r\n\t\t\t\t\t\t\"javascript\",\r\n\t\t\t\t\t\tnew OriginalSource(sourceString, this.identifier())\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsources.set(\"javascript\", new RawSource(sourceString));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet runtimeRequirements = sourceData.runtimeRequirements;\r\n\t\t\t\tif (!concatenationScope) {\r\n\t\t\t\t\tif (!runtimeRequirements) {\r\n\t\t\t\t\t\truntimeRequirements = RUNTIME_REQUIREMENTS;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst set = new Set(runtimeRequirements);\r\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\r\n\t\t\t\t\t\truntimeRequirements = set;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsources,\r\n\t\t\t\t\truntimeRequirements:\r\n\t\t\t\t\t\truntimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\r\n\t\t\t\t\tdata\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string=} type the source type for which the size should be estimated\r\n\t * @returns {number} the estimated size of the module (must be non-zero)\r\n\t */\r\n\tsize(type) {\r\n\t\treturn 42;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Hash} hash the hash used to track dependencies\r\n\t * @param {UpdateHashContext} context context\r\n\t * @returns {void}\r\n\t */\r\n\tupdateHash(hash, context) {\r\n\t\tconst { chunkGraph } = context;\r\n\t\thash.update(\r\n\t\t\t`${this.externalType}${JSON.stringify(this.request)}${this.isOptional(\r\n\t\t\t\tchunkGraph.moduleGraph\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tsuper.updateHash(hash, context);\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\r\n\t\twrite(this.request);\r\n\t\twrite(this.externalType);\r\n\t\twrite(this.userRequest);\r\n\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\r\n\t\tthis.request = read();\r\n\t\tthis.externalType = read();\r\n\t\tthis.userRequest = read();\r\n\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\r\n\r\nmodule.exports = ExternalModule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}