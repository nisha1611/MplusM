{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst DelegatedModuleFactoryPlugin = require(\"./DelegatedModuleFactoryPlugin\");\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass DelegatedPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DelegatedPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(DelegatedSourceDependency, normalModuleFactory);\n    });\n    compiler.hooks.compile.tap(\"DelegatedPlugin\", _ref2 => {\n      let {\n        normalModuleFactory\n      } = _ref2;\n      new DelegatedModuleFactoryPlugin({\n        associatedObjectForCache: compiler.root,\n        ...this.options\n      }).apply(normalModuleFactory);\n    });\n  }\n}\nmodule.exports = DelegatedPlugin;","map":{"version":3,"names":["DelegatedModuleFactoryPlugin","require","DelegatedSourceDependency","DelegatedPlugin","constructor","options","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","compile","associatedObjectForCache","root","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/DelegatedPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst DelegatedModuleFactoryPlugin = require(\"./DelegatedModuleFactoryPlugin\");\r\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\r\n\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n\r\nclass DelegatedPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compilation.tap(\r\n\t\t\t\"DelegatedPlugin\",\r\n\t\t\t(compilation, { normalModuleFactory }) => {\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tDelegatedSourceDependency,\r\n\t\t\t\t\tnormalModuleFactory\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tcompiler.hooks.compile.tap(\"DelegatedPlugin\", ({ normalModuleFactory }) => {\r\n\t\t\tnew DelegatedModuleFactoryPlugin({\r\n\t\t\t\tassociatedObjectForCache: compiler.root,\r\n\t\t\t\t...this.options\r\n\t\t\t}).apply(normalModuleFactory);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = DelegatedPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,4BAA4B,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AAC9E,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,0CAA0C,CAAC;;AAErF;;AAEA,MAAME,eAAe,CAAC;EACrBC,WAAW,CAACC,OAAO,EAAE;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,iBAAiB,EACjB,CAACD,WAAW,WAA8B;MAAA,IAA5B;QAAEE;MAAoB,CAAC;MACpCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAClCX,yBAAyB,EACzBS,mBAAmB,CACnB;IACF,CAAC,CACD;IAEDJ,QAAQ,CAACC,KAAK,CAACM,OAAO,CAACJ,GAAG,CAAC,iBAAiB,EAAE,SAA6B;MAAA,IAA5B;QAAEC;MAAoB,CAAC;MACrE,IAAIX,4BAA4B,CAAC;QAChCe,wBAAwB,EAAER,QAAQ,CAACS,IAAI;QACvC,GAAG,IAAI,CAACX;MACT,CAAC,CAAC,CAACC,KAAK,CAACK,mBAAmB,CAAC;IAC9B,CAAC,CAAC;EACH;AACD;AAEAM,MAAM,CAACC,OAAO,GAAGf,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}