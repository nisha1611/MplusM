{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nconst TYPES = new Set([\"webassembly\"]);\nclass WebAssemblyJavascriptGenerator extends Generator {\n  /**\r\n   * @param {NormalModule} module fresh module\r\n   * @returns {Set<string>} available types (do not mutate)\r\n   */\n  getTypes(module) {\n    return TYPES;\n  }\n\n  /**\r\n   * @param {NormalModule} module the module\r\n   * @param {string=} type source type\r\n   * @returns {number} estimate size of the module\r\n   */\n  getSize(module, type) {\n    return 95 + module.dependencies.length * 5;\n  }\n\n  /**\r\n   * @param {NormalModule} module module for which the code should be generated\r\n   * @param {GenerateContext} generateContext context for generate\r\n   * @returns {Source} generated code\r\n   */\n  generate(module, generateContext) {\n    const {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements,\n      runtime\n    } = generateContext;\n    /** @type {InitFragment[]} */\n    const initFragments = [];\n    const exportsInfo = moduleGraph.getExportsInfo(module);\n    let needExportsCopy = false;\n    const importedModules = new Map();\n    const initParams = [];\n    let index = 0;\n    for (const dep of module.dependencies) {\n      const moduleDep = dep && dep instanceof ModuleDependency ? dep : undefined;\n      if (moduleGraph.getModule(dep)) {\n        let importData = importedModules.get(moduleGraph.getModule(dep));\n        if (importData === undefined) {\n          importedModules.set(moduleGraph.getModule(dep), importData = {\n            importVar: `m${index}`,\n            index,\n            request: moduleDep && moduleDep.userRequest || undefined,\n            names: new Set(),\n            reexports: []\n          });\n          index++;\n        }\n        if (dep instanceof WebAssemblyImportDependency) {\n          importData.names.add(dep.name);\n          if (dep.description.type === \"GlobalType\") {\n            const exportName = dep.name;\n            const importedModule = moduleGraph.getModule(dep);\n            if (importedModule) {\n              const usedName = moduleGraph.getExportsInfo(importedModule).getUsedName(exportName, runtime);\n              if (usedName) {\n                initParams.push(runtimeTemplate.exportFromImport({\n                  moduleGraph,\n                  module: importedModule,\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null,\n                  defaultInterop: true,\n                  initFragments,\n                  runtime,\n                  runtimeRequirements\n                }));\n              }\n            }\n          }\n        }\n        if (dep instanceof WebAssemblyExportImportedDependency) {\n          importData.names.add(dep.name);\n          const usedName = moduleGraph.getExportsInfo(module).getUsedName(dep.exportName, runtime);\n          if (usedName) {\n            runtimeRequirements.add(RuntimeGlobals.exports);\n            const exportProp = `${module.exportsArgument}[${JSON.stringify(usedName)}]`;\n            const defineStatement = Template.asString([`${exportProp} = ${runtimeTemplate.exportFromImport({\n              moduleGraph,\n              module: moduleGraph.getModule(dep),\n              request: dep.request,\n              importVar: importData.importVar,\n              originModule: module,\n              exportName: dep.name,\n              asiSafe: true,\n              isCall: false,\n              callContext: null,\n              defaultInterop: true,\n              initFragments,\n              runtime,\n              runtimeRequirements\n            })};`, `if(WebAssembly.Global) ${exportProp} = ` + `new WebAssembly.Global({ value: ${JSON.stringify(dep.valueType)} }, ${exportProp});`]);\n            importData.reexports.push(defineStatement);\n            needExportsCopy = true;\n          }\n        }\n      }\n    }\n    const importsCode = Template.asString(Array.from(importedModules, _ref => {\n      let [module, {\n        importVar,\n        request,\n        reexports\n      }] = _ref;\n      const importStatement = runtimeTemplate.importStatement({\n        module,\n        chunkGraph,\n        request,\n        importVar,\n        originModule: module,\n        runtimeRequirements\n      });\n      return importStatement[0] + importStatement[1] + reexports.join(\"\\n\");\n    }));\n    const copyAllExports = exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused && !needExportsCopy;\n\n    // need these globals\n    runtimeRequirements.add(RuntimeGlobals.module);\n    runtimeRequirements.add(RuntimeGlobals.moduleId);\n    runtimeRequirements.add(RuntimeGlobals.wasmInstances);\n    if (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n      runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n      runtimeRequirements.add(RuntimeGlobals.exports);\n    }\n    if (!copyAllExports) {\n      runtimeRequirements.add(RuntimeGlobals.exports);\n    }\n\n    // create source\n    const source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", `var wasmExports = ${RuntimeGlobals.wasmInstances}[${module.moduleArgument}.id];`, exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused ? `${RuntimeGlobals.makeNamespaceObject}(${module.exportsArgument});` : \"\",\n    // this must be before import for circular dependencies\n    \"// export exports from WebAssembly module\", copyAllExports ? `${module.moduleArgument}.exports = wasmExports;` : \"for(var name in wasmExports) \" + `if(name) ` + `${module.exportsArgument}[name] = wasmExports[name];`, \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", `wasmExports[\"\"](${initParams.join(\", \")})`].join(\"\\n\"));\n    return InitFragment.addToSource(source, initFragments, generateContext);\n  }\n}\nmodule.exports = WebAssemblyJavascriptGenerator;","map":{"version":3,"names":["RawSource","require","UsageState","Generator","InitFragment","RuntimeGlobals","Template","ModuleDependency","WebAssemblyExportImportedDependency","WebAssemblyImportDependency","TYPES","Set","WebAssemblyJavascriptGenerator","getTypes","module","getSize","type","dependencies","length","generate","generateContext","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","runtime","initFragments","exportsInfo","getExportsInfo","needExportsCopy","importedModules","Map","initParams","index","dep","moduleDep","undefined","getModule","importData","get","set","importVar","request","userRequest","names","reexports","add","name","description","exportName","importedModule","usedName","getUsedName","push","exportFromImport","originModule","asiSafe","isCall","callContext","defaultInterop","exports","exportProp","exportsArgument","JSON","stringify","defineStatement","asString","valueType","importsCode","Array","from","importStatement","join","copyAllExports","otherExportsInfo","getUsed","Unused","moduleId","wasmInstances","makeNamespaceObject","source","moduleArgument","addToSource"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/wasm-sync/WebAssemblyJavascriptGenerator.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { RawSource } = require(\"webpack-sources\");\r\nconst { UsageState } = require(\"../ExportsInfo\");\r\nconst Generator = require(\"../Generator\");\r\nconst InitFragment = require(\"../InitFragment\");\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst Template = require(\"../Template\");\r\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\r\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\r\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").Source} Source */\r\n/** @typedef {import(\"../Dependency\")} Dependency */\r\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\r\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\r\n/** @typedef {import(\"../NormalModule\")} NormalModule */\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n\r\nconst TYPES = new Set([\"webassembly\"]);\r\n\r\nclass WebAssemblyJavascriptGenerator extends Generator {\r\n\t/**\r\n\t * @param {NormalModule} module fresh module\r\n\t * @returns {Set<string>} available types (do not mutate)\r\n\t */\r\n\tgetTypes(module) {\r\n\t\treturn TYPES;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NormalModule} module the module\r\n\t * @param {string=} type source type\r\n\t * @returns {number} estimate size of the module\r\n\t */\r\n\tgetSize(module, type) {\r\n\t\treturn 95 + module.dependencies.length * 5;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NormalModule} module module for which the code should be generated\r\n\t * @param {GenerateContext} generateContext context for generate\r\n\t * @returns {Source} generated code\r\n\t */\r\n\tgenerate(module, generateContext) {\r\n\t\tconst {\r\n\t\t\truntimeTemplate,\r\n\t\t\tmoduleGraph,\r\n\t\t\tchunkGraph,\r\n\t\t\truntimeRequirements,\r\n\t\t\truntime\r\n\t\t} = generateContext;\r\n\t\t/** @type {InitFragment[]} */\r\n\t\tconst initFragments = [];\r\n\r\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\r\n\r\n\t\tlet needExportsCopy = false;\r\n\t\tconst importedModules = new Map();\r\n\t\tconst initParams = [];\r\n\t\tlet index = 0;\r\n\t\tfor (const dep of module.dependencies) {\r\n\t\t\tconst moduleDep =\r\n\t\t\t\tdep && dep instanceof ModuleDependency ? dep : undefined;\r\n\t\t\tif (moduleGraph.getModule(dep)) {\r\n\t\t\t\tlet importData = importedModules.get(moduleGraph.getModule(dep));\r\n\t\t\t\tif (importData === undefined) {\r\n\t\t\t\t\timportedModules.set(\r\n\t\t\t\t\t\tmoduleGraph.getModule(dep),\r\n\t\t\t\t\t\t(importData = {\r\n\t\t\t\t\t\t\timportVar: `m${index}`,\r\n\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\trequest: (moduleDep && moduleDep.userRequest) || undefined,\r\n\t\t\t\t\t\t\tnames: new Set(),\r\n\t\t\t\t\t\t\treexports: []\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t\tif (dep instanceof WebAssemblyImportDependency) {\r\n\t\t\t\t\timportData.names.add(dep.name);\r\n\t\t\t\t\tif (dep.description.type === \"GlobalType\") {\r\n\t\t\t\t\t\tconst exportName = dep.name;\r\n\t\t\t\t\t\tconst importedModule = moduleGraph.getModule(dep);\r\n\r\n\t\t\t\t\t\tif (importedModule) {\r\n\t\t\t\t\t\t\tconst usedName = moduleGraph\r\n\t\t\t\t\t\t\t\t.getExportsInfo(importedModule)\r\n\t\t\t\t\t\t\t\t.getUsedName(exportName, runtime);\r\n\t\t\t\t\t\t\tif (usedName) {\r\n\t\t\t\t\t\t\t\tinitParams.push(\r\n\t\t\t\t\t\t\t\t\truntimeTemplate.exportFromImport({\r\n\t\t\t\t\t\t\t\t\t\tmoduleGraph,\r\n\t\t\t\t\t\t\t\t\t\tmodule: importedModule,\r\n\t\t\t\t\t\t\t\t\t\trequest: dep.request,\r\n\t\t\t\t\t\t\t\t\t\timportVar: importData.importVar,\r\n\t\t\t\t\t\t\t\t\t\toriginModule: module,\r\n\t\t\t\t\t\t\t\t\t\texportName: dep.name,\r\n\t\t\t\t\t\t\t\t\t\tasiSafe: true,\r\n\t\t\t\t\t\t\t\t\t\tisCall: false,\r\n\t\t\t\t\t\t\t\t\t\tcallContext: null,\r\n\t\t\t\t\t\t\t\t\t\tdefaultInterop: true,\r\n\t\t\t\t\t\t\t\t\t\tinitFragments,\r\n\t\t\t\t\t\t\t\t\t\truntime,\r\n\t\t\t\t\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (dep instanceof WebAssemblyExportImportedDependency) {\r\n\t\t\t\t\timportData.names.add(dep.name);\r\n\t\t\t\t\tconst usedName = moduleGraph\r\n\t\t\t\t\t\t.getExportsInfo(module)\r\n\t\t\t\t\t\t.getUsedName(dep.exportName, runtime);\r\n\t\t\t\t\tif (usedName) {\r\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\t\t\t\t\tconst exportProp = `${module.exportsArgument}[${JSON.stringify(\r\n\t\t\t\t\t\t\tusedName\r\n\t\t\t\t\t\t)}]`;\r\n\t\t\t\t\t\tconst defineStatement = Template.asString([\r\n\t\t\t\t\t\t\t`${exportProp} = ${runtimeTemplate.exportFromImport({\r\n\t\t\t\t\t\t\t\tmoduleGraph,\r\n\t\t\t\t\t\t\t\tmodule: moduleGraph.getModule(dep),\r\n\t\t\t\t\t\t\t\trequest: dep.request,\r\n\t\t\t\t\t\t\t\timportVar: importData.importVar,\r\n\t\t\t\t\t\t\t\toriginModule: module,\r\n\t\t\t\t\t\t\t\texportName: dep.name,\r\n\t\t\t\t\t\t\t\tasiSafe: true,\r\n\t\t\t\t\t\t\t\tisCall: false,\r\n\t\t\t\t\t\t\t\tcallContext: null,\r\n\t\t\t\t\t\t\t\tdefaultInterop: true,\r\n\t\t\t\t\t\t\t\tinitFragments,\r\n\t\t\t\t\t\t\t\truntime,\r\n\t\t\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t\t\t})};`,\r\n\t\t\t\t\t\t\t`if(WebAssembly.Global) ${exportProp} = ` +\r\n\t\t\t\t\t\t\t\t`new WebAssembly.Global({ value: ${JSON.stringify(\r\n\t\t\t\t\t\t\t\t\tdep.valueType\r\n\t\t\t\t\t\t\t\t)} }, ${exportProp});`\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t\timportData.reexports.push(defineStatement);\r\n\t\t\t\t\t\tneedExportsCopy = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst importsCode = Template.asString(\r\n\t\t\tArray.from(\r\n\t\t\t\timportedModules,\r\n\t\t\t\t([module, { importVar, request, reexports }]) => {\r\n\t\t\t\t\tconst importStatement = runtimeTemplate.importStatement({\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\tchunkGraph,\r\n\t\t\t\t\t\trequest,\r\n\t\t\t\t\t\timportVar,\r\n\t\t\t\t\t\toriginModule: module,\r\n\t\t\t\t\t\truntimeRequirements\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn importStatement[0] + importStatement[1] + reexports.join(\"\\n\");\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst copyAllExports =\r\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused &&\r\n\t\t\t!needExportsCopy;\r\n\r\n\t\t// need these globals\r\n\t\truntimeRequirements.add(RuntimeGlobals.module);\r\n\t\truntimeRequirements.add(RuntimeGlobals.moduleId);\r\n\t\truntimeRequirements.add(RuntimeGlobals.wasmInstances);\r\n\t\tif (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\r\n\t\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\r\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\t}\r\n\t\tif (!copyAllExports) {\r\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\r\n\t\t}\r\n\r\n\t\t// create source\r\n\t\tconst source = new RawSource(\r\n\t\t\t[\r\n\t\t\t\t'\"use strict\";',\r\n\t\t\t\t\"// Instantiate WebAssembly module\",\r\n\t\t\t\t`var wasmExports = ${RuntimeGlobals.wasmInstances}[${module.moduleArgument}.id];`,\r\n\r\n\t\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused\r\n\t\t\t\t\t? `${RuntimeGlobals.makeNamespaceObject}(${module.exportsArgument});`\r\n\t\t\t\t\t: \"\",\r\n\r\n\t\t\t\t// this must be before import for circular dependencies\r\n\t\t\t\t\"// export exports from WebAssembly module\",\r\n\t\t\t\tcopyAllExports\r\n\t\t\t\t\t? `${module.moduleArgument}.exports = wasmExports;`\r\n\t\t\t\t\t: \"for(var name in wasmExports) \" +\r\n\t\t\t\t\t  `if(name) ` +\r\n\t\t\t\t\t  `${module.exportsArgument}[name] = wasmExports[name];`,\r\n\t\t\t\t\"// exec imports from WebAssembly module (for esm order)\",\r\n\t\t\t\timportsCode,\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"// exec wasm module\",\r\n\t\t\t\t`wasmExports[\"\"](${initParams.join(\", \")})`\r\n\t\t\t].join(\"\\n\")\r\n\t\t);\r\n\t\treturn InitFragment.addToSource(source, initFragments, generateContext);\r\n\t}\r\n}\r\n\r\nmodule.exports = WebAssemblyJavascriptGenerator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}