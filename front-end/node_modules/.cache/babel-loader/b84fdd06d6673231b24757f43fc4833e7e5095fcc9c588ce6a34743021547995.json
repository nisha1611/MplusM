{"ast":null,"code":"export function requestTimeout() {\n  let timeoutInMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"names":["requestTimeout","timeoutInMs","Promise","resolve","reject","setTimeout","timeoutError","Error","name"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/fetch-http-handler/dist-es/request-timeout.js"],"sourcesContent":["export function requestTimeout(timeoutInMs = 0) {\r\n    return new Promise((resolve, reject) => {\r\n        if (timeoutInMs) {\r\n            setTimeout(() => {\r\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\r\n                timeoutError.name = \"TimeoutError\";\r\n                reject(timeoutError);\r\n            }, timeoutInMs);\r\n        }\r\n    });\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,cAAc,GAAkB;EAAA,IAAjBC,WAAW,uEAAG,CAAC;EAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,IAAIH,WAAW,EAAE;MACbI,UAAU,CAAC,MAAM;QACb,MAAMC,YAAY,GAAG,IAAIC,KAAK,CAAE,mCAAkCN,WAAY,KAAI,CAAC;QACnFK,YAAY,CAACE,IAAI,GAAG,cAAc;QAClCJ,MAAM,CAACE,YAAY,CAAC;MACxB,CAAC,EAAEL,WAAW,CAAC;IACnB;EACJ,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}