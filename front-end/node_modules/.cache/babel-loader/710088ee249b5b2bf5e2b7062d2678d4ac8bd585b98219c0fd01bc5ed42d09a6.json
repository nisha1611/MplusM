{"ast":null,"code":"'use strict';\n\nmodule.exports = function setDocumentTimestamps(doc, timestampOption, currentTime, createdAt, updatedAt) {\n  const skipUpdatedAt = timestampOption != null && timestampOption.updatedAt === false;\n  const skipCreatedAt = timestampOption != null && timestampOption.createdAt === false;\n  const defaultTimestamp = currentTime != null ? currentTime() : doc.ownerDocument().constructor.base.now();\n  if (!skipCreatedAt && (doc.isNew || doc.$isSubdocument) && createdAt && !doc.$__getValue(createdAt) && doc.$__isSelected(createdAt)) {\n    doc.$set(createdAt, defaultTimestamp, undefined, {\n      overwriteImmutable: true\n    });\n  }\n  if (!skipUpdatedAt && updatedAt && (doc.isNew || doc.$isModified())) {\n    let ts = defaultTimestamp;\n    if (doc.isNew && createdAt != null) {\n      ts = doc.$__getValue(createdAt);\n    }\n    doc.$set(updatedAt, ts);\n  }\n};","map":{"version":3,"names":["module","exports","setDocumentTimestamps","doc","timestampOption","currentTime","createdAt","updatedAt","skipUpdatedAt","skipCreatedAt","defaultTimestamp","ownerDocument","constructor","base","now","isNew","$isSubdocument","$__getValue","$__isSelected","$set","undefined","overwriteImmutable","$isModified","ts"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/timestamps/setDocumentTimestamps.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = function setDocumentTimestamps(doc, timestampOption, currentTime, createdAt, updatedAt) {\r\n  const skipUpdatedAt = timestampOption != null && timestampOption.updatedAt === false;\r\n  const skipCreatedAt = timestampOption != null && timestampOption.createdAt === false;\r\n\r\n  const defaultTimestamp = currentTime != null ?\r\n    currentTime() :\r\n    doc.ownerDocument().constructor.base.now();\r\n\r\n  if (!skipCreatedAt &&\r\n      (doc.isNew || doc.$isSubdocument) &&\r\n      createdAt &&\r\n      !doc.$__getValue(createdAt) &&\r\n      doc.$__isSelected(createdAt)) {\r\n    doc.$set(createdAt, defaultTimestamp, undefined, { overwriteImmutable: true });\r\n  }\r\n\r\n  if (!skipUpdatedAt && updatedAt && (doc.isNew || doc.$isModified())) {\r\n    let ts = defaultTimestamp;\r\n    if (doc.isNew && createdAt != null) {\r\n      ts = doc.$__getValue(createdAt);\r\n    }\r\n    doc.$set(updatedAt, ts);\r\n  }\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,qBAAqB,CAACC,GAAG,EAAEC,eAAe,EAAEC,WAAW,EAAEC,SAAS,EAAEC,SAAS,EAAE;EACvG,MAAMC,aAAa,GAAGJ,eAAe,IAAI,IAAI,IAAIA,eAAe,CAACG,SAAS,KAAK,KAAK;EACpF,MAAME,aAAa,GAAGL,eAAe,IAAI,IAAI,IAAIA,eAAe,CAACE,SAAS,KAAK,KAAK;EAEpF,MAAMI,gBAAgB,GAAGL,WAAW,IAAI,IAAI,GAC1CA,WAAW,EAAE,GACbF,GAAG,CAACQ,aAAa,EAAE,CAACC,WAAW,CAACC,IAAI,CAACC,GAAG,EAAE;EAE5C,IAAI,CAACL,aAAa,KACbN,GAAG,CAACY,KAAK,IAAIZ,GAAG,CAACa,cAAc,CAAC,IACjCV,SAAS,IACT,CAACH,GAAG,CAACc,WAAW,CAACX,SAAS,CAAC,IAC3BH,GAAG,CAACe,aAAa,CAACZ,SAAS,CAAC,EAAE;IAChCH,GAAG,CAACgB,IAAI,CAACb,SAAS,EAAEI,gBAAgB,EAAEU,SAAS,EAAE;MAAEC,kBAAkB,EAAE;IAAK,CAAC,CAAC;EAChF;EAEA,IAAI,CAACb,aAAa,IAAID,SAAS,KAAKJ,GAAG,CAACY,KAAK,IAAIZ,GAAG,CAACmB,WAAW,EAAE,CAAC,EAAE;IACnE,IAAIC,EAAE,GAAGb,gBAAgB;IACzB,IAAIP,GAAG,CAACY,KAAK,IAAIT,SAAS,IAAI,IAAI,EAAE;MAClCiB,EAAE,GAAGpB,GAAG,CAACc,WAAW,CAACX,SAAS,CAAC;IACjC;IACAH,GAAG,CAACgB,IAAI,CAACZ,SAAS,EAAEgB,EAAE,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}