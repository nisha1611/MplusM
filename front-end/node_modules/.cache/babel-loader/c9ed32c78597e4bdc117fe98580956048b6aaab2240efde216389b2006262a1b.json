{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass ChunkPrefetchStartupRuntimeModule extends RuntimeModule {\n  /**\r\n   * @param {{ onChunks: Chunk[], chunks: Set<Chunk> }[]} startupChunks chunk ids to trigger when chunks are loaded\r\n   */\n  constructor(startupChunks) {\n    super(\"startup prefetch\", RuntimeModule.STAGE_TRIGGER);\n    this.startupChunks = startupChunks;\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    const {\n      startupChunks,\n      chunk\n    } = this;\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    return Template.asString(startupChunks.map(_ref => {\n      let {\n        onChunks,\n        chunks\n      } = _ref;\n      return `${RuntimeGlobals.onChunksLoaded}(0, ${JSON.stringify(\n      // This need to include itself to delay execution after this chunk has been fully loaded\n      onChunks.filter(c => c === chunk).map(c => c.id))}, ${runtimeTemplate.basicFunction(\"\", chunks.size < 3 ? Array.from(chunks, c => `${RuntimeGlobals.prefetchChunk}(${JSON.stringify(c.id)});`) : `${JSON.stringify(Array.from(chunks, c => c.id))}.map(${RuntimeGlobals.prefetchChunk});`)}, 5);`;\n    }));\n  }\n}\nmodule.exports = ChunkPrefetchStartupRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","ChunkPrefetchStartupRuntimeModule","constructor","startupChunks","STAGE_TRIGGER","generate","chunk","runtimeTemplate","compilation","asString","map","onChunks","chunks","onChunksLoaded","JSON","stringify","filter","c","id","basicFunction","size","Array","from","prefetchChunk","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/prefetch/ChunkPrefetchStartupRuntimeModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\nconst Template = require(\"../Template\");\r\n\r\n/** @typedef {import(\"../Chunk\")} Chunk */\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n\r\nclass ChunkPrefetchStartupRuntimeModule extends RuntimeModule {\r\n\t/**\r\n\t * @param {{ onChunks: Chunk[], chunks: Set<Chunk> }[]} startupChunks chunk ids to trigger when chunks are loaded\r\n\t */\r\n\tconstructor(startupChunks) {\r\n\t\tsuper(\"startup prefetch\", RuntimeModule.STAGE_TRIGGER);\r\n\t\tthis.startupChunks = startupChunks;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\tconst { startupChunks, chunk } = this;\r\n\t\tconst { runtimeTemplate } = this.compilation;\r\n\t\treturn Template.asString(\r\n\t\t\tstartupChunks.map(\r\n\t\t\t\t({ onChunks, chunks }) =>\r\n\t\t\t\t\t`${RuntimeGlobals.onChunksLoaded}(0, ${JSON.stringify(\r\n\t\t\t\t\t\t// This need to include itself to delay execution after this chunk has been fully loaded\r\n\t\t\t\t\t\tonChunks.filter(c => c === chunk).map(c => c.id)\r\n\t\t\t\t\t)}, ${runtimeTemplate.basicFunction(\r\n\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\tchunks.size < 3\r\n\t\t\t\t\t\t\t? Array.from(\r\n\t\t\t\t\t\t\t\t\tchunks,\r\n\t\t\t\t\t\t\t\t\tc =>\r\n\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.prefetchChunk}(${JSON.stringify(c.id)});`\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t: `${JSON.stringify(Array.from(chunks, c => c.id))}.map(${\r\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.prefetchChunk\r\n\t\t\t\t\t\t\t  });`\r\n\t\t\t\t\t)}, 5);`\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n\r\nmodule.exports = ChunkPrefetchStartupRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAEvC;AACA;;AAEA,MAAMG,iCAAiC,SAASF,aAAa,CAAC;EAC7D;AACD;AACA;EACCG,WAAW,CAACC,aAAa,EAAE;IAC1B,KAAK,CAAC,kBAAkB,EAAEJ,aAAa,CAACK,aAAa,CAAC;IACtD,IAAI,CAACD,aAAa,GAAGA,aAAa;EACnC;;EAEA;AACD;AACA;EACCE,QAAQ,GAAG;IACV,MAAM;MAAEF,aAAa;MAAEG;IAAM,CAAC,GAAG,IAAI;IACrC,MAAM;MAAEC;IAAgB,CAAC,GAAG,IAAI,CAACC,WAAW;IAC5C,OAAOR,QAAQ,CAACS,QAAQ,CACvBN,aAAa,CAACO,GAAG,CAChB;MAAA,IAAC;QAAEC,QAAQ;QAAEC;MAAO,CAAC;MAAA,OACnB,GAAEf,cAAc,CAACgB,cAAe,OAAMC,IAAI,CAACC,SAAS;MACpD;MACAJ,QAAQ,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKX,KAAK,CAAC,CAACI,GAAG,CAACO,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAC/C,KAAIX,eAAe,CAACY,aAAa,CAClC,EAAE,EACFP,MAAM,CAACQ,IAAI,GAAG,CAAC,GACZC,KAAK,CAACC,IAAI,CACVV,MAAM,EACNK,CAAC,IACC,GAAEpB,cAAc,CAAC0B,aAAc,IAAGT,IAAI,CAACC,SAAS,CAACE,CAAC,CAACC,EAAE,CAAE,IAAG,CAC3D,GACA,GAAEJ,IAAI,CAACC,SAAS,CAACM,KAAK,CAACC,IAAI,CAACV,MAAM,EAAEK,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAAE,QACjDrB,cAAc,CAAC0B,aACd,IAAG,CACN,OAAM;IAAA,EACT,CACD;EACF;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGxB,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}