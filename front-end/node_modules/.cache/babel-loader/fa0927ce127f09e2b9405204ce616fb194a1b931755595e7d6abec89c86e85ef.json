{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy {\n  constructor(maxAttemptsProvider, options) {\n    this.maxAttemptsProvider = maxAttemptsProvider;\n    this.mode = config_1.RETRY_MODES.ADAPTIVE;\n    const {\n      rateLimiter\n    } = options !== null && options !== void 0 ? options : {};\n    this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n    this.standardRetryStrategy = new StandardRetryStrategy_1.StandardRetryStrategy(maxAttemptsProvider);\n  }\n  async acquireInitialRetryToken(retryTokenScope) {\n    await this.rateLimiter.getSendToken();\n    return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n  }\n  async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n    this.rateLimiter.updateClientSendingRate(errorInfo);\n    return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n  }\n  recordSuccess(token) {\n    this.rateLimiter.updateClientSendingRate({});\n    this.standardRetryStrategy.recordSuccess(token);\n  }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;","map":{"version":3,"names":["Object","defineProperty","exports","value","AdaptiveRetryStrategy","config_1","require","DefaultRateLimiter_1","StandardRetryStrategy_1","constructor","maxAttemptsProvider","options","mode","RETRY_MODES","ADAPTIVE","rateLimiter","DefaultRateLimiter","standardRetryStrategy","StandardRetryStrategy","acquireInitialRetryToken","retryTokenScope","getSendToken","refreshRetryTokenForRetry","tokenToRenew","errorInfo","updateClientSendingRate","recordSuccess","token"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-retry/dist-cjs/AdaptiveRetryStrategy.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AdaptiveRetryStrategy = void 0;\r\nconst config_1 = require(\"./config\");\r\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\r\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\r\nclass AdaptiveRetryStrategy {\r\n    constructor(maxAttemptsProvider, options) {\r\n        this.maxAttemptsProvider = maxAttemptsProvider;\r\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\r\n        const { rateLimiter } = options !== null && options !== void 0 ? options : {};\r\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\r\n        this.standardRetryStrategy = new StandardRetryStrategy_1.StandardRetryStrategy(maxAttemptsProvider);\r\n    }\r\n    async acquireInitialRetryToken(retryTokenScope) {\r\n        await this.rateLimiter.getSendToken();\r\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\r\n    }\r\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\r\n        this.rateLimiter.updateClientSendingRate(errorInfo);\r\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\r\n    }\r\n    recordSuccess(token) {\r\n        this.rateLimiter.updateClientSendingRate({});\r\n        this.standardRetryStrategy.recordSuccess(token);\r\n    }\r\n}\r\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AACtC,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAME,uBAAuB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAClE,MAAMF,qBAAqB,CAAC;EACxBK,WAAW,CAACC,mBAAmB,EAAEC,OAAO,EAAE;IACtC,IAAI,CAACD,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACE,IAAI,GAAGP,QAAQ,CAACQ,WAAW,CAACC,QAAQ;IACzC,MAAM;MAAEC;IAAY,CAAC,GAAGJ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAG,CAAC,CAAC;IAC7E,IAAI,CAACI,WAAW,GAAGA,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAGA,WAAW,GAAG,IAAIR,oBAAoB,CAACS,kBAAkB,EAAE;IAC/H,IAAI,CAACC,qBAAqB,GAAG,IAAIT,uBAAuB,CAACU,qBAAqB,CAACR,mBAAmB,CAAC;EACvG;EACA,MAAMS,wBAAwB,CAACC,eAAe,EAAE;IAC5C,MAAM,IAAI,CAACL,WAAW,CAACM,YAAY,EAAE;IACrC,OAAO,IAAI,CAACJ,qBAAqB,CAACE,wBAAwB,CAACC,eAAe,CAAC;EAC/E;EACA,MAAME,yBAAyB,CAACC,YAAY,EAAEC,SAAS,EAAE;IACrD,IAAI,CAACT,WAAW,CAACU,uBAAuB,CAACD,SAAS,CAAC;IACnD,OAAO,IAAI,CAACP,qBAAqB,CAACK,yBAAyB,CAACC,YAAY,EAAEC,SAAS,CAAC;EACxF;EACAE,aAAa,CAACC,KAAK,EAAE;IACjB,IAAI,CAACZ,WAAW,CAACU,uBAAuB,CAAC,CAAC,CAAC,CAAC;IAC5C,IAAI,CAACR,qBAAqB,CAACS,aAAa,CAACC,KAAK,CAAC;EACnD;AACJ;AACAzB,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}