{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.X509 = void 0;\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass X509 extends auth_provider_1.AuthProvider {\n  prepare(handshakeDoc, authContext, callback) {\n    const {\n      credentials\n    } = authContext;\n    if (!credentials) {\n      return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    Object.assign(handshakeDoc, {\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    });\n    callback(undefined, handshakeDoc);\n  }\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    const response = authContext.response;\n    if (response && response.speculativeAuthenticate) {\n      return callback();\n    }\n    connection.command((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined, callback);\n  }\n}\nexports.X509 = X509;\nfunction x509AuthenticateCommand(credentials) {\n  const command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n  return command;\n}","map":{"version":3,"mappings":";;;;;;AACA;AACA;AAEA;AAGA,MAAaA,IAAK,SAAQC,4BAAY;EAC3BC,OAAO,CACdC,YAA+B,EAC/BC,WAAwB,EACxBC,QAAkB;IAElB,MAAM;MAAEC;IAAW,CAAE,GAAGF,WAAW;IACnC,IAAI,CAACE,WAAW,EAAE;MAChB,OAAOD,QAAQ,CAAC,IAAIE,oCAA4B,CAAC,uCAAuC,CAAC,CAAC;;IAE5FC,MAAM,CAACC,MAAM,CAACN,YAAY,EAAE;MAC1BO,uBAAuB,EAAEC,uBAAuB,CAACL,WAAW;KAC7D,CAAC;IAEFD,QAAQ,CAACO,SAAS,EAAET,YAAY,CAAC;EACnC;EAESU,IAAI,CAACT,WAAwB,EAAEC,QAAkB;IACxD,MAAMS,UAAU,GAAGV,WAAW,CAACU,UAAU;IACzC,MAAMR,WAAW,GAAGF,WAAW,CAACE,WAAW;IAC3C,IAAI,CAACA,WAAW,EAAE;MAChB,OAAOD,QAAQ,CAAC,IAAIE,oCAA4B,CAAC,uCAAuC,CAAC,CAAC;;IAE5F,MAAMQ,QAAQ,GAAGX,WAAW,CAACW,QAAQ;IAErC,IAAIA,QAAQ,IAAIA,QAAQ,CAACL,uBAAuB,EAAE;MAChD,OAAOL,QAAQ,EAAE;;IAGnBS,UAAU,CAACE,OAAO,CAChB,cAAE,EAAC,gBAAgB,CAAC,EACpBL,uBAAuB,CAACL,WAAW,CAAC,EACpCM,SAAS,EACTP,QAAQ,CACT;EACH;;AAnCFY;AAsCA,SAASN,uBAAuB,CAACL,WAA6B;EAC5D,MAAMU,OAAO,GAAa;IAAEE,YAAY,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAc,CAAE;EACxE,IAAIb,WAAW,CAACc,QAAQ,EAAE;IACxBJ,OAAO,CAACK,IAAI,GAAGf,WAAW,CAACc,QAAQ;;EAGrC,OAAOJ,OAAO;AAChB","names":["X509","auth_provider_1","prepare","handshakeDoc","authContext","callback","credentials","error_1","Object","assign","speculativeAuthenticate","x509AuthenticateCommand","undefined","auth","connection","response","command","exports","authenticate","mechanism","username","user"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\mongodb\\src\\cmap\\auth\\x509.ts"],"sourcesContent":["import type { Document } from '../../bson';\r\nimport { MongoMissingCredentialsError } from '../../error';\r\nimport { Callback, ns } from '../../utils';\r\nimport type { HandshakeDocument } from '../connect';\r\nimport { AuthContext, AuthProvider } from './auth_provider';\r\nimport type { MongoCredentials } from './mongo_credentials';\r\n\r\nexport class X509 extends AuthProvider {\r\n  override prepare(\r\n    handshakeDoc: HandshakeDocument,\r\n    authContext: AuthContext,\r\n    callback: Callback\r\n  ): void {\r\n    const { credentials } = authContext;\r\n    if (!credentials) {\r\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\r\n    }\r\n    Object.assign(handshakeDoc, {\r\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\r\n    });\r\n\r\n    callback(undefined, handshakeDoc);\r\n  }\r\n\r\n  override auth(authContext: AuthContext, callback: Callback): void {\r\n    const connection = authContext.connection;\r\n    const credentials = authContext.credentials;\r\n    if (!credentials) {\r\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\r\n    }\r\n    const response = authContext.response;\r\n\r\n    if (response && response.speculativeAuthenticate) {\r\n      return callback();\r\n    }\r\n\r\n    connection.command(\r\n      ns('$external.$cmd'),\r\n      x509AuthenticateCommand(credentials),\r\n      undefined,\r\n      callback\r\n    );\r\n  }\r\n}\r\n\r\nfunction x509AuthenticateCommand(credentials: MongoCredentials) {\r\n  const command: Document = { authenticate: 1, mechanism: 'MONGODB-X509' };\r\n  if (credentials.username) {\r\n    command.user = credentials.username;\r\n  }\r\n\r\n  return command;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}