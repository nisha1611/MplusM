{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass ChunkPrefetchTriggerRuntimeModule extends RuntimeModule {\n  /**\r\n   * @param {Record<string|number, (string|number)[]>} chunkMap map from chunk to\r\n   */\n  constructor(chunkMap) {\n    super(`chunk prefetch trigger`, RuntimeModule.STAGE_TRIGGER);\n    this.chunkMap = chunkMap;\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    const {\n      chunkMap\n    } = this;\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    const body = [\"var chunks = chunkToChildrenMap[chunkId];\", `Array.isArray(chunks) && chunks.map(${RuntimeGlobals.prefetchChunk});`];\n    return Template.asString([Template.asString([`var chunkToChildrenMap = ${JSON.stringify(chunkMap, null, \"\\t\")};`, `${RuntimeGlobals.ensureChunkHandlers}.prefetch = ${runtimeTemplate.expressionFunction(`Promise.all(promises).then(${runtimeTemplate.basicFunction(\"\", body)})`, \"chunkId, promises\")};`])]);\n  }\n}\nmodule.exports = ChunkPrefetchTriggerRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","ChunkPrefetchTriggerRuntimeModule","constructor","chunkMap","STAGE_TRIGGER","generate","runtimeTemplate","compilation","body","prefetchChunk","asString","JSON","stringify","ensureChunkHandlers","expressionFunction","basicFunction","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/prefetch/ChunkPrefetchTriggerRuntimeModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\nconst Template = require(\"../Template\");\r\n\r\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\r\n\r\nclass ChunkPrefetchTriggerRuntimeModule extends RuntimeModule {\r\n\t/**\r\n\t * @param {Record<string|number, (string|number)[]>} chunkMap map from chunk to\r\n\t */\r\n\tconstructor(chunkMap) {\r\n\t\tsuper(`chunk prefetch trigger`, RuntimeModule.STAGE_TRIGGER);\r\n\t\tthis.chunkMap = chunkMap;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\tconst { chunkMap } = this;\r\n\t\tconst { runtimeTemplate } = this.compilation;\r\n\t\tconst body = [\r\n\t\t\t\"var chunks = chunkToChildrenMap[chunkId];\",\r\n\t\t\t`Array.isArray(chunks) && chunks.map(${RuntimeGlobals.prefetchChunk});`\r\n\t\t];\r\n\t\treturn Template.asString([\r\n\t\t\tTemplate.asString([\r\n\t\t\t\t`var chunkToChildrenMap = ${JSON.stringify(chunkMap, null, \"\\t\")};`,\r\n\t\t\t\t`${\r\n\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\r\n\t\t\t\t}.prefetch = ${runtimeTemplate.expressionFunction(\r\n\t\t\t\t\t`Promise.all(promises).then(${runtimeTemplate.basicFunction(\r\n\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\tbody\r\n\t\t\t\t\t)})`,\r\n\t\t\t\t\t\"chunkId, promises\"\r\n\t\t\t\t)};`\r\n\t\t\t])\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nmodule.exports = ChunkPrefetchTriggerRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAEvC;;AAEA,MAAMG,iCAAiC,SAASF,aAAa,CAAC;EAC7D;AACD;AACA;EACCG,WAAW,CAACC,QAAQ,EAAE;IACrB,KAAK,CAAE,wBAAuB,EAAEJ,aAAa,CAACK,aAAa,CAAC;IAC5D,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EACzB;;EAEA;AACD;AACA;EACCE,QAAQ,GAAG;IACV,MAAM;MAAEF;IAAS,CAAC,GAAG,IAAI;IACzB,MAAM;MAAEG;IAAgB,CAAC,GAAG,IAAI,CAACC,WAAW;IAC5C,MAAMC,IAAI,GAAG,CACZ,2CAA2C,EAC1C,uCAAsCX,cAAc,CAACY,aAAc,IAAG,CACvE;IACD,OAAOT,QAAQ,CAACU,QAAQ,CAAC,CACxBV,QAAQ,CAACU,QAAQ,CAAC,CAChB,4BAA2BC,IAAI,CAACC,SAAS,CAACT,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAE,GAAE,EAClE,GACAN,cAAc,CAACgB,mBACf,eAAcP,eAAe,CAACQ,kBAAkB,CAC/C,8BAA6BR,eAAe,CAACS,aAAa,CAC1D,EAAE,EACFP,IAAI,CACH,GAAE,EACJ,mBAAmB,CAClB,GAAE,CACJ,CAAC,CACF,CAAC;EACH;AACD;AAEAQ,MAAM,CAACC,OAAO,GAAGhB,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}