{"ast":null,"code":"'use strict';\n\nconst _modifiedPaths = require('../common').modifiedPaths;\n\n/**\r\n * Given an update document with potential update operators (`$set`, etc.)\r\n * returns an object whose keys are the directly modified paths.\r\n *\r\n * If there are any top-level keys that don't start with `$`, we assume those\r\n * will get wrapped in a `$set`. The Mongoose Query is responsible for wrapping\r\n * top-level keys in `$set`.\r\n *\r\n * @param {Object} update\r\n * @return {Object} modified\r\n */\n\nmodule.exports = function modifiedPaths(update) {\n  const keys = Object.keys(update);\n  const res = {};\n  const withoutDollarKeys = {};\n  for (const key of keys) {\n    if (key.startsWith('$')) {\n      _modifiedPaths(update[key], '', res);\n      continue;\n    }\n    withoutDollarKeys[key] = update[key];\n  }\n  _modifiedPaths(withoutDollarKeys, '', res);\n  return res;\n};","map":{"version":3,"names":["_modifiedPaths","require","modifiedPaths","module","exports","update","keys","Object","res","withoutDollarKeys","key","startsWith"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/update/modifiedPaths.js"],"sourcesContent":["'use strict';\r\n\r\nconst _modifiedPaths = require('../common').modifiedPaths;\r\n\r\n/**\r\n * Given an update document with potential update operators (`$set`, etc.)\r\n * returns an object whose keys are the directly modified paths.\r\n *\r\n * If there are any top-level keys that don't start with `$`, we assume those\r\n * will get wrapped in a `$set`. The Mongoose Query is responsible for wrapping\r\n * top-level keys in `$set`.\r\n *\r\n * @param {Object} update\r\n * @return {Object} modified\r\n */\r\n\r\nmodule.exports = function modifiedPaths(update) {\r\n  const keys = Object.keys(update);\r\n  const res = {};\r\n\r\n  const withoutDollarKeys = {};\r\n  for (const key of keys) {\r\n    if (key.startsWith('$')) {\r\n      _modifiedPaths(update[key], '', res);\r\n      continue;\r\n    }\r\n    withoutDollarKeys[key] = update[key];\r\n  }\r\n\r\n  _modifiedPaths(withoutDollarKeys, '', res);\r\n\r\n  return res;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACC,aAAa;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,SAASF,aAAa,CAACG,MAAM,EAAE;EAC9C,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,MAAM,CAAC;EAChC,MAAMG,GAAG,GAAG,CAAC,CAAC;EAEd,MAAMC,iBAAiB,GAAG,CAAC,CAAC;EAC5B,KAAK,MAAMC,GAAG,IAAIJ,IAAI,EAAE;IACtB,IAAII,GAAG,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;MACvBX,cAAc,CAACK,MAAM,CAACK,GAAG,CAAC,EAAE,EAAE,EAAEF,GAAG,CAAC;MACpC;IACF;IACAC,iBAAiB,CAACC,GAAG,CAAC,GAAGL,MAAM,CAACK,GAAG,CAAC;EACtC;EAEAV,cAAc,CAACS,iBAAiB,EAAE,EAAE,EAAED,GAAG,CAAC;EAE1C,OAAOA,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}