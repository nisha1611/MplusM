{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = function () {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return async () => {\n    return resolveTokenFile(init);\n  };\n};\nexports.fromTokenFile = fromTokenFile;\nconst resolveTokenFile = init => {\n  var _a, _b, _c;\n  const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n  const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n  const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n  if (!webIdentityTokenFile || !roleArn) {\n    throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n  }\n  return (0, fromWebToken_1.fromWebToken)({\n    ...init,\n    webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, {\n      encoding: \"ascii\"\n    }),\n    roleArn,\n    roleSessionName\n  })();\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","fromTokenFile","property_provider_1","require","fs_1","fromWebToken_1","ENV_TOKEN_FILE","ENV_ROLE_ARN","ENV_ROLE_SESSION_NAME","init","resolveTokenFile","_a","_b","_c","webIdentityTokenFile","process","env","roleArn","roleSessionName","CredentialsProviderError","fromWebToken","webIdentityToken","readFileSync","encoding"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fromTokenFile = void 0;\r\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\r\nconst fs_1 = require(\"fs\");\r\nconst fromWebToken_1 = require(\"./fromWebToken\");\r\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\r\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\r\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\r\nconst fromTokenFile = (init = {}) => async () => {\r\n    return resolveTokenFile(init);\r\n};\r\nexports.fromTokenFile = fromTokenFile;\r\nconst resolveTokenFile = (init) => {\r\n    var _a, _b, _c;\r\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\r\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\r\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\r\n    if (!webIdentityTokenFile || !roleArn) {\r\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\r\n    }\r\n    return (0, fromWebToken_1.fromWebToken)({\r\n        ...init,\r\n        webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, { encoding: \"ascii\" }),\r\n        roleArn,\r\n        roleSessionName,\r\n    })();\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAMC,IAAI,GAAGD,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAME,cAAc,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAChD,MAAMG,cAAc,GAAG,6BAA6B;AACpD,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,MAAMP,aAAa,GAAG;EAAA,IAACQ,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAK,YAAY;IAC7C,OAAOC,gBAAgB,CAACD,IAAI,CAAC;EACjC,CAAC;AAAA;AACDV,OAAO,CAACE,aAAa,GAAGA,aAAa;AACrC,MAAMS,gBAAgB,GAAID,IAAI,IAAK;EAC/B,IAAIE,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACd,MAAMC,oBAAoB,GAAG,CAACH,EAAE,GAAGF,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACK,oBAAoB,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGI,OAAO,CAACC,GAAG,CAACV,cAAc,CAAC;EACtK,MAAMW,OAAO,GAAG,CAACL,EAAE,GAAGH,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACQ,OAAO,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGG,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;EAC1I,MAAMW,eAAe,GAAG,CAACL,EAAE,GAAGJ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACS,eAAe,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,OAAO,CAACC,GAAG,CAACR,qBAAqB,CAAC;EACnK,IAAI,CAACM,oBAAoB,IAAI,CAACG,OAAO,EAAE;IACnC,MAAM,IAAIf,mBAAmB,CAACiB,wBAAwB,CAAC,0CAA0C,CAAC;EACtG;EACA,OAAO,CAAC,CAAC,EAAEd,cAAc,CAACe,YAAY,EAAE;IACpC,GAAGX,IAAI;IACPY,gBAAgB,EAAE,CAAC,CAAC,EAAEjB,IAAI,CAACkB,YAAY,EAAER,oBAAoB,EAAE;MAAES,QAAQ,EAAE;IAAQ,CAAC,CAAC;IACrFN,OAAO;IACPC;EACJ,CAAC,CAAC,EAAE;AACR,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}