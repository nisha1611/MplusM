{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst memoize = require(\"./memoize\");\n\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_END_OPERATION_TYPE} MEASURE_END_OPERATION */\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_START_OPERATION_TYPE} MEASURE_START_OPERATION */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../serialization/Serializer\")} Serializer */\n\nconst getBinaryMiddleware = memoize(() => require(\"../serialization/BinaryMiddleware\"));\nconst getObjectMiddleware = memoize(() => require(\"../serialization/ObjectMiddleware\"));\nconst getSingleItemMiddleware = memoize(() => require(\"../serialization/SingleItemMiddleware\"));\nconst getSerializer = memoize(() => require(\"../serialization/Serializer\"));\nconst getSerializerMiddleware = memoize(() => require(\"../serialization/SerializerMiddleware\"));\nconst getBinaryMiddlewareInstance = memoize(() => new (getBinaryMiddleware())());\nconst registerSerializers = memoize(() => {\n  require(\"./registerExternalSerializer\");\n\n  // Load internal paths with a relative require\n  // This allows bundling all internal serializers\n  const internalSerializables = require(\"./internalSerializables\");\n  getObjectMiddleware().registerLoader(/^webpack\\/lib\\//, req => {\n    const loader = internalSerializables[req.slice(\"webpack/lib/\".length)];\n    if (loader) {\n      loader();\n    } else {\n      console.warn(`${req} not found in internalSerializables`);\n    }\n    return true;\n  });\n});\n\n/** @type {Serializer} */\nlet buffersSerializer;\n\n// Expose serialization API\nmodule.exports = {\n  get register() {\n    return getObjectMiddleware().register;\n  },\n  get registerLoader() {\n    return getObjectMiddleware().registerLoader;\n  },\n  get registerNotSerializable() {\n    return getObjectMiddleware().registerNotSerializable;\n  },\n  get NOT_SERIALIZABLE() {\n    return getObjectMiddleware().NOT_SERIALIZABLE;\n  },\n  /** @type {MEASURE_START_OPERATION} */\n  get MEASURE_START_OPERATION() {\n    return getBinaryMiddleware().MEASURE_START_OPERATION;\n  },\n  /** @type {MEASURE_END_OPERATION} */\n  get MEASURE_END_OPERATION() {\n    return getBinaryMiddleware().MEASURE_END_OPERATION;\n  },\n  get buffersSerializer() {\n    if (buffersSerializer !== undefined) return buffersSerializer;\n    registerSerializers();\n    const Serializer = getSerializer();\n    const binaryMiddleware = getBinaryMiddlewareInstance();\n    const SerializerMiddleware = getSerializerMiddleware();\n    const SingleItemMiddleware = getSingleItemMiddleware();\n    return buffersSerializer = new Serializer([new SingleItemMiddleware(), new (getObjectMiddleware())(context => {\n      if (context.write) {\n        context.writeLazy = value => {\n          context.write(SerializerMiddleware.createLazy(value, binaryMiddleware));\n        };\n      }\n    }, \"md4\"), binaryMiddleware]);\n  },\n  createFileSerializer: (fs, hashFunction) => {\n    registerSerializers();\n    const Serializer = getSerializer();\n    const FileMiddleware = require(\"../serialization/FileMiddleware\");\n    const fileMiddleware = new FileMiddleware(fs, hashFunction);\n    const binaryMiddleware = getBinaryMiddlewareInstance();\n    const SerializerMiddleware = getSerializerMiddleware();\n    const SingleItemMiddleware = getSingleItemMiddleware();\n    return new Serializer([new SingleItemMiddleware(), new (getObjectMiddleware())(context => {\n      if (context.write) {\n        context.writeLazy = value => {\n          context.write(SerializerMiddleware.createLazy(value, binaryMiddleware));\n        };\n        context.writeSeparate = (value, options) => {\n          const lazy = SerializerMiddleware.createLazy(value, fileMiddleware, options);\n          context.write(lazy);\n          return lazy;\n        };\n      }\n    }, hashFunction), binaryMiddleware, fileMiddleware]);\n  }\n};","map":{"version":3,"names":["memoize","require","getBinaryMiddleware","getObjectMiddleware","getSingleItemMiddleware","getSerializer","getSerializerMiddleware","getBinaryMiddlewareInstance","registerSerializers","internalSerializables","registerLoader","req","loader","slice","length","console","warn","buffersSerializer","module","exports","register","registerNotSerializable","NOT_SERIALIZABLE","MEASURE_START_OPERATION","MEASURE_END_OPERATION","undefined","Serializer","binaryMiddleware","SerializerMiddleware","SingleItemMiddleware","context","write","writeLazy","value","createLazy","createFileSerializer","fs","hashFunction","FileMiddleware","fileMiddleware","writeSeparate","options","lazy"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/util/serialization.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst memoize = require(\"./memoize\");\r\n\r\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_END_OPERATION_TYPE} MEASURE_END_OPERATION */\r\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_START_OPERATION_TYPE} MEASURE_START_OPERATION */\r\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\r\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\r\n/** @typedef {import(\"../serialization/Serializer\")} Serializer */\r\n\r\nconst getBinaryMiddleware = memoize(() =>\r\n\trequire(\"../serialization/BinaryMiddleware\")\r\n);\r\nconst getObjectMiddleware = memoize(() =>\r\n\trequire(\"../serialization/ObjectMiddleware\")\r\n);\r\nconst getSingleItemMiddleware = memoize(() =>\r\n\trequire(\"../serialization/SingleItemMiddleware\")\r\n);\r\nconst getSerializer = memoize(() => require(\"../serialization/Serializer\"));\r\nconst getSerializerMiddleware = memoize(() =>\r\n\trequire(\"../serialization/SerializerMiddleware\")\r\n);\r\n\r\nconst getBinaryMiddlewareInstance = memoize(\r\n\t() => new (getBinaryMiddleware())()\r\n);\r\n\r\nconst registerSerializers = memoize(() => {\r\n\trequire(\"./registerExternalSerializer\");\r\n\r\n\t// Load internal paths with a relative require\r\n\t// This allows bundling all internal serializers\r\n\tconst internalSerializables = require(\"./internalSerializables\");\r\n\tgetObjectMiddleware().registerLoader(/^webpack\\/lib\\//, req => {\r\n\t\tconst loader = internalSerializables[req.slice(\"webpack/lib/\".length)];\r\n\t\tif (loader) {\r\n\t\t\tloader();\r\n\t\t} else {\r\n\t\t\tconsole.warn(`${req} not found in internalSerializables`);\r\n\t\t}\r\n\t\treturn true;\r\n\t});\r\n});\r\n\r\n/** @type {Serializer} */\r\nlet buffersSerializer;\r\n\r\n// Expose serialization API\r\nmodule.exports = {\r\n\tget register() {\r\n\t\treturn getObjectMiddleware().register;\r\n\t},\r\n\tget registerLoader() {\r\n\t\treturn getObjectMiddleware().registerLoader;\r\n\t},\r\n\tget registerNotSerializable() {\r\n\t\treturn getObjectMiddleware().registerNotSerializable;\r\n\t},\r\n\tget NOT_SERIALIZABLE() {\r\n\t\treturn getObjectMiddleware().NOT_SERIALIZABLE;\r\n\t},\r\n\t/** @type {MEASURE_START_OPERATION} */\r\n\tget MEASURE_START_OPERATION() {\r\n\t\treturn getBinaryMiddleware().MEASURE_START_OPERATION;\r\n\t},\r\n\t/** @type {MEASURE_END_OPERATION} */\r\n\tget MEASURE_END_OPERATION() {\r\n\t\treturn getBinaryMiddleware().MEASURE_END_OPERATION;\r\n\t},\r\n\tget buffersSerializer() {\r\n\t\tif (buffersSerializer !== undefined) return buffersSerializer;\r\n\t\tregisterSerializers();\r\n\t\tconst Serializer = getSerializer();\r\n\t\tconst binaryMiddleware = getBinaryMiddlewareInstance();\r\n\t\tconst SerializerMiddleware = getSerializerMiddleware();\r\n\t\tconst SingleItemMiddleware = getSingleItemMiddleware();\r\n\t\treturn (buffersSerializer = new Serializer([\r\n\t\t\tnew SingleItemMiddleware(),\r\n\t\t\tnew (getObjectMiddleware())(context => {\r\n\t\t\t\tif (context.write) {\r\n\t\t\t\t\tcontext.writeLazy = value => {\r\n\t\t\t\t\t\tcontext.write(\r\n\t\t\t\t\t\t\tSerializerMiddleware.createLazy(value, binaryMiddleware)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}, \"md4\"),\r\n\t\t\tbinaryMiddleware\r\n\t\t]));\r\n\t},\r\n\tcreateFileSerializer: (fs, hashFunction) => {\r\n\t\tregisterSerializers();\r\n\t\tconst Serializer = getSerializer();\r\n\t\tconst FileMiddleware = require(\"../serialization/FileMiddleware\");\r\n\t\tconst fileMiddleware = new FileMiddleware(fs, hashFunction);\r\n\t\tconst binaryMiddleware = getBinaryMiddlewareInstance();\r\n\t\tconst SerializerMiddleware = getSerializerMiddleware();\r\n\t\tconst SingleItemMiddleware = getSingleItemMiddleware();\r\n\t\treturn new Serializer([\r\n\t\t\tnew SingleItemMiddleware(),\r\n\t\t\tnew (getObjectMiddleware())(context => {\r\n\t\t\t\tif (context.write) {\r\n\t\t\t\t\tcontext.writeLazy = value => {\r\n\t\t\t\t\t\tcontext.write(\r\n\t\t\t\t\t\t\tSerializerMiddleware.createLazy(value, binaryMiddleware)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tcontext.writeSeparate = (value, options) => {\r\n\t\t\t\t\t\tconst lazy = SerializerMiddleware.createLazy(\r\n\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\tfileMiddleware,\r\n\t\t\t\t\t\t\toptions\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tcontext.write(lazy);\r\n\t\t\t\t\t\treturn lazy;\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}, hashFunction),\r\n\t\t\tbinaryMiddleware,\r\n\t\t\tfileMiddleware\r\n\t\t]);\r\n\t}\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}