{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.streamCollector = void 0;\nconst util_base64_1 = require(\"@aws-sdk/util-base64\");\nconst streamCollector = stream => {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n  return collectStream(stream);\n};\nexports.streamCollector = streamCollector;\nasync function collectBlob(blob) {\n  const base64 = await readToBase64(blob);\n  const arrayBuffer = (0, util_base64_1.fromBase64)(base64);\n  return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n  let res = new Uint8Array(0);\n  const reader = stream.getReader();\n  let isDone = false;\n  while (!isDone) {\n    const {\n      done,\n      value\n    } = await reader.read();\n    if (value) {\n      const prior = res;\n      res = new Uint8Array(prior.length + value.length);\n      res.set(prior);\n      res.set(value, prior.length);\n    }\n    isDone = done;\n  }\n  return res;\n}\nfunction readToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      var _a;\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      const result = (_a = reader.result) !== null && _a !== void 0 ? _a : \"\";\n      const commaIndex = result.indexOf(\",\");\n      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = () => reject(new Error(\"Read aborted\"));\n    reader.onerror = () => reject(reader.error);\n    reader.readAsDataURL(blob);\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","streamCollector","util_base64_1","require","stream","Blob","collectBlob","collectStream","blob","base64","readToBase64","arrayBuffer","fromBase64","Uint8Array","res","reader","getReader","isDone","done","read","prior","length","set","Promise","resolve","reject","FileReader","onloadend","_a","readyState","Error","result","commaIndex","indexOf","dataOffset","substring","onabort","onerror","error","readAsDataURL"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/fetch-http-handler/dist-cjs/stream-collector.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.streamCollector = void 0;\r\nconst util_base64_1 = require(\"@aws-sdk/util-base64\");\r\nconst streamCollector = (stream) => {\r\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\r\n        return collectBlob(stream);\r\n    }\r\n    return collectStream(stream);\r\n};\r\nexports.streamCollector = streamCollector;\r\nasync function collectBlob(blob) {\r\n    const base64 = await readToBase64(blob);\r\n    const arrayBuffer = (0, util_base64_1.fromBase64)(base64);\r\n    return new Uint8Array(arrayBuffer);\r\n}\r\nasync function collectStream(stream) {\r\n    let res = new Uint8Array(0);\r\n    const reader = stream.getReader();\r\n    let isDone = false;\r\n    while (!isDone) {\r\n        const { done, value } = await reader.read();\r\n        if (value) {\r\n            const prior = res;\r\n            res = new Uint8Array(prior.length + value.length);\r\n            res.set(prior);\r\n            res.set(value, prior.length);\r\n        }\r\n        isDone = done;\r\n    }\r\n    return res;\r\n}\r\nfunction readToBase64(blob) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            var _a;\r\n            if (reader.readyState !== 2) {\r\n                return reject(new Error(\"Reader aborted too early\"));\r\n            }\r\n            const result = ((_a = reader.result) !== null && _a !== void 0 ? _a : \"\");\r\n            const commaIndex = result.indexOf(\",\");\r\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\r\n            resolve(result.substring(dataOffset));\r\n        };\r\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\r\n        reader.onerror = () => reject(reader.error);\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMC,aAAa,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMF,eAAe,GAAIG,MAAM,IAAK;EAChC,IAAI,OAAOC,IAAI,KAAK,UAAU,IAAID,MAAM,YAAYC,IAAI,EAAE;IACtD,OAAOC,WAAW,CAACF,MAAM,CAAC;EAC9B;EACA,OAAOG,aAAa,CAACH,MAAM,CAAC;AAChC,CAAC;AACDL,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzC,eAAeK,WAAW,CAACE,IAAI,EAAE;EAC7B,MAAMC,MAAM,GAAG,MAAMC,YAAY,CAACF,IAAI,CAAC;EACvC,MAAMG,WAAW,GAAG,CAAC,CAAC,EAAET,aAAa,CAACU,UAAU,EAAEH,MAAM,CAAC;EACzD,OAAO,IAAII,UAAU,CAACF,WAAW,CAAC;AACtC;AACA,eAAeJ,aAAa,CAACH,MAAM,EAAE;EACjC,IAAIU,GAAG,GAAG,IAAID,UAAU,CAAC,CAAC,CAAC;EAC3B,MAAME,MAAM,GAAGX,MAAM,CAACY,SAAS,EAAE;EACjC,IAAIC,MAAM,GAAG,KAAK;EAClB,OAAO,CAACA,MAAM,EAAE;IACZ,MAAM;MAAEC,IAAI;MAAElB;IAAM,CAAC,GAAG,MAAMe,MAAM,CAACI,IAAI,EAAE;IAC3C,IAAInB,KAAK,EAAE;MACP,MAAMoB,KAAK,GAAGN,GAAG;MACjBA,GAAG,GAAG,IAAID,UAAU,CAACO,KAAK,CAACC,MAAM,GAAGrB,KAAK,CAACqB,MAAM,CAAC;MACjDP,GAAG,CAACQ,GAAG,CAACF,KAAK,CAAC;MACdN,GAAG,CAACQ,GAAG,CAACtB,KAAK,EAAEoB,KAAK,CAACC,MAAM,CAAC;IAChC;IACAJ,MAAM,GAAGC,IAAI;EACjB;EACA,OAAOJ,GAAG;AACd;AACA,SAASJ,YAAY,CAACF,IAAI,EAAE;EACxB,OAAO,IAAIe,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMV,MAAM,GAAG,IAAIW,UAAU,EAAE;IAC/BX,MAAM,CAACY,SAAS,GAAG,MAAM;MACrB,IAAIC,EAAE;MACN,IAAIb,MAAM,CAACc,UAAU,KAAK,CAAC,EAAE;QACzB,OAAOJ,MAAM,CAAC,IAAIK,KAAK,CAAC,0BAA0B,CAAC,CAAC;MACxD;MACA,MAAMC,MAAM,GAAI,CAACH,EAAE,GAAGb,MAAM,CAACgB,MAAM,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAG;MACzE,MAAMI,UAAU,GAAGD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAC;MACtC,MAAMC,UAAU,GAAGF,UAAU,GAAG,CAAC,CAAC,GAAGA,UAAU,GAAG,CAAC,GAAGD,MAAM,CAACV,MAAM;MACnEG,OAAO,CAACO,MAAM,CAACI,SAAS,CAACD,UAAU,CAAC,CAAC;IACzC,CAAC;IACDnB,MAAM,CAACqB,OAAO,GAAG,MAAMX,MAAM,CAAC,IAAIK,KAAK,CAAC,cAAc,CAAC,CAAC;IACxDf,MAAM,CAACsB,OAAO,GAAG,MAAMZ,MAAM,CAACV,MAAM,CAACuB,KAAK,CAAC;IAC3CvB,MAAM,CAACwB,aAAa,CAAC/B,IAAI,CAAC;EAC9B,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"script","externalDependencies":[]}