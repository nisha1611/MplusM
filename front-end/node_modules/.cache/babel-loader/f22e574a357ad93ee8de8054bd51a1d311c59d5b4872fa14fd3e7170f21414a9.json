{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveDefaultsModeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst bowser_1 = tslib_1.__importDefault(require(\"bowser\"));\nconst constants_1 = require(\"./constants\");\nconst resolveDefaultsModeConfig = function () {\n  let {\n    defaultsMode\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return (0, property_provider_1.memoize)(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\n      case \"auto\":\n        return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n      case \"mobile\":\n      case \"in-region\":\n      case \"cross-region\":\n      case \"standard\":\n      case \"legacy\":\n        return Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase());\n      case undefined:\n        return Promise.resolve(\"legacy\");\n      default:\n        throw new Error(`Invalid parameter for \"defaultsMode\", expect ${constants_1.DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n  });\n};\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\nconst isMobileBrowser = () => {\n  var _a, _b;\n  const parsedUA = typeof window !== \"undefined\" && ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) ? bowser_1.default.parse(window.navigator.userAgent) : undefined;\n  const platform = (_b = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.platform) === null || _b === void 0 ? void 0 : _b.type;\n  return platform === \"tablet\" || platform === \"mobile\";\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveDefaultsModeConfig","tslib_1","require","property_provider_1","bowser_1","__importDefault","constants_1","defaultsMode","memoize","mode","toLowerCase","Promise","resolve","isMobileBrowser","toLocaleLowerCase","undefined","Error","DEFAULTS_MODE_OPTIONS","join","_a","_b","parsedUA","window","navigator","userAgent","default","parse","platform","type"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/util-defaults-mode-browser/dist-cjs/resolveDefaultsModeConfig.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveDefaultsModeConfig = void 0;\r\nconst tslib_1 = require(\"tslib\");\r\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\r\nconst bowser_1 = tslib_1.__importDefault(require(\"bowser\"));\r\nconst constants_1 = require(\"./constants\");\r\nconst resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => (0, property_provider_1.memoize)(async () => {\r\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\r\n    switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\r\n        case \"auto\":\r\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\r\n        case \"mobile\":\r\n        case \"in-region\":\r\n        case \"cross-region\":\r\n        case \"standard\":\r\n        case \"legacy\":\r\n            return Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase());\r\n        case undefined:\r\n            return Promise.resolve(\"legacy\");\r\n        default:\r\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${constants_1.DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\r\n    }\r\n});\r\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\r\nconst isMobileBrowser = () => {\r\n    var _a, _b;\r\n    const parsedUA = typeof window !== \"undefined\" && ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent)\r\n        ? bowser_1.default.parse(window.navigator.userAgent)\r\n        : undefined;\r\n    const platform = (_b = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.platform) === null || _b === void 0 ? void 0 : _b.type;\r\n    return platform === \"tablet\" || platform === \"mobile\";\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAG,KAAK,CAAC;AAC1C,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAME,QAAQ,GAAGH,OAAO,CAACI,eAAe,CAACH,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3D,MAAMI,WAAW,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMF,yBAAyB,GAAG;EAAA,IAAC;IAAEO;EAAc,CAAC,uEAAG,CAAC,CAAC;EAAA,OAAK,CAAC,CAAC,EAAEJ,mBAAmB,CAACK,OAAO,EAAE,YAAY;IACvG,MAAMC,IAAI,GAAG,OAAOF,YAAY,KAAK,UAAU,GAAG,MAAMA,YAAY,EAAE,GAAGA,YAAY;IACrF,QAAQE,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACC,WAAW,EAAE;MAClE,KAAK,MAAM;QACP,OAAOC,OAAO,CAACC,OAAO,CAACC,eAAe,EAAE,GAAG,QAAQ,GAAG,UAAU,CAAC;MACrE,KAAK,QAAQ;MACb,KAAK,WAAW;MAChB,KAAK,cAAc;MACnB,KAAK,UAAU;MACf,KAAK,QAAQ;QACT,OAAOF,OAAO,CAACC,OAAO,CAACH,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACK,iBAAiB,EAAE,CAAC;MAChG,KAAKC,SAAS;QACV,OAAOJ,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;MACpC;QACI,MAAM,IAAII,KAAK,CAAE,gDAA+CV,WAAW,CAACW,qBAAqB,CAACC,IAAI,CAAC,IAAI,CAAE,SAAQT,IAAK,EAAC,CAAC;IAAC;EAEzI,CAAC,CAAC;AAAA;AACFX,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB;AAC7D,MAAMa,eAAe,GAAG,MAAM;EAC1B,IAAIM,EAAE,EAAEC,EAAE;EACV,MAAMC,QAAQ,GAAG,OAAOC,MAAM,KAAK,WAAW,KAAK,CAACH,EAAE,GAAGG,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,SAAS,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,SAAS,CAAC,GACvKpB,QAAQ,CAACqB,OAAO,CAACC,KAAK,CAACJ,MAAM,CAACC,SAAS,CAACC,SAAS,CAAC,GAClDT,SAAS;EACf,MAAMY,QAAQ,GAAG,CAACP,EAAE,GAAGC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACM,QAAQ,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,IAAI;EAC1I,OAAOD,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,QAAQ;AACzD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}