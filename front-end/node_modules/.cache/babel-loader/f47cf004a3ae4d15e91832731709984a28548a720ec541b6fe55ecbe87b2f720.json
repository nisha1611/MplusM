{"ast":null,"code":"import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromIni } from \"@aws-sdk/credential-provider-ini\";\nimport { fromProcess } from \"@aws-sdk/credential-provider-process\";\nimport { fromSSO } from \"@aws-sdk/credential-provider-sso\";\nimport { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nimport { chain, CredentialsProviderError, memoize } from \"@aws-sdk/property-provider\";\nimport { ENV_PROFILE } from \"@aws-sdk/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nexport const defaultProvider = function () {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return memoize(chain(...(init.profile || process.env[ENV_PROFILE] ? [] : [fromEnv()]), fromSSO(init), fromIni(init), fromProcess(init), fromTokenFile(init), remoteProvider(init), async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", false);\n  }), credentials => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, credentials => credentials.expiration !== undefined);\n};","map":{"version":3,"names":["fromEnv","fromIni","fromProcess","fromSSO","fromTokenFile","chain","CredentialsProviderError","memoize","ENV_PROFILE","remoteProvider","defaultProvider","init","profile","process","env","credentials","expiration","undefined","getTime","Date","now"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js"],"sourcesContent":["import { fromEnv } from \"@aws-sdk/credential-provider-env\";\r\nimport { fromIni } from \"@aws-sdk/credential-provider-ini\";\r\nimport { fromProcess } from \"@aws-sdk/credential-provider-process\";\r\nimport { fromSSO } from \"@aws-sdk/credential-provider-sso\";\r\nimport { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\r\nimport { chain, CredentialsProviderError, memoize } from \"@aws-sdk/property-provider\";\r\nimport { ENV_PROFILE } from \"@aws-sdk/shared-ini-file-loader\";\r\nimport { remoteProvider } from \"./remoteProvider\";\r\nexport const defaultProvider = (init = {}) => memoize(chain(...(init.profile || process.env[ENV_PROFILE] ? [] : [fromEnv()]), fromSSO(init), fromIni(init), fromProcess(init), fromTokenFile(init), remoteProvider(init), async () => {\r\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", false);\r\n}), (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,KAAK,EAAEC,wBAAwB,EAAEC,OAAO,QAAQ,4BAA4B;AACrF,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,MAAMC,eAAe,GAAG;EAAA,IAACC,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAKJ,OAAO,CAACF,KAAK,CAAC,IAAIM,IAAI,CAACC,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC,GAAG,EAAE,GAAG,CAACR,OAAO,EAAE,CAAC,CAAC,EAAEG,OAAO,CAACQ,IAAI,CAAC,EAAEV,OAAO,CAACU,IAAI,CAAC,EAAET,WAAW,CAACS,IAAI,CAAC,EAAEP,aAAa,CAACO,IAAI,CAAC,EAAEF,cAAc,CAACE,IAAI,CAAC,EAAE,YAAY;IAClO,MAAM,IAAIL,wBAAwB,CAAC,+CAA+C,EAAE,KAAK,CAAC;EAC9F,CAAC,CAAC,EAAGS,WAAW,IAAKA,WAAW,CAACC,UAAU,KAAKC,SAAS,IAAIF,WAAW,CAACC,UAAU,CAACE,OAAO,EAAE,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,MAAM,EAAGL,WAAW,IAAKA,WAAW,CAACC,UAAU,KAAKC,SAAS,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}