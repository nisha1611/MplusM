{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\nclass HarmonyExportSpecifierDependency extends NullDependency {\n  constructor(id, name) {\n    super();\n    this.id = id;\n    this.name = name;\n  }\n  get type() {\n    return \"harmony export specifier\";\n  }\n\n  /**\r\n   * Returns the exported names\r\n   * @param {ModuleGraph} moduleGraph module graph\r\n   * @returns {ExportsSpec | undefined} export names\r\n   */\n  getExports(moduleGraph) {\n    return {\n      exports: [this.name],\n      priority: 1,\n      terminalBinding: true,\n      dependencies: undefined\n    };\n  }\n\n  /**\r\n   * @param {ModuleGraph} moduleGraph the module graph\r\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\r\n   */\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.id);\n    write(this.name);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.id = read();\n    this.name = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(HarmonyExportSpecifierDependency, \"webpack/lib/dependencies/HarmonyExportSpecifierDependency\");\nHarmonyExportSpecifierDependency.Template = class HarmonyExportSpecifierDependencyTemplate extends NullDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      moduleGraph,\n      initFragments,\n      runtime,\n      concatenationScope\n    } = _ref;\n    const dep = /** @type {HarmonyExportSpecifierDependency} */dependency;\n    if (concatenationScope) {\n      concatenationScope.registerExport(dep.name, dep.id);\n      return;\n    }\n    const used = moduleGraph.getExportsInfo(module).getUsedName(dep.name, runtime);\n    if (!used) {\n      const set = new Set();\n      set.add(dep.name || \"namespace\");\n      initFragments.push(new HarmonyExportInitFragment(module.exportsArgument, undefined, set));\n      return;\n    }\n    const map = new Map();\n    map.set(used, `/* binding */ ${dep.id}`);\n    initFragments.push(new HarmonyExportInitFragment(module.exportsArgument, map, undefined));\n  }\n};\nmodule.exports = HarmonyExportSpecifierDependency;","map":{"version":3,"names":["makeSerializable","require","HarmonyExportInitFragment","NullDependency","HarmonyExportSpecifierDependency","constructor","id","name","type","getExports","moduleGraph","exports","priority","terminalBinding","dependencies","undefined","getModuleEvaluationSideEffectsState","serialize","context","write","deserialize","read","Template","HarmonyExportSpecifierDependencyTemplate","apply","dependency","source","module","initFragments","runtime","concatenationScope","dep","registerExport","used","getExportsInfo","getUsedName","set","Set","add","push","exportsArgument","map","Map"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/HarmonyExportSpecifierDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../Dependency\")} Dependency */\r\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\r\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\r\n\r\nclass HarmonyExportSpecifierDependency extends NullDependency {\r\n\tconstructor(id, name) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"harmony export specifier\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the exported names\r\n\t * @param {ModuleGraph} moduleGraph module graph\r\n\t * @returns {ExportsSpec | undefined} export names\r\n\t */\r\n\tgetExports(moduleGraph) {\r\n\t\treturn {\r\n\t\t\texports: [this.name],\r\n\t\t\tpriority: 1,\r\n\t\t\tterminalBinding: true,\r\n\t\t\tdependencies: undefined\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleGraph} moduleGraph the module graph\r\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\r\n\t */\r\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.id);\r\n\t\twrite(this.name);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.id = read();\r\n\t\tthis.name = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tHarmonyExportSpecifierDependency,\r\n\t\"webpack/lib/dependencies/HarmonyExportSpecifierDependency\"\r\n);\r\n\r\nHarmonyExportSpecifierDependency.Template = class HarmonyExportSpecifierDependencyTemplate extends (\r\n\tNullDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(\r\n\t\tdependency,\r\n\t\tsource,\r\n\t\t{ module, moduleGraph, initFragments, runtime, concatenationScope }\r\n\t) {\r\n\t\tconst dep = /** @type {HarmonyExportSpecifierDependency} */ (dependency);\r\n\t\tif (concatenationScope) {\r\n\t\t\tconcatenationScope.registerExport(dep.name, dep.id);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst used = moduleGraph\r\n\t\t\t.getExportsInfo(module)\r\n\t\t\t.getUsedName(dep.name, runtime);\r\n\t\tif (!used) {\r\n\t\t\tconst set = new Set();\r\n\t\t\tset.add(dep.name || \"namespace\");\r\n\t\t\tinitFragments.push(\r\n\t\t\t\tnew HarmonyExportInitFragment(module.exportsArgument, undefined, set)\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst map = new Map();\r\n\t\tmap.set(used, `/* binding */ ${dep.id}`);\r\n\t\tinitFragments.push(\r\n\t\t\tnew HarmonyExportInitFragment(module.exportsArgument, map, undefined)\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports = HarmonyExportSpecifierDependency;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}