{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_COLUMN = exports.BSON_BINARY_SUBTYPE_ENCRYPTED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_LONG = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_INT = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_CODE = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_REGEXP = exports.BSON_DATA_NULL = exports.BSON_DATA_DATE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_OID = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_DATA_OBJECT = exports.BSON_DATA_STRING = exports.BSON_DATA_NUMBER = exports.JS_INT_MIN = exports.JS_INT_MAX = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = void 0;\n/** @internal */\nexports.BSON_INT32_MAX = 0x7fffffff;\n/** @internal */\nexports.BSON_INT32_MIN = -0x80000000;\n/** @internal */\nexports.BSON_INT64_MAX = Math.pow(2, 63) - 1;\n/** @internal */\nexports.BSON_INT64_MIN = -Math.pow(2, 63);\n/**\r\n * Any integer up to 2^53 can be precisely represented by a double.\r\n * @internal\r\n */\nexports.JS_INT_MAX = Math.pow(2, 53);\n/**\r\n * Any integer down to -2^53 can be precisely represented by a double.\r\n * @internal\r\n */\nexports.JS_INT_MIN = -Math.pow(2, 53);\n/** Number BSON Type @internal */\nexports.BSON_DATA_NUMBER = 1;\n/** String BSON Type @internal */\nexports.BSON_DATA_STRING = 2;\n/** Object BSON Type @internal */\nexports.BSON_DATA_OBJECT = 3;\n/** Array BSON Type @internal */\nexports.BSON_DATA_ARRAY = 4;\n/** Binary BSON Type @internal */\nexports.BSON_DATA_BINARY = 5;\n/** Binary BSON Type @internal */\nexports.BSON_DATA_UNDEFINED = 6;\n/** ObjectId BSON Type @internal */\nexports.BSON_DATA_OID = 7;\n/** Boolean BSON Type @internal */\nexports.BSON_DATA_BOOLEAN = 8;\n/** Date BSON Type @internal */\nexports.BSON_DATA_DATE = 9;\n/** null BSON Type @internal */\nexports.BSON_DATA_NULL = 10;\n/** RegExp BSON Type @internal */\nexports.BSON_DATA_REGEXP = 11;\n/** Code BSON Type @internal */\nexports.BSON_DATA_DBPOINTER = 12;\n/** Code BSON Type @internal */\nexports.BSON_DATA_CODE = 13;\n/** Symbol BSON Type @internal */\nexports.BSON_DATA_SYMBOL = 14;\n/** Code with Scope BSON Type @internal */\nexports.BSON_DATA_CODE_W_SCOPE = 15;\n/** 32 bit Integer BSON Type @internal */\nexports.BSON_DATA_INT = 16;\n/** Timestamp BSON Type @internal */\nexports.BSON_DATA_TIMESTAMP = 17;\n/** Long BSON Type @internal */\nexports.BSON_DATA_LONG = 18;\n/** Decimal128 BSON Type @internal */\nexports.BSON_DATA_DECIMAL128 = 19;\n/** MinKey BSON Type @internal */\nexports.BSON_DATA_MIN_KEY = 0xff;\n/** MaxKey BSON Type @internal */\nexports.BSON_DATA_MAX_KEY = 0x7f;\n/** Binary Default Type @internal */\nexports.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/** Binary Function Type @internal */\nexports.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/** Binary Byte Array Type @internal */\nexports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\nexports.BSON_BINARY_SUBTYPE_UUID = 3;\n/** Binary UUID Type @internal */\nexports.BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n/** Binary MD5 Type @internal */\nexports.BSON_BINARY_SUBTYPE_MD5 = 5;\n/** Encrypted BSON type @internal */\nexports.BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\n/** Column BSON type @internal */\nexports.BSON_BINARY_SUBTYPE_COLUMN = 7;\n/** Binary User Defined Type @internal */\nexports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","map":{"version":3,"mappings":";;;;;;AAAA;AACaA,sBAAc,GAAG,UAAU;AACxC;AACaA,sBAAc,GAAG,CAAC,UAAU;AACzC;AACaA,sBAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;AACjD;AACaF,sBAAc,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAE9C;;;;AAIaF,kBAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAEzC;;;;AAIaF,kBAAU,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAE1C;AACaF,wBAAgB,GAAG,CAAC;AAEjC;AACaA,wBAAgB,GAAG,CAAC;AAEjC;AACaA,wBAAgB,GAAG,CAAC;AAEjC;AACaA,uBAAe,GAAG,CAAC;AAEhC;AACaA,wBAAgB,GAAG,CAAC;AAEjC;AACaA,2BAAmB,GAAG,CAAC;AAEpC;AACaA,qBAAa,GAAG,CAAC;AAE9B;AACaA,yBAAiB,GAAG,CAAC;AAElC;AACaA,sBAAc,GAAG,CAAC;AAE/B;AACaA,sBAAc,GAAG,EAAE;AAEhC;AACaA,wBAAgB,GAAG,EAAE;AAElC;AACaA,2BAAmB,GAAG,EAAE;AAErC;AACaA,sBAAc,GAAG,EAAE;AAEhC;AACaA,wBAAgB,GAAG,EAAE;AAElC;AACaA,8BAAsB,GAAG,EAAE;AAExC;AACaA,qBAAa,GAAG,EAAE;AAE/B;AACaA,2BAAmB,GAAG,EAAE;AAErC;AACaA,sBAAc,GAAG,EAAE;AAEhC;AACaA,4BAAoB,GAAG,EAAE;AAEtC;AACaA,yBAAiB,GAAG,IAAI;AAErC;AACaA,yBAAiB,GAAG,IAAI;AAErC;AACaA,mCAA2B,GAAG,CAAC;AAE5C;AACaA,oCAA4B,GAAG,CAAC;AAE7C;AACaA,sCAA8B,GAAG,CAAC;AAE/C;AACaA,gCAAwB,GAAG,CAAC;AAEzC;AACaA,oCAA4B,GAAG,CAAC;AAE7C;AACaA,+BAAuB,GAAG,CAAC;AAExC;AACaA,qCAA6B,GAAG,CAAC;AAE9C;AACaA,kCAA0B,GAAG,CAAC;AAE3C;AACaA,wCAAgC,GAAG,GAAG","names":["exports","Math","pow"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\bson\\src\\constants.ts"],"sourcesContent":["/** @internal */\r\nexport const BSON_INT32_MAX = 0x7fffffff;\r\n/** @internal */\r\nexport const BSON_INT32_MIN = -0x80000000;\r\n/** @internal */\r\nexport const BSON_INT64_MAX = Math.pow(2, 63) - 1;\r\n/** @internal */\r\nexport const BSON_INT64_MIN = -Math.pow(2, 63);\r\n\r\n/**\r\n * Any integer up to 2^53 can be precisely represented by a double.\r\n * @internal\r\n */\r\nexport const JS_INT_MAX = Math.pow(2, 53);\r\n\r\n/**\r\n * Any integer down to -2^53 can be precisely represented by a double.\r\n * @internal\r\n */\r\nexport const JS_INT_MIN = -Math.pow(2, 53);\r\n\r\n/** Number BSON Type @internal */\r\nexport const BSON_DATA_NUMBER = 1;\r\n\r\n/** String BSON Type @internal */\r\nexport const BSON_DATA_STRING = 2;\r\n\r\n/** Object BSON Type @internal */\r\nexport const BSON_DATA_OBJECT = 3;\r\n\r\n/** Array BSON Type @internal */\r\nexport const BSON_DATA_ARRAY = 4;\r\n\r\n/** Binary BSON Type @internal */\r\nexport const BSON_DATA_BINARY = 5;\r\n\r\n/** Binary BSON Type @internal */\r\nexport const BSON_DATA_UNDEFINED = 6;\r\n\r\n/** ObjectId BSON Type @internal */\r\nexport const BSON_DATA_OID = 7;\r\n\r\n/** Boolean BSON Type @internal */\r\nexport const BSON_DATA_BOOLEAN = 8;\r\n\r\n/** Date BSON Type @internal */\r\nexport const BSON_DATA_DATE = 9;\r\n\r\n/** null BSON Type @internal */\r\nexport const BSON_DATA_NULL = 10;\r\n\r\n/** RegExp BSON Type @internal */\r\nexport const BSON_DATA_REGEXP = 11;\r\n\r\n/** Code BSON Type @internal */\r\nexport const BSON_DATA_DBPOINTER = 12;\r\n\r\n/** Code BSON Type @internal */\r\nexport const BSON_DATA_CODE = 13;\r\n\r\n/** Symbol BSON Type @internal */\r\nexport const BSON_DATA_SYMBOL = 14;\r\n\r\n/** Code with Scope BSON Type @internal */\r\nexport const BSON_DATA_CODE_W_SCOPE = 15;\r\n\r\n/** 32 bit Integer BSON Type @internal */\r\nexport const BSON_DATA_INT = 16;\r\n\r\n/** Timestamp BSON Type @internal */\r\nexport const BSON_DATA_TIMESTAMP = 17;\r\n\r\n/** Long BSON Type @internal */\r\nexport const BSON_DATA_LONG = 18;\r\n\r\n/** Decimal128 BSON Type @internal */\r\nexport const BSON_DATA_DECIMAL128 = 19;\r\n\r\n/** MinKey BSON Type @internal */\r\nexport const BSON_DATA_MIN_KEY = 0xff;\r\n\r\n/** MaxKey BSON Type @internal */\r\nexport const BSON_DATA_MAX_KEY = 0x7f;\r\n\r\n/** Binary Default Type @internal */\r\nexport const BSON_BINARY_SUBTYPE_DEFAULT = 0;\r\n\r\n/** Binary Function Type @internal */\r\nexport const BSON_BINARY_SUBTYPE_FUNCTION = 1;\r\n\r\n/** Binary Byte Array Type @internal */\r\nexport const BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\r\n\r\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\r\nexport const BSON_BINARY_SUBTYPE_UUID = 3;\r\n\r\n/** Binary UUID Type @internal */\r\nexport const BSON_BINARY_SUBTYPE_UUID_NEW = 4;\r\n\r\n/** Binary MD5 Type @internal */\r\nexport const BSON_BINARY_SUBTYPE_MD5 = 5;\r\n\r\n/** Encrypted BSON type @internal */\r\nexport const BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\r\n\r\n/** Column BSON type @internal */\r\nexport const BSON_BINARY_SUBTYPE_COLUMN = 7;\r\n\r\n/** Binary User Defined Type @internal */\r\nexport const BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}