{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paginateListIdentityPools = void 0;\nconst CognitoIdentity_1 = require(\"../CognitoIdentity\");\nconst CognitoIdentityClient_1 = require(\"../CognitoIdentityClient\");\nconst ListIdentityPoolsCommand_1 = require(\"../commands/ListIdentityPoolsCommand\");\nconst makePagedClientRequest = async function (client, input) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  return await client.send(new ListIdentityPoolsCommand_1.ListIdentityPoolsCommand(input), ...args);\n};\nconst makePagedRequest = async function (client, input) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n  return await client.listIdentityPools(input, ...args);\n};\nasync function* paginateListIdentityPools(config, input) {\n  let token = config.startingToken || undefined;\n  let hasNext = true;\n  let page;\n  for (var _len3 = arguments.length, additionalArguments = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    additionalArguments[_key3 - 2] = arguments[_key3];\n  }\n  while (hasNext) {\n    input.NextToken = token;\n    input[\"MaxResults\"] = config.pageSize;\n    if (config.client instanceof CognitoIdentity_1.CognitoIdentity) {\n      page = await makePagedRequest(config.client, input, ...additionalArguments);\n    } else if (config.client instanceof CognitoIdentityClient_1.CognitoIdentityClient) {\n      page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n    } else {\n      throw new Error(\"Invalid client, expected CognitoIdentity | CognitoIdentityClient\");\n    }\n    yield page;\n    const prevToken = token;\n    token = page.NextToken;\n    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n  }\n  return undefined;\n}\nexports.paginateListIdentityPools = paginateListIdentityPools;","map":{"version":3,"names":["Object","defineProperty","exports","value","paginateListIdentityPools","CognitoIdentity_1","require","CognitoIdentityClient_1","ListIdentityPoolsCommand_1","makePagedClientRequest","client","input","args","send","ListIdentityPoolsCommand","makePagedRequest","listIdentityPools","config","token","startingToken","undefined","hasNext","page","additionalArguments","NextToken","pageSize","CognitoIdentity","CognitoIdentityClient","Error","prevToken","stopOnSameToken"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/client-cognito-identity/dist-cjs/pagination/ListIdentityPoolsPaginator.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.paginateListIdentityPools = void 0;\r\nconst CognitoIdentity_1 = require(\"../CognitoIdentity\");\r\nconst CognitoIdentityClient_1 = require(\"../CognitoIdentityClient\");\r\nconst ListIdentityPoolsCommand_1 = require(\"../commands/ListIdentityPoolsCommand\");\r\nconst makePagedClientRequest = async (client, input, ...args) => {\r\n    return await client.send(new ListIdentityPoolsCommand_1.ListIdentityPoolsCommand(input), ...args);\r\n};\r\nconst makePagedRequest = async (client, input, ...args) => {\r\n    return await client.listIdentityPools(input, ...args);\r\n};\r\nasync function* paginateListIdentityPools(config, input, ...additionalArguments) {\r\n    let token = config.startingToken || undefined;\r\n    let hasNext = true;\r\n    let page;\r\n    while (hasNext) {\r\n        input.NextToken = token;\r\n        input[\"MaxResults\"] = config.pageSize;\r\n        if (config.client instanceof CognitoIdentity_1.CognitoIdentity) {\r\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\r\n        }\r\n        else if (config.client instanceof CognitoIdentityClient_1.CognitoIdentityClient) {\r\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid client, expected CognitoIdentity | CognitoIdentityClient\");\r\n        }\r\n        yield page;\r\n        const prevToken = token;\r\n        token = page.NextToken;\r\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\r\n    }\r\n    return undefined;\r\n}\r\nexports.paginateListIdentityPools = paginateListIdentityPools;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAG,KAAK,CAAC;AAC1C,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACvD,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACnE,MAAME,0BAA0B,GAAGF,OAAO,CAAC,sCAAsC,CAAC;AAClF,MAAMG,sBAAsB,GAAG,gBAAOC,MAAM,EAAEC,KAAK,EAAc;EAAA,kCAATC,IAAI;IAAJA,IAAI;EAAA;EACxD,OAAO,MAAMF,MAAM,CAACG,IAAI,CAAC,IAAIL,0BAA0B,CAACM,wBAAwB,CAACH,KAAK,CAAC,EAAE,GAAGC,IAAI,CAAC;AACrG,CAAC;AACD,MAAMG,gBAAgB,GAAG,gBAAOL,MAAM,EAAEC,KAAK,EAAc;EAAA,mCAATC,IAAI;IAAJA,IAAI;EAAA;EAClD,OAAO,MAAMF,MAAM,CAACM,iBAAiB,CAACL,KAAK,EAAE,GAAGC,IAAI,CAAC;AACzD,CAAC;AACD,gBAAgBR,yBAAyB,CAACa,MAAM,EAAEN,KAAK,EAA0B;EAC7E,IAAIO,KAAK,GAAGD,MAAM,CAACE,aAAa,IAAIC,SAAS;EAC7C,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,IAAI;EAAC,mCAH+CC,mBAAmB;IAAnBA,mBAAmB;EAAA;EAI3E,OAAOF,OAAO,EAAE;IACZV,KAAK,CAACa,SAAS,GAAGN,KAAK;IACvBP,KAAK,CAAC,YAAY,CAAC,GAAGM,MAAM,CAACQ,QAAQ;IACrC,IAAIR,MAAM,CAACP,MAAM,YAAYL,iBAAiB,CAACqB,eAAe,EAAE;MAC5DJ,IAAI,GAAG,MAAMP,gBAAgB,CAACE,MAAM,CAACP,MAAM,EAAEC,KAAK,EAAE,GAAGY,mBAAmB,CAAC;IAC/E,CAAC,MACI,IAAIN,MAAM,CAACP,MAAM,YAAYH,uBAAuB,CAACoB,qBAAqB,EAAE;MAC7EL,IAAI,GAAG,MAAMb,sBAAsB,CAACQ,MAAM,CAACP,MAAM,EAAEC,KAAK,EAAE,GAAGY,mBAAmB,CAAC;IACrF,CAAC,MACI;MACD,MAAM,IAAIK,KAAK,CAAC,kEAAkE,CAAC;IACvF;IACA,MAAMN,IAAI;IACV,MAAMO,SAAS,GAAGX,KAAK;IACvBA,KAAK,GAAGI,IAAI,CAACE,SAAS;IACtBH,OAAO,GAAG,CAAC,EAAEH,KAAK,KAAK,CAACD,MAAM,CAACa,eAAe,IAAIZ,KAAK,KAAKW,SAAS,CAAC,CAAC;EAC3E;EACA,OAAOT,SAAS;AACpB;AACAlB,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}