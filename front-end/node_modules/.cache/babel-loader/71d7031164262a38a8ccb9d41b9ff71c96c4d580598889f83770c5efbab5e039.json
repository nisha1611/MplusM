{"ast":null,"code":"import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenKey = function (key, value) {\n  let forRefresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (typeof value === \"undefined\") {\n    throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n  }\n};","map":{"version":3,"names":["TokenProviderError","REFRESH_MESSAGE","validateTokenKey","key","value","forRefresh"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/token-providers/dist-es/validateTokenKey.js"],"sourcesContent":["import { TokenProviderError } from \"@aws-sdk/property-provider\";\r\nimport { REFRESH_MESSAGE } from \"./constants\";\r\nexport const validateTokenKey = (key, value, forRefresh = false) => {\r\n    if (typeof value === \"undefined\") {\r\n        throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAO,MAAMC,gBAAgB,GAAG,UAACC,GAAG,EAAEC,KAAK,EAAyB;EAAA,IAAvBC,UAAU,uEAAG,KAAK;EAC3D,IAAI,OAAOD,KAAK,KAAK,WAAW,EAAE;IAC9B,MAAM,IAAIJ,kBAAkB,CAAE,0BAAyBG,GAAI,iBAAgBE,UAAU,GAAG,kBAAkB,GAAG,EAAG,KAAIJ,eAAgB,EAAC,EAAE,KAAK,CAAC;EACjJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}