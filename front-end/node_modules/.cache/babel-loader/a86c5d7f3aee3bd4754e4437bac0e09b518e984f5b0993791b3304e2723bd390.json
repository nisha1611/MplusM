{"ast":null,"code":"import { chain, memoize } from \"@aws-sdk/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = function (_ref) {\n  let {\n    environmentVariableSelector,\n    configFileSelector,\n    default: defaultValue\n  } = _ref;\n  let configuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n};","map":{"version":3,"names":["chain","memoize","fromEnv","fromSharedConfigFiles","fromStatic","loadConfig","environmentVariableSelector","configFileSelector","default","defaultValue","configuration"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/node-config-provider/dist-es/configLoader.js"],"sourcesContent":["import { chain, memoize } from \"@aws-sdk/property-provider\";\r\nimport { fromEnv } from \"./fromEnv\";\r\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\r\nimport { fromStatic } from \"./fromStatic\";\r\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\r\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,OAAO,QAAQ,4BAA4B;AAC3D,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,MAAMC,UAAU,GAAG;EAAA,IAAC;IAAEC,2BAA2B;IAAEC,kBAAkB;IAAEC,OAAO,EAAEC;EAAa,CAAC;EAAA,IAAEC,aAAa,uEAAG,CAAC,CAAC;EAAA,OAAKT,OAAO,CAACD,KAAK,CAACE,OAAO,CAACI,2BAA2B,CAAC,EAAEH,qBAAqB,CAACI,kBAAkB,EAAEG,aAAa,CAAC,EAAEN,UAAU,CAACK,YAAY,CAAC,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}