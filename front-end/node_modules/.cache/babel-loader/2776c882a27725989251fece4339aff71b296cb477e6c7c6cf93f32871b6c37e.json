{"ast":null,"code":"'use strict';\n\n/*!\r\n * ignore\r\n */\nconst MongooseMap = require('../types/map');\nconst SchemaMapOptions = require('../options/SchemaMapOptions');\nconst SchemaType = require('../schematype');\n/*!\r\n * ignore\r\n */\n\nclass Map extends SchemaType {\n  constructor(key, options) {\n    super(key, options, 'Map');\n    this.$isSchemaMap = true;\n  }\n  set(option, value) {\n    return SchemaType.set(option, value);\n  }\n  cast(val, doc, init) {\n    if (val instanceof MongooseMap) {\n      return val;\n    }\n    const path = this.path;\n    if (init) {\n      const map = new MongooseMap({}, path, doc, this.$__schemaType);\n      if (val instanceof global.Map) {\n        for (const key of val.keys()) {\n          let _val = val.get(key);\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, {\n              path: path + '.' + key\n            });\n          }\n          map.$init(key, _val);\n        }\n      } else {\n        for (const key of Object.keys(val)) {\n          let _val = val[key];\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, {\n              path: path + '.' + key\n            });\n          }\n          map.$init(key, _val);\n        }\n      }\n      return map;\n    }\n    return new MongooseMap(val, path, doc, this.$__schemaType);\n  }\n  clone() {\n    const schematype = super.clone();\n    if (this.$__schemaType != null) {\n      schematype.$__schemaType = this.$__schemaType.clone();\n    }\n    return schematype;\n  }\n}\n\n/**\r\n * This schema type's name, to defend against minifiers that mangle\r\n * function names.\r\n *\r\n * @api public\r\n */\nMap.schemaName = 'Map';\nMap.prototype.OptionsConstructor = SchemaMapOptions;\nMap.defaultOptions = {};\nmodule.exports = Map;","map":{"version":3,"names":["MongooseMap","require","SchemaMapOptions","SchemaType","Map","constructor","key","options","$isSchemaMap","set","option","value","cast","val","doc","init","path","map","$__schemaType","global","keys","_val","get","_castNullish","$init","Object","clone","schematype","schemaName","prototype","OptionsConstructor","defaultOptions","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/schema/map.js"],"sourcesContent":["'use strict';\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nconst MongooseMap = require('../types/map');\r\nconst SchemaMapOptions = require('../options/SchemaMapOptions');\r\nconst SchemaType = require('../schematype');\r\n/*!\r\n * ignore\r\n */\r\n\r\nclass Map extends SchemaType {\r\n  constructor(key, options) {\r\n    super(key, options, 'Map');\r\n    this.$isSchemaMap = true;\r\n  }\r\n\r\n  set(option, value) {\r\n    return SchemaType.set(option, value);\r\n  }\r\n\r\n  cast(val, doc, init) {\r\n    if (val instanceof MongooseMap) {\r\n      return val;\r\n    }\r\n\r\n    const path = this.path;\r\n\r\n    if (init) {\r\n      const map = new MongooseMap({}, path, doc, this.$__schemaType);\r\n\r\n      if (val instanceof global.Map) {\r\n        for (const key of val.keys()) {\r\n          let _val = val.get(key);\r\n          if (_val == null) {\r\n            _val = map.$__schemaType._castNullish(_val);\r\n          } else {\r\n            _val = map.$__schemaType.cast(_val, doc, true, null, { path: path + '.' + key });\r\n          }\r\n          map.$init(key, _val);\r\n        }\r\n      } else {\r\n        for (const key of Object.keys(val)) {\r\n          let _val = val[key];\r\n          if (_val == null) {\r\n            _val = map.$__schemaType._castNullish(_val);\r\n          } else {\r\n            _val = map.$__schemaType.cast(_val, doc, true, null, { path: path + '.' + key });\r\n          }\r\n          map.$init(key, _val);\r\n        }\r\n      }\r\n\r\n      return map;\r\n    }\r\n\r\n    return new MongooseMap(val, path, doc, this.$__schemaType);\r\n  }\r\n\r\n  clone() {\r\n    const schematype = super.clone();\r\n\r\n    if (this.$__schemaType != null) {\r\n      schematype.$__schemaType = this.$__schemaType.clone();\r\n    }\r\n    return schematype;\r\n  }\r\n}\r\n\r\n/**\r\n * This schema type's name, to defend against minifiers that mangle\r\n * function names.\r\n *\r\n * @api public\r\n */\r\nMap.schemaName = 'Map';\r\n\r\nMap.prototype.OptionsConstructor = SchemaMapOptions;\r\n\r\nMap.defaultOptions = {};\r\n\r\nmodule.exports = Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}