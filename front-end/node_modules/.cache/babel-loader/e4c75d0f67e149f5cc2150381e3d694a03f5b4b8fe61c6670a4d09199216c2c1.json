{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n  return next => async args => {\n    const request = args.request;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n      const {\n        body,\n        headers\n      } = request;\n      if (body && Object.keys(headers).map(str => str.toLowerCase()).indexOf(CONTENT_LENGTH_HEADER) === -1) {\n        try {\n          const length = bodyLengthChecker(body);\n          request.headers = {\n            ...request.headers,\n            [CONTENT_LENGTH_HEADER]: String(length)\n          };\n        } catch (error) {}\n      }\n    }\n    return next({\n      ...args,\n      request\n    });\n  };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n  name: \"contentLengthMiddleware\",\n  override: true\n};\nconst getContentLengthPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n  }\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","getContentLengthPlugin","contentLengthMiddlewareOptions","contentLengthMiddleware","protocol_http_1","require","CONTENT_LENGTH_HEADER","bodyLengthChecker","next","args","request","HttpRequest","isInstance","body","headers","keys","map","str","toLowerCase","indexOf","length","String","error","step","tags","name","override","options","applyToStack","clientStack","add"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/middleware-content-length/dist-cjs/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\r\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\r\nconst CONTENT_LENGTH_HEADER = \"content-length\";\r\nfunction contentLengthMiddleware(bodyLengthChecker) {\r\n    return (next) => async (args) => {\r\n        const request = args.request;\r\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\r\n            const { body, headers } = request;\r\n            if (body &&\r\n                Object.keys(headers)\r\n                    .map((str) => str.toLowerCase())\r\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\r\n                try {\r\n                    const length = bodyLengthChecker(body);\r\n                    request.headers = {\r\n                        ...request.headers,\r\n                        [CONTENT_LENGTH_HEADER]: String(length),\r\n                    };\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n        }\r\n        return next({\r\n            ...args,\r\n            request,\r\n        });\r\n    };\r\n}\r\nexports.contentLengthMiddleware = contentLengthMiddleware;\r\nexports.contentLengthMiddlewareOptions = {\r\n    step: \"build\",\r\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\r\n    name: \"contentLengthMiddleware\",\r\n    override: true,\r\n};\r\nconst getContentLengthPlugin = (options) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\r\n    },\r\n});\r\nexports.getContentLengthPlugin = getContentLengthPlugin;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,sBAAsB,GAAGF,OAAO,CAACG,8BAA8B,GAAGH,OAAO,CAACI,uBAAuB,GAAG,KAAK,CAAC;AAClH,MAAMC,eAAe,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACzD,MAAMC,qBAAqB,GAAG,gBAAgB;AAC9C,SAASH,uBAAuB,CAACI,iBAAiB,EAAE;EAChD,OAAQC,IAAI,IAAK,MAAOC,IAAI,IAAK;IAC7B,MAAMC,OAAO,GAAGD,IAAI,CAACC,OAAO;IAC5B,IAAIN,eAAe,CAACO,WAAW,CAACC,UAAU,CAACF,OAAO,CAAC,EAAE;MACjD,MAAM;QAAEG,IAAI;QAAEC;MAAQ,CAAC,GAAGJ,OAAO;MACjC,IAAIG,IAAI,IACJhB,MAAM,CAACkB,IAAI,CAACD,OAAO,CAAC,CACfE,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,WAAW,EAAE,CAAC,CAC/BC,OAAO,CAACb,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5C,IAAI;UACA,MAAMc,MAAM,GAAGb,iBAAiB,CAACM,IAAI,CAAC;UACtCH,OAAO,CAACI,OAAO,GAAG;YACd,GAAGJ,OAAO,CAACI,OAAO;YAClB,CAACR,qBAAqB,GAAGe,MAAM,CAACD,MAAM;UAC1C,CAAC;QACL,CAAC,CACD,OAAOE,KAAK,EAAE,CACd;MACJ;IACJ;IACA,OAAOd,IAAI,CAAC;MACR,GAAGC,IAAI;MACPC;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AACAX,OAAO,CAACI,uBAAuB,GAAGA,uBAAuB;AACzDJ,OAAO,CAACG,8BAA8B,GAAG;EACrCqB,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;EAC9CC,IAAI,EAAE,yBAAyB;EAC/BC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMzB,sBAAsB,GAAI0B,OAAO,KAAM;EACzCC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAC3B,uBAAuB,CAACwB,OAAO,CAACpB,iBAAiB,CAAC,EAAER,OAAO,CAACG,8BAA8B,CAAC;EAC/G;AACJ,CAAC,CAAC;AACFH,OAAO,CAACE,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}