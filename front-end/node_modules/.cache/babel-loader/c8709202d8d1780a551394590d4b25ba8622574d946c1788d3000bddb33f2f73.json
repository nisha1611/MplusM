{"ast":null,"code":"import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? defaultUserAgent({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8\n  };\n};","map":{"version":3,"names":["packageInfo","Sha256","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","FetchHttpHandler","RequestHandler","streamCollector","invalidProvider","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","defaultUserAgent","fromUtf8","toUtf8","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","defaultsMode","defaultConfigProvider","then","clientSharedValues","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","maxAttempts","region","requestHandler","retryMode","sha256","useDualstackEndpoint","resolve","useFipsEndpoint","utf8Decoder","utf8Encoder"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\r\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\r\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\r\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\r\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\r\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\r\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\r\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\r\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\r\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\r\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\r\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\r\nexport const getRuntimeConfig = (config) => {\r\n    const defaultsMode = resolveDefaultsModeConfig(config);\r\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\r\n    const clientSharedValues = getSharedRuntimeConfig(config);\r\n    return {\r\n        ...clientSharedValues,\r\n        ...config,\r\n        runtime: \"browser\",\r\n        defaultsMode,\r\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\r\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\r\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\r\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\r\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\r\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\r\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\r\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\r\n        sha256: config?.sha256 ?? Sha256,\r\n        streamCollector: config?.streamCollector ?? streamCollector,\r\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\r\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\r\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\r\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\r\n    };\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,8BAA8B,EAAEC,yBAAyB,QAAQ,0BAA0B;AACpG,SAASC,gBAAgB,IAAIC,cAAc,EAAEC,eAAe,QAAQ,6BAA6B;AACjG,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,qBAAqB;AAC9E,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,QAAQ,EAAEC,MAAM,QAAQ,4BAA4B;AAC7D,SAASC,gBAAgB,IAAIC,sBAAsB,QAAQ,wBAAwB;AACnF,SAASC,yBAAyB,QAAQ,wBAAwB;AAClE,SAASC,yBAAyB,QAAQ,qCAAqC;AAC/E,OAAO,MAAMH,gBAAgB,GAAII,MAAM,IAAK;EACxC,MAAMC,YAAY,GAAGF,yBAAyB,CAACC,MAAM,CAAC;EACtD,MAAME,qBAAqB,GAAG,MAAMD,YAAY,EAAE,CAACE,IAAI,CAACL,yBAAyB,CAAC;EAClF,MAAMM,kBAAkB,GAAGP,sBAAsB,CAACG,MAAM,CAAC;EACzD,OAAO;IACH,GAAGI,kBAAkB;IACrB,GAAGJ,MAAM;IACTK,OAAO,EAAE,SAAS;IAClBJ,YAAY;IACZK,iBAAiB,EAAEN,MAAM,EAAEM,iBAAiB,IAAIhB,mBAAmB;IACnEiB,yBAAyB,EAAEP,MAAM,EAAEO,yBAAyB,KAAMC,CAAC,IAAK,MAAMC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACjIC,wBAAwB,EAAEZ,MAAM,EAAEY,wBAAwB,IACtDnB,gBAAgB,CAAC;MAAEoB,SAAS,EAAET,kBAAkB,CAACS,SAAS;MAAEC,aAAa,EAAEhC,WAAW,CAACiC;IAAQ,CAAC,CAAC;IACrGC,WAAW,EAAEhB,MAAM,EAAEgB,WAAW,IAAIzB,oBAAoB;IACxD0B,MAAM,EAAEjB,MAAM,EAAEiB,MAAM,IAAI5B,eAAe,CAAC,mBAAmB,CAAC;IAC9D6B,cAAc,EAAElB,MAAM,EAAEkB,cAAc,IAAI,IAAI/B,cAAc,CAACe,qBAAqB,CAAC;IACnFiB,SAAS,EAAEnB,MAAM,EAAEmB,SAAS,KAAK,YAAY,CAAC,MAAMjB,qBAAqB,EAAE,EAAEiB,SAAS,IAAI3B,kBAAkB,CAAC;IAC7G4B,MAAM,EAAEpB,MAAM,EAAEoB,MAAM,IAAIrC,MAAM;IAChCK,eAAe,EAAEY,MAAM,EAAEZ,eAAe,IAAIA,eAAe;IAC3DiC,oBAAoB,EAAErB,MAAM,EAAEqB,oBAAoB,KAAK,MAAMZ,OAAO,CAACa,OAAO,CAACtC,8BAA8B,CAAC,CAAC;IAC7GuC,eAAe,EAAEvB,MAAM,EAAEuB,eAAe,KAAK,MAAMd,OAAO,CAACa,OAAO,CAACrC,yBAAyB,CAAC,CAAC;IAC9FuC,WAAW,EAAExB,MAAM,EAAEwB,WAAW,IAAI9B,QAAQ;IAC5C+B,WAAW,EAAEzB,MAAM,EAAEyB,WAAW,IAAI9B;EACxC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}