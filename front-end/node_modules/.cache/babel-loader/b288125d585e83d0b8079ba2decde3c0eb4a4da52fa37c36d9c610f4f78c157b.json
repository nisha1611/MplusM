{"ast":null,"code":"'use strict';\n\nconst get = require('../get');\n\n/**\r\n * Given an update, move all $set on immutable properties to $setOnInsert.\r\n * This should only be called for upserts, because $setOnInsert bypasses the\r\n * strictness check for immutable properties.\r\n */\n\nmodule.exports = function moveImmutableProperties(schema, update, ctx) {\n  if (update == null) {\n    return;\n  }\n  const keys = Object.keys(update);\n  for (const key of keys) {\n    const isDollarKey = key.startsWith('$');\n    if (key === '$set') {\n      const updatedPaths = Object.keys(update[key]);\n      for (const path of updatedPaths) {\n        _walkUpdatePath(schema, update[key], path, update, ctx);\n      }\n    } else if (!isDollarKey) {\n      _walkUpdatePath(schema, update, key, update, ctx);\n    }\n  }\n};\nfunction _walkUpdatePath(schema, op, path, update, ctx) {\n  const schematype = schema.path(path);\n  if (schematype == null) {\n    return;\n  }\n  let immutable = get(schematype, 'options.immutable', null);\n  if (immutable == null) {\n    return;\n  }\n  if (typeof immutable === 'function') {\n    immutable = immutable.call(ctx, ctx);\n  }\n  if (!immutable) {\n    return;\n  }\n  update.$setOnInsert = update.$setOnInsert || {};\n  update.$setOnInsert[path] = op[path];\n  delete op[path];\n}","map":{"version":3,"names":["get","require","module","exports","moveImmutableProperties","schema","update","ctx","keys","Object","key","isDollarKey","startsWith","updatedPaths","path","_walkUpdatePath","op","schematype","immutable","call","$setOnInsert"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/update/moveImmutableProperties.js"],"sourcesContent":["'use strict';\r\n\r\nconst get = require('../get');\r\n\r\n/**\r\n * Given an update, move all $set on immutable properties to $setOnInsert.\r\n * This should only be called for upserts, because $setOnInsert bypasses the\r\n * strictness check for immutable properties.\r\n */\r\n\r\nmodule.exports = function moveImmutableProperties(schema, update, ctx) {\r\n  if (update == null) {\r\n    return;\r\n  }\r\n\r\n  const keys = Object.keys(update);\r\n  for (const key of keys) {\r\n    const isDollarKey = key.startsWith('$');\r\n\r\n    if (key === '$set') {\r\n      const updatedPaths = Object.keys(update[key]);\r\n      for (const path of updatedPaths) {\r\n        _walkUpdatePath(schema, update[key], path, update, ctx);\r\n      }\r\n    } else if (!isDollarKey) {\r\n      _walkUpdatePath(schema, update, key, update, ctx);\r\n    }\r\n\r\n  }\r\n};\r\n\r\nfunction _walkUpdatePath(schema, op, path, update, ctx) {\r\n  const schematype = schema.path(path);\r\n  if (schematype == null) {\r\n    return;\r\n  }\r\n\r\n  let immutable = get(schematype, 'options.immutable', null);\r\n  if (immutable == null) {\r\n    return;\r\n  }\r\n  if (typeof immutable === 'function') {\r\n    immutable = immutable.call(ctx, ctx);\r\n  }\r\n\r\n  if (!immutable) {\r\n    return;\r\n  }\r\n\r\n  update.$setOnInsert = update.$setOnInsert || {};\r\n  update.$setOnInsert[path] = op[path];\r\n  delete op[path];\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE7B;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,SAASC,uBAAuB,CAACC,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAE;EACrE,IAAID,MAAM,IAAI,IAAI,EAAE;IAClB;EACF;EAEA,MAAME,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACF,MAAM,CAAC;EAChC,KAAK,MAAMI,GAAG,IAAIF,IAAI,EAAE;IACtB,MAAMG,WAAW,GAAGD,GAAG,CAACE,UAAU,CAAC,GAAG,CAAC;IAEvC,IAAIF,GAAG,KAAK,MAAM,EAAE;MAClB,MAAMG,YAAY,GAAGJ,MAAM,CAACD,IAAI,CAACF,MAAM,CAACI,GAAG,CAAC,CAAC;MAC7C,KAAK,MAAMI,IAAI,IAAID,YAAY,EAAE;QAC/BE,eAAe,CAACV,MAAM,EAAEC,MAAM,CAACI,GAAG,CAAC,EAAEI,IAAI,EAAER,MAAM,EAAEC,GAAG,CAAC;MACzD;IACF,CAAC,MAAM,IAAI,CAACI,WAAW,EAAE;MACvBI,eAAe,CAACV,MAAM,EAAEC,MAAM,EAAEI,GAAG,EAAEJ,MAAM,EAAEC,GAAG,CAAC;IACnD;EAEF;AACF,CAAC;AAED,SAASQ,eAAe,CAACV,MAAM,EAAEW,EAAE,EAAEF,IAAI,EAAER,MAAM,EAAEC,GAAG,EAAE;EACtD,MAAMU,UAAU,GAAGZ,MAAM,CAACS,IAAI,CAACA,IAAI,CAAC;EACpC,IAAIG,UAAU,IAAI,IAAI,EAAE;IACtB;EACF;EAEA,IAAIC,SAAS,GAAGlB,GAAG,CAACiB,UAAU,EAAE,mBAAmB,EAAE,IAAI,CAAC;EAC1D,IAAIC,SAAS,IAAI,IAAI,EAAE;IACrB;EACF;EACA,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAE;IACnCA,SAAS,GAAGA,SAAS,CAACC,IAAI,CAACZ,GAAG,EAAEA,GAAG,CAAC;EACtC;EAEA,IAAI,CAACW,SAAS,EAAE;IACd;EACF;EAEAZ,MAAM,CAACc,YAAY,GAAGd,MAAM,CAACc,YAAY,IAAI,CAAC,CAAC;EAC/Cd,MAAM,CAACc,YAAY,CAACN,IAAI,CAAC,GAAGE,EAAE,CAACF,IAAI,CAAC;EACpC,OAAOE,EAAE,CAACF,IAAI,CAAC;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}