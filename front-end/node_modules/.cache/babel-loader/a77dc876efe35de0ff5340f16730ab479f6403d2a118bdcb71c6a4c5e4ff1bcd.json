{"ast":null,"code":"import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getProfileData } from \"./getProfileData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSharedConfigFiles = async function () {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    filepath = getCredentialsFilepath(),\n    configFilepath = getConfigFilepath()\n  } = init;\n  const parsedFiles = await Promise.all([slurpFile(configFilepath).then(parseIni).then(getProfileData).catch(swallowError), slurpFile(filepath).then(parseIni).catch(swallowError)]);\n  return {\n    configFile: parsedFiles[0],\n    credentialsFile: parsedFiles[1]\n  };\n};","map":{"version":3,"names":["getConfigFilepath","getCredentialsFilepath","getProfileData","parseIni","slurpFile","swallowError","loadSharedConfigFiles","init","filepath","configFilepath","parsedFiles","Promise","all","then","catch","configFile","credentialsFile"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js"],"sourcesContent":["import { getConfigFilepath } from \"./getConfigFilepath\";\r\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\r\nimport { getProfileData } from \"./getProfileData\";\r\nimport { parseIni } from \"./parseIni\";\r\nimport { slurpFile } from \"./slurpFile\";\r\nconst swallowError = () => ({});\r\nexport const loadSharedConfigFiles = async (init = {}) => {\r\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\r\n    const parsedFiles = await Promise.all([\r\n        slurpFile(configFilepath).then(parseIni).then(getProfileData).catch(swallowError),\r\n        slurpFile(filepath).then(parseIni).catch(swallowError),\r\n    ]);\r\n    return {\r\n        configFile: parsedFiles[0],\r\n        credentialsFile: parsedFiles[1],\r\n    };\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,QAAQ,aAAa;AACvC,MAAMC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC;AAC/B,OAAO,MAAMC,qBAAqB,GAAG,kBAAqB;EAAA,IAAdC,IAAI,uEAAG,CAAC,CAAC;EACjD,MAAM;IAAEC,QAAQ,GAAGP,sBAAsB,EAAE;IAAEQ,cAAc,GAAGT,iBAAiB;EAAG,CAAC,GAAGO,IAAI;EAC1F,MAAMG,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClCR,SAAS,CAACK,cAAc,CAAC,CAACI,IAAI,CAACV,QAAQ,CAAC,CAACU,IAAI,CAACX,cAAc,CAAC,CAACY,KAAK,CAACT,YAAY,CAAC,EACjFD,SAAS,CAACI,QAAQ,CAAC,CAACK,IAAI,CAACV,QAAQ,CAAC,CAACW,KAAK,CAACT,YAAY,CAAC,CACzD,CAAC;EACF,OAAO;IACHU,UAAU,EAAEL,WAAW,CAAC,CAAC,CAAC;IAC1BM,eAAe,EAAEN,WAAW,CAAC,CAAC;EAClC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}