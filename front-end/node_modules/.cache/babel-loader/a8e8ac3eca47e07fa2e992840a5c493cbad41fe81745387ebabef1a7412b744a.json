{"ast":null,"code":"'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\r\n * The options defined on an Document Array schematype.\r\n *\r\n * #### Example:\r\n *\r\n *     const schema = new Schema({ users: [{ name: string }] });\r\n *     schema.path('users').options; // SchemaDocumentArrayOptions instance\r\n *\r\n * @api public\r\n * @inherits SchemaTypeOptions\r\n * @constructor SchemaDocumentOptions\r\n */\n\nclass SchemaDocumentArrayOptions extends SchemaTypeOptions {}\nconst opts = require('./propertyOptions');\n\n/**\r\n * If `true`, Mongoose will skip building any indexes defined in this array's schema.\r\n * If not set, Mongoose will build all indexes defined in this array's schema.\r\n *\r\n * #### Example:\r\n *\r\n *     const childSchema = Schema({ name: { type: String, index: true } });\r\n *     // If `excludeIndexes` is `true`, Mongoose will skip building an index\r\n *     // on `arr.name`. Otherwise, Mongoose will build an index on `arr.name`.\r\n *     const parentSchema = Schema({\r\n *       arr: { type: [childSchema], excludeIndexes: true }\r\n *     });\r\n *\r\n * @api public\r\n * @property excludeIndexes\r\n * @memberOf SchemaDocumentArrayOptions\r\n * @type {Array}\r\n * @instance\r\n */\n\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, 'excludeIndexes', opts);\n\n/**\r\n * If set, overwrites the child schema's `_id` option.\r\n *\r\n * #### Example:\r\n *\r\n *     const childSchema = Schema({ name: String });\r\n *     const parentSchema = Schema({\r\n *       child: { type: childSchema, _id: false }\r\n *     });\r\n *     parentSchema.path('child').schema.options._id; // false\r\n *\r\n * @api public\r\n * @property _id\r\n * @memberOf SchemaDocumentArrayOptions\r\n * @type {Array}\r\n * @instance\r\n */\n\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, '_id', opts);\n\n/*!\r\n * ignore\r\n */\n\nmodule.exports = SchemaDocumentArrayOptions;","map":{"version":3,"names":["SchemaTypeOptions","require","SchemaDocumentArrayOptions","opts","Object","defineProperty","prototype","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js"],"sourcesContent":["'use strict';\r\n\r\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\r\n\r\n/**\r\n * The options defined on an Document Array schematype.\r\n *\r\n * #### Example:\r\n *\r\n *     const schema = new Schema({ users: [{ name: string }] });\r\n *     schema.path('users').options; // SchemaDocumentArrayOptions instance\r\n *\r\n * @api public\r\n * @inherits SchemaTypeOptions\r\n * @constructor SchemaDocumentOptions\r\n */\r\n\r\nclass SchemaDocumentArrayOptions extends SchemaTypeOptions {}\r\n\r\nconst opts = require('./propertyOptions');\r\n\r\n/**\r\n * If `true`, Mongoose will skip building any indexes defined in this array's schema.\r\n * If not set, Mongoose will build all indexes defined in this array's schema.\r\n *\r\n * #### Example:\r\n *\r\n *     const childSchema = Schema({ name: { type: String, index: true } });\r\n *     // If `excludeIndexes` is `true`, Mongoose will skip building an index\r\n *     // on `arr.name`. Otherwise, Mongoose will build an index on `arr.name`.\r\n *     const parentSchema = Schema({\r\n *       arr: { type: [childSchema], excludeIndexes: true }\r\n *     });\r\n *\r\n * @api public\r\n * @property excludeIndexes\r\n * @memberOf SchemaDocumentArrayOptions\r\n * @type {Array}\r\n * @instance\r\n */\r\n\r\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, 'excludeIndexes', opts);\r\n\r\n/**\r\n * If set, overwrites the child schema's `_id` option.\r\n *\r\n * #### Example:\r\n *\r\n *     const childSchema = Schema({ name: String });\r\n *     const parentSchema = Schema({\r\n *       child: { type: childSchema, _id: false }\r\n *     });\r\n *     parentSchema.path('child').schema.options._id; // false\r\n *\r\n * @api public\r\n * @property _id\r\n * @memberOf SchemaDocumentArrayOptions\r\n * @type {Array}\r\n * @instance\r\n */\r\n\r\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, '_id', opts);\r\n\r\n/*!\r\n * ignore\r\n */\r\n\r\nmodule.exports = SchemaDocumentArrayOptions;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,0BAA0B,SAASF,iBAAiB,CAAC;AAE3D,MAAMG,IAAI,GAAGF,OAAO,CAAC,mBAAmB,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,cAAc,CAACH,0BAA0B,CAACI,SAAS,EAAE,gBAAgB,EAAEH,IAAI,CAAC;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,cAAc,CAACH,0BAA0B,CAACI,SAAS,EAAE,KAAK,EAAEH,IAAI,CAAC;;AAExE;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGN,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}