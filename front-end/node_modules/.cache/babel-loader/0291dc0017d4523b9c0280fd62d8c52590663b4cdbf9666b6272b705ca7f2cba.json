{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst Dependency = require(\"../Dependency\");\nconst Module = require(\"../Module\");\nconst ModuleFactory = require(\"../ModuleFactory\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst CommonJsRequireDependency = require(\"../dependencies/CommonJsRequireDependency\");\nconst {\n  registerNotSerializable\n} = require(\"../util/serialization\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\")} WebpackOptions */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryCreateData} ModuleFactoryCreateData */\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../dependencies/HarmonyImportDependency\")} HarmonyImportDependency */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/**\r\n * @typedef {Object} BackendApi\r\n * @property {function(Error=): void} dispose\r\n * @property {function(Module): { client: string, data: string, active: boolean }} module\r\n */\n\nconst HMR_DEPENDENCY_TYPES = new Set([\"import.meta.webpackHot.accept\", \"import.meta.webpackHot.decline\", \"module.hot.accept\", \"module.hot.decline\"]);\n\n/**\r\n * @param {undefined|string|RegExp|Function} test test option\r\n * @param {Module} module the module\r\n * @returns {boolean} true, if the module should be selected\r\n */\nconst checkTest = (test, module) => {\n  if (test === undefined) return true;\n  if (typeof test === \"function\") {\n    return test(module);\n  }\n  if (typeof test === \"string\") {\n    const name = module.nameForCondition();\n    return name && name.startsWith(test);\n  }\n  if (test instanceof RegExp) {\n    const name = module.nameForCondition();\n    return name && test.test(name);\n  }\n  return false;\n};\nconst TYPES = new Set([\"javascript\"]);\nclass LazyCompilationDependency extends Dependency {\n  constructor(proxyModule) {\n    super();\n    this.proxyModule = proxyModule;\n  }\n  get category() {\n    return \"esm\";\n  }\n  get type() {\n    return \"lazy import()\";\n  }\n\n  /**\r\n   * @returns {string | null} an identifier to merge equal requests\r\n   */\n  getResourceIdentifier() {\n    return this.proxyModule.originalModule.identifier();\n  }\n}\nregisterNotSerializable(LazyCompilationDependency);\nclass LazyCompilationProxyModule extends Module {\n  constructor(context, originalModule, request, client, data, active) {\n    super(\"lazy-compilation-proxy\", context, originalModule.layer);\n    this.originalModule = originalModule;\n    this.request = request;\n    this.client = client;\n    this.data = data;\n    this.active = active;\n  }\n\n  /**\r\n   * @returns {string} a unique identifier of the module\r\n   */\n  identifier() {\n    return `lazy-compilation-proxy|${this.originalModule.identifier()}`;\n  }\n\n  /**\r\n   * @param {RequestShortener} requestShortener the request shortener\r\n   * @returns {string} a user readable identifier of the module\r\n   */\n  readableIdentifier(requestShortener) {\n    return `lazy-compilation-proxy ${this.originalModule.readableIdentifier(requestShortener)}`;\n  }\n\n  /**\r\n   * Assuming this module is in the cache. Update the (cached) module with\r\n   * the fresh module from the factory. Usually updates internal references\r\n   * and properties.\r\n   * @param {Module} module fresh module\r\n   * @returns {void}\r\n   */\n  updateCacheModule(module) {\n    super.updateCacheModule(module);\n    const m = /** @type {LazyCompilationProxyModule} */module;\n    this.originalModule = m.originalModule;\n    this.request = m.request;\n    this.client = m.client;\n    this.data = m.data;\n    this.active = m.active;\n  }\n\n  /**\r\n   * @param {LibIdentOptions} options options\r\n   * @returns {string | null} an identifier for library inclusion\r\n   */\n  libIdent(options) {\n    return `${this.originalModule.libIdent(options)}!lazy-compilation-proxy`;\n  }\n\n  /**\r\n   * @param {NeedBuildContext} context context info\r\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\r\n   * @returns {void}\r\n   */\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo || this.buildInfo.active !== this.active);\n  }\n\n  /**\r\n   * @param {WebpackOptions} options webpack options\r\n   * @param {Compilation} compilation the compilation\r\n   * @param {ResolverWithOptions} resolver the resolver\r\n   * @param {InputFileSystem} fs the file system\r\n   * @param {function(WebpackError=): void} callback callback function\r\n   * @returns {void}\r\n   */\n  build(options, compilation, resolver, fs, callback) {\n    this.buildInfo = {\n      active: this.active\n    };\n    /** @type {BuildMeta} */\n    this.buildMeta = {};\n    this.clearDependenciesAndBlocks();\n    const dep = new CommonJsRequireDependency(this.client);\n    this.addDependency(dep);\n    if (this.active) {\n      const dep = new LazyCompilationDependency(this);\n      const block = new AsyncDependenciesBlock({});\n      block.addDependency(dep);\n      this.addBlock(block);\n    }\n    callback();\n  }\n\n  /**\r\n   * @returns {Set<string>} types available (do not mutate)\r\n   */\n  getSourceTypes() {\n    return TYPES;\n  }\n\n  /**\r\n   * @param {string=} type the source type for which the size should be estimated\r\n   * @returns {number} the estimated size of the module (must be non-zero)\r\n   */\n  size(type) {\n    return 200;\n  }\n\n  /**\r\n   * @param {CodeGenerationContext} context context for code generation\r\n   * @returns {CodeGenerationResult} result\r\n   */\n  codeGeneration(_ref) {\n    let {\n      runtimeTemplate,\n      chunkGraph,\n      moduleGraph\n    } = _ref;\n    const sources = new Map();\n    const runtimeRequirements = new Set();\n    runtimeRequirements.add(RuntimeGlobals.module);\n    const clientDep = /** @type {CommonJsRequireDependency} */\n    this.dependencies[0];\n    const clientModule = moduleGraph.getModule(clientDep);\n    const block = this.blocks[0];\n    const client = Template.asString([`var client = ${runtimeTemplate.moduleExports({\n      module: clientModule,\n      chunkGraph,\n      request: clientDep.userRequest,\n      runtimeRequirements\n    })}`, `var data = ${JSON.stringify(this.data)};`]);\n    const keepActive = Template.asString([`var dispose = client.keepAlive({ data: data, active: ${JSON.stringify(!!block)}, module: module, onError: onError });`]);\n    let source;\n    if (block) {\n      const dep = block.dependencies[0];\n      const module = moduleGraph.getModule(dep);\n      source = Template.asString([client, `module.exports = ${runtimeTemplate.moduleNamespacePromise({\n        chunkGraph,\n        block,\n        module,\n        request: this.request,\n        strict: false,\n        // TODO this should be inherited from the original module\n        message: \"import()\",\n        runtimeRequirements\n      })};`, \"if (module.hot) {\", Template.indent([\"module.hot.accept();\", `module.hot.accept(${JSON.stringify(chunkGraph.getModuleId(module))}, function() { module.hot.invalidate(); });`, \"module.hot.dispose(function(data) { delete data.resolveSelf; dispose(data); });\", \"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\"]), \"}\", \"function onError() { /* ignore */ }\", keepActive]);\n    } else {\n      source = Template.asString([client, \"var resolveSelf, onError;\", `module.exports = new Promise(function(resolve, reject) { resolveSelf = resolve; onError = reject; });`, \"if (module.hot) {\", Template.indent([\"module.hot.accept();\", \"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\", \"module.hot.dispose(function(data) { data.resolveSelf = resolveSelf; dispose(data); });\"]), \"}\", keepActive]);\n    }\n    sources.set(\"javascript\", new RawSource(source));\n    return {\n      sources,\n      runtimeRequirements\n    };\n  }\n\n  /**\r\n   * @param {Hash} hash the hash used to track dependencies\r\n   * @param {UpdateHashContext} context context\r\n   * @returns {void}\r\n   */\n  updateHash(hash, context) {\n    super.updateHash(hash, context);\n    hash.update(this.active ? \"active\" : \"\");\n    hash.update(JSON.stringify(this.data));\n  }\n}\nregisterNotSerializable(LazyCompilationProxyModule);\nclass LazyCompilationDependencyFactory extends ModuleFactory {\n  constructor(factory) {\n    super();\n    this._factory = factory;\n  }\n\n  /**\r\n   * @param {ModuleFactoryCreateData} data data object\r\n   * @param {function(Error=, ModuleFactoryResult=): void} callback callback\r\n   * @returns {void}\r\n   */\n  create(data, callback) {\n    const dependency = /** @type {LazyCompilationDependency} */\n    data.dependencies[0];\n    callback(null, {\n      module: dependency.proxyModule.originalModule\n    });\n  }\n}\nclass LazyCompilationPlugin {\n  /**\r\n   * @param {Object} options options\r\n   * @param {(function(Compiler, function(Error?, BackendApi?): void): void) | function(Compiler): Promise<BackendApi>} options.backend the backend\r\n   * @param {boolean} options.entries true, when entries are lazy compiled\r\n   * @param {boolean} options.imports true, when import() modules are lazy compiled\r\n   * @param {RegExp | string | (function(Module): boolean)} options.test additional filter for lazy compiled entrypoint modules\r\n   */\n  constructor(_ref2) {\n    let {\n      backend,\n      entries,\n      imports,\n      test\n    } = _ref2;\n    this.backend = backend;\n    this.entries = entries;\n    this.imports = imports;\n    this.test = test;\n  }\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    let backend;\n    compiler.hooks.beforeCompile.tapAsync(\"LazyCompilationPlugin\", (params, callback) => {\n      if (backend !== undefined) return callback();\n      const promise = this.backend(compiler, (err, result) => {\n        if (err) return callback(err);\n        backend = result;\n        callback();\n      });\n      if (promise && promise.then) {\n        promise.then(b => {\n          backend = b;\n          callback();\n        }, callback);\n      }\n    });\n    compiler.hooks.thisCompilation.tap(\"LazyCompilationPlugin\", (compilation, _ref3) => {\n      let {\n        normalModuleFactory\n      } = _ref3;\n      normalModuleFactory.hooks.module.tap(\"LazyCompilationPlugin\", (originalModule, createData, resolveData) => {\n        if (resolveData.dependencies.every(dep => HMR_DEPENDENCY_TYPES.has(dep.type))) {\n          // for HMR only resolving, try to determine if the HMR accept/decline refers to\n          // an import() or not\n          const hmrDep = resolveData.dependencies[0];\n          const originModule = compilation.moduleGraph.getParentModule(hmrDep);\n          const isReferringToDynamicImport = originModule.blocks.some(block => block.dependencies.some(dep => dep.type === \"import()\" && /** @type {HarmonyImportDependency} */dep.request === hmrDep.request));\n          if (!isReferringToDynamicImport) return;\n        } else if (!resolveData.dependencies.every(dep => HMR_DEPENDENCY_TYPES.has(dep.type) || this.imports && (dep.type === \"import()\" || dep.type === \"import() context element\") || this.entries && dep.type === \"entry\")) return;\n        if (/webpack[/\\\\]hot[/\\\\]|webpack-dev-server[/\\\\]client|webpack-hot-middleware[/\\\\]client/.test(resolveData.request) || !checkTest(this.test, originalModule)) return;\n        const moduleInfo = backend.module(originalModule);\n        if (!moduleInfo) return;\n        const {\n          client,\n          data,\n          active\n        } = moduleInfo;\n        return new LazyCompilationProxyModule(compiler.context, originalModule, resolveData.request, client, data, active);\n      });\n      compilation.dependencyFactories.set(LazyCompilationDependency, new LazyCompilationDependencyFactory());\n    });\n    compiler.hooks.shutdown.tapAsync(\"LazyCompilationPlugin\", callback => {\n      backend.dispose(callback);\n    });\n  }\n}\nmodule.exports = LazyCompilationPlugin;","map":{"version":3,"names":["RawSource","require","AsyncDependenciesBlock","Dependency","Module","ModuleFactory","RuntimeGlobals","Template","CommonJsRequireDependency","registerNotSerializable","HMR_DEPENDENCY_TYPES","Set","checkTest","test","module","undefined","name","nameForCondition","startsWith","RegExp","TYPES","LazyCompilationDependency","constructor","proxyModule","category","type","getResourceIdentifier","originalModule","identifier","LazyCompilationProxyModule","context","request","client","data","active","layer","readableIdentifier","requestShortener","updateCacheModule","m","libIdent","options","needBuild","callback","buildInfo","build","compilation","resolver","fs","buildMeta","clearDependenciesAndBlocks","dep","addDependency","block","addBlock","getSourceTypes","size","codeGeneration","runtimeTemplate","chunkGraph","moduleGraph","sources","Map","runtimeRequirements","add","clientDep","dependencies","clientModule","getModule","blocks","asString","moduleExports","userRequest","JSON","stringify","keepActive","source","moduleNamespacePromise","strict","message","indent","getModuleId","set","updateHash","hash","update","LazyCompilationDependencyFactory","factory","_factory","create","dependency","LazyCompilationPlugin","backend","entries","imports","apply","compiler","hooks","beforeCompile","tapAsync","params","promise","err","result","then","b","thisCompilation","tap","normalModuleFactory","createData","resolveData","every","has","hmrDep","originModule","getParentModule","isReferringToDynamicImport","some","moduleInfo","dependencyFactories","shutdown","dispose","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/hmr/LazyCompilationPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { RawSource } = require(\"webpack-sources\");\r\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\r\nconst Dependency = require(\"../Dependency\");\r\nconst Module = require(\"../Module\");\r\nconst ModuleFactory = require(\"../ModuleFactory\");\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst Template = require(\"../Template\");\r\nconst CommonJsRequireDependency = require(\"../dependencies/CommonJsRequireDependency\");\r\nconst { registerNotSerializable } = require(\"../util/serialization\");\r\n\r\n/** @typedef {import(\"../../declarations/WebpackOptions\")} WebpackOptions */\r\n/** @typedef {import(\"../Compilation\")} Compilation */\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\r\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\r\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\r\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\r\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\r\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\r\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryCreateData} ModuleFactoryCreateData */\r\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\r\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\r\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\r\n/** @typedef {import(\"../WebpackError\")} WebpackError */\r\n/** @typedef {import(\"../dependencies/HarmonyImportDependency\")} HarmonyImportDependency */\r\n/** @typedef {import(\"../util/Hash\")} Hash */\r\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\r\n\r\n/**\r\n * @typedef {Object} BackendApi\r\n * @property {function(Error=): void} dispose\r\n * @property {function(Module): { client: string, data: string, active: boolean }} module\r\n */\r\n\r\nconst HMR_DEPENDENCY_TYPES = new Set([\r\n\t\"import.meta.webpackHot.accept\",\r\n\t\"import.meta.webpackHot.decline\",\r\n\t\"module.hot.accept\",\r\n\t\"module.hot.decline\"\r\n]);\r\n\r\n/**\r\n * @param {undefined|string|RegExp|Function} test test option\r\n * @param {Module} module the module\r\n * @returns {boolean} true, if the module should be selected\r\n */\r\nconst checkTest = (test, module) => {\r\n\tif (test === undefined) return true;\r\n\tif (typeof test === \"function\") {\r\n\t\treturn test(module);\r\n\t}\r\n\tif (typeof test === \"string\") {\r\n\t\tconst name = module.nameForCondition();\r\n\t\treturn name && name.startsWith(test);\r\n\t}\r\n\tif (test instanceof RegExp) {\r\n\t\tconst name = module.nameForCondition();\r\n\t\treturn name && test.test(name);\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nconst TYPES = new Set([\"javascript\"]);\r\n\r\nclass LazyCompilationDependency extends Dependency {\r\n\tconstructor(proxyModule) {\r\n\t\tsuper();\r\n\t\tthis.proxyModule = proxyModule;\r\n\t}\r\n\r\n\tget category() {\r\n\t\treturn \"esm\";\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn \"lazy import()\";\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string | null} an identifier to merge equal requests\r\n\t */\r\n\tgetResourceIdentifier() {\r\n\t\treturn this.proxyModule.originalModule.identifier();\r\n\t}\r\n}\r\n\r\nregisterNotSerializable(LazyCompilationDependency);\r\n\r\nclass LazyCompilationProxyModule extends Module {\r\n\tconstructor(context, originalModule, request, client, data, active) {\r\n\t\tsuper(\"lazy-compilation-proxy\", context, originalModule.layer);\r\n\t\tthis.originalModule = originalModule;\r\n\t\tthis.request = request;\r\n\t\tthis.client = client;\r\n\t\tthis.data = data;\r\n\t\tthis.active = active;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} a unique identifier of the module\r\n\t */\r\n\tidentifier() {\r\n\t\treturn `lazy-compilation-proxy|${this.originalModule.identifier()}`;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {RequestShortener} requestShortener the request shortener\r\n\t * @returns {string} a user readable identifier of the module\r\n\t */\r\n\treadableIdentifier(requestShortener) {\r\n\t\treturn `lazy-compilation-proxy ${this.originalModule.readableIdentifier(\r\n\t\t\trequestShortener\r\n\t\t)}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Assuming this module is in the cache. Update the (cached) module with\r\n\t * the fresh module from the factory. Usually updates internal references\r\n\t * and properties.\r\n\t * @param {Module} module fresh module\r\n\t * @returns {void}\r\n\t */\r\n\tupdateCacheModule(module) {\r\n\t\tsuper.updateCacheModule(module);\r\n\t\tconst m = /** @type {LazyCompilationProxyModule} */ (module);\r\n\t\tthis.originalModule = m.originalModule;\r\n\t\tthis.request = m.request;\r\n\t\tthis.client = m.client;\r\n\t\tthis.data = m.data;\r\n\t\tthis.active = m.active;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {LibIdentOptions} options options\r\n\t * @returns {string | null} an identifier for library inclusion\r\n\t */\r\n\tlibIdent(options) {\r\n\t\treturn `${this.originalModule.libIdent(options)}!lazy-compilation-proxy`;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {NeedBuildContext} context context info\r\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\r\n\t * @returns {void}\r\n\t */\r\n\tneedBuild(context, callback) {\r\n\t\tcallback(null, !this.buildInfo || this.buildInfo.active !== this.active);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {WebpackOptions} options webpack options\r\n\t * @param {Compilation} compilation the compilation\r\n\t * @param {ResolverWithOptions} resolver the resolver\r\n\t * @param {InputFileSystem} fs the file system\r\n\t * @param {function(WebpackError=): void} callback callback function\r\n\t * @returns {void}\r\n\t */\r\n\tbuild(options, compilation, resolver, fs, callback) {\r\n\t\tthis.buildInfo = {\r\n\t\t\tactive: this.active\r\n\t\t};\r\n\t\t/** @type {BuildMeta} */\r\n\t\tthis.buildMeta = {};\r\n\t\tthis.clearDependenciesAndBlocks();\r\n\t\tconst dep = new CommonJsRequireDependency(this.client);\r\n\t\tthis.addDependency(dep);\r\n\t\tif (this.active) {\r\n\t\t\tconst dep = new LazyCompilationDependency(this);\r\n\t\t\tconst block = new AsyncDependenciesBlock({});\r\n\t\t\tblock.addDependency(dep);\r\n\t\t\tthis.addBlock(block);\r\n\t\t}\r\n\t\tcallback();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Set<string>} types available (do not mutate)\r\n\t */\r\n\tgetSourceTypes() {\r\n\t\treturn TYPES;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string=} type the source type for which the size should be estimated\r\n\t * @returns {number} the estimated size of the module (must be non-zero)\r\n\t */\r\n\tsize(type) {\r\n\t\treturn 200;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CodeGenerationContext} context context for code generation\r\n\t * @returns {CodeGenerationResult} result\r\n\t */\r\n\tcodeGeneration({ runtimeTemplate, chunkGraph, moduleGraph }) {\r\n\t\tconst sources = new Map();\r\n\t\tconst runtimeRequirements = new Set();\r\n\t\truntimeRequirements.add(RuntimeGlobals.module);\r\n\t\tconst clientDep = /** @type {CommonJsRequireDependency} */ (\r\n\t\t\tthis.dependencies[0]\r\n\t\t);\r\n\t\tconst clientModule = moduleGraph.getModule(clientDep);\r\n\t\tconst block = this.blocks[0];\r\n\t\tconst client = Template.asString([\r\n\t\t\t`var client = ${runtimeTemplate.moduleExports({\r\n\t\t\t\tmodule: clientModule,\r\n\t\t\t\tchunkGraph,\r\n\t\t\t\trequest: clientDep.userRequest,\r\n\t\t\t\truntimeRequirements\r\n\t\t\t})}`,\r\n\t\t\t`var data = ${JSON.stringify(this.data)};`\r\n\t\t]);\r\n\t\tconst keepActive = Template.asString([\r\n\t\t\t`var dispose = client.keepAlive({ data: data, active: ${JSON.stringify(\r\n\t\t\t\t!!block\r\n\t\t\t)}, module: module, onError: onError });`\r\n\t\t]);\r\n\t\tlet source;\r\n\t\tif (block) {\r\n\t\t\tconst dep = block.dependencies[0];\r\n\t\t\tconst module = moduleGraph.getModule(dep);\r\n\t\t\tsource = Template.asString([\r\n\t\t\t\tclient,\r\n\t\t\t\t`module.exports = ${runtimeTemplate.moduleNamespacePromise({\r\n\t\t\t\t\tchunkGraph,\r\n\t\t\t\t\tblock,\r\n\t\t\t\t\tmodule,\r\n\t\t\t\t\trequest: this.request,\r\n\t\t\t\t\tstrict: false, // TODO this should be inherited from the original module\r\n\t\t\t\t\tmessage: \"import()\",\r\n\t\t\t\t\truntimeRequirements\r\n\t\t\t\t})};`,\r\n\t\t\t\t\"if (module.hot) {\",\r\n\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\"module.hot.accept();\",\r\n\t\t\t\t\t`module.hot.accept(${JSON.stringify(\r\n\t\t\t\t\t\tchunkGraph.getModuleId(module)\r\n\t\t\t\t\t)}, function() { module.hot.invalidate(); });`,\r\n\t\t\t\t\t\"module.hot.dispose(function(data) { delete data.resolveSelf; dispose(data); });\",\r\n\t\t\t\t\t\"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"function onError() { /* ignore */ }\",\r\n\t\t\t\tkeepActive\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\tsource = Template.asString([\r\n\t\t\t\tclient,\r\n\t\t\t\t\"var resolveSelf, onError;\",\r\n\t\t\t\t`module.exports = new Promise(function(resolve, reject) { resolveSelf = resolve; onError = reject; });`,\r\n\t\t\t\t\"if (module.hot) {\",\r\n\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\"module.hot.accept();\",\r\n\t\t\t\t\t\"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\",\r\n\t\t\t\t\t\"module.hot.dispose(function(data) { data.resolveSelf = resolveSelf; dispose(data); });\"\r\n\t\t\t\t]),\r\n\t\t\t\t\"}\",\r\n\t\t\t\tkeepActive\r\n\t\t\t]);\r\n\t\t}\r\n\t\tsources.set(\"javascript\", new RawSource(source));\r\n\t\treturn {\r\n\t\t\tsources,\r\n\t\t\truntimeRequirements\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Hash} hash the hash used to track dependencies\r\n\t * @param {UpdateHashContext} context context\r\n\t * @returns {void}\r\n\t */\r\n\tupdateHash(hash, context) {\r\n\t\tsuper.updateHash(hash, context);\r\n\t\thash.update(this.active ? \"active\" : \"\");\r\n\t\thash.update(JSON.stringify(this.data));\r\n\t}\r\n}\r\n\r\nregisterNotSerializable(LazyCompilationProxyModule);\r\n\r\nclass LazyCompilationDependencyFactory extends ModuleFactory {\r\n\tconstructor(factory) {\r\n\t\tsuper();\r\n\t\tthis._factory = factory;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ModuleFactoryCreateData} data data object\r\n\t * @param {function(Error=, ModuleFactoryResult=): void} callback callback\r\n\t * @returns {void}\r\n\t */\r\n\tcreate(data, callback) {\r\n\t\tconst dependency = /** @type {LazyCompilationDependency} */ (\r\n\t\t\tdata.dependencies[0]\r\n\t\t);\r\n\t\tcallback(null, {\r\n\t\t\tmodule: dependency.proxyModule.originalModule\r\n\t\t});\r\n\t}\r\n}\r\n\r\nclass LazyCompilationPlugin {\r\n\t/**\r\n\t * @param {Object} options options\r\n\t * @param {(function(Compiler, function(Error?, BackendApi?): void): void) | function(Compiler): Promise<BackendApi>} options.backend the backend\r\n\t * @param {boolean} options.entries true, when entries are lazy compiled\r\n\t * @param {boolean} options.imports true, when import() modules are lazy compiled\r\n\t * @param {RegExp | string | (function(Module): boolean)} options.test additional filter for lazy compiled entrypoint modules\r\n\t */\r\n\tconstructor({ backend, entries, imports, test }) {\r\n\t\tthis.backend = backend;\r\n\t\tthis.entries = entries;\r\n\t\tthis.imports = imports;\r\n\t\tthis.test = test;\r\n\t}\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tlet backend;\r\n\t\tcompiler.hooks.beforeCompile.tapAsync(\r\n\t\t\t\"LazyCompilationPlugin\",\r\n\t\t\t(params, callback) => {\r\n\t\t\t\tif (backend !== undefined) return callback();\r\n\t\t\t\tconst promise = this.backend(compiler, (err, result) => {\r\n\t\t\t\t\tif (err) return callback(err);\r\n\t\t\t\t\tbackend = result;\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t\tif (promise && promise.then) {\r\n\t\t\t\t\tpromise.then(b => {\r\n\t\t\t\t\t\tbackend = b;\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}, callback);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\tcompiler.hooks.thisCompilation.tap(\r\n\t\t\t\"LazyCompilationPlugin\",\r\n\t\t\t(compilation, { normalModuleFactory }) => {\r\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\r\n\t\t\t\t\t\"LazyCompilationPlugin\",\r\n\t\t\t\t\t(originalModule, createData, resolveData) => {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tresolveData.dependencies.every(dep =>\r\n\t\t\t\t\t\t\t\tHMR_DEPENDENCY_TYPES.has(dep.type)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t// for HMR only resolving, try to determine if the HMR accept/decline refers to\r\n\t\t\t\t\t\t\t// an import() or not\r\n\t\t\t\t\t\t\tconst hmrDep = resolveData.dependencies[0];\r\n\t\t\t\t\t\t\tconst originModule =\r\n\t\t\t\t\t\t\t\tcompilation.moduleGraph.getParentModule(hmrDep);\r\n\t\t\t\t\t\t\tconst isReferringToDynamicImport = originModule.blocks.some(\r\n\t\t\t\t\t\t\t\tblock =>\r\n\t\t\t\t\t\t\t\t\tblock.dependencies.some(\r\n\t\t\t\t\t\t\t\t\t\tdep =>\r\n\t\t\t\t\t\t\t\t\t\t\tdep.type === \"import()\" &&\r\n\t\t\t\t\t\t\t\t\t\t\t/** @type {HarmonyImportDependency} */ (dep).request ===\r\n\t\t\t\t\t\t\t\t\t\t\t\thmrDep.request\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (!isReferringToDynamicImport) return;\r\n\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t!resolveData.dependencies.every(\r\n\t\t\t\t\t\t\t\tdep =>\r\n\t\t\t\t\t\t\t\t\tHMR_DEPENDENCY_TYPES.has(dep.type) ||\r\n\t\t\t\t\t\t\t\t\t(this.imports &&\r\n\t\t\t\t\t\t\t\t\t\t(dep.type === \"import()\" ||\r\n\t\t\t\t\t\t\t\t\t\t\tdep.type === \"import() context element\")) ||\r\n\t\t\t\t\t\t\t\t\t(this.entries && dep.type === \"entry\")\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t/webpack[/\\\\]hot[/\\\\]|webpack-dev-server[/\\\\]client|webpack-hot-middleware[/\\\\]client/.test(\r\n\t\t\t\t\t\t\t\tresolveData.request\r\n\t\t\t\t\t\t\t) ||\r\n\t\t\t\t\t\t\t!checkTest(this.test, originalModule)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\tconst moduleInfo = backend.module(originalModule);\r\n\t\t\t\t\t\tif (!moduleInfo) return;\r\n\t\t\t\t\t\tconst { client, data, active } = moduleInfo;\r\n\r\n\t\t\t\t\t\treturn new LazyCompilationProxyModule(\r\n\t\t\t\t\t\t\tcompiler.context,\r\n\t\t\t\t\t\t\toriginalModule,\r\n\t\t\t\t\t\t\tresolveData.request,\r\n\t\t\t\t\t\t\tclient,\r\n\t\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\t\tactive\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tcompilation.dependencyFactories.set(\r\n\t\t\t\t\tLazyCompilationDependency,\r\n\t\t\t\t\tnew LazyCompilationDependencyFactory()\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t\tcompiler.hooks.shutdown.tapAsync(\"LazyCompilationPlugin\", callback => {\r\n\t\t\tbackend.dispose(callback);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = LazyCompilationPlugin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}