{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n/** @typedef {import(\"./Compiler\")} Compiler */\nclass IgnoreWarningsPlugin {\n  /**\r\n   * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\r\n   */\n  constructor(ignoreWarnings) {\n    this._ignoreWarnings = ignoreWarnings;\n  }\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\n      compilation.hooks.processWarnings.tap(\"IgnoreWarningsPlugin\", warnings => {\n        return warnings.filter(warning => {\n          return !this._ignoreWarnings.some(ignore => ignore(warning, compilation));\n        });\n      });\n    });\n  }\n}\nmodule.exports = IgnoreWarningsPlugin;","map":{"version":3,"names":["IgnoreWarningsPlugin","constructor","ignoreWarnings","_ignoreWarnings","apply","compiler","hooks","compilation","tap","processWarnings","warnings","filter","warning","some","ignore","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/IgnoreWarningsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n\r\nclass IgnoreWarningsPlugin {\r\n\t/**\r\n\t * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\r\n\t */\r\n\tconstructor(ignoreWarnings) {\r\n\t\tthis._ignoreWarnings = ignoreWarnings;\r\n\t}\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\r\n\t\t\tcompilation.hooks.processWarnings.tap(\r\n\t\t\t\t\"IgnoreWarningsPlugin\",\r\n\t\t\t\twarnings => {\r\n\t\t\t\t\treturn warnings.filter(warning => {\r\n\t\t\t\t\t\treturn !this._ignoreWarnings.some(ignore =>\r\n\t\t\t\t\t\t\tignore(warning, compilation)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = IgnoreWarningsPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAMA,oBAAoB,CAAC;EAC1B;AACD;AACA;EACCC,WAAW,CAACC,cAAc,EAAE;IAC3B,IAAI,CAACC,eAAe,GAAGD,cAAc;EACtC;EACA;AACD;AACA;AACA;AACA;EACCE,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,sBAAsB,EAAED,WAAW,IAAI;MACrEA,WAAW,CAACD,KAAK,CAACG,eAAe,CAACD,GAAG,CACpC,sBAAsB,EACtBE,QAAQ,IAAI;QACX,OAAOA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAI;UACjC,OAAO,CAAC,IAAI,CAACT,eAAe,CAACU,IAAI,CAACC,MAAM,IACvCA,MAAM,CAACF,OAAO,EAAEL,WAAW,CAAC,CAC5B;QACF,CAAC,CAAC;MACH,CAAC,CACD;IACF,CAAC,CAAC;EACH;AACD;AAEAQ,MAAM,CAACC,OAAO,GAAGhB,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}