{"ast":null,"code":"const defaultOptions = {\n  preserveOrder: false,\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  removeNSPrefix: false,\n  // remove NS from tag name or attribute name if true\n  allowBooleanAttributes: false,\n  //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseTagValue: true,\n  parseAttributeValue: false,\n  trimValues: true,\n  //Trim string values of tag and attributes\n  cdataPropName: false,\n  numberParseOptions: {\n    hex: true,\n    leadingZeros: true\n  },\n  tagValueProcessor: function (tagName, val) {\n    return val;\n  },\n  attributeValueProcessor: function (attrName, val) {\n    return val;\n  },\n  stopNodes: [],\n  //nested tags will not be parsed even for errors\n  alwaysCreateTextNode: false,\n  isArray: () => false,\n  commentPropName: false,\n  unpairedTags: [],\n  processEntities: true,\n  htmlEntities: false,\n  ignoreDeclaration: false,\n  ignorePiTags: false,\n  transformTagName: false\n};\nconst buildOptions = function (options) {\n  return Object.assign({}, defaultOptions, options);\n};\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","map":{"version":3,"names":["defaultOptions","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","allowBooleanAttributes","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","tagValueProcessor","tagName","val","attributeValueProcessor","attrName","stopNodes","alwaysCreateTextNode","isArray","commentPropName","unpairedTags","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","buildOptions","options","Object","assign","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"],"sourcesContent":["\r\nconst defaultOptions = {\r\n    preserveOrder: false,\r\n    attributeNamePrefix: '@_',\r\n    attributesGroupName: false,\r\n    textNodeName: '#text',\r\n    ignoreAttributes: true,\r\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\r\n    allowBooleanAttributes: false, //a tag can have attributes without any value\r\n    //ignoreRootElement : false,\r\n    parseTagValue: true,\r\n    parseAttributeValue: false,\r\n    trimValues: true, //Trim string values of tag and attributes\r\n    cdataPropName: false,\r\n    numberParseOptions: {\r\n      hex: true,\r\n      leadingZeros: true\r\n    },\r\n    tagValueProcessor: function(tagName, val) {\r\n      return val;\r\n    },\r\n    attributeValueProcessor: function(attrName, val) {\r\n      return val;\r\n    },\r\n    stopNodes: [], //nested tags will not be parsed even for errors\r\n    alwaysCreateTextNode: false,\r\n    isArray: () => false,\r\n    commentPropName: false,\r\n    unpairedTags: [],\r\n    processEntities: true,\r\n    htmlEntities: false,\r\n    ignoreDeclaration: false,\r\n    ignorePiTags: false,\r\n    transformTagName: false,\r\n};\r\n   \r\nconst buildOptions = function(options) {\r\n    return Object.assign({}, defaultOptions, options);\r\n};\r\n\r\nexports.buildOptions = buildOptions;\r\nexports.defaultOptions = defaultOptions;"],"mappings":"AACA,MAAMA,cAAc,GAAG;EACnBC,aAAa,EAAE,KAAK;EACpBC,mBAAmB,EAAE,IAAI;EACzBC,mBAAmB,EAAE,KAAK;EAC1BC,YAAY,EAAE,OAAO;EACrBC,gBAAgB,EAAE,IAAI;EACtBC,cAAc,EAAE,KAAK;EAAE;EACvBC,sBAAsB,EAAE,KAAK;EAAE;EAC/B;EACAC,aAAa,EAAE,IAAI;EACnBC,mBAAmB,EAAE,KAAK;EAC1BC,UAAU,EAAE,IAAI;EAAE;EAClBC,aAAa,EAAE,KAAK;EACpBC,kBAAkB,EAAE;IAClBC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAChB,CAAC;EACDC,iBAAiB,EAAE,UAASC,OAAO,EAAEC,GAAG,EAAE;IACxC,OAAOA,GAAG;EACZ,CAAC;EACDC,uBAAuB,EAAE,UAASC,QAAQ,EAAEF,GAAG,EAAE;IAC/C,OAAOA,GAAG;EACZ,CAAC;EACDG,SAAS,EAAE,EAAE;EAAE;EACfC,oBAAoB,EAAE,KAAK;EAC3BC,OAAO,EAAE,MAAM,KAAK;EACpBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,EAAE;EAChBC,eAAe,EAAE,IAAI;EACrBC,YAAY,EAAE,KAAK;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,YAAY,EAAE,KAAK;EACnBC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,YAAY,GAAG,UAASC,OAAO,EAAE;EACnC,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEjC,cAAc,EAAE+B,OAAO,CAAC;AACrD,CAAC;AAEDG,OAAO,CAACJ,YAAY,GAAGA,YAAY;AACnCI,OAAO,CAAClC,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}