{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\r\n*/\n\n\"use strict\";\n\nconst {\n  parseOptions\n} = require(\"../container/options\");\nconst ConsumeSharedPlugin = require(\"./ConsumeSharedPlugin\");\nconst ProvideSharedPlugin = require(\"./ProvideSharedPlugin\");\nconst {\n  isRequiredVersion\n} = require(\"./utils\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumeSharedPluginOptions} ConsumeSharedPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumesConfig} ConsumesConfig */\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvidesConfig} ProvidesConfig */\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharePluginOptions} SharePluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharedConfig} SharedConfig */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass SharePlugin {\n  /**\r\n   * @param {SharePluginOptions} options options\r\n   */\n  constructor(options) {\n    /** @type {[string, SharedConfig][]} */\n    const sharedOptions = parseOptions(options.shared, (item, key) => {\n      if (typeof item !== \"string\") throw new Error(\"Unexpected array in shared\");\n      /** @type {SharedConfig} */\n      const config = item === key || !isRequiredVersion(item) ? {\n        import: item\n      } : {\n        import: key,\n        requiredVersion: item\n      };\n      return config;\n    }, item => item);\n    /** @type {Record<string, ConsumesConfig>[]} */\n    const consumes = sharedOptions.map(_ref => {\n      let [key, options] = _ref;\n      return {\n        [key]: {\n          import: options.import,\n          shareKey: options.shareKey || key,\n          shareScope: options.shareScope,\n          requiredVersion: options.requiredVersion,\n          strictVersion: options.strictVersion,\n          singleton: options.singleton,\n          packageName: options.packageName,\n          eager: options.eager\n        }\n      };\n    });\n    /** @type {Record<string, ProvidesConfig>[]} */\n    const provides = sharedOptions.filter(_ref2 => {\n      let [, options] = _ref2;\n      return options.import !== false;\n    }).map(_ref3 => {\n      let [key, options] = _ref3;\n      return {\n        [options.import || key]: {\n          shareKey: options.shareKey || key,\n          shareScope: options.shareScope,\n          version: options.version,\n          eager: options.eager\n        }\n      };\n    });\n    this._shareScope = options.shareScope;\n    this._consumes = consumes;\n    this._provides = provides;\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    new ConsumeSharedPlugin({\n      shareScope: this._shareScope,\n      consumes: this._consumes\n    }).apply(compiler);\n    new ProvideSharedPlugin({\n      shareScope: this._shareScope,\n      provides: this._provides\n    }).apply(compiler);\n  }\n}\nmodule.exports = SharePlugin;","map":{"version":3,"names":["parseOptions","require","ConsumeSharedPlugin","ProvideSharedPlugin","isRequiredVersion","SharePlugin","constructor","options","sharedOptions","shared","item","key","Error","config","import","requiredVersion","consumes","map","shareKey","shareScope","strictVersion","singleton","packageName","eager","provides","filter","version","_shareScope","_consumes","_provides","apply","compiler","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/sharing/SharePlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { parseOptions } = require(\"../container/options\");\r\nconst ConsumeSharedPlugin = require(\"./ConsumeSharedPlugin\");\r\nconst ProvideSharedPlugin = require(\"./ProvideSharedPlugin\");\r\nconst { isRequiredVersion } = require(\"./utils\");\r\n\r\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumeSharedPluginOptions} ConsumeSharedPluginOptions */\r\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumesConfig} ConsumesConfig */\r\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\r\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvidesConfig} ProvidesConfig */\r\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharePluginOptions} SharePluginOptions */\r\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharedConfig} SharedConfig */\r\n/** @typedef {import(\"../Compiler\")} Compiler */\r\n\r\nclass SharePlugin {\r\n\t/**\r\n\t * @param {SharePluginOptions} options options\r\n\t */\r\n\tconstructor(options) {\r\n\t\t/** @type {[string, SharedConfig][]} */\r\n\t\tconst sharedOptions = parseOptions(\r\n\t\t\toptions.shared,\r\n\t\t\t(item, key) => {\r\n\t\t\t\tif (typeof item !== \"string\")\r\n\t\t\t\t\tthrow new Error(\"Unexpected array in shared\");\r\n\t\t\t\t/** @type {SharedConfig} */\r\n\t\t\t\tconst config =\r\n\t\t\t\t\titem === key || !isRequiredVersion(item)\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\timport: item\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\timport: key,\r\n\t\t\t\t\t\t\t\trequiredVersion: item\r\n\t\t\t\t\t\t  };\r\n\t\t\t\treturn config;\r\n\t\t\t},\r\n\t\t\titem => item\r\n\t\t);\r\n\t\t/** @type {Record<string, ConsumesConfig>[]} */\r\n\t\tconst consumes = sharedOptions.map(([key, options]) => ({\r\n\t\t\t[key]: {\r\n\t\t\t\timport: options.import,\r\n\t\t\t\tshareKey: options.shareKey || key,\r\n\t\t\t\tshareScope: options.shareScope,\r\n\t\t\t\trequiredVersion: options.requiredVersion,\r\n\t\t\t\tstrictVersion: options.strictVersion,\r\n\t\t\t\tsingleton: options.singleton,\r\n\t\t\t\tpackageName: options.packageName,\r\n\t\t\t\teager: options.eager\r\n\t\t\t}\r\n\t\t}));\r\n\t\t/** @type {Record<string, ProvidesConfig>[]} */\r\n\t\tconst provides = sharedOptions\r\n\t\t\t.filter(([, options]) => options.import !== false)\r\n\t\t\t.map(([key, options]) => ({\r\n\t\t\t\t[options.import || key]: {\r\n\t\t\t\t\tshareKey: options.shareKey || key,\r\n\t\t\t\t\tshareScope: options.shareScope,\r\n\t\t\t\t\tversion: options.version,\r\n\t\t\t\t\teager: options.eager\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\tthis._shareScope = options.shareScope;\r\n\t\tthis._consumes = consumes;\r\n\t\tthis._provides = provides;\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tnew ConsumeSharedPlugin({\r\n\t\t\tshareScope: this._shareScope,\r\n\t\t\tconsumes: this._consumes\r\n\t\t}).apply(compiler);\r\n\t\tnew ProvideSharedPlugin({\r\n\t\t\tshareScope: this._shareScope,\r\n\t\t\tprovides: this._provides\r\n\t\t}).apply(compiler);\r\n\t}\r\n}\r\n\r\nmodule.exports = SharePlugin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}