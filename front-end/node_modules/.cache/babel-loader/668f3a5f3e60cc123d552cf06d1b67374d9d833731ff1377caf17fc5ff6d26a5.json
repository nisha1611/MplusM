{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst DependencyTemplate = require(\"../DependencyTemplate\");\nconst memoize = require(\"../util/memoize\");\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../Module\")} Module */\n\nconst getRawModule = memoize(() => require(\"../RawModule\"));\nclass ModuleDependency extends Dependency {\n  /**\r\n   * @param {string} request request path which needs resolving\r\n   */\n  constructor(request) {\n    super();\n    this.request = request;\n    this.userRequest = request;\n    this.range = undefined;\n    // assertions must be serialized by subclasses that use it\n    /** @type {Record<string, any> | undefined} */\n    this.assertions = undefined;\n    this._context = undefined;\n  }\n\n  /**\r\n   * @returns {string | undefined} a request context\r\n   */\n  getContext() {\n    return this._context;\n  }\n\n  /**\r\n   * @returns {string | null} an identifier to merge equal requests\r\n   */\n  getResourceIdentifier() {\n    let str = `context${this._context || \"\"}|module${this.request}`;\n    if (this.assertions !== undefined) {\n      str += JSON.stringify(this.assertions);\n    }\n    return str;\n  }\n\n  /**\r\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\r\n   */\n  couldAffectReferencingModule() {\n    return true;\n  }\n\n  /**\r\n   * @param {string} context context directory\r\n   * @returns {Module} a module\r\n   */\n  createIgnoredModule(context) {\n    const RawModule = getRawModule();\n    return new RawModule(\"/* (ignored) */\", `ignored|${context}|${this.request}`, `${this.request} (ignored)`);\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.userRequest);\n    write(this._context);\n    write(this.range);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.request = read();\n    this.userRequest = read();\n    this._context = read();\n    this.range = read();\n    super.deserialize(context);\n  }\n}\nModuleDependency.Template = DependencyTemplate;\nmodule.exports = ModuleDependency;","map":{"version":3,"names":["Dependency","require","DependencyTemplate","memoize","getRawModule","ModuleDependency","constructor","request","userRequest","range","undefined","assertions","_context","getContext","getResourceIdentifier","str","JSON","stringify","couldAffectReferencingModule","createIgnoredModule","context","RawModule","serialize","write","deserialize","read","Template","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/ModuleDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Dependency = require(\"../Dependency\");\r\nconst DependencyTemplate = require(\"../DependencyTemplate\");\r\nconst memoize = require(\"../util/memoize\");\r\n\r\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\r\n/** @typedef {import(\"../Module\")} Module */\r\n\r\nconst getRawModule = memoize(() => require(\"../RawModule\"));\r\n\r\nclass ModuleDependency extends Dependency {\r\n\t/**\r\n\t * @param {string} request request path which needs resolving\r\n\t */\r\n\tconstructor(request) {\r\n\t\tsuper();\r\n\t\tthis.request = request;\r\n\t\tthis.userRequest = request;\r\n\t\tthis.range = undefined;\r\n\t\t// assertions must be serialized by subclasses that use it\r\n\t\t/** @type {Record<string, any> | undefined} */\r\n\t\tthis.assertions = undefined;\r\n\t\tthis._context = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string | undefined} a request context\r\n\t */\r\n\tgetContext() {\r\n\t\treturn this._context;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string | null} an identifier to merge equal requests\r\n\t */\r\n\tgetResourceIdentifier() {\r\n\t\tlet str = `context${this._context || \"\"}|module${this.request}`;\r\n\t\tif (this.assertions !== undefined) {\r\n\t\t\tstr += JSON.stringify(this.assertions);\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\r\n\t */\r\n\tcouldAffectReferencingModule() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} context context directory\r\n\t * @returns {Module} a module\r\n\t */\r\n\tcreateIgnoredModule(context) {\r\n\t\tconst RawModule = getRawModule();\r\n\t\treturn new RawModule(\r\n\t\t\t\"/* (ignored) */\",\r\n\t\t\t`ignored|${context}|${this.request}`,\r\n\t\t\t`${this.request} (ignored)`\r\n\t\t);\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.request);\r\n\t\twrite(this.userRequest);\r\n\t\twrite(this._context);\r\n\t\twrite(this.range);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tdeserialize(context) {\r\n\t\tconst { read } = context;\r\n\t\tthis.request = read();\r\n\t\tthis.userRequest = read();\r\n\t\tthis._context = read();\r\n\t\tthis.range = read();\r\n\t\tsuper.deserialize(context);\r\n\t}\r\n}\r\n\r\nModuleDependency.Template = DependencyTemplate;\r\n\r\nmodule.exports = ModuleDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC3D,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAiB,CAAC;;AAE1C;AACA;;AAEA,MAAMG,YAAY,GAAGD,OAAO,CAAC,MAAMF,OAAO,CAAC,cAAc,CAAC,CAAC;AAE3D,MAAMI,gBAAgB,SAASL,UAAU,CAAC;EACzC;AACD;AACA;EACCM,WAAW,CAACC,OAAO,EAAE;IACpB,KAAK,EAAE;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGD,OAAO;IAC1B,IAAI,CAACE,KAAK,GAAGC,SAAS;IACtB;IACA;IACA,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACE,QAAQ,GAAGF,SAAS;EAC1B;;EAEA;AACD;AACA;EACCG,UAAU,GAAG;IACZ,OAAO,IAAI,CAACD,QAAQ;EACrB;;EAEA;AACD;AACA;EACCE,qBAAqB,GAAG;IACvB,IAAIC,GAAG,GAAI,UAAS,IAAI,CAACH,QAAQ,IAAI,EAAG,UAAS,IAAI,CAACL,OAAQ,EAAC;IAC/D,IAAI,IAAI,CAACI,UAAU,KAAKD,SAAS,EAAE;MAClCK,GAAG,IAAIC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACN,UAAU,CAAC;IACvC;IACA,OAAOI,GAAG;EACX;;EAEA;AACD;AACA;EACCG,4BAA4B,GAAG;IAC9B,OAAO,IAAI;EACZ;;EAEA;AACD;AACA;AACA;EACCC,mBAAmB,CAACC,OAAO,EAAE;IAC5B,MAAMC,SAAS,GAAGjB,YAAY,EAAE;IAChC,OAAO,IAAIiB,SAAS,CACnB,iBAAiB,EAChB,WAAUD,OAAQ,IAAG,IAAI,CAACb,OAAQ,EAAC,EACnC,GAAE,IAAI,CAACA,OAAQ,YAAW,CAC3B;EACF;EAEAe,SAAS,CAACF,OAAO,EAAE;IAClB,MAAM;MAAEG;IAAM,CAAC,GAAGH,OAAO;IACzBG,KAAK,CAAC,IAAI,CAAChB,OAAO,CAAC;IACnBgB,KAAK,CAAC,IAAI,CAACf,WAAW,CAAC;IACvBe,KAAK,CAAC,IAAI,CAACX,QAAQ,CAAC;IACpBW,KAAK,CAAC,IAAI,CAACd,KAAK,CAAC;IACjB,KAAK,CAACa,SAAS,CAACF,OAAO,CAAC;EACzB;EAEAI,WAAW,CAACJ,OAAO,EAAE;IACpB,MAAM;MAAEK;IAAK,CAAC,GAAGL,OAAO;IACxB,IAAI,CAACb,OAAO,GAAGkB,IAAI,EAAE;IACrB,IAAI,CAACjB,WAAW,GAAGiB,IAAI,EAAE;IACzB,IAAI,CAACb,QAAQ,GAAGa,IAAI,EAAE;IACtB,IAAI,CAAChB,KAAK,GAAGgB,IAAI,EAAE;IACnB,KAAK,CAACD,WAAW,CAACJ,OAAO,CAAC;EAC3B;AACD;AAEAf,gBAAgB,CAACqB,QAAQ,GAAGxB,kBAAkB;AAE9CyB,MAAM,CAACC,OAAO,GAAGvB,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}