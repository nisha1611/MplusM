{"ast":null,"code":"'use strict';\n\nmodule.exports = function applyDefaultsToPOJO(doc, schema) {\n  const paths = Object.keys(schema.paths);\n  const plen = paths.length;\n  for (let i = 0; i < plen; ++i) {\n    let curPath = '';\n    const p = paths[i];\n    const type = schema.paths[p];\n    const path = type.splitPath();\n    const len = path.length;\n    let doc_ = doc;\n    for (let j = 0; j < len; ++j) {\n      if (doc_ == null) {\n        break;\n      }\n      const piece = path[j];\n      curPath += (!curPath.length ? '' : '.') + piece;\n      if (j === len - 1) {\n        if (typeof doc_[piece] !== 'undefined') {\n          if (type.$isSingleNested) {\n            applyDefaultsToPOJO(doc_[piece], type.caster.schema);\n          } else if (type.$isMongooseDocumentArray && Array.isArray(doc_[piece])) {\n            doc_[piece].forEach(el => applyDefaultsToPOJO(el, type.schema));\n          }\n          break;\n        }\n        const def = type.getDefault(doc, false, {\n          skipCast: true\n        });\n        if (typeof def !== 'undefined') {\n          doc_[piece] = def;\n          if (type.$isSingleNested) {\n            applyDefaultsToPOJO(def, type.caster.schema);\n          } else if (type.$isMongooseDocumentArray && Array.isArray(def)) {\n            def.forEach(el => applyDefaultsToPOJO(el, type.schema));\n          }\n        }\n      } else {\n        if (doc_[piece] == null) {\n          doc_[piece] = {};\n        }\n        doc_ = doc_[piece];\n      }\n    }\n  }\n};","map":{"version":3,"names":["module","exports","applyDefaultsToPOJO","doc","schema","paths","Object","keys","plen","length","i","curPath","p","type","path","splitPath","len","doc_","j","piece","$isSingleNested","caster","$isMongooseDocumentArray","Array","isArray","forEach","el","def","getDefault","skipCast"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/mongoose/lib/helpers/model/applyDefaultsToPOJO.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = function applyDefaultsToPOJO(doc, schema) {\r\n  const paths = Object.keys(schema.paths);\r\n  const plen = paths.length;\r\n\r\n  for (let i = 0; i < plen; ++i) {\r\n    let curPath = '';\r\n    const p = paths[i];\r\n\r\n    const type = schema.paths[p];\r\n    const path = type.splitPath();\r\n    const len = path.length;\r\n    let doc_ = doc;\r\n    for (let j = 0; j < len; ++j) {\r\n      if (doc_ == null) {\r\n        break;\r\n      }\r\n\r\n      const piece = path[j];\r\n      curPath += (!curPath.length ? '' : '.') + piece;\r\n\r\n      if (j === len - 1) {\r\n        if (typeof doc_[piece] !== 'undefined') {\r\n          if (type.$isSingleNested) {\r\n            applyDefaultsToPOJO(doc_[piece], type.caster.schema);\r\n          } else if (type.$isMongooseDocumentArray && Array.isArray(doc_[piece])) {\r\n            doc_[piece].forEach(el => applyDefaultsToPOJO(el, type.schema));\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        const def = type.getDefault(doc, false, { skipCast: true });\r\n        if (typeof def !== 'undefined') {\r\n          doc_[piece] = def;\r\n\r\n          if (type.$isSingleNested) {\r\n            applyDefaultsToPOJO(def, type.caster.schema);\r\n          } else if (type.$isMongooseDocumentArray && Array.isArray(def)) {\r\n            def.forEach(el => applyDefaultsToPOJO(el, type.schema));\r\n          }\r\n        }\r\n      } else {\r\n        if (doc_[piece] == null) {\r\n          doc_[piece] = {};\r\n        }\r\n        doc_ = doc_[piece];\r\n      }\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,mBAAmB,CAACC,GAAG,EAAEC,MAAM,EAAE;EACzD,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAACC,KAAK,CAAC;EACvC,MAAMG,IAAI,GAAGH,KAAK,CAACI,MAAM;EAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,EAAE,EAAEE,CAAC,EAAE;IAC7B,IAAIC,OAAO,GAAG,EAAE;IAChB,MAAMC,CAAC,GAAGP,KAAK,CAACK,CAAC,CAAC;IAElB,MAAMG,IAAI,GAAGT,MAAM,CAACC,KAAK,CAACO,CAAC,CAAC;IAC5B,MAAME,IAAI,GAAGD,IAAI,CAACE,SAAS,EAAE;IAC7B,MAAMC,GAAG,GAAGF,IAAI,CAACL,MAAM;IACvB,IAAIQ,IAAI,GAAGd,GAAG;IACd,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAE,EAAEE,CAAC,EAAE;MAC5B,IAAID,IAAI,IAAI,IAAI,EAAE;QAChB;MACF;MAEA,MAAME,KAAK,GAAGL,IAAI,CAACI,CAAC,CAAC;MACrBP,OAAO,IAAI,CAAC,CAACA,OAAO,CAACF,MAAM,GAAG,EAAE,GAAG,GAAG,IAAIU,KAAK;MAE/C,IAAID,CAAC,KAAKF,GAAG,GAAG,CAAC,EAAE;QACjB,IAAI,OAAOC,IAAI,CAACE,KAAK,CAAC,KAAK,WAAW,EAAE;UACtC,IAAIN,IAAI,CAACO,eAAe,EAAE;YACxBlB,mBAAmB,CAACe,IAAI,CAACE,KAAK,CAAC,EAAEN,IAAI,CAACQ,MAAM,CAACjB,MAAM,CAAC;UACtD,CAAC,MAAM,IAAIS,IAAI,CAACS,wBAAwB,IAAIC,KAAK,CAACC,OAAO,CAACP,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE;YACtEF,IAAI,CAACE,KAAK,CAAC,CAACM,OAAO,CAACC,EAAE,IAAIxB,mBAAmB,CAACwB,EAAE,EAAEb,IAAI,CAACT,MAAM,CAAC,CAAC;UACjE;UAEA;QACF;QAEA,MAAMuB,GAAG,GAAGd,IAAI,CAACe,UAAU,CAACzB,GAAG,EAAE,KAAK,EAAE;UAAE0B,QAAQ,EAAE;QAAK,CAAC,CAAC;QAC3D,IAAI,OAAOF,GAAG,KAAK,WAAW,EAAE;UAC9BV,IAAI,CAACE,KAAK,CAAC,GAAGQ,GAAG;UAEjB,IAAId,IAAI,CAACO,eAAe,EAAE;YACxBlB,mBAAmB,CAACyB,GAAG,EAAEd,IAAI,CAACQ,MAAM,CAACjB,MAAM,CAAC;UAC9C,CAAC,MAAM,IAAIS,IAAI,CAACS,wBAAwB,IAAIC,KAAK,CAACC,OAAO,CAACG,GAAG,CAAC,EAAE;YAC9DA,GAAG,CAACF,OAAO,CAACC,EAAE,IAAIxB,mBAAmB,CAACwB,EAAE,EAAEb,IAAI,CAACT,MAAM,CAAC,CAAC;UACzD;QACF;MACF,CAAC,MAAM;QACL,IAAIa,IAAI,CAACE,KAAK,CAAC,IAAI,IAAI,EAAE;UACvBF,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC;QAClB;QACAF,IAAI,GAAGA,IAAI,CAACE,KAAK,CAAC;MACpB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}