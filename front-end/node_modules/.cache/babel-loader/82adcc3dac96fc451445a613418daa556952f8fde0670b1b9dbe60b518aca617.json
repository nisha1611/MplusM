{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst Factory = require(\"enhanced-resolve\").ResolverFactory;\nconst {\n  HookMap,\n  SyncHook,\n  SyncWaterfallHook\n} = require(\"tapable\");\nconst {\n  cachedCleverMerge,\n  removeOperations,\n  resolveByProperty\n} = require(\"./util/cleverMerge\");\n\n/** @typedef {import(\"enhanced-resolve\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"enhanced-resolve\").Resolver} Resolver */\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} WebpackResolveOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolvePluginInstance} ResolvePluginInstance */\n\n/** @typedef {WebpackResolveOptions & {dependencyType?: string, resolveToContext?: boolean }} ResolveOptionsWithDependencyType */\n/**\r\n * @typedef {Object} WithOptions\r\n * @property {function(Partial<ResolveOptionsWithDependencyType>): ResolverWithOptions} withOptions create a resolver with additional/different options\r\n */\n\n/** @typedef {Resolver & WithOptions} ResolverWithOptions */\n\n// need to be hoisted on module level for caching identity\nconst EMPTY_RESOLVE_OPTIONS = {};\n\n/**\r\n * @param {ResolveOptionsWithDependencyType} resolveOptionsWithDepType enhanced options\r\n * @returns {ResolveOptions} merged options\r\n */\nconst convertToResolveOptions = resolveOptionsWithDepType => {\n  const {\n    dependencyType,\n    plugins,\n    ...remaining\n  } = resolveOptionsWithDepType;\n\n  // check type compat\n  /** @type {Partial<ResolveOptions>} */\n  const partialOptions = {\n    ...remaining,\n    plugins: plugins && /** @type {ResolvePluginInstance[]} */\n    plugins.filter(item => item !== \"...\")\n  };\n  if (!partialOptions.fileSystem) {\n    throw new Error(\"fileSystem is missing in resolveOptions, but it's required for enhanced-resolve\");\n  }\n  // These weird types validate that we checked all non-optional properties\n  const options = /** @type {Partial<ResolveOptions> & Pick<ResolveOptions, \"fileSystem\">} */\n  partialOptions;\n  return removeOperations(resolveByProperty(options, \"byDependency\", dependencyType));\n};\n\n/**\r\n * @typedef {Object} ResolverCache\r\n * @property {WeakMap<Object, ResolverWithOptions>} direct\r\n * @property {Map<string, ResolverWithOptions>} stringified\r\n */\n\nmodule.exports = class ResolverFactory {\n  constructor() {\n    this.hooks = Object.freeze({\n      /** @type {HookMap<SyncWaterfallHook<[ResolveOptionsWithDependencyType]>>} */\n      resolveOptions: new HookMap(() => new SyncWaterfallHook([\"resolveOptions\"])),\n      /** @type {HookMap<SyncHook<[Resolver, ResolveOptions, ResolveOptionsWithDependencyType]>>} */\n      resolver: new HookMap(() => new SyncHook([\"resolver\", \"resolveOptions\", \"userResolveOptions\"]))\n    });\n    /** @type {Map<string, ResolverCache>} */\n    this.cache = new Map();\n  }\n\n  /**\r\n   * @param {string} type type of resolver\r\n   * @param {ResolveOptionsWithDependencyType=} resolveOptions options\r\n   * @returns {ResolverWithOptions} the resolver\r\n   */\n  get(type) {\n    let resolveOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_RESOLVE_OPTIONS;\n    let typedCaches = this.cache.get(type);\n    if (!typedCaches) {\n      typedCaches = {\n        direct: new WeakMap(),\n        stringified: new Map()\n      };\n      this.cache.set(type, typedCaches);\n    }\n    const cachedResolver = typedCaches.direct.get(resolveOptions);\n    if (cachedResolver) {\n      return cachedResolver;\n    }\n    const ident = JSON.stringify(resolveOptions);\n    const resolver = typedCaches.stringified.get(ident);\n    if (resolver) {\n      typedCaches.direct.set(resolveOptions, resolver);\n      return resolver;\n    }\n    const newResolver = this._create(type, resolveOptions);\n    typedCaches.direct.set(resolveOptions, newResolver);\n    typedCaches.stringified.set(ident, newResolver);\n    return newResolver;\n  }\n\n  /**\r\n   * @param {string} type type of resolver\r\n   * @param {ResolveOptionsWithDependencyType} resolveOptionsWithDepType options\r\n   * @returns {ResolverWithOptions} the resolver\r\n   */\n  _create(type, resolveOptionsWithDepType) {\n    /** @type {ResolveOptionsWithDependencyType} */\n    const originalResolveOptions = {\n      ...resolveOptionsWithDepType\n    };\n    const resolveOptions = convertToResolveOptions(this.hooks.resolveOptions.for(type).call(resolveOptionsWithDepType));\n    const resolver = /** @type {ResolverWithOptions} */\n    Factory.createResolver(resolveOptions);\n    if (!resolver) {\n      throw new Error(\"No resolver created\");\n    }\n    /** @type {WeakMap<Partial<ResolveOptionsWithDependencyType>, ResolverWithOptions>} */\n    const childCache = new WeakMap();\n    resolver.withOptions = options => {\n      const cacheEntry = childCache.get(options);\n      if (cacheEntry !== undefined) return cacheEntry;\n      const mergedOptions = cachedCleverMerge(originalResolveOptions, options);\n      const resolver = this.get(type, mergedOptions);\n      childCache.set(options, resolver);\n      return resolver;\n    };\n    this.hooks.resolver.for(type).call(resolver, resolveOptions, originalResolveOptions);\n    return resolver;\n  }\n};","map":{"version":3,"names":["Factory","require","ResolverFactory","HookMap","SyncHook","SyncWaterfallHook","cachedCleverMerge","removeOperations","resolveByProperty","EMPTY_RESOLVE_OPTIONS","convertToResolveOptions","resolveOptionsWithDepType","dependencyType","plugins","remaining","partialOptions","filter","item","fileSystem","Error","options","module","exports","constructor","hooks","Object","freeze","resolveOptions","resolver","cache","Map","get","type","typedCaches","direct","WeakMap","stringified","set","cachedResolver","ident","JSON","stringify","newResolver","_create","originalResolveOptions","for","call","createResolver","childCache","withOptions","cacheEntry","undefined","mergedOptions"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/ResolverFactory.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Factory = require(\"enhanced-resolve\").ResolverFactory;\r\nconst { HookMap, SyncHook, SyncWaterfallHook } = require(\"tapable\");\r\nconst {\r\n\tcachedCleverMerge,\r\n\tremoveOperations,\r\n\tresolveByProperty\r\n} = require(\"./util/cleverMerge\");\r\n\r\n/** @typedef {import(\"enhanced-resolve\").ResolveOptions} ResolveOptions */\r\n/** @typedef {import(\"enhanced-resolve\").Resolver} Resolver */\r\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} WebpackResolveOptions */\r\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolvePluginInstance} ResolvePluginInstance */\r\n\r\n/** @typedef {WebpackResolveOptions & {dependencyType?: string, resolveToContext?: boolean }} ResolveOptionsWithDependencyType */\r\n/**\r\n * @typedef {Object} WithOptions\r\n * @property {function(Partial<ResolveOptionsWithDependencyType>): ResolverWithOptions} withOptions create a resolver with additional/different options\r\n */\r\n\r\n/** @typedef {Resolver & WithOptions} ResolverWithOptions */\r\n\r\n// need to be hoisted on module level for caching identity\r\nconst EMPTY_RESOLVE_OPTIONS = {};\r\n\r\n/**\r\n * @param {ResolveOptionsWithDependencyType} resolveOptionsWithDepType enhanced options\r\n * @returns {ResolveOptions} merged options\r\n */\r\nconst convertToResolveOptions = resolveOptionsWithDepType => {\r\n\tconst { dependencyType, plugins, ...remaining } = resolveOptionsWithDepType;\r\n\r\n\t// check type compat\r\n\t/** @type {Partial<ResolveOptions>} */\r\n\tconst partialOptions = {\r\n\t\t...remaining,\r\n\t\tplugins:\r\n\t\t\tplugins &&\r\n\t\t\t/** @type {ResolvePluginInstance[]} */ (\r\n\t\t\t\tplugins.filter(item => item !== \"...\")\r\n\t\t\t)\r\n\t};\r\n\r\n\tif (!partialOptions.fileSystem) {\r\n\t\tthrow new Error(\r\n\t\t\t\"fileSystem is missing in resolveOptions, but it's required for enhanced-resolve\"\r\n\t\t);\r\n\t}\r\n\t// These weird types validate that we checked all non-optional properties\r\n\tconst options =\r\n\t\t/** @type {Partial<ResolveOptions> & Pick<ResolveOptions, \"fileSystem\">} */ (\r\n\t\t\tpartialOptions\r\n\t\t);\r\n\r\n\treturn removeOperations(\r\n\t\tresolveByProperty(options, \"byDependency\", dependencyType)\r\n\t);\r\n};\r\n\r\n/**\r\n * @typedef {Object} ResolverCache\r\n * @property {WeakMap<Object, ResolverWithOptions>} direct\r\n * @property {Map<string, ResolverWithOptions>} stringified\r\n */\r\n\r\nmodule.exports = class ResolverFactory {\r\n\tconstructor() {\r\n\t\tthis.hooks = Object.freeze({\r\n\t\t\t/** @type {HookMap<SyncWaterfallHook<[ResolveOptionsWithDependencyType]>>} */\r\n\t\t\tresolveOptions: new HookMap(\r\n\t\t\t\t() => new SyncWaterfallHook([\"resolveOptions\"])\r\n\t\t\t),\r\n\t\t\t/** @type {HookMap<SyncHook<[Resolver, ResolveOptions, ResolveOptionsWithDependencyType]>>} */\r\n\t\t\tresolver: new HookMap(\r\n\t\t\t\t() => new SyncHook([\"resolver\", \"resolveOptions\", \"userResolveOptions\"])\r\n\t\t\t)\r\n\t\t});\r\n\t\t/** @type {Map<string, ResolverCache>} */\r\n\t\tthis.cache = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} type type of resolver\r\n\t * @param {ResolveOptionsWithDependencyType=} resolveOptions options\r\n\t * @returns {ResolverWithOptions} the resolver\r\n\t */\r\n\tget(type, resolveOptions = EMPTY_RESOLVE_OPTIONS) {\r\n\t\tlet typedCaches = this.cache.get(type);\r\n\t\tif (!typedCaches) {\r\n\t\t\ttypedCaches = {\r\n\t\t\t\tdirect: new WeakMap(),\r\n\t\t\t\tstringified: new Map()\r\n\t\t\t};\r\n\t\t\tthis.cache.set(type, typedCaches);\r\n\t\t}\r\n\t\tconst cachedResolver = typedCaches.direct.get(resolveOptions);\r\n\t\tif (cachedResolver) {\r\n\t\t\treturn cachedResolver;\r\n\t\t}\r\n\t\tconst ident = JSON.stringify(resolveOptions);\r\n\t\tconst resolver = typedCaches.stringified.get(ident);\r\n\t\tif (resolver) {\r\n\t\t\ttypedCaches.direct.set(resolveOptions, resolver);\r\n\t\t\treturn resolver;\r\n\t\t}\r\n\t\tconst newResolver = this._create(type, resolveOptions);\r\n\t\ttypedCaches.direct.set(resolveOptions, newResolver);\r\n\t\ttypedCaches.stringified.set(ident, newResolver);\r\n\t\treturn newResolver;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} type type of resolver\r\n\t * @param {ResolveOptionsWithDependencyType} resolveOptionsWithDepType options\r\n\t * @returns {ResolverWithOptions} the resolver\r\n\t */\r\n\t_create(type, resolveOptionsWithDepType) {\r\n\t\t/** @type {ResolveOptionsWithDependencyType} */\r\n\t\tconst originalResolveOptions = { ...resolveOptionsWithDepType };\r\n\r\n\t\tconst resolveOptions = convertToResolveOptions(\r\n\t\t\tthis.hooks.resolveOptions.for(type).call(resolveOptionsWithDepType)\r\n\t\t);\r\n\t\tconst resolver = /** @type {ResolverWithOptions} */ (\r\n\t\t\tFactory.createResolver(resolveOptions)\r\n\t\t);\r\n\t\tif (!resolver) {\r\n\t\t\tthrow new Error(\"No resolver created\");\r\n\t\t}\r\n\t\t/** @type {WeakMap<Partial<ResolveOptionsWithDependencyType>, ResolverWithOptions>} */\r\n\t\tconst childCache = new WeakMap();\r\n\t\tresolver.withOptions = options => {\r\n\t\t\tconst cacheEntry = childCache.get(options);\r\n\t\t\tif (cacheEntry !== undefined) return cacheEntry;\r\n\t\t\tconst mergedOptions = cachedCleverMerge(originalResolveOptions, options);\r\n\t\t\tconst resolver = this.get(type, mergedOptions);\r\n\t\t\tchildCache.set(options, resolver);\r\n\t\t\treturn resolver;\r\n\t\t};\r\n\t\tthis.hooks.resolver\r\n\t\t\t.for(type)\r\n\t\t\t.call(resolver, resolveOptions, originalResolveOptions);\r\n\t\treturn resolver;\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC,CAACC,eAAe;AAC3D,MAAM;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,GAAGJ,OAAO,CAAC,SAAS,CAAC;AACnE,MAAM;EACLK,iBAAiB;EACjBC,gBAAgB;EAChBC;AACD,CAAC,GAAGP,OAAO,CAAC,oBAAoB,CAAC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAMQ,qBAAqB,GAAG,CAAC,CAAC;;AAEhC;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAGC,yBAAyB,IAAI;EAC5D,MAAM;IAAEC,cAAc;IAAEC,OAAO;IAAE,GAAGC;EAAU,CAAC,GAAGH,yBAAyB;;EAE3E;EACA;EACA,MAAMI,cAAc,GAAG;IACtB,GAAGD,SAAS;IACZD,OAAO,EACNA,OAAO,IACP;IACCA,OAAO,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,KAAK;EAExC,CAAC;EAED,IAAI,CAACF,cAAc,CAACG,UAAU,EAAE;IAC/B,MAAM,IAAIC,KAAK,CACd,iFAAiF,CACjF;EACF;EACA;EACA,MAAMC,OAAO,GACZ;EACCL,cACA;EAEF,OAAOR,gBAAgB,CACtBC,iBAAiB,CAACY,OAAO,EAAE,cAAc,EAAER,cAAc,CAAC,CAC1D;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAS,MAAM,CAACC,OAAO,GAAG,MAAMpB,eAAe,CAAC;EACtCqB,WAAW,GAAG;IACb,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;MAC1B;MACAC,cAAc,EAAE,IAAIxB,OAAO,CAC1B,MAAM,IAAIE,iBAAiB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAC/C;MACD;MACAuB,QAAQ,EAAE,IAAIzB,OAAO,CACpB,MAAM,IAAIC,QAAQ,CAAC,CAAC,UAAU,EAAE,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;IAE1E,CAAC,CAAC;IACF;IACA,IAAI,CAACyB,KAAK,GAAG,IAAIC,GAAG,EAAE;EACvB;;EAEA;AACD;AACA;AACA;AACA;EACCC,GAAG,CAACC,IAAI,EAA0C;IAAA,IAAxCL,cAAc,uEAAGlB,qBAAqB;IAC/C,IAAIwB,WAAW,GAAG,IAAI,CAACJ,KAAK,CAACE,GAAG,CAACC,IAAI,CAAC;IACtC,IAAI,CAACC,WAAW,EAAE;MACjBA,WAAW,GAAG;QACbC,MAAM,EAAE,IAAIC,OAAO,EAAE;QACrBC,WAAW,EAAE,IAAIN,GAAG;MACrB,CAAC;MACD,IAAI,CAACD,KAAK,CAACQ,GAAG,CAACL,IAAI,EAAEC,WAAW,CAAC;IAClC;IACA,MAAMK,cAAc,GAAGL,WAAW,CAACC,MAAM,CAACH,GAAG,CAACJ,cAAc,CAAC;IAC7D,IAAIW,cAAc,EAAE;MACnB,OAAOA,cAAc;IACtB;IACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACd,cAAc,CAAC;IAC5C,MAAMC,QAAQ,GAAGK,WAAW,CAACG,WAAW,CAACL,GAAG,CAACQ,KAAK,CAAC;IACnD,IAAIX,QAAQ,EAAE;MACbK,WAAW,CAACC,MAAM,CAACG,GAAG,CAACV,cAAc,EAAEC,QAAQ,CAAC;MAChD,OAAOA,QAAQ;IAChB;IACA,MAAMc,WAAW,GAAG,IAAI,CAACC,OAAO,CAACX,IAAI,EAAEL,cAAc,CAAC;IACtDM,WAAW,CAACC,MAAM,CAACG,GAAG,CAACV,cAAc,EAAEe,WAAW,CAAC;IACnDT,WAAW,CAACG,WAAW,CAACC,GAAG,CAACE,KAAK,EAAEG,WAAW,CAAC;IAC/C,OAAOA,WAAW;EACnB;;EAEA;AACD;AACA;AACA;AACA;EACCC,OAAO,CAACX,IAAI,EAAErB,yBAAyB,EAAE;IACxC;IACA,MAAMiC,sBAAsB,GAAG;MAAE,GAAGjC;IAA0B,CAAC;IAE/D,MAAMgB,cAAc,GAAGjB,uBAAuB,CAC7C,IAAI,CAACc,KAAK,CAACG,cAAc,CAACkB,GAAG,CAACb,IAAI,CAAC,CAACc,IAAI,CAACnC,yBAAyB,CAAC,CACnE;IACD,MAAMiB,QAAQ,GAAG;IAChB5B,OAAO,CAAC+C,cAAc,CAACpB,cAAc,CACrC;IACD,IAAI,CAACC,QAAQ,EAAE;MACd,MAAM,IAAIT,KAAK,CAAC,qBAAqB,CAAC;IACvC;IACA;IACA,MAAM6B,UAAU,GAAG,IAAIb,OAAO,EAAE;IAChCP,QAAQ,CAACqB,WAAW,GAAG7B,OAAO,IAAI;MACjC,MAAM8B,UAAU,GAAGF,UAAU,CAACjB,GAAG,CAACX,OAAO,CAAC;MAC1C,IAAI8B,UAAU,KAAKC,SAAS,EAAE,OAAOD,UAAU;MAC/C,MAAME,aAAa,GAAG9C,iBAAiB,CAACsC,sBAAsB,EAAExB,OAAO,CAAC;MACxE,MAAMQ,QAAQ,GAAG,IAAI,CAACG,GAAG,CAACC,IAAI,EAAEoB,aAAa,CAAC;MAC9CJ,UAAU,CAACX,GAAG,CAACjB,OAAO,EAAEQ,QAAQ,CAAC;MACjC,OAAOA,QAAQ;IAChB,CAAC;IACD,IAAI,CAACJ,KAAK,CAACI,QAAQ,CACjBiB,GAAG,CAACb,IAAI,CAAC,CACTc,IAAI,CAAClB,QAAQ,EAAED,cAAc,EAAEiB,sBAAsB,CAAC;IACxD,OAAOhB,QAAQ;EAChB;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}