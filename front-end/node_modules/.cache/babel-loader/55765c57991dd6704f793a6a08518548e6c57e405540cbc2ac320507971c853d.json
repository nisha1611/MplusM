{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./NormalModuleFactory\").ResolveData} ResolveData */\n\nconst validate = createSchemaValidation(require(\"../schemas/plugins/IgnorePlugin.check.js\"), () => require(\"../schemas/plugins/IgnorePlugin.json\"), {\n  name: \"Ignore Plugin\",\n  baseDataPath: \"options\"\n});\nclass IgnorePlugin {\n  /**\r\n   * @param {IgnorePluginOptions} options IgnorePlugin options\r\n   */\n  constructor(options) {\n    validate(options);\n    this.options = options;\n\n    /** @private @type {Function} */\n    this.checkIgnore = this.checkIgnore.bind(this);\n  }\n\n  /**\r\n   * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\r\n   * and \"contextRegExp\" have to match.\r\n   *\r\n   * @param {ResolveData} resolveData resolve data\r\n   * @returns {false|undefined} returns false when the request should be ignored, otherwise undefined\r\n   */\n  checkIgnore(resolveData) {\n    if (\"checkResource\" in this.options && this.options.checkResource && this.options.checkResource(resolveData.request, resolveData.context)) {\n      return false;\n    }\n    if (\"resourceRegExp\" in this.options && this.options.resourceRegExp && this.options.resourceRegExp.test(resolveData.request)) {\n      if (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n        // if \"contextRegExp\" is given,\n        // both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n        if (this.options.contextRegExp.test(resolveData.context)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n      nmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n    });\n    compiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n      cmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n    });\n  }\n}\nmodule.exports = IgnorePlugin;","map":{"version":3,"names":["createSchemaValidation","require","validate","name","baseDataPath","IgnorePlugin","constructor","options","checkIgnore","bind","resolveData","checkResource","request","context","resourceRegExp","test","contextRegExp","apply","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","contextModuleFactory","cmf","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/IgnorePlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\r\n\r\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n/** @typedef {import(\"./NormalModuleFactory\").ResolveData} ResolveData */\r\n\r\nconst validate = createSchemaValidation(\r\n\trequire(\"../schemas/plugins/IgnorePlugin.check.js\"),\r\n\t() => require(\"../schemas/plugins/IgnorePlugin.json\"),\r\n\t{\r\n\t\tname: \"Ignore Plugin\",\r\n\t\tbaseDataPath: \"options\"\r\n\t}\r\n);\r\n\r\nclass IgnorePlugin {\r\n\t/**\r\n\t * @param {IgnorePluginOptions} options IgnorePlugin options\r\n\t */\r\n\tconstructor(options) {\r\n\t\tvalidate(options);\r\n\t\tthis.options = options;\r\n\r\n\t\t/** @private @type {Function} */\r\n\t\tthis.checkIgnore = this.checkIgnore.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\r\n\t * and \"contextRegExp\" have to match.\r\n\t *\r\n\t * @param {ResolveData} resolveData resolve data\r\n\t * @returns {false|undefined} returns false when the request should be ignored, otherwise undefined\r\n\t */\r\n\tcheckIgnore(resolveData) {\r\n\t\tif (\r\n\t\t\t\"checkResource\" in this.options &&\r\n\t\t\tthis.options.checkResource &&\r\n\t\t\tthis.options.checkResource(resolveData.request, resolveData.context)\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t\"resourceRegExp\" in this.options &&\r\n\t\t\tthis.options.resourceRegExp &&\r\n\t\t\tthis.options.resourceRegExp.test(resolveData.request)\r\n\t\t) {\r\n\t\t\tif (\"contextRegExp\" in this.options && this.options.contextRegExp) {\r\n\t\t\t\t// if \"contextRegExp\" is given,\r\n\t\t\t\t// both the \"resourceRegExp\" and \"contextRegExp\" have to match.\r\n\t\t\t\tif (this.options.contextRegExp.test(resolveData.context)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\r\n\t\t\tnmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\r\n\t\t});\r\n\t\tcompiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\r\n\t\t\tcmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = IgnorePlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,iCAAiC,CAAC;;AAEzE;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAGF,sBAAsB,CACtCC,OAAO,CAAC,0CAA0C,CAAC,EACnD,MAAMA,OAAO,CAAC,sCAAsC,CAAC,EACrD;EACCE,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;AACf,CAAC,CACD;AAED,MAAMC,YAAY,CAAC;EAClB;AACD;AACA;EACCC,WAAW,CAACC,OAAO,EAAE;IACpBL,QAAQ,CAACK,OAAO,CAAC;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;;IAEtB;IACA,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC/C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCD,WAAW,CAACE,WAAW,EAAE;IACxB,IACC,eAAe,IAAI,IAAI,CAACH,OAAO,IAC/B,IAAI,CAACA,OAAO,CAACI,aAAa,IAC1B,IAAI,CAACJ,OAAO,CAACI,aAAa,CAACD,WAAW,CAACE,OAAO,EAAEF,WAAW,CAACG,OAAO,CAAC,EACnE;MACD,OAAO,KAAK;IACb;IAEA,IACC,gBAAgB,IAAI,IAAI,CAACN,OAAO,IAChC,IAAI,CAACA,OAAO,CAACO,cAAc,IAC3B,IAAI,CAACP,OAAO,CAACO,cAAc,CAACC,IAAI,CAACL,WAAW,CAACE,OAAO,CAAC,EACpD;MACD,IAAI,eAAe,IAAI,IAAI,CAACL,OAAO,IAAI,IAAI,CAACA,OAAO,CAACS,aAAa,EAAE;QAClE;QACA;QACA,IAAI,IAAI,CAACT,OAAO,CAACS,aAAa,CAACD,IAAI,CAACL,WAAW,CAACG,OAAO,CAAC,EAAE;UACzD,OAAO,KAAK;QACb;MACD,CAAC,MAAM;QACN,OAAO,KAAK;MACb;IACD;EACD;;EAEA;AACD;AACA;AACA;AACA;EACCI,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,mBAAmB,CAACC,GAAG,CAAC,cAAc,EAAEC,GAAG,IAAI;MAC7DA,GAAG,CAACH,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,cAAc,EAAE,IAAI,CAACb,WAAW,CAAC;IAC9D,CAAC,CAAC;IACFU,QAAQ,CAACC,KAAK,CAACK,oBAAoB,CAACH,GAAG,CAAC,cAAc,EAAEI,GAAG,IAAI;MAC9DA,GAAG,CAACN,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,cAAc,EAAE,IAAI,CAACb,WAAW,CAAC;IAC9D,CAAC,CAAC;EACH;AACD;AAEAkB,MAAM,CAACC,OAAO,GAAGtB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}