{"ast":null,"code":"import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = options => (next, context) => async function (args) {\n  if (!HttpRequest.isInstance(args.request)) return next(args);\n  const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n  const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n  const signer = await options.signer(authScheme);\n  const output = await next({\n    ...args,\n    request: await signer.sign(args.request, {\n      signingDate: getSkewCorrectedDate(options.systemClockOffset),\n      signingRegion: multiRegionOverride || context[\"signing_region\"],\n      signingService: context[\"signing_service\"]\n    })\n  }).catch(error => {\n    const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n    if (serverTime) {\n      options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n    }\n    throw error;\n  });\n  const dateHeader = getDateHeader(output.response);\n  if (dateHeader) {\n    options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n  }\n  return output;\n};\nconst getDateHeader = response => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n  name: \"awsAuthMiddleware\",\n  tags: [\"SIGNATURE\", \"AWSAUTH\"],\n  relation: \"after\",\n  toMiddleware: \"retryMiddleware\",\n  override: true\n};\nexport const getAwsAuthPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n  }\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;","map":{"version":3,"names":["HttpRequest","HttpResponse","getSkewCorrectedDate","getUpdatedSystemClockOffset","awsAuthMiddleware","options","next","context","args","isInstance","request","authScheme","endpointV2","properties","authSchemes","multiRegionOverride","name","signingRegionSet","join","undefined","signer","output","sign","signingDate","systemClockOffset","signingRegion","signingService","catch","error","serverTime","ServerTime","getDateHeader","$response","dateHeader","response","headers","date","Date","awsAuthMiddlewareOptions","tags","relation","toMiddleware","override","getAwsAuthPlugin","applyToStack","clientStack","addRelativeTo","getSigV4AuthPlugin"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/middleware-signing/dist-es/middleware.js"],"sourcesContent":["import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\r\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\r\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\r\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\r\n    if (!HttpRequest.isInstance(args.request))\r\n        return next(args);\r\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\r\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\r\n    const signer = await options.signer(authScheme);\r\n    const output = await next({\r\n        ...args,\r\n        request: await signer.sign(args.request, {\r\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\r\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\r\n            signingService: context[\"signing_service\"],\r\n        }),\r\n    }).catch((error) => {\r\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\r\n        if (serverTime) {\r\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\r\n        }\r\n        throw error;\r\n    });\r\n    const dateHeader = getDateHeader(output.response);\r\n    if (dateHeader) {\r\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\r\n    }\r\n    return output;\r\n};\r\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\r\nexport const awsAuthMiddlewareOptions = {\r\n    name: \"awsAuthMiddleware\",\r\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\r\n    relation: \"after\",\r\n    toMiddleware: \"retryMiddleware\",\r\n    override: true,\r\n};\r\nexport const getAwsAuthPlugin = (options) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\r\n    },\r\n});\r\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,YAAY,QAAQ,wBAAwB;AAClE,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,2BAA2B,QAAQ,qCAAqC;AACjF,OAAO,MAAMC,iBAAiB,GAAIC,OAAO,IAAK,CAACC,IAAI,EAAEC,OAAO,KAAK,gBAAgBC,IAAI,EAAE;EACnF,IAAI,CAACR,WAAW,CAACS,UAAU,CAACD,IAAI,CAACE,OAAO,CAAC,EACrC,OAAOJ,IAAI,CAACE,IAAI,CAAC;EACrB,MAAMG,UAAU,GAAGJ,OAAO,CAACK,UAAU,EAAEC,UAAU,EAAEC,WAAW,GAAG,CAAC,CAAC;EACnE,MAAMC,mBAAmB,GAAGJ,UAAU,EAAEK,IAAI,KAAK,QAAQ,GAAGL,UAAU,EAAEM,gBAAgB,EAAEC,IAAI,CAAC,GAAG,CAAC,GAAGC,SAAS;EAC/G,MAAMC,MAAM,GAAG,MAAMf,OAAO,CAACe,MAAM,CAACT,UAAU,CAAC;EAC/C,MAAMU,MAAM,GAAG,MAAMf,IAAI,CAAC;IACtB,GAAGE,IAAI;IACPE,OAAO,EAAE,MAAMU,MAAM,CAACE,IAAI,CAACd,IAAI,CAACE,OAAO,EAAE;MACrCa,WAAW,EAAErB,oBAAoB,CAACG,OAAO,CAACmB,iBAAiB,CAAC;MAC5DC,aAAa,EAAEV,mBAAmB,IAAIR,OAAO,CAAC,gBAAgB,CAAC;MAC/DmB,cAAc,EAAEnB,OAAO,CAAC,iBAAiB;IAC7C,CAAC;EACL,CAAC,CAAC,CAACoB,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMC,UAAU,GAAGD,KAAK,CAACE,UAAU,IAAIC,aAAa,CAACH,KAAK,CAACI,SAAS,CAAC;IACrE,IAAIH,UAAU,EAAE;MACZxB,OAAO,CAACmB,iBAAiB,GAAGrB,2BAA2B,CAAC0B,UAAU,EAAExB,OAAO,CAACmB,iBAAiB,CAAC;IAClG;IACA,MAAMI,KAAK;EACf,CAAC,CAAC;EACF,MAAMK,UAAU,GAAGF,aAAa,CAACV,MAAM,CAACa,QAAQ,CAAC;EACjD,IAAID,UAAU,EAAE;IACZ5B,OAAO,CAACmB,iBAAiB,GAAGrB,2BAA2B,CAAC8B,UAAU,EAAE5B,OAAO,CAACmB,iBAAiB,CAAC;EAClG;EACA,OAAOH,MAAM;AACjB,CAAC;AACD,MAAMU,aAAa,GAAIG,QAAQ,IAAKjC,YAAY,CAACQ,UAAU,CAACyB,QAAQ,CAAC,GAAGA,QAAQ,CAACC,OAAO,EAAEC,IAAI,IAAIF,QAAQ,CAACC,OAAO,EAAEE,IAAI,GAAGlB,SAAS;AACpI,OAAO,MAAMmB,wBAAwB,GAAG;EACpCtB,IAAI,EAAE,mBAAmB;EACzBuB,IAAI,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;EAC9BC,QAAQ,EAAE,OAAO;EACjBC,YAAY,EAAE,iBAAiB;EAC/BC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,gBAAgB,GAAItC,OAAO,KAAM;EAC1CuC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,aAAa,CAAC1C,iBAAiB,CAACC,OAAO,CAAC,EAAEiC,wBAAwB,CAAC;EACnF;AACJ,CAAC,CAAC;AACF,OAAO,MAAMS,kBAAkB,GAAGJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}