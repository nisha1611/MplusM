{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\r\n * @template T\r\n * @callback Callback\r\n * @param {(Error | null)=} err\r\n * @param {T=} result\r\n */\n\nclass Watching {\n  /**\r\n   * @param {Compiler} compiler the compiler\r\n   * @param {WatchOptions} watchOptions options\r\n   * @param {Callback<Stats>} handler completion handler\r\n   */\n  constructor(compiler, watchOptions, handler) {\n    this.startTime = null;\n    this.invalid = false;\n    this.handler = handler;\n    /** @type {Callback<void>[]} */\n    this.callbacks = [];\n    /** @type {Callback<void>[] | undefined} */\n    this._closeCallbacks = undefined;\n    this.closed = false;\n    this.suspended = false;\n    this.blocked = false;\n    this._isBlocked = () => false;\n    this._onChange = () => {};\n    this._onInvalid = () => {};\n    if (typeof watchOptions === \"number\") {\n      this.watchOptions = {\n        aggregateTimeout: watchOptions\n      };\n    } else if (watchOptions && typeof watchOptions === \"object\") {\n      this.watchOptions = {\n        ...watchOptions\n      };\n    } else {\n      this.watchOptions = {};\n    }\n    if (typeof this.watchOptions.aggregateTimeout !== \"number\") {\n      this.watchOptions.aggregateTimeout = 20;\n    }\n    this.compiler = compiler;\n    this.running = false;\n    this._initial = true;\n    this._invalidReported = true;\n    this._needRecords = true;\n    this.watcher = undefined;\n    this.pausedWatcher = undefined;\n    /** @type {Set<string>} */\n    this._collectedChangedFiles = undefined;\n    /** @type {Set<string>} */\n    this._collectedRemovedFiles = undefined;\n    this._done = this._done.bind(this);\n    process.nextTick(() => {\n      if (this._initial) this._invalidate();\n    });\n  }\n\n  /**\r\n   * @param {ReadonlySet<string>} changedFiles changed files\r\n   * @param {ReadonlySet<string>} removedFiles removed files\r\n   */\n  _mergeWithCollected(changedFiles, removedFiles) {\n    if (!changedFiles) return;\n    if (!this._collectedChangedFiles) {\n      this._collectedChangedFiles = new Set(changedFiles);\n      this._collectedRemovedFiles = new Set(removedFiles);\n    } else {\n      for (const file of changedFiles) {\n        this._collectedChangedFiles.add(file);\n        this._collectedRemovedFiles.delete(file);\n      }\n      for (const file of removedFiles) {\n        this._collectedChangedFiles.delete(file);\n        this._collectedRemovedFiles.add(file);\n      }\n    }\n  }\n\n  /**\r\n   * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} fileTimeInfoEntries info for files\r\n   * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} contextTimeInfoEntries info for directories\r\n   * @param {ReadonlySet<string>=} changedFiles changed files\r\n   * @param {ReadonlySet<string>=} removedFiles removed files\r\n   * @returns {void}\r\n   */\n  _go(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) {\n    this._initial = false;\n    if (this.startTime === null) this.startTime = Date.now();\n    this.running = true;\n    if (this.watcher) {\n      this.pausedWatcher = this.watcher;\n      this.lastWatcherStartTime = Date.now();\n      this.watcher.pause();\n      this.watcher = null;\n    } else if (!this.lastWatcherStartTime) {\n      this.lastWatcherStartTime = Date.now();\n    }\n    this.compiler.fsStartTime = Date.now();\n    if (changedFiles && removedFiles && fileTimeInfoEntries && contextTimeInfoEntries) {\n      this._mergeWithCollected(changedFiles, removedFiles);\n      this.compiler.fileTimestamps = fileTimeInfoEntries;\n      this.compiler.contextTimestamps = contextTimeInfoEntries;\n    } else if (this.pausedWatcher) {\n      if (this.pausedWatcher.getInfo) {\n        const {\n          changes,\n          removals,\n          fileTimeInfoEntries,\n          contextTimeInfoEntries\n        } = this.pausedWatcher.getInfo();\n        this._mergeWithCollected(changes, removals);\n        this.compiler.fileTimestamps = fileTimeInfoEntries;\n        this.compiler.contextTimestamps = contextTimeInfoEntries;\n      } else {\n        this._mergeWithCollected(this.pausedWatcher.getAggregatedChanges && this.pausedWatcher.getAggregatedChanges(), this.pausedWatcher.getAggregatedRemovals && this.pausedWatcher.getAggregatedRemovals());\n        this.compiler.fileTimestamps = this.pausedWatcher.getFileTimeInfoEntries();\n        this.compiler.contextTimestamps = this.pausedWatcher.getContextTimeInfoEntries();\n      }\n    }\n    this.compiler.modifiedFiles = this._collectedChangedFiles;\n    this._collectedChangedFiles = undefined;\n    this.compiler.removedFiles = this._collectedRemovedFiles;\n    this._collectedRemovedFiles = undefined;\n    const run = () => {\n      if (this.compiler.idle) {\n        return this.compiler.cache.endIdle(err => {\n          if (err) return this._done(err);\n          this.compiler.idle = false;\n          run();\n        });\n      }\n      if (this._needRecords) {\n        return this.compiler.readRecords(err => {\n          if (err) return this._done(err);\n          this._needRecords = false;\n          run();\n        });\n      }\n      this.invalid = false;\n      this._invalidReported = false;\n      this.compiler.hooks.watchRun.callAsync(this.compiler, err => {\n        if (err) return this._done(err);\n        const onCompiled = (err, compilation) => {\n          if (err) return this._done(err, compilation);\n          if (this.invalid) return this._done(null, compilation);\n          if (this.compiler.hooks.shouldEmit.call(compilation) === false) {\n            return this._done(null, compilation);\n          }\n          process.nextTick(() => {\n            const logger = compilation.getLogger(\"webpack.Compiler\");\n            logger.time(\"emitAssets\");\n            this.compiler.emitAssets(compilation, err => {\n              logger.timeEnd(\"emitAssets\");\n              if (err) return this._done(err, compilation);\n              if (this.invalid) return this._done(null, compilation);\n              logger.time(\"emitRecords\");\n              this.compiler.emitRecords(err => {\n                logger.timeEnd(\"emitRecords\");\n                if (err) return this._done(err, compilation);\n                if (compilation.hooks.needAdditionalPass.call()) {\n                  compilation.needAdditionalPass = true;\n                  compilation.startTime = this.startTime;\n                  compilation.endTime = Date.now();\n                  logger.time(\"done hook\");\n                  const stats = new Stats(compilation);\n                  this.compiler.hooks.done.callAsync(stats, err => {\n                    logger.timeEnd(\"done hook\");\n                    if (err) return this._done(err, compilation);\n                    this.compiler.hooks.additionalPass.callAsync(err => {\n                      if (err) return this._done(err, compilation);\n                      this.compiler.compile(onCompiled);\n                    });\n                  });\n                  return;\n                }\n                return this._done(null, compilation);\n              });\n            });\n          });\n        };\n        this.compiler.compile(onCompiled);\n      });\n    };\n    run();\n  }\n\n  /**\r\n   * @param {Compilation} compilation the compilation\r\n   * @returns {Stats} the compilation stats\r\n   */\n  _getStats(compilation) {\n    const stats = new Stats(compilation);\n    return stats;\n  }\n\n  /**\r\n   * @param {Error=} err an optional error\r\n   * @param {Compilation=} compilation the compilation\r\n   * @returns {void}\r\n   */\n  _done(err, compilation) {\n    this.running = false;\n    const logger = compilation && compilation.getLogger(\"webpack.Watching\");\n    let stats = null;\n    const handleError = (err, cbs) => {\n      this.compiler.hooks.failed.call(err);\n      this.compiler.cache.beginIdle();\n      this.compiler.idle = true;\n      this.handler(err, stats);\n      if (!cbs) {\n        cbs = this.callbacks;\n        this.callbacks = [];\n      }\n      for (const cb of cbs) cb(err);\n    };\n    if (this.invalid && !this.suspended && !this.blocked && !(this._isBlocked() && (this.blocked = true))) {\n      if (compilation) {\n        logger.time(\"storeBuildDependencies\");\n        this.compiler.cache.storeBuildDependencies(compilation.buildDependencies, err => {\n          logger.timeEnd(\"storeBuildDependencies\");\n          if (err) return handleError(err);\n          this._go();\n        });\n      } else {\n        this._go();\n      }\n      return;\n    }\n    if (compilation) {\n      compilation.startTime = this.startTime;\n      compilation.endTime = Date.now();\n      stats = new Stats(compilation);\n    }\n    this.startTime = null;\n    if (err) return handleError(err);\n    const cbs = this.callbacks;\n    this.callbacks = [];\n    logger.time(\"done hook\");\n    this.compiler.hooks.done.callAsync(stats, err => {\n      logger.timeEnd(\"done hook\");\n      if (err) return handleError(err, cbs);\n      this.handler(null, stats);\n      logger.time(\"storeBuildDependencies\");\n      this.compiler.cache.storeBuildDependencies(compilation.buildDependencies, err => {\n        logger.timeEnd(\"storeBuildDependencies\");\n        if (err) return handleError(err, cbs);\n        logger.time(\"beginIdle\");\n        this.compiler.cache.beginIdle();\n        this.compiler.idle = true;\n        logger.timeEnd(\"beginIdle\");\n        process.nextTick(() => {\n          if (!this.closed) {\n            this.watch(compilation.fileDependencies, compilation.contextDependencies, compilation.missingDependencies);\n          }\n        });\n        for (const cb of cbs) cb(null);\n        this.compiler.hooks.afterDone.call(stats);\n      });\n    });\n  }\n\n  /**\r\n   * @param {Iterable<string>} files watched files\r\n   * @param {Iterable<string>} dirs watched directories\r\n   * @param {Iterable<string>} missing watched existence entries\r\n   * @returns {void}\r\n   */\n  watch(files, dirs, missing) {\n    this.pausedWatcher = null;\n    this.watcher = this.compiler.watchFileSystem.watch(files, dirs, missing, this.lastWatcherStartTime, this.watchOptions, (err, fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) => {\n      if (err) {\n        this.compiler.modifiedFiles = undefined;\n        this.compiler.removedFiles = undefined;\n        this.compiler.fileTimestamps = undefined;\n        this.compiler.contextTimestamps = undefined;\n        this.compiler.fsStartTime = undefined;\n        return this.handler(err);\n      }\n      this._invalidate(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles);\n      this._onChange();\n    }, (fileName, changeTime) => {\n      if (!this._invalidReported) {\n        this._invalidReported = true;\n        this.compiler.hooks.invalid.call(fileName, changeTime);\n      }\n      this._onInvalid();\n    });\n  }\n\n  /**\r\n   * @param {Callback<void>=} callback signals when the build has completed again\r\n   * @returns {void}\r\n   */\n  invalidate(callback) {\n    if (callback) {\n      this.callbacks.push(callback);\n    }\n    if (!this._invalidReported) {\n      this._invalidReported = true;\n      this.compiler.hooks.invalid.call(null, Date.now());\n    }\n    this._onChange();\n    this._invalidate();\n  }\n  _invalidate(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) {\n    if (this.suspended || this._isBlocked() && (this.blocked = true)) {\n      this._mergeWithCollected(changedFiles, removedFiles);\n      return;\n    }\n    if (this.running) {\n      this._mergeWithCollected(changedFiles, removedFiles);\n      this.invalid = true;\n    } else {\n      this._go(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles);\n    }\n  }\n  suspend() {\n    this.suspended = true;\n  }\n  resume() {\n    if (this.suspended) {\n      this.suspended = false;\n      this._invalidate();\n    }\n  }\n\n  /**\r\n   * @param {Callback<void>} callback signals when the watcher is closed\r\n   * @returns {void}\r\n   */\n  close(callback) {\n    if (this._closeCallbacks) {\n      if (callback) {\n        this._closeCallbacks.push(callback);\n      }\n      return;\n    }\n    const finalCallback = (err, compilation) => {\n      this.running = false;\n      this.compiler.running = false;\n      this.compiler.watching = undefined;\n      this.compiler.watchMode = false;\n      this.compiler.modifiedFiles = undefined;\n      this.compiler.removedFiles = undefined;\n      this.compiler.fileTimestamps = undefined;\n      this.compiler.contextTimestamps = undefined;\n      this.compiler.fsStartTime = undefined;\n      const shutdown = err => {\n        this.compiler.hooks.watchClose.call();\n        const closeCallbacks = this._closeCallbacks;\n        this._closeCallbacks = undefined;\n        for (const cb of closeCallbacks) cb(err);\n      };\n      if (compilation) {\n        const logger = compilation.getLogger(\"webpack.Watching\");\n        logger.time(\"storeBuildDependencies\");\n        this.compiler.cache.storeBuildDependencies(compilation.buildDependencies, err2 => {\n          logger.timeEnd(\"storeBuildDependencies\");\n          shutdown(err || err2);\n        });\n      } else {\n        shutdown(err);\n      }\n    };\n    this.closed = true;\n    if (this.watcher) {\n      this.watcher.close();\n      this.watcher = null;\n    }\n    if (this.pausedWatcher) {\n      this.pausedWatcher.close();\n      this.pausedWatcher = null;\n    }\n    this._closeCallbacks = [];\n    if (callback) {\n      this._closeCallbacks.push(callback);\n    }\n    if (this.running) {\n      this.invalid = true;\n      this._done = finalCallback;\n    } else {\n      finalCallback();\n    }\n  }\n}\nmodule.exports = Watching;","map":{"version":3,"names":["Stats","require","Watching","constructor","compiler","watchOptions","handler","startTime","invalid","callbacks","_closeCallbacks","undefined","closed","suspended","blocked","_isBlocked","_onChange","_onInvalid","aggregateTimeout","running","_initial","_invalidReported","_needRecords","watcher","pausedWatcher","_collectedChangedFiles","_collectedRemovedFiles","_done","bind","process","nextTick","_invalidate","_mergeWithCollected","changedFiles","removedFiles","Set","file","add","delete","_go","fileTimeInfoEntries","contextTimeInfoEntries","Date","now","lastWatcherStartTime","pause","fsStartTime","fileTimestamps","contextTimestamps","getInfo","changes","removals","getAggregatedChanges","getAggregatedRemovals","getFileTimeInfoEntries","getContextTimeInfoEntries","modifiedFiles","run","idle","cache","endIdle","err","readRecords","hooks","watchRun","callAsync","onCompiled","compilation","shouldEmit","call","logger","getLogger","time","emitAssets","timeEnd","emitRecords","needAdditionalPass","endTime","stats","done","additionalPass","compile","_getStats","handleError","cbs","failed","beginIdle","cb","storeBuildDependencies","buildDependencies","watch","fileDependencies","contextDependencies","missingDependencies","afterDone","files","dirs","missing","watchFileSystem","fileName","changeTime","invalidate","callback","push","suspend","resume","close","finalCallback","watching","watchMode","shutdown","watchClose","closeCallbacks","err2","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/Watching.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst Stats = require(\"./Stats\");\r\n\r\n/** @typedef {import(\"../declarations/WebpackOptions\").WatchOptions} WatchOptions */\r\n/** @typedef {import(\"./Compilation\")} Compilation */\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n/** @typedef {import(\"./FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\r\n\r\n/**\r\n * @template T\r\n * @callback Callback\r\n * @param {(Error | null)=} err\r\n * @param {T=} result\r\n */\r\n\r\nclass Watching {\r\n\t/**\r\n\t * @param {Compiler} compiler the compiler\r\n\t * @param {WatchOptions} watchOptions options\r\n\t * @param {Callback<Stats>} handler completion handler\r\n\t */\r\n\tconstructor(compiler, watchOptions, handler) {\r\n\t\tthis.startTime = null;\r\n\t\tthis.invalid = false;\r\n\t\tthis.handler = handler;\r\n\t\t/** @type {Callback<void>[]} */\r\n\t\tthis.callbacks = [];\r\n\t\t/** @type {Callback<void>[] | undefined} */\r\n\t\tthis._closeCallbacks = undefined;\r\n\t\tthis.closed = false;\r\n\t\tthis.suspended = false;\r\n\t\tthis.blocked = false;\r\n\t\tthis._isBlocked = () => false;\r\n\t\tthis._onChange = () => {};\r\n\t\tthis._onInvalid = () => {};\r\n\t\tif (typeof watchOptions === \"number\") {\r\n\t\t\tthis.watchOptions = {\r\n\t\t\t\taggregateTimeout: watchOptions\r\n\t\t\t};\r\n\t\t} else if (watchOptions && typeof watchOptions === \"object\") {\r\n\t\t\tthis.watchOptions = { ...watchOptions };\r\n\t\t} else {\r\n\t\t\tthis.watchOptions = {};\r\n\t\t}\r\n\t\tif (typeof this.watchOptions.aggregateTimeout !== \"number\") {\r\n\t\t\tthis.watchOptions.aggregateTimeout = 20;\r\n\t\t}\r\n\t\tthis.compiler = compiler;\r\n\t\tthis.running = false;\r\n\t\tthis._initial = true;\r\n\t\tthis._invalidReported = true;\r\n\t\tthis._needRecords = true;\r\n\t\tthis.watcher = undefined;\r\n\t\tthis.pausedWatcher = undefined;\r\n\t\t/** @type {Set<string>} */\r\n\t\tthis._collectedChangedFiles = undefined;\r\n\t\t/** @type {Set<string>} */\r\n\t\tthis._collectedRemovedFiles = undefined;\r\n\t\tthis._done = this._done.bind(this);\r\n\t\tprocess.nextTick(() => {\r\n\t\t\tif (this._initial) this._invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ReadonlySet<string>} changedFiles changed files\r\n\t * @param {ReadonlySet<string>} removedFiles removed files\r\n\t */\r\n\t_mergeWithCollected(changedFiles, removedFiles) {\r\n\t\tif (!changedFiles) return;\r\n\t\tif (!this._collectedChangedFiles) {\r\n\t\t\tthis._collectedChangedFiles = new Set(changedFiles);\r\n\t\t\tthis._collectedRemovedFiles = new Set(removedFiles);\r\n\t\t} else {\r\n\t\t\tfor (const file of changedFiles) {\r\n\t\t\t\tthis._collectedChangedFiles.add(file);\r\n\t\t\t\tthis._collectedRemovedFiles.delete(file);\r\n\t\t\t}\r\n\t\t\tfor (const file of removedFiles) {\r\n\t\t\t\tthis._collectedChangedFiles.delete(file);\r\n\t\t\t\tthis._collectedRemovedFiles.add(file);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} fileTimeInfoEntries info for files\r\n\t * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} contextTimeInfoEntries info for directories\r\n\t * @param {ReadonlySet<string>=} changedFiles changed files\r\n\t * @param {ReadonlySet<string>=} removedFiles removed files\r\n\t * @returns {void}\r\n\t */\r\n\t_go(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) {\r\n\t\tthis._initial = false;\r\n\t\tif (this.startTime === null) this.startTime = Date.now();\r\n\t\tthis.running = true;\r\n\t\tif (this.watcher) {\r\n\t\t\tthis.pausedWatcher = this.watcher;\r\n\t\t\tthis.lastWatcherStartTime = Date.now();\r\n\t\t\tthis.watcher.pause();\r\n\t\t\tthis.watcher = null;\r\n\t\t} else if (!this.lastWatcherStartTime) {\r\n\t\t\tthis.lastWatcherStartTime = Date.now();\r\n\t\t}\r\n\t\tthis.compiler.fsStartTime = Date.now();\r\n\t\tif (\r\n\t\t\tchangedFiles &&\r\n\t\t\tremovedFiles &&\r\n\t\t\tfileTimeInfoEntries &&\r\n\t\t\tcontextTimeInfoEntries\r\n\t\t) {\r\n\t\t\tthis._mergeWithCollected(changedFiles, removedFiles);\r\n\t\t\tthis.compiler.fileTimestamps = fileTimeInfoEntries;\r\n\t\t\tthis.compiler.contextTimestamps = contextTimeInfoEntries;\r\n\t\t} else if (this.pausedWatcher) {\r\n\t\t\tif (this.pausedWatcher.getInfo) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tchanges,\r\n\t\t\t\t\tremovals,\r\n\t\t\t\t\tfileTimeInfoEntries,\r\n\t\t\t\t\tcontextTimeInfoEntries\r\n\t\t\t\t} = this.pausedWatcher.getInfo();\r\n\t\t\t\tthis._mergeWithCollected(changes, removals);\r\n\t\t\t\tthis.compiler.fileTimestamps = fileTimeInfoEntries;\r\n\t\t\t\tthis.compiler.contextTimestamps = contextTimeInfoEntries;\r\n\t\t\t} else {\r\n\t\t\t\tthis._mergeWithCollected(\r\n\t\t\t\t\tthis.pausedWatcher.getAggregatedChanges &&\r\n\t\t\t\t\t\tthis.pausedWatcher.getAggregatedChanges(),\r\n\t\t\t\t\tthis.pausedWatcher.getAggregatedRemovals &&\r\n\t\t\t\t\t\tthis.pausedWatcher.getAggregatedRemovals()\r\n\t\t\t\t);\r\n\t\t\t\tthis.compiler.fileTimestamps =\r\n\t\t\t\t\tthis.pausedWatcher.getFileTimeInfoEntries();\r\n\t\t\t\tthis.compiler.contextTimestamps =\r\n\t\t\t\t\tthis.pausedWatcher.getContextTimeInfoEntries();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.compiler.modifiedFiles = this._collectedChangedFiles;\r\n\t\tthis._collectedChangedFiles = undefined;\r\n\t\tthis.compiler.removedFiles = this._collectedRemovedFiles;\r\n\t\tthis._collectedRemovedFiles = undefined;\r\n\r\n\t\tconst run = () => {\r\n\t\t\tif (this.compiler.idle) {\r\n\t\t\t\treturn this.compiler.cache.endIdle(err => {\r\n\t\t\t\t\tif (err) return this._done(err);\r\n\t\t\t\t\tthis.compiler.idle = false;\r\n\t\t\t\t\trun();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this._needRecords) {\r\n\t\t\t\treturn this.compiler.readRecords(err => {\r\n\t\t\t\t\tif (err) return this._done(err);\r\n\r\n\t\t\t\t\tthis._needRecords = false;\r\n\t\t\t\t\trun();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.invalid = false;\r\n\t\t\tthis._invalidReported = false;\r\n\t\t\tthis.compiler.hooks.watchRun.callAsync(this.compiler, err => {\r\n\t\t\t\tif (err) return this._done(err);\r\n\t\t\t\tconst onCompiled = (err, compilation) => {\r\n\t\t\t\t\tif (err) return this._done(err, compilation);\r\n\t\t\t\t\tif (this.invalid) return this._done(null, compilation);\r\n\r\n\t\t\t\t\tif (this.compiler.hooks.shouldEmit.call(compilation) === false) {\r\n\t\t\t\t\t\treturn this._done(null, compilation);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprocess.nextTick(() => {\r\n\t\t\t\t\t\tconst logger = compilation.getLogger(\"webpack.Compiler\");\r\n\t\t\t\t\t\tlogger.time(\"emitAssets\");\r\n\t\t\t\t\t\tthis.compiler.emitAssets(compilation, err => {\r\n\t\t\t\t\t\t\tlogger.timeEnd(\"emitAssets\");\r\n\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\r\n\t\t\t\t\t\t\tif (this.invalid) return this._done(null, compilation);\r\n\r\n\t\t\t\t\t\t\tlogger.time(\"emitRecords\");\r\n\t\t\t\t\t\t\tthis.compiler.emitRecords(err => {\r\n\t\t\t\t\t\t\t\tlogger.timeEnd(\"emitRecords\");\r\n\t\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\r\n\r\n\t\t\t\t\t\t\t\tif (compilation.hooks.needAdditionalPass.call()) {\r\n\t\t\t\t\t\t\t\t\tcompilation.needAdditionalPass = true;\r\n\r\n\t\t\t\t\t\t\t\t\tcompilation.startTime = this.startTime;\r\n\t\t\t\t\t\t\t\t\tcompilation.endTime = Date.now();\r\n\t\t\t\t\t\t\t\t\tlogger.time(\"done hook\");\r\n\t\t\t\t\t\t\t\t\tconst stats = new Stats(compilation);\r\n\t\t\t\t\t\t\t\t\tthis.compiler.hooks.done.callAsync(stats, err => {\r\n\t\t\t\t\t\t\t\t\t\tlogger.timeEnd(\"done hook\");\r\n\t\t\t\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.compiler.hooks.additionalPass.callAsync(err => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\r\n\t\t\t\t\t\t\t\t\t\t\tthis.compiler.compile(onCompiled);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn this._done(null, compilation);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tthis.compiler.compile(onCompiled);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\trun();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Compilation} compilation the compilation\r\n\t * @returns {Stats} the compilation stats\r\n\t */\r\n\t_getStats(compilation) {\r\n\t\tconst stats = new Stats(compilation);\r\n\t\treturn stats;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Error=} err an optional error\r\n\t * @param {Compilation=} compilation the compilation\r\n\t * @returns {void}\r\n\t */\r\n\t_done(err, compilation) {\r\n\t\tthis.running = false;\r\n\r\n\t\tconst logger = compilation && compilation.getLogger(\"webpack.Watching\");\r\n\r\n\t\tlet stats = null;\r\n\r\n\t\tconst handleError = (err, cbs) => {\r\n\t\t\tthis.compiler.hooks.failed.call(err);\r\n\t\t\tthis.compiler.cache.beginIdle();\r\n\t\t\tthis.compiler.idle = true;\r\n\t\t\tthis.handler(err, stats);\r\n\t\t\tif (!cbs) {\r\n\t\t\t\tcbs = this.callbacks;\r\n\t\t\t\tthis.callbacks = [];\r\n\t\t\t}\r\n\t\t\tfor (const cb of cbs) cb(err);\r\n\t\t};\r\n\r\n\t\tif (\r\n\t\t\tthis.invalid &&\r\n\t\t\t!this.suspended &&\r\n\t\t\t!this.blocked &&\r\n\t\t\t!(this._isBlocked() && (this.blocked = true))\r\n\t\t) {\r\n\t\t\tif (compilation) {\r\n\t\t\t\tlogger.time(\"storeBuildDependencies\");\r\n\t\t\t\tthis.compiler.cache.storeBuildDependencies(\r\n\t\t\t\t\tcompilation.buildDependencies,\r\n\t\t\t\t\terr => {\r\n\t\t\t\t\t\tlogger.timeEnd(\"storeBuildDependencies\");\r\n\t\t\t\t\t\tif (err) return handleError(err);\r\n\t\t\t\t\t\tthis._go();\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis._go();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (compilation) {\r\n\t\t\tcompilation.startTime = this.startTime;\r\n\t\t\tcompilation.endTime = Date.now();\r\n\t\t\tstats = new Stats(compilation);\r\n\t\t}\r\n\t\tthis.startTime = null;\r\n\t\tif (err) return handleError(err);\r\n\r\n\t\tconst cbs = this.callbacks;\r\n\t\tthis.callbacks = [];\r\n\t\tlogger.time(\"done hook\");\r\n\t\tthis.compiler.hooks.done.callAsync(stats, err => {\r\n\t\t\tlogger.timeEnd(\"done hook\");\r\n\t\t\tif (err) return handleError(err, cbs);\r\n\t\t\tthis.handler(null, stats);\r\n\t\t\tlogger.time(\"storeBuildDependencies\");\r\n\t\t\tthis.compiler.cache.storeBuildDependencies(\r\n\t\t\t\tcompilation.buildDependencies,\r\n\t\t\t\terr => {\r\n\t\t\t\t\tlogger.timeEnd(\"storeBuildDependencies\");\r\n\t\t\t\t\tif (err) return handleError(err, cbs);\r\n\t\t\t\t\tlogger.time(\"beginIdle\");\r\n\t\t\t\t\tthis.compiler.cache.beginIdle();\r\n\t\t\t\t\tthis.compiler.idle = true;\r\n\t\t\t\t\tlogger.timeEnd(\"beginIdle\");\r\n\t\t\t\t\tprocess.nextTick(() => {\r\n\t\t\t\t\t\tif (!this.closed) {\r\n\t\t\t\t\t\t\tthis.watch(\r\n\t\t\t\t\t\t\t\tcompilation.fileDependencies,\r\n\t\t\t\t\t\t\t\tcompilation.contextDependencies,\r\n\t\t\t\t\t\t\t\tcompilation.missingDependencies\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tfor (const cb of cbs) cb(null);\r\n\t\t\t\t\tthis.compiler.hooks.afterDone.call(stats);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Iterable<string>} files watched files\r\n\t * @param {Iterable<string>} dirs watched directories\r\n\t * @param {Iterable<string>} missing watched existence entries\r\n\t * @returns {void}\r\n\t */\r\n\twatch(files, dirs, missing) {\r\n\t\tthis.pausedWatcher = null;\r\n\t\tthis.watcher = this.compiler.watchFileSystem.watch(\r\n\t\t\tfiles,\r\n\t\t\tdirs,\r\n\t\t\tmissing,\r\n\t\t\tthis.lastWatcherStartTime,\r\n\t\t\tthis.watchOptions,\r\n\t\t\t(\r\n\t\t\t\terr,\r\n\t\t\t\tfileTimeInfoEntries,\r\n\t\t\t\tcontextTimeInfoEntries,\r\n\t\t\t\tchangedFiles,\r\n\t\t\t\tremovedFiles\r\n\t\t\t) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tthis.compiler.modifiedFiles = undefined;\r\n\t\t\t\t\tthis.compiler.removedFiles = undefined;\r\n\t\t\t\t\tthis.compiler.fileTimestamps = undefined;\r\n\t\t\t\t\tthis.compiler.contextTimestamps = undefined;\r\n\t\t\t\t\tthis.compiler.fsStartTime = undefined;\r\n\t\t\t\t\treturn this.handler(err);\r\n\t\t\t\t}\r\n\t\t\t\tthis._invalidate(\r\n\t\t\t\t\tfileTimeInfoEntries,\r\n\t\t\t\t\tcontextTimeInfoEntries,\r\n\t\t\t\t\tchangedFiles,\r\n\t\t\t\t\tremovedFiles\r\n\t\t\t\t);\r\n\t\t\t\tthis._onChange();\r\n\t\t\t},\r\n\t\t\t(fileName, changeTime) => {\r\n\t\t\t\tif (!this._invalidReported) {\r\n\t\t\t\t\tthis._invalidReported = true;\r\n\t\t\t\t\tthis.compiler.hooks.invalid.call(fileName, changeTime);\r\n\t\t\t\t}\r\n\t\t\t\tthis._onInvalid();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Callback<void>=} callback signals when the build has completed again\r\n\t * @returns {void}\r\n\t */\r\n\tinvalidate(callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis.callbacks.push(callback);\r\n\t\t}\r\n\t\tif (!this._invalidReported) {\r\n\t\t\tthis._invalidReported = true;\r\n\t\t\tthis.compiler.hooks.invalid.call(null, Date.now());\r\n\t\t}\r\n\t\tthis._onChange();\r\n\t\tthis._invalidate();\r\n\t}\r\n\r\n\t_invalidate(\r\n\t\tfileTimeInfoEntries,\r\n\t\tcontextTimeInfoEntries,\r\n\t\tchangedFiles,\r\n\t\tremovedFiles\r\n\t) {\r\n\t\tif (this.suspended || (this._isBlocked() && (this.blocked = true))) {\r\n\t\t\tthis._mergeWithCollected(changedFiles, removedFiles);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.running) {\r\n\t\t\tthis._mergeWithCollected(changedFiles, removedFiles);\r\n\t\t\tthis.invalid = true;\r\n\t\t} else {\r\n\t\t\tthis._go(\r\n\t\t\t\tfileTimeInfoEntries,\r\n\t\t\t\tcontextTimeInfoEntries,\r\n\t\t\t\tchangedFiles,\r\n\t\t\t\tremovedFiles\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tsuspend() {\r\n\t\tthis.suspended = true;\r\n\t}\r\n\r\n\tresume() {\r\n\t\tif (this.suspended) {\r\n\t\t\tthis.suspended = false;\r\n\t\t\tthis._invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Callback<void>} callback signals when the watcher is closed\r\n\t * @returns {void}\r\n\t */\r\n\tclose(callback) {\r\n\t\tif (this._closeCallbacks) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tthis._closeCallbacks.push(callback);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst finalCallback = (err, compilation) => {\r\n\t\t\tthis.running = false;\r\n\t\t\tthis.compiler.running = false;\r\n\t\t\tthis.compiler.watching = undefined;\r\n\t\t\tthis.compiler.watchMode = false;\r\n\t\t\tthis.compiler.modifiedFiles = undefined;\r\n\t\t\tthis.compiler.removedFiles = undefined;\r\n\t\t\tthis.compiler.fileTimestamps = undefined;\r\n\t\t\tthis.compiler.contextTimestamps = undefined;\r\n\t\t\tthis.compiler.fsStartTime = undefined;\r\n\t\t\tconst shutdown = err => {\r\n\t\t\t\tthis.compiler.hooks.watchClose.call();\r\n\t\t\t\tconst closeCallbacks = this._closeCallbacks;\r\n\t\t\t\tthis._closeCallbacks = undefined;\r\n\t\t\t\tfor (const cb of closeCallbacks) cb(err);\r\n\t\t\t};\r\n\t\t\tif (compilation) {\r\n\t\t\t\tconst logger = compilation.getLogger(\"webpack.Watching\");\r\n\t\t\t\tlogger.time(\"storeBuildDependencies\");\r\n\t\t\t\tthis.compiler.cache.storeBuildDependencies(\r\n\t\t\t\t\tcompilation.buildDependencies,\r\n\t\t\t\t\terr2 => {\r\n\t\t\t\t\t\tlogger.timeEnd(\"storeBuildDependencies\");\r\n\t\t\t\t\t\tshutdown(err || err2);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tshutdown(err);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.closed = true;\r\n\t\tif (this.watcher) {\r\n\t\t\tthis.watcher.close();\r\n\t\t\tthis.watcher = null;\r\n\t\t}\r\n\t\tif (this.pausedWatcher) {\r\n\t\t\tthis.pausedWatcher.close();\r\n\t\t\tthis.pausedWatcher = null;\r\n\t\t}\r\n\t\tthis._closeCallbacks = [];\r\n\t\tif (callback) {\r\n\t\t\tthis._closeCallbacks.push(callback);\r\n\t\t}\r\n\t\tif (this.running) {\r\n\t\t\tthis.invalid = true;\r\n\t\t\tthis._done = finalCallback;\r\n\t\t} else {\r\n\t\t\tfinalCallback();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = Watching;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}