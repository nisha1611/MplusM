{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractCursor = exports.MongoWriteConcernError = exports.MongoUnexpectedServerResponseError = exports.MongoTransactionError = exports.MongoTopologyClosedError = exports.MongoTailableCursorError = exports.MongoSystemError = exports.MongoServerSelectionError = exports.MongoServerError = exports.MongoServerClosedError = exports.MongoRuntimeError = exports.MongoParseError = exports.MongoNotConnectedError = exports.MongoNetworkTimeoutError = exports.MongoNetworkError = exports.MongoMissingDependencyError = exports.MongoMissingCredentialsError = exports.MongoKerberosError = exports.MongoInvalidArgumentError = exports.MongoGridFSStreamError = exports.MongoGridFSChunkError = exports.MongoExpiredSessionError = exports.MongoError = exports.MongoDriverError = exports.MongoDecompressionError = exports.MongoCursorInUseError = exports.MongoCursorExhaustedError = exports.MongoCompatibilityError = exports.MongoChangeStreamError = exports.MongoBatchReExecutionError = exports.MongoAWSError = exports.MongoAPIError = exports.MongoBulkWriteError = exports.ObjectID = exports.ChangeStreamCursor = exports.Timestamp = exports.ObjectId = exports.MinKey = exports.MaxKey = exports.Map = exports.Long = exports.Int32 = exports.Double = exports.Decimal128 = exports.DBRef = exports.Code = exports.BSONSymbol = exports.BSONRegExp = exports.Binary = exports.BSON = void 0;\nexports.ConnectionPoolCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolClearedEvent = exports.ConnectionCreatedEvent = exports.ConnectionClosedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckedInEvent = exports.CommandSucceededEvent = exports.CommandStartedEvent = exports.CommandFailedEvent = exports.WriteConcern = exports.ReadPreference = exports.ReadConcern = exports.TopologyType = exports.ServerType = exports.ReadPreferenceMode = exports.ReadConcernLevel = exports.ProfilingLevel = exports.ReturnDocument = exports.BSONType = exports.ServerApiVersion = exports.LoggerLevel = exports.ExplainVerbosity = exports.MongoErrorLabel = exports.AutoEncryptionLoggerLevel = exports.CURSOR_FLAGS = exports.Compressor = exports.AuthMechanism = exports.GSSAPICanonicalizationValue = exports.BatchType = exports.Promise = exports.UnorderedBulkOperation = exports.OrderedBulkOperation = exports.MongoClient = exports.Logger = exports.ListIndexesCursor = exports.ListCollectionsCursor = exports.GridFSBucketWriteStream = exports.GridFSBucketReadStream = exports.GridFSBucket = exports.FindCursor = exports.Db = exports.Collection = exports.ClientSession = exports.ChangeStream = exports.CancellationToken = exports.AggregationCursor = exports.Admin = void 0;\nexports.SrvPollingEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.TopologyClosedEvent = exports.ServerOpeningEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = exports.ServerHeartbeatFailedEvent = exports.ServerDescriptionChangedEvent = exports.ServerClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionPoolReadyEvent = exports.ConnectionPoolMonitoringEvent = void 0;\nconst admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"Admin\", {\n  enumerable: true,\n  get: function () {\n    return admin_1.Admin;\n  }\n});\nconst bson_1 = require(\"./bson\");\nconst ordered_1 = require(\"./bulk/ordered\");\nObject.defineProperty(exports, \"OrderedBulkOperation\", {\n  enumerable: true,\n  get: function () {\n    return ordered_1.OrderedBulkOperation;\n  }\n});\nconst unordered_1 = require(\"./bulk/unordered\");\nObject.defineProperty(exports, \"UnorderedBulkOperation\", {\n  enumerable: true,\n  get: function () {\n    return unordered_1.UnorderedBulkOperation;\n  }\n});\nconst change_stream_1 = require(\"./change_stream\");\nObject.defineProperty(exports, \"ChangeStream\", {\n  enumerable: true,\n  get: function () {\n    return change_stream_1.ChangeStream;\n  }\n});\nconst collection_1 = require(\"./collection\");\nObject.defineProperty(exports, \"Collection\", {\n  enumerable: true,\n  get: function () {\n    return collection_1.Collection;\n  }\n});\nconst abstract_cursor_1 = require(\"./cursor/abstract_cursor\");\nObject.defineProperty(exports, \"AbstractCursor\", {\n  enumerable: true,\n  get: function () {\n    return abstract_cursor_1.AbstractCursor;\n  }\n});\nconst aggregation_cursor_1 = require(\"./cursor/aggregation_cursor\");\nObject.defineProperty(exports, \"AggregationCursor\", {\n  enumerable: true,\n  get: function () {\n    return aggregation_cursor_1.AggregationCursor;\n  }\n});\nconst find_cursor_1 = require(\"./cursor/find_cursor\");\nObject.defineProperty(exports, \"FindCursor\", {\n  enumerable: true,\n  get: function () {\n    return find_cursor_1.FindCursor;\n  }\n});\nconst list_collections_cursor_1 = require(\"./cursor/list_collections_cursor\");\nObject.defineProperty(exports, \"ListCollectionsCursor\", {\n  enumerable: true,\n  get: function () {\n    return list_collections_cursor_1.ListCollectionsCursor;\n  }\n});\nconst list_indexes_cursor_1 = require(\"./cursor/list_indexes_cursor\");\nObject.defineProperty(exports, \"ListIndexesCursor\", {\n  enumerable: true,\n  get: function () {\n    return list_indexes_cursor_1.ListIndexesCursor;\n  }\n});\nconst db_1 = require(\"./db\");\nObject.defineProperty(exports, \"Db\", {\n  enumerable: true,\n  get: function () {\n    return db_1.Db;\n  }\n});\nconst gridfs_1 = require(\"./gridfs\");\nObject.defineProperty(exports, \"GridFSBucket\", {\n  enumerable: true,\n  get: function () {\n    return gridfs_1.GridFSBucket;\n  }\n});\nconst download_1 = require(\"./gridfs/download\");\nObject.defineProperty(exports, \"GridFSBucketReadStream\", {\n  enumerable: true,\n  get: function () {\n    return download_1.GridFSBucketReadStream;\n  }\n});\nconst upload_1 = require(\"./gridfs/upload\");\nObject.defineProperty(exports, \"GridFSBucketWriteStream\", {\n  enumerable: true,\n  get: function () {\n    return upload_1.GridFSBucketWriteStream;\n  }\n});\nconst logger_1 = require(\"./logger\");\nObject.defineProperty(exports, \"Logger\", {\n  enumerable: true,\n  get: function () {\n    return logger_1.Logger;\n  }\n});\nconst mongo_client_1 = require(\"./mongo_client\");\nObject.defineProperty(exports, \"MongoClient\", {\n  enumerable: true,\n  get: function () {\n    return mongo_client_1.MongoClient;\n  }\n});\nconst mongo_types_1 = require(\"./mongo_types\");\nObject.defineProperty(exports, \"CancellationToken\", {\n  enumerable: true,\n  get: function () {\n    return mongo_types_1.CancellationToken;\n  }\n});\nconst promise_provider_1 = require(\"./promise_provider\");\nObject.defineProperty(exports, \"Promise\", {\n  enumerable: true,\n  get: function () {\n    return promise_provider_1.PromiseProvider;\n  }\n});\nconst sessions_1 = require(\"./sessions\");\nObject.defineProperty(exports, \"ClientSession\", {\n  enumerable: true,\n  get: function () {\n    return sessions_1.ClientSession;\n  }\n});\n/** @internal */\nvar bson_2 = require(\"./bson\");\nObject.defineProperty(exports, \"BSON\", {\n  enumerable: true,\n  get: function () {\n    return bson_2.BSON;\n  }\n});\nvar bson_3 = require(\"./bson\");\nObject.defineProperty(exports, \"Binary\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Binary;\n  }\n});\nObject.defineProperty(exports, \"BSONRegExp\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.BSONRegExp;\n  }\n});\nObject.defineProperty(exports, \"BSONSymbol\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.BSONSymbol;\n  }\n});\nObject.defineProperty(exports, \"Code\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Code;\n  }\n});\nObject.defineProperty(exports, \"DBRef\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.DBRef;\n  }\n});\nObject.defineProperty(exports, \"Decimal128\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Decimal128;\n  }\n});\nObject.defineProperty(exports, \"Double\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Double;\n  }\n});\nObject.defineProperty(exports, \"Int32\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Int32;\n  }\n});\nObject.defineProperty(exports, \"Long\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Long;\n  }\n});\nObject.defineProperty(exports, \"Map\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Map;\n  }\n});\nObject.defineProperty(exports, \"MaxKey\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.MaxKey;\n  }\n});\nObject.defineProperty(exports, \"MinKey\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.MinKey;\n  }\n});\nObject.defineProperty(exports, \"ObjectId\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.ObjectId;\n  }\n});\nObject.defineProperty(exports, \"Timestamp\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Timestamp;\n  }\n});\nvar change_stream_cursor_1 = require(\"./cursor/change_stream_cursor\");\nObject.defineProperty(exports, \"ChangeStreamCursor\", {\n  enumerable: true,\n  get: function () {\n    return change_stream_cursor_1.ChangeStreamCursor;\n  }\n});\n/**\r\n * @public\r\n * @deprecated Please use `ObjectId`\r\n */\nexports.ObjectID = bson_1.ObjectId;\nvar common_1 = require(\"./bulk/common\");\nObject.defineProperty(exports, \"MongoBulkWriteError\", {\n  enumerable: true,\n  get: function () {\n    return common_1.MongoBulkWriteError;\n  }\n});\nvar error_1 = require(\"./error\");\nObject.defineProperty(exports, \"MongoAPIError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoAPIError;\n  }\n});\nObject.defineProperty(exports, \"MongoAWSError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoAWSError;\n  }\n});\nObject.defineProperty(exports, \"MongoBatchReExecutionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoBatchReExecutionError;\n  }\n});\nObject.defineProperty(exports, \"MongoChangeStreamError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoChangeStreamError;\n  }\n});\nObject.defineProperty(exports, \"MongoCompatibilityError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoCompatibilityError;\n  }\n});\nObject.defineProperty(exports, \"MongoCursorExhaustedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoCursorExhaustedError;\n  }\n});\nObject.defineProperty(exports, \"MongoCursorInUseError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoCursorInUseError;\n  }\n});\nObject.defineProperty(exports, \"MongoDecompressionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoDecompressionError;\n  }\n});\nObject.defineProperty(exports, \"MongoDriverError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoDriverError;\n  }\n});\nObject.defineProperty(exports, \"MongoError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoError;\n  }\n});\nObject.defineProperty(exports, \"MongoExpiredSessionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoExpiredSessionError;\n  }\n});\nObject.defineProperty(exports, \"MongoGridFSChunkError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoGridFSChunkError;\n  }\n});\nObject.defineProperty(exports, \"MongoGridFSStreamError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoGridFSStreamError;\n  }\n});\nObject.defineProperty(exports, \"MongoInvalidArgumentError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoInvalidArgumentError;\n  }\n});\nObject.defineProperty(exports, \"MongoKerberosError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoKerberosError;\n  }\n});\nObject.defineProperty(exports, \"MongoMissingCredentialsError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoMissingCredentialsError;\n  }\n});\nObject.defineProperty(exports, \"MongoMissingDependencyError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoMissingDependencyError;\n  }\n});\nObject.defineProperty(exports, \"MongoNetworkError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoNetworkError;\n  }\n});\nObject.defineProperty(exports, \"MongoNetworkTimeoutError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoNetworkTimeoutError;\n  }\n});\nObject.defineProperty(exports, \"MongoNotConnectedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoNotConnectedError;\n  }\n});\nObject.defineProperty(exports, \"MongoParseError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoParseError;\n  }\n});\nObject.defineProperty(exports, \"MongoRuntimeError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoRuntimeError;\n  }\n});\nObject.defineProperty(exports, \"MongoServerClosedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoServerClosedError;\n  }\n});\nObject.defineProperty(exports, \"MongoServerError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoServerError;\n  }\n});\nObject.defineProperty(exports, \"MongoServerSelectionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoServerSelectionError;\n  }\n});\nObject.defineProperty(exports, \"MongoSystemError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoSystemError;\n  }\n});\nObject.defineProperty(exports, \"MongoTailableCursorError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoTailableCursorError;\n  }\n});\nObject.defineProperty(exports, \"MongoTopologyClosedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoTopologyClosedError;\n  }\n});\nObject.defineProperty(exports, \"MongoTransactionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoTransactionError;\n  }\n});\nObject.defineProperty(exports, \"MongoUnexpectedServerResponseError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoUnexpectedServerResponseError;\n  }\n});\nObject.defineProperty(exports, \"MongoWriteConcernError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoWriteConcernError;\n  }\n});\n// enums\nvar common_2 = require(\"./bulk/common\");\nObject.defineProperty(exports, \"BatchType\", {\n  enumerable: true,\n  get: function () {\n    return common_2.BatchType;\n  }\n});\nvar gssapi_1 = require(\"./cmap/auth/gssapi\");\nObject.defineProperty(exports, \"GSSAPICanonicalizationValue\", {\n  enumerable: true,\n  get: function () {\n    return gssapi_1.GSSAPICanonicalizationValue;\n  }\n});\nvar providers_1 = require(\"./cmap/auth/providers\");\nObject.defineProperty(exports, \"AuthMechanism\", {\n  enumerable: true,\n  get: function () {\n    return providers_1.AuthMechanism;\n  }\n});\nvar compression_1 = require(\"./cmap/wire_protocol/compression\");\nObject.defineProperty(exports, \"Compressor\", {\n  enumerable: true,\n  get: function () {\n    return compression_1.Compressor;\n  }\n});\nvar abstract_cursor_2 = require(\"./cursor/abstract_cursor\");\nObject.defineProperty(exports, \"CURSOR_FLAGS\", {\n  enumerable: true,\n  get: function () {\n    return abstract_cursor_2.CURSOR_FLAGS;\n  }\n});\nvar deps_1 = require(\"./deps\");\nObject.defineProperty(exports, \"AutoEncryptionLoggerLevel\", {\n  enumerable: true,\n  get: function () {\n    return deps_1.AutoEncryptionLoggerLevel;\n  }\n});\nvar error_2 = require(\"./error\");\nObject.defineProperty(exports, \"MongoErrorLabel\", {\n  enumerable: true,\n  get: function () {\n    return error_2.MongoErrorLabel;\n  }\n});\nvar explain_1 = require(\"./explain\");\nObject.defineProperty(exports, \"ExplainVerbosity\", {\n  enumerable: true,\n  get: function () {\n    return explain_1.ExplainVerbosity;\n  }\n});\nvar logger_2 = require(\"./logger\");\nObject.defineProperty(exports, \"LoggerLevel\", {\n  enumerable: true,\n  get: function () {\n    return logger_2.LoggerLevel;\n  }\n});\nvar mongo_client_2 = require(\"./mongo_client\");\nObject.defineProperty(exports, \"ServerApiVersion\", {\n  enumerable: true,\n  get: function () {\n    return mongo_client_2.ServerApiVersion;\n  }\n});\nvar mongo_types_2 = require(\"./mongo_types\");\nObject.defineProperty(exports, \"BSONType\", {\n  enumerable: true,\n  get: function () {\n    return mongo_types_2.BSONType;\n  }\n});\nvar find_and_modify_1 = require(\"./operations/find_and_modify\");\nObject.defineProperty(exports, \"ReturnDocument\", {\n  enumerable: true,\n  get: function () {\n    return find_and_modify_1.ReturnDocument;\n  }\n});\nvar set_profiling_level_1 = require(\"./operations/set_profiling_level\");\nObject.defineProperty(exports, \"ProfilingLevel\", {\n  enumerable: true,\n  get: function () {\n    return set_profiling_level_1.ProfilingLevel;\n  }\n});\nvar read_concern_1 = require(\"./read_concern\");\nObject.defineProperty(exports, \"ReadConcernLevel\", {\n  enumerable: true,\n  get: function () {\n    return read_concern_1.ReadConcernLevel;\n  }\n});\nvar read_preference_1 = require(\"./read_preference\");\nObject.defineProperty(exports, \"ReadPreferenceMode\", {\n  enumerable: true,\n  get: function () {\n    return read_preference_1.ReadPreferenceMode;\n  }\n});\nvar common_3 = require(\"./sdam/common\");\nObject.defineProperty(exports, \"ServerType\", {\n  enumerable: true,\n  get: function () {\n    return common_3.ServerType;\n  }\n});\nObject.defineProperty(exports, \"TopologyType\", {\n  enumerable: true,\n  get: function () {\n    return common_3.TopologyType;\n  }\n});\n// Helper classes\nvar read_concern_2 = require(\"./read_concern\");\nObject.defineProperty(exports, \"ReadConcern\", {\n  enumerable: true,\n  get: function () {\n    return read_concern_2.ReadConcern;\n  }\n});\nvar read_preference_2 = require(\"./read_preference\");\nObject.defineProperty(exports, \"ReadPreference\", {\n  enumerable: true,\n  get: function () {\n    return read_preference_2.ReadPreference;\n  }\n});\nvar write_concern_1 = require(\"./write_concern\");\nObject.defineProperty(exports, \"WriteConcern\", {\n  enumerable: true,\n  get: function () {\n    return write_concern_1.WriteConcern;\n  }\n});\n// events\nvar command_monitoring_events_1 = require(\"./cmap/command_monitoring_events\");\nObject.defineProperty(exports, \"CommandFailedEvent\", {\n  enumerable: true,\n  get: function () {\n    return command_monitoring_events_1.CommandFailedEvent;\n  }\n});\nObject.defineProperty(exports, \"CommandStartedEvent\", {\n  enumerable: true,\n  get: function () {\n    return command_monitoring_events_1.CommandStartedEvent;\n  }\n});\nObject.defineProperty(exports, \"CommandSucceededEvent\", {\n  enumerable: true,\n  get: function () {\n    return command_monitoring_events_1.CommandSucceededEvent;\n  }\n});\nvar connection_pool_events_1 = require(\"./cmap/connection_pool_events\");\nObject.defineProperty(exports, \"ConnectionCheckedInEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckedInEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCheckedOutEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckedOutEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCheckOutFailedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckOutFailedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCheckOutStartedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckOutStartedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCreatedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCreatedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolClearedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolClearedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolCreatedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolCreatedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolMonitoringEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolMonitoringEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolReadyEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolReadyEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionReadyEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionReadyEvent;\n  }\n});\nvar events_1 = require(\"./sdam/events\");\nObject.defineProperty(exports, \"ServerClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerDescriptionChangedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerDescriptionChangedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerHeartbeatFailedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerHeartbeatFailedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerHeartbeatStartedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerHeartbeatStartedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerHeartbeatSucceededEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerHeartbeatSucceededEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerOpeningEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerOpeningEvent;\n  }\n});\nObject.defineProperty(exports, \"TopologyClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.TopologyClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"TopologyDescriptionChangedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.TopologyDescriptionChangedEvent;\n  }\n});\nObject.defineProperty(exports, \"TopologyOpeningEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.TopologyOpeningEvent;\n  }\n});\nvar srv_polling_1 = require(\"./sdam/srv_polling\");\nObject.defineProperty(exports, \"SrvPollingEvent\", {\n  enumerable: true,\n  get: function () {\n    return srv_polling_1.SrvPollingEvent;\n  }\n});","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","admin_1","ordered_1","unordered_1","change_stream_1","collection_1","abstract_cursor_1","aggregation_cursor_1","find_cursor_1","list_collections_cursor_1","list_indexes_cursor_1","db_1","gridfs_1","download_1","upload_1","logger_1","mongo_client_1","mongo_types_1","promise_provider_1","sessions_1","exports","bson_1"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\mongodb\\src\\index.ts"],"sourcesContent":["import { Admin } from './admin';\r\nimport { ObjectId } from './bson';\r\nimport { OrderedBulkOperation } from './bulk/ordered';\r\nimport { UnorderedBulkOperation } from './bulk/unordered';\r\nimport { ChangeStream } from './change_stream';\r\nimport { Collection } from './collection';\r\nimport { AbstractCursor } from './cursor/abstract_cursor';\r\nimport { AggregationCursor } from './cursor/aggregation_cursor';\r\nimport { FindCursor } from './cursor/find_cursor';\r\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\r\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\r\nimport { Db } from './db';\r\nimport { GridFSBucket } from './gridfs';\r\nimport { GridFSBucketReadStream } from './gridfs/download';\r\nimport { GridFSBucketWriteStream } from './gridfs/upload';\r\nimport { Logger } from './logger';\r\nimport { MongoClient } from './mongo_client';\r\nimport { CancellationToken } from './mongo_types';\r\nimport { PromiseProvider } from './promise_provider';\r\nimport { ClientSession } from './sessions';\r\n\r\n/** @internal */\r\nexport { BSON } from './bson';\r\nexport {\r\n  Binary,\r\n  BSONRegExp,\r\n  BSONSymbol,\r\n  Code,\r\n  DBRef,\r\n  Decimal128,\r\n  Double,\r\n  Int32,\r\n  Long,\r\n  Map,\r\n  MaxKey,\r\n  MinKey,\r\n  ObjectId,\r\n  Timestamp\r\n} from './bson';\r\nexport { ChangeStreamCursor } from './cursor/change_stream_cursor';\r\n/**\r\n * @public\r\n * @deprecated Please use `ObjectId`\r\n */\r\nexport const ObjectID = ObjectId;\r\n\r\nexport { AnyBulkWriteOperation, BulkWriteOptions, MongoBulkWriteError } from './bulk/common';\r\nexport {\r\n  MongoAPIError,\r\n  MongoAWSError,\r\n  MongoBatchReExecutionError,\r\n  MongoChangeStreamError,\r\n  MongoCompatibilityError,\r\n  MongoCursorExhaustedError,\r\n  MongoCursorInUseError,\r\n  MongoDecompressionError,\r\n  MongoDriverError,\r\n  MongoError,\r\n  MongoExpiredSessionError,\r\n  MongoGridFSChunkError,\r\n  MongoGridFSStreamError,\r\n  MongoInvalidArgumentError,\r\n  MongoKerberosError,\r\n  MongoMissingCredentialsError,\r\n  MongoMissingDependencyError,\r\n  MongoNetworkError,\r\n  MongoNetworkTimeoutError,\r\n  MongoNotConnectedError,\r\n  MongoParseError,\r\n  MongoRuntimeError,\r\n  MongoServerClosedError,\r\n  MongoServerError,\r\n  MongoServerSelectionError,\r\n  MongoSystemError,\r\n  MongoTailableCursorError,\r\n  MongoTopologyClosedError,\r\n  MongoTransactionError,\r\n  MongoUnexpectedServerResponseError,\r\n  MongoWriteConcernError\r\n} from './error';\r\nexport {\r\n  AbstractCursor,\r\n  // Actual driver classes exported\r\n  Admin,\r\n  AggregationCursor,\r\n  CancellationToken,\r\n  ChangeStream,\r\n  ClientSession,\r\n  Collection,\r\n  Db,\r\n  FindCursor,\r\n  GridFSBucket,\r\n  GridFSBucketReadStream,\r\n  GridFSBucketWriteStream,\r\n  ListCollectionsCursor,\r\n  ListIndexesCursor,\r\n  Logger,\r\n  MongoClient,\r\n  OrderedBulkOperation,\r\n  UnorderedBulkOperation\r\n};\r\n\r\n// Deprecated, remove in next major\r\nexport { PromiseProvider as Promise };\r\n\r\n// enums\r\nexport { BatchType } from './bulk/common';\r\nexport { GSSAPICanonicalizationValue } from './cmap/auth/gssapi';\r\nexport { AuthMechanism } from './cmap/auth/providers';\r\nexport { Compressor } from './cmap/wire_protocol/compression';\r\nexport { CURSOR_FLAGS } from './cursor/abstract_cursor';\r\nexport { AutoEncryptionLoggerLevel } from './deps';\r\nexport { MongoErrorLabel } from './error';\r\nexport { ExplainVerbosity } from './explain';\r\nexport { LoggerLevel } from './logger';\r\nexport { ServerApiVersion } from './mongo_client';\r\nexport { BSONType } from './mongo_types';\r\nexport { ReturnDocument } from './operations/find_and_modify';\r\nexport { ProfilingLevel } from './operations/set_profiling_level';\r\nexport { ReadConcernLevel } from './read_concern';\r\nexport { ReadPreferenceMode } from './read_preference';\r\nexport { ServerType, TopologyType } from './sdam/common';\r\n\r\n// Helper classes\r\nexport { ReadConcern } from './read_concern';\r\nexport { ReadPreference } from './read_preference';\r\nexport { WriteConcern } from './write_concern';\r\n\r\n// events\r\nexport {\r\n  CommandFailedEvent,\r\n  CommandStartedEvent,\r\n  CommandSucceededEvent\r\n} from './cmap/command_monitoring_events';\r\nexport {\r\n  ConnectionCheckedInEvent,\r\n  ConnectionCheckedOutEvent,\r\n  ConnectionCheckOutFailedEvent,\r\n  ConnectionCheckOutStartedEvent,\r\n  ConnectionClosedEvent,\r\n  ConnectionCreatedEvent,\r\n  ConnectionPoolClearedEvent,\r\n  ConnectionPoolClosedEvent,\r\n  ConnectionPoolCreatedEvent,\r\n  ConnectionPoolMonitoringEvent,\r\n  ConnectionPoolReadyEvent,\r\n  ConnectionReadyEvent\r\n} from './cmap/connection_pool_events';\r\nexport {\r\n  ServerClosedEvent,\r\n  ServerDescriptionChangedEvent,\r\n  ServerHeartbeatFailedEvent,\r\n  ServerHeartbeatStartedEvent,\r\n  ServerHeartbeatSucceededEvent,\r\n  ServerOpeningEvent,\r\n  TopologyClosedEvent,\r\n  TopologyDescriptionChangedEvent,\r\n  TopologyOpeningEvent\r\n} from './sdam/events';\r\nexport { SrvPollingEvent } from './sdam/srv_polling';\r\n\r\n// type only exports below, these are removed from emitted JS\r\nexport type { AdminPrivate } from './admin';\r\nexport type { BSONSerializeOptions, Document } from './bson';\r\nexport type { deserialize, serialize } from './bson';\r\nexport type {\r\n  BulkResult,\r\n  BulkWriteOperationError,\r\n  BulkWriteResult,\r\n  DeleteManyModel,\r\n  DeleteOneModel,\r\n  InsertOneModel,\r\n  ReplaceOneModel,\r\n  UpdateManyModel,\r\n  UpdateOneModel,\r\n  WriteConcernError,\r\n  WriteError\r\n} from './bulk/common';\r\nexport type {\r\n  Batch,\r\n  BulkOperationBase,\r\n  BulkOperationPrivate,\r\n  FindOperators,\r\n  WriteConcernErrorData\r\n} from './bulk/common';\r\nexport type {\r\n  ChangeStreamCollModDocument,\r\n  ChangeStreamCreateDocument,\r\n  ChangeStreamCreateIndexDocument,\r\n  ChangeStreamDeleteDocument,\r\n  ChangeStreamDocument,\r\n  ChangeStreamDocumentCollectionUUID,\r\n  ChangeStreamDocumentCommon,\r\n  ChangeStreamDocumentKey,\r\n  ChangeStreamDocumentOperationDescription,\r\n  ChangeStreamDropDatabaseDocument,\r\n  ChangeStreamDropDocument,\r\n  ChangeStreamDropIndexDocument,\r\n  ChangeStreamEvents,\r\n  ChangeStreamInsertDocument,\r\n  ChangeStreamInvalidateDocument,\r\n  ChangeStreamNameSpace,\r\n  ChangeStreamOptions,\r\n  ChangeStreamRefineCollectionShardKeyDocument,\r\n  ChangeStreamRenameDocument,\r\n  ChangeStreamReplaceDocument,\r\n  ChangeStreamReshardCollectionDocument,\r\n  ChangeStreamShardCollectionDocument,\r\n  ChangeStreamUpdateDocument,\r\n  OperationTime,\r\n  PipeOptions,\r\n  ResumeOptions,\r\n  ResumeToken,\r\n  UpdateDescription\r\n} from './change_stream';\r\nexport type {\r\n  AuthMechanismProperties,\r\n  MongoCredentials,\r\n  MongoCredentialsOptions\r\n} from './cmap/auth/mongo_credentials';\r\nexport type {\r\n  BinMsg,\r\n  MessageHeader,\r\n  Msg,\r\n  OpMsgOptions,\r\n  OpQueryOptions,\r\n  OpResponseOptions,\r\n  Query,\r\n  Response,\r\n  WriteProtocolMessageType\r\n} from './cmap/commands';\r\nexport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS, Stream } from './cmap/connect';\r\nexport type {\r\n  CommandOptions,\r\n  Connection,\r\n  ConnectionEvents,\r\n  ConnectionOptions,\r\n  DestroyOptions,\r\n  GetMoreOptions,\r\n  ProxyOptions\r\n} from './cmap/connection';\r\nexport type {\r\n  CloseOptions,\r\n  ConnectionPool,\r\n  ConnectionPoolEvents,\r\n  ConnectionPoolOptions,\r\n  PoolState,\r\n  WaitQueueMember,\r\n  WithConnectionCallback\r\n} from './cmap/connection_pool';\r\nexport type {\r\n  MessageStream,\r\n  MessageStreamOptions,\r\n  OperationDescription\r\n} from './cmap/message_stream';\r\nexport type { ConnectionPoolMetrics } from './cmap/metrics';\r\nexport type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';\r\nexport type { CompressorName } from './cmap/wire_protocol/compression';\r\nexport type { CollectionOptions, CollectionPrivate, ModifyResult } from './collection';\r\nexport type { MONGO_CLIENT_EVENTS } from './constants';\r\nexport type {\r\n  AbstractCursorEvents,\r\n  AbstractCursorOptions,\r\n  CursorCloseOptions,\r\n  CursorFlag,\r\n  CursorStreamOptions\r\n} from './cursor/abstract_cursor';\r\nexport type { InternalAbstractCursorOptions } from './cursor/abstract_cursor';\r\nexport type { AggregationCursorOptions } from './cursor/aggregation_cursor';\r\nexport type {\r\n  ChangeStreamAggregateRawResult,\r\n  ChangeStreamCursorOptions\r\n} from './cursor/change_stream_cursor';\r\nexport type { DbOptions, DbPrivate } from './db';\r\nexport type { AutoEncrypter, AutoEncryptionOptions, AutoEncryptionTlsOptions } from './deps';\r\nexport type { Encrypter, EncrypterOptions } from './encrypter';\r\nexport type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';\r\nexport type { Explain, ExplainOptions, ExplainVerbosityLike } from './explain';\r\nexport type {\r\n  GridFSBucketReadStreamOptions,\r\n  GridFSBucketReadStreamOptionsWithRevision,\r\n  GridFSBucketReadStreamPrivate,\r\n  GridFSFile\r\n} from './gridfs/download';\r\nexport type { GridFSBucketEvents, GridFSBucketOptions, GridFSBucketPrivate } from './gridfs/index';\r\nexport type { GridFSBucketWriteStreamOptions, GridFSChunk } from './gridfs/upload';\r\nexport type { LoggerFunction, LoggerOptions } from './logger';\r\nexport type {\r\n  Auth,\r\n  DriverInfo,\r\n  MongoClientEvents,\r\n  MongoClientOptions,\r\n  MongoClientPrivate,\r\n  MongoOptions,\r\n  PkFactory,\r\n  ServerApi,\r\n  SupportedNodeConnectionOptions,\r\n  SupportedSocketOptions,\r\n  SupportedTLSConnectionOptions,\r\n  SupportedTLSSocketOptions,\r\n  WithSessionCallback\r\n} from './mongo_client';\r\nexport type {\r\n  MongoLoggableComponent,\r\n  MongoLogger,\r\n  MongoLoggerEnvOptions,\r\n  MongoLoggerMongoClientOptions,\r\n  MongoLoggerOptions,\r\n  SeverityLevel\r\n} from './mongo_logger';\r\nexport type {\r\n  CommonEvents,\r\n  EventsDescription,\r\n  GenericListener,\r\n  TypedEventEmitter\r\n} from './mongo_types';\r\nexport type {\r\n  AcceptedFields,\r\n  AddToSetOperators,\r\n  AlternativeType,\r\n  ArrayElement,\r\n  ArrayOperator,\r\n  BitwiseFilter,\r\n  BSONTypeAlias,\r\n  Condition,\r\n  EnhancedOmit,\r\n  Filter,\r\n  FilterOperations,\r\n  FilterOperators,\r\n  Flatten,\r\n  InferIdType,\r\n  IntegerType,\r\n  IsAny,\r\n  Join,\r\n  KeysOfAType,\r\n  KeysOfOtherType,\r\n  MatchKeysAndValues,\r\n  NestedPaths,\r\n  NestedPathsOfType,\r\n  NonObjectIdLikeDocument,\r\n  NotAcceptedFields,\r\n  NumericType,\r\n  OneOrMore,\r\n  OnlyFieldsOfType,\r\n  OptionalId,\r\n  OptionalUnlessRequiredId,\r\n  Projection,\r\n  ProjectionOperators,\r\n  PropertyType,\r\n  PullAllOperator,\r\n  PullOperator,\r\n  PushOperator,\r\n  RegExpOrString,\r\n  RootFilterOperators,\r\n  SchemaMember,\r\n  SetFields,\r\n  UpdateFilter,\r\n  WithId,\r\n  WithoutId\r\n} from './mongo_types';\r\nexport type { AddUserOptions, RoleSpecification } from './operations/add_user';\r\nexport type {\r\n  AggregateOperation,\r\n  AggregateOptions,\r\n  DB_AGGREGATE_COLLECTION\r\n} from './operations/aggregate';\r\nexport type {\r\n  CollationOptions,\r\n  CommandOperation,\r\n  CommandOperationOptions,\r\n  OperationParent\r\n} from './operations/command';\r\nexport type { IndexInformationOptions } from './operations/common_functions';\r\nexport type { CountOptions } from './operations/count';\r\nexport type { CountDocumentsOptions } from './operations/count_documents';\r\nexport type {\r\n  ClusteredCollectionOptions,\r\n  CreateCollectionOptions,\r\n  TimeSeriesCollectionOptions\r\n} from './operations/create_collection';\r\nexport type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';\r\nexport type { DistinctOptions } from './operations/distinct';\r\nexport type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';\r\nexport type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';\r\nexport type { EvalOptions } from './operations/eval';\r\nexport type { ExecutionResult } from './operations/execute_operation';\r\nexport type { FindOptions } from './operations/find';\r\nexport type {\r\n  FindOneAndDeleteOptions,\r\n  FindOneAndReplaceOptions,\r\n  FindOneAndUpdateOptions\r\n} from './operations/find_and_modify';\r\nexport type {\r\n  CreateIndexesOptions,\r\n  DropIndexesOptions,\r\n  IndexDescription,\r\n  IndexDirection,\r\n  IndexSpecification,\r\n  ListIndexesOptions\r\n} from './operations/indexes';\r\nexport type { InsertManyResult, InsertOneOptions, InsertOneResult } from './operations/insert';\r\nexport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\r\nexport type { ListDatabasesOptions, ListDatabasesResult } from './operations/list_databases';\r\nexport type {\r\n  FinalizeFunction,\r\n  MapFunction,\r\n  MapReduceOptions,\r\n  ReduceFunction\r\n} from './operations/map_reduce';\r\nexport type { AbstractOperation, Hint, OperationOptions } from './operations/operation';\r\nexport type { ProfilingLevelOptions } from './operations/profiling_level';\r\nexport type { RemoveUserOptions } from './operations/remove_user';\r\nexport type { RenameOptions } from './operations/rename';\r\nexport type { RunCommandOptions } from './operations/run_command';\r\nexport type { SetProfilingLevelOptions } from './operations/set_profiling_level';\r\nexport type {\r\n  CollStats,\r\n  CollStatsOptions,\r\n  DbStatsOptions,\r\n  WiredTigerData\r\n} from './operations/stats';\r\nexport type {\r\n  ReplaceOptions,\r\n  UpdateOptions,\r\n  UpdateResult,\r\n  UpdateStatement\r\n} from './operations/update';\r\nexport type { ValidateCollectionOptions } from './operations/validate_collection';\r\nexport type { ReadConcernLike } from './read_concern';\r\nexport type {\r\n  HedgeOptions,\r\n  ReadPreferenceFromOptions,\r\n  ReadPreferenceLike,\r\n  ReadPreferenceLikeOptions,\r\n  ReadPreferenceOptions\r\n} from './read_preference';\r\nexport type { ClusterTime, TimerQueue } from './sdam/common';\r\nexport type {\r\n  Monitor,\r\n  MonitorEvents,\r\n  MonitorInterval,\r\n  MonitorIntervalOptions,\r\n  MonitorOptions,\r\n  MonitorPrivate,\r\n  RTTPinger,\r\n  RTTPingerOptions\r\n} from './sdam/monitor';\r\nexport type { Server, ServerEvents, ServerOptions, ServerPrivate } from './sdam/server';\r\nexport type {\r\n  ServerDescription,\r\n  ServerDescriptionOptions,\r\n  TagSet,\r\n  TopologyVersion\r\n} from './sdam/server_description';\r\nexport type { ServerSelector } from './sdam/server_selection';\r\nexport type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';\r\nexport type {\r\n  ConnectOptions,\r\n  SelectServerOptions,\r\n  ServerCapabilities,\r\n  ServerSelectionCallback,\r\n  ServerSelectionRequest,\r\n  Topology,\r\n  TopologyEvents,\r\n  TopologyOptions,\r\n  TopologyPrivate\r\n} from './sdam/topology';\r\nexport type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';\r\nexport type {\r\n  ClientSessionEvents,\r\n  ClientSessionOptions,\r\n  EndSessionOptions,\r\n  ServerSession,\r\n  ServerSessionId,\r\n  ServerSessionPool,\r\n  WithTransactionCallback\r\n} from './sessions';\r\nexport type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';\r\nexport type { Transaction, TransactionOptions, TxnState } from './transactions';\r\nexport type {\r\n  BufferPool,\r\n  Callback,\r\n  ClientMetadata,\r\n  ClientMetadataOptions,\r\n  EventEmitterWithState,\r\n  HostAddress,\r\n  List,\r\n  MongoDBNamespace\r\n} from './utils';\r\nexport type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}