{"ast":null,"code":"'use strict';\n\nconst buffers = [Buffer.from(new Array(100).fill('').map((_, i) => `key${i}=value${i}`).join('&'))];\nconst calls = {\n  field: 0,\n  end: 0\n};\nlet n = 3e3;\nconst moduleName = process.argv[2];\nswitch (moduleName) {\n  case 'busboy':\n    {\n      const busboy = require('busboy');\n      console.time(moduleName);\n      (function next() {\n        const parser = busboy({\n          limits: {\n            fieldSizeLimit: Infinity\n          },\n          headers: {\n            'content-type': 'application/x-www-form-urlencoded; charset=utf-8'\n          }\n        });\n        parser.on('field', (name, val, info) => {\n          ++calls.field;\n        }).on('close', () => {\n          ++calls.end;\n          if (--n === 0) console.timeEnd(moduleName);else process.nextTick(next);\n        });\n        for (const buf of buffers) parser.write(buf);\n        parser.end();\n      })();\n      break;\n    }\n  case 'formidable':\n    {\n      const QuerystringParser = require('formidable/src/parsers/Querystring.js');\n      console.time(moduleName);\n      (function next() {\n        const parser = new QuerystringParser();\n        parser.on('data', obj => {\n          ++calls.field;\n        }).on('end', () => {\n          ++calls.end;\n          if (--n === 0) console.timeEnd(moduleName);else process.nextTick(next);\n        });\n        for (const buf of buffers) parser.write(buf);\n        parser.end();\n      })();\n      break;\n    }\n  case 'formidable-streaming':\n    {\n      const QuerystringParser = require('formidable/src/parsers/StreamingQuerystring.js');\n      console.time(moduleName);\n      (function next() {\n        const parser = new QuerystringParser();\n        parser.on('data', obj => {\n          ++calls.field;\n        }).on('end', () => {\n          ++calls.end;\n          if (--n === 0) console.timeEnd(moduleName);else process.nextTick(next);\n        });\n        for (const buf of buffers) parser.write(buf);\n        parser.end();\n      })();\n      break;\n    }\n  default:\n    if (moduleName === undefined) console.error('Missing parser module name');else console.error(`Invalid parser module name: ${moduleName}`);\n    process.exit(1);\n}","map":{"version":3,"names":["buffers","Buffer","from","Array","fill","map","_","i","join","calls","field","end","n","moduleName","process","argv","busboy","require","console","time","next","parser","limits","fieldSizeLimit","Infinity","headers","on","name","val","info","timeEnd","nextTick","buf","write","QuerystringParser","obj","undefined","error","exit"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/busboy/bench/bench-urlencoded-fields-100pairs-small.js"],"sourcesContent":["'use strict';\n\nconst buffers = [\n  Buffer.from(\n    (new Array(100)).fill('').map((_, i) => `key${i}=value${i}`).join('&')\n  ),\n];\nconst calls = {\n  field: 0,\n  end: 0,\n};\n\nlet n = 3e3;\n\nconst moduleName = process.argv[2];\nswitch (moduleName) {\n  case 'busboy': {\n    const busboy = require('busboy');\n\n    console.time(moduleName);\n    (function next() {\n      const parser = busboy({\n        limits: {\n          fieldSizeLimit: Infinity,\n        },\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded; charset=utf-8',\n        },\n      });\n      parser.on('field', (name, val, info) => {\n        ++calls.field;\n      }).on('close', () => {\n        ++calls.end;\n        if (--n === 0)\n          console.timeEnd(moduleName);\n        else\n          process.nextTick(next);\n      });\n\n      for (const buf of buffers)\n        parser.write(buf);\n      parser.end();\n    })();\n    break;\n  }\n\n  case 'formidable': {\n    const QuerystringParser =\n      require('formidable/src/parsers/Querystring.js');\n\n    console.time(moduleName);\n    (function next() {\n      const parser = new QuerystringParser();\n      parser.on('data', (obj) => {\n        ++calls.field;\n      }).on('end', () => {\n        ++calls.end;\n        if (--n === 0)\n          console.timeEnd(moduleName);\n        else\n          process.nextTick(next);\n      });\n\n      for (const buf of buffers)\n        parser.write(buf);\n      parser.end();\n    })();\n    break;\n  }\n\n  case 'formidable-streaming': {\n    const QuerystringParser =\n      require('formidable/src/parsers/StreamingQuerystring.js');\n\n    console.time(moduleName);\n    (function next() {\n      const parser = new QuerystringParser();\n      parser.on('data', (obj) => {\n        ++calls.field;\n      }).on('end', () => {\n        ++calls.end;\n        if (--n === 0)\n          console.timeEnd(moduleName);\n        else\n          process.nextTick(next);\n      });\n\n      for (const buf of buffers)\n        parser.write(buf);\n      parser.end();\n    })();\n    break;\n  }\n\n  default:\n    if (moduleName === undefined)\n      console.error('Missing parser module name');\n    else\n      console.error(`Invalid parser module name: ${moduleName}`);\n    process.exit(1);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}