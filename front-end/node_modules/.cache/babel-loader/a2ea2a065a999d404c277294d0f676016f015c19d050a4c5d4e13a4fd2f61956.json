{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createQueryOperation = exports.createEqualsOperation = exports.createDefaultQueryOperation = exports.createOperationTester = exports.createQueryTester = exports.EqualsOperation = void 0;\nconst defaultOperations = require(\"./operations\");\nconst core_1 = require(\"./core\");\nObject.defineProperty(exports, \"createQueryTester\", {\n  enumerable: true,\n  get: function () {\n    return core_1.createQueryTester;\n  }\n});\nObject.defineProperty(exports, \"EqualsOperation\", {\n  enumerable: true,\n  get: function () {\n    return core_1.EqualsOperation;\n  }\n});\nObject.defineProperty(exports, \"createQueryOperation\", {\n  enumerable: true,\n  get: function () {\n    return core_1.createQueryOperation;\n  }\n});\nObject.defineProperty(exports, \"createEqualsOperation\", {\n  enumerable: true,\n  get: function () {\n    return core_1.createEqualsOperation;\n  }\n});\nObject.defineProperty(exports, \"createOperationTester\", {\n  enumerable: true,\n  get: function () {\n    return core_1.createOperationTester;\n  }\n});\nconst createDefaultQueryOperation = function (query, ownerQuery) {\n  let {\n    compare,\n    operations\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, core_1.createQueryOperation)(query, ownerQuery, {\n    compare,\n    operations: Object.assign({}, defaultOperations, operations || {})\n  });\n};\nexports.createDefaultQueryOperation = createDefaultQueryOperation;\nconst createDefaultQueryTester = function (query) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const op = createDefaultQueryOperation(query, null, options);\n  return (0, core_1.createOperationTester)(op);\n};\n__exportStar(require(\"./operations\"), exports);\nexports.default = createDefaultQueryTester;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AA4CEA;EAAAC;EAAAC;IAAA,OAnCAC,wBAAiB;EAAA;AAAA;AAkCjBH;EAAAC;EAAAC;IAAA,OAjCAC,sBAAe;EAAA;AAAA;AAsCfH;EAAAC;EAAAC;IAAA,OArCAC,2BAAoB;EAAA;AAAA;AAoCpBH;EAAAC;EAAAC;IAAA,OAnCAC,4BAAqB;EAAA;AAAA;AAiCrBH;EAAAC;EAAAC;IAAA,OAhCAC,4BAAqB;EAAA;AAAA;AAGvB,MAAMC,2BAA2B,GAAG,UAClCC,KAAqB,EACrBC,UAAe,EAEb;EAAA,IADF;IAAEC,OAAO;IAAEC;EAAU,wEAAuB,EAAE;EAE9C,OAAO,+BAAoB,EAACH,KAAK,EAAEC,UAAU,EAAE;IAC7CC,OAAO;IACPC,UAAU,EAAER,MAAM,CAACS,MAAM,CAAC,EAAE,EAAEC,iBAAiB,EAAEF,UAAU,IAAI,EAAE;GAClE,CAAC;AACJ,CAAC;AAqBCG;AAnBF,MAAMC,wBAAwB,GAAG,UAC/BP,KAAqB,EAEnB;EAAA,IADFQ,8EAA4B,EAAE;EAE9B,MAAMC,EAAE,GAAGV,2BAA2B,CAACC,KAAK,EAAE,IAAI,EAAEQ,OAAO,CAAC;EAC5D,OAAO,gCAAqB,EAACC,EAAE,CAAC;AAClC,CAAC;AAiBDC;AAEAJ,kBAAeC,wBAAwB","names":["Object","enumerable","get","core_1","createDefaultQueryOperation","query","ownerQuery","compare","operations","assign","defaultOperations","exports","createDefaultQueryTester","options","op","__exportStar"],"sources":["C:\\Users\\91930\\Desktop\\Github projects\\Pharmacy Demo\\back-end\\node_modules\\sift\\src\\index.ts"],"sourcesContent":["import * as defaultOperations from \"./operations\";\r\nimport {\r\n  Query,\r\n  QueryOperators,\r\n  BasicValueQuery,\r\n  ArrayValueQuery,\r\n  ValueQuery,\r\n  NestedQuery,\r\n  ShapeQuery,\r\n  Options,\r\n  createQueryTester,\r\n  EqualsOperation,\r\n  createQueryOperation,\r\n  createEqualsOperation,\r\n  createOperationTester\r\n} from \"./core\";\r\n\r\nconst createDefaultQueryOperation = <TItem, TSchema extends TItem = TItem>(\r\n  query: Query<TSchema>,\r\n  ownerQuery: any,\r\n  { compare, operations }: Partial<Options> = {}\r\n) => {\r\n  return createQueryOperation(query, ownerQuery, {\r\n    compare,\r\n    operations: Object.assign({}, defaultOperations, operations || {})\r\n  });\r\n};\r\n\r\nconst createDefaultQueryTester = <TItem, TSchema extends TItem = TItem>(\r\n  query: Query<TSchema>,\r\n  options: Partial<Options> = {}\r\n) => {\r\n  const op = createDefaultQueryOperation(query, null, options);\r\n  return createOperationTester(op);\r\n};\r\n\r\nexport {\r\n  Query,\r\n  QueryOperators,\r\n  BasicValueQuery,\r\n  ArrayValueQuery,\r\n  ValueQuery,\r\n  NestedQuery,\r\n  ShapeQuery,\r\n  EqualsOperation,\r\n  createQueryTester,\r\n  createOperationTester,\r\n  createDefaultQueryOperation,\r\n  createEqualsOperation,\r\n  createQueryOperation\r\n};\r\nexport * from \"./operations\";\r\n\r\nexport default createDefaultQueryTester;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}