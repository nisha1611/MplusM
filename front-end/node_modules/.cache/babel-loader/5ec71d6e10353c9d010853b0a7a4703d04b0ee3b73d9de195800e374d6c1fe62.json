{"ast":null,"code":"'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\ntest('quoteStyle option', function (t) {\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: false\n    });\n  }, 'false is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: true\n    });\n  }, 'true is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: ''\n    });\n  }, '\"\" is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: {}\n    });\n  }, '{} is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: []\n    });\n  }, '[] is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: 42\n    });\n  }, '42 is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: NaN\n    });\n  }, 'NaN is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: function () {}\n    });\n  }, 'a function is not a valid value');\n  t.end();\n});","map":{"version":3,"names":["inspect","require","test","t","quoteStyle","NaN","end"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/object-inspect/test/quoteStyle.js"],"sourcesContent":["'use strict';\r\n\r\nvar inspect = require('../');\r\nvar test = require('tape');\r\n\r\ntest('quoteStyle option', function (t) {\r\n    t['throws'](function () { inspect(null, { quoteStyle: false }); }, 'false is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: true }); }, 'true is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: '' }); }, '\"\" is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: {} }); }, '{} is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: [] }); }, '[] is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: 42 }); }, '42 is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: NaN }); }, 'NaN is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: function () {} }); }, 'a function is not a valid value');\r\n\r\n    t.end();\r\n});\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC5B,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE1BC,IAAI,CAAC,mBAAmB,EAAE,UAAUC,CAAC,EAAE;EACnCA,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE;IAAM,CAAC,CAAC;EAAE,CAAC,EAAE,4BAA4B,CAAC;EAChGD,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,EAAE,2BAA2B,CAAC;EAC9FD,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE;IAAG,CAAC,CAAC;EAAE,CAAC,EAAE,yBAAyB,CAAC;EAC1FD,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAE,yBAAyB,CAAC;EAC1FD,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE;IAAG,CAAC,CAAC;EAAE,CAAC,EAAE,yBAAyB,CAAC;EAC1FD,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE;IAAG,CAAC,CAAC;EAAE,CAAC,EAAE,yBAAyB,CAAC;EAC1FD,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAEC;IAAI,CAAC,CAAC;EAAE,CAAC,EAAE,0BAA0B,CAAC;EAC5FF,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY;IAAEH,OAAO,CAAC,IAAI,EAAE;MAAEI,UAAU,EAAE,YAAY,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAE,iCAAiC,CAAC;EAE9GD,CAAC,CAACG,GAAG,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}