{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"estree\").Node} EsTreeNode */\n/** @typedef {import(\"./JavascriptParser\").VariableInfoInterface} VariableInfoInterface */\nconst TypeUnknown = 0;\nconst TypeUndefined = 1;\nconst TypeNull = 2;\nconst TypeString = 3;\nconst TypeNumber = 4;\nconst TypeBoolean = 5;\nconst TypeRegExp = 6;\nconst TypeConditional = 7;\nconst TypeArray = 8;\nconst TypeConstArray = 9;\nconst TypeIdentifier = 10;\nconst TypeWrapped = 11;\nconst TypeTemplateString = 12;\nconst TypeBigInt = 13;\nclass BasicEvaluatedExpression {\n  constructor() {\n    this.type = TypeUnknown;\n    /** @type {[number, number]} */\n    this.range = undefined;\n    /** @type {boolean} */\n    this.falsy = false;\n    /** @type {boolean} */\n    this.truthy = false;\n    /** @type {boolean | undefined} */\n    this.nullish = undefined;\n    /** @type {boolean} */\n    this.sideEffects = true;\n    /** @type {boolean | undefined} */\n    this.bool = undefined;\n    /** @type {number | undefined} */\n    this.number = undefined;\n    /** @type {bigint | undefined} */\n    this.bigint = undefined;\n    /** @type {RegExp | undefined} */\n    this.regExp = undefined;\n    /** @type {string | undefined} */\n    this.string = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.quasis = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.parts = undefined;\n    /** @type {any[] | undefined} */\n    this.array = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.items = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.options = undefined;\n    /** @type {BasicEvaluatedExpression | undefined} */\n    this.prefix = undefined;\n    /** @type {BasicEvaluatedExpression | undefined} */\n    this.postfix = undefined;\n    this.wrappedInnerExpressions = undefined;\n    /** @type {string | VariableInfoInterface | undefined} */\n    this.identifier = undefined;\n    /** @type {VariableInfoInterface} */\n    this.rootInfo = undefined;\n    /** @type {() => string[]} */\n    this.getMembers = undefined;\n    /** @type {() => boolean[]} */\n    this.getMembersOptionals = undefined;\n    /** @type {EsTreeNode} */\n    this.expression = undefined;\n  }\n  isUnknown() {\n    return this.type === TypeUnknown;\n  }\n  isNull() {\n    return this.type === TypeNull;\n  }\n  isUndefined() {\n    return this.type === TypeUndefined;\n  }\n  isString() {\n    return this.type === TypeString;\n  }\n  isNumber() {\n    return this.type === TypeNumber;\n  }\n  isBigInt() {\n    return this.type === TypeBigInt;\n  }\n  isBoolean() {\n    return this.type === TypeBoolean;\n  }\n  isRegExp() {\n    return this.type === TypeRegExp;\n  }\n  isConditional() {\n    return this.type === TypeConditional;\n  }\n  isArray() {\n    return this.type === TypeArray;\n  }\n  isConstArray() {\n    return this.type === TypeConstArray;\n  }\n  isIdentifier() {\n    return this.type === TypeIdentifier;\n  }\n  isWrapped() {\n    return this.type === TypeWrapped;\n  }\n  isTemplateString() {\n    return this.type === TypeTemplateString;\n  }\n\n  /**\r\n   * Is expression a primitive or an object type value?\r\n   * @returns {boolean | undefined} true: primitive type, false: object type, undefined: unknown/runtime-defined\r\n   */\n  isPrimitiveType() {\n    switch (this.type) {\n      case TypeUndefined:\n      case TypeNull:\n      case TypeString:\n      case TypeNumber:\n      case TypeBoolean:\n      case TypeBigInt:\n      case TypeWrapped:\n      case TypeTemplateString:\n        return true;\n      case TypeRegExp:\n      case TypeArray:\n      case TypeConstArray:\n        return false;\n      default:\n        return undefined;\n    }\n  }\n\n  /**\r\n   * Is expression a runtime or compile-time value?\r\n   * @returns {boolean} true: compile time value, false: runtime value\r\n   */\n  isCompileTimeValue() {\n    switch (this.type) {\n      case TypeUndefined:\n      case TypeNull:\n      case TypeString:\n      case TypeNumber:\n      case TypeBoolean:\n      case TypeRegExp:\n      case TypeConstArray:\n      case TypeBigInt:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\r\n   * Gets the compile-time value of the expression\r\n   * @returns {any} the javascript value\r\n   */\n  asCompileTimeValue() {\n    switch (this.type) {\n      case TypeUndefined:\n        return undefined;\n      case TypeNull:\n        return null;\n      case TypeString:\n        return this.string;\n      case TypeNumber:\n        return this.number;\n      case TypeBoolean:\n        return this.bool;\n      case TypeRegExp:\n        return this.regExp;\n      case TypeConstArray:\n        return this.array;\n      case TypeBigInt:\n        return this.bigint;\n      default:\n        throw new Error(\"asCompileTimeValue must only be called for compile-time values\");\n    }\n  }\n  isTruthy() {\n    return this.truthy;\n  }\n  isFalsy() {\n    return this.falsy;\n  }\n  isNullish() {\n    return this.nullish;\n  }\n\n  /**\r\n   * Can this expression have side effects?\r\n   * @returns {boolean} false: never has side effects\r\n   */\n  couldHaveSideEffects() {\n    return this.sideEffects;\n  }\n  asBool() {\n    if (this.truthy) return true;\n    if (this.falsy || this.nullish) return false;\n    if (this.isBoolean()) return this.bool;\n    if (this.isNull()) return false;\n    if (this.isUndefined()) return false;\n    if (this.isString()) return this.string !== \"\";\n    if (this.isNumber()) return this.number !== 0;\n    if (this.isBigInt()) return this.bigint !== BigInt(0);\n    if (this.isRegExp()) return true;\n    if (this.isArray()) return true;\n    if (this.isConstArray()) return true;\n    if (this.isWrapped()) {\n      return this.prefix && this.prefix.asBool() || this.postfix && this.postfix.asBool() ? true : undefined;\n    }\n    if (this.isTemplateString()) {\n      const str = this.asString();\n      if (typeof str === \"string\") return str !== \"\";\n    }\n    return undefined;\n  }\n  asNullish() {\n    const nullish = this.isNullish();\n    if (nullish === true || this.isNull() || this.isUndefined()) return true;\n    if (nullish === false) return false;\n    if (this.isTruthy()) return false;\n    if (this.isBoolean()) return false;\n    if (this.isString()) return false;\n    if (this.isNumber()) return false;\n    if (this.isBigInt()) return false;\n    if (this.isRegExp()) return false;\n    if (this.isArray()) return false;\n    if (this.isConstArray()) return false;\n    if (this.isTemplateString()) return false;\n    if (this.isRegExp()) return false;\n    return undefined;\n  }\n  asString() {\n    if (this.isBoolean()) return `${this.bool}`;\n    if (this.isNull()) return \"null\";\n    if (this.isUndefined()) return \"undefined\";\n    if (this.isString()) return this.string;\n    if (this.isNumber()) return `${this.number}`;\n    if (this.isBigInt()) return `${this.bigint}`;\n    if (this.isRegExp()) return `${this.regExp}`;\n    if (this.isArray()) {\n      let array = [];\n      for (const item of this.items) {\n        const itemStr = item.asString();\n        if (itemStr === undefined) return undefined;\n        array.push(itemStr);\n      }\n      return `${array}`;\n    }\n    if (this.isConstArray()) return `${this.array}`;\n    if (this.isTemplateString()) {\n      let str = \"\";\n      for (const part of this.parts) {\n        const partStr = part.asString();\n        if (partStr === undefined) return undefined;\n        str += partStr;\n      }\n      return str;\n    }\n    return undefined;\n  }\n  setString(string) {\n    this.type = TypeString;\n    this.string = string;\n    this.sideEffects = false;\n    return this;\n  }\n  setUndefined() {\n    this.type = TypeUndefined;\n    this.sideEffects = false;\n    return this;\n  }\n  setNull() {\n    this.type = TypeNull;\n    this.sideEffects = false;\n    return this;\n  }\n  setNumber(number) {\n    this.type = TypeNumber;\n    this.number = number;\n    this.sideEffects = false;\n    return this;\n  }\n  setBigInt(bigint) {\n    this.type = TypeBigInt;\n    this.bigint = bigint;\n    this.sideEffects = false;\n    return this;\n  }\n  setBoolean(bool) {\n    this.type = TypeBoolean;\n    this.bool = bool;\n    this.sideEffects = false;\n    return this;\n  }\n  setRegExp(regExp) {\n    this.type = TypeRegExp;\n    this.regExp = regExp;\n    this.sideEffects = false;\n    return this;\n  }\n  setIdentifier(identifier, rootInfo, getMembers, getMembersOptionals) {\n    this.type = TypeIdentifier;\n    this.identifier = identifier;\n    this.rootInfo = rootInfo;\n    this.getMembers = getMembers;\n    this.getMembersOptionals = getMembersOptionals;\n    this.sideEffects = true;\n    return this;\n  }\n  setWrapped(prefix, postfix, innerExpressions) {\n    this.type = TypeWrapped;\n    this.prefix = prefix;\n    this.postfix = postfix;\n    this.wrappedInnerExpressions = innerExpressions;\n    this.sideEffects = true;\n    return this;\n  }\n  setOptions(options) {\n    this.type = TypeConditional;\n    this.options = options;\n    this.sideEffects = true;\n    return this;\n  }\n  addOptions(options) {\n    if (!this.options) {\n      this.type = TypeConditional;\n      this.options = [];\n      this.sideEffects = true;\n    }\n    for (const item of options) {\n      this.options.push(item);\n    }\n    return this;\n  }\n  setItems(items) {\n    this.type = TypeArray;\n    this.items = items;\n    this.sideEffects = items.some(i => i.couldHaveSideEffects());\n    return this;\n  }\n  setArray(array) {\n    this.type = TypeConstArray;\n    this.array = array;\n    this.sideEffects = false;\n    return this;\n  }\n  setTemplateString(quasis, parts, kind) {\n    this.type = TypeTemplateString;\n    this.quasis = quasis;\n    this.parts = parts;\n    this.templateStringKind = kind;\n    this.sideEffects = parts.some(p => p.sideEffects);\n    return this;\n  }\n  setTruthy() {\n    this.falsy = false;\n    this.truthy = true;\n    this.nullish = false;\n    return this;\n  }\n  setFalsy() {\n    this.falsy = true;\n    this.truthy = false;\n    return this;\n  }\n  setNullish(value) {\n    this.nullish = value;\n    if (value) return this.setFalsy();\n    return this;\n  }\n  setRange(range) {\n    this.range = range;\n    return this;\n  }\n  setSideEffects() {\n    let sideEffects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.sideEffects = sideEffects;\n    return this;\n  }\n  setExpression(expression) {\n    this.expression = expression;\n    return this;\n  }\n}\n\n/**\r\n * @param {string} flags regexp flags\r\n * @returns {boolean} is valid flags\r\n */\nBasicEvaluatedExpression.isValidRegExpFlags = flags => {\n  const len = flags.length;\n  if (len === 0) return true;\n  if (len > 4) return false;\n\n  // cspell:word gimy\n  let remaining = 0b0000; // bit per RegExp flag: gimy\n\n  for (let i = 0; i < len; i++) switch (flags.charCodeAt(i)) {\n    case 103 /* g */:\n      if (remaining & 0b1000) return false;\n      remaining |= 0b1000;\n      break;\n    case 105 /* i */:\n      if (remaining & 0b0100) return false;\n      remaining |= 0b0100;\n      break;\n    case 109 /* m */:\n      if (remaining & 0b0010) return false;\n      remaining |= 0b0010;\n      break;\n    case 121 /* y */:\n      if (remaining & 0b0001) return false;\n      remaining |= 0b0001;\n      break;\n    default:\n      return false;\n  }\n  return true;\n};\nmodule.exports = BasicEvaluatedExpression;","map":{"version":3,"names":["TypeUnknown","TypeUndefined","TypeNull","TypeString","TypeNumber","TypeBoolean","TypeRegExp","TypeConditional","TypeArray","TypeConstArray","TypeIdentifier","TypeWrapped","TypeTemplateString","TypeBigInt","BasicEvaluatedExpression","constructor","type","range","undefined","falsy","truthy","nullish","sideEffects","bool","number","bigint","regExp","string","quasis","parts","array","items","options","prefix","postfix","wrappedInnerExpressions","identifier","rootInfo","getMembers","getMembersOptionals","expression","isUnknown","isNull","isUndefined","isString","isNumber","isBigInt","isBoolean","isRegExp","isConditional","isArray","isConstArray","isIdentifier","isWrapped","isTemplateString","isPrimitiveType","isCompileTimeValue","asCompileTimeValue","Error","isTruthy","isFalsy","isNullish","couldHaveSideEffects","asBool","BigInt","str","asString","asNullish","item","itemStr","push","part","partStr","setString","setUndefined","setNull","setNumber","setBigInt","setBoolean","setRegExp","setIdentifier","setWrapped","innerExpressions","setOptions","addOptions","setItems","some","i","setArray","setTemplateString","kind","templateStringKind","p","setTruthy","setFalsy","setNullish","value","setRange","setSideEffects","setExpression","isValidRegExpFlags","flags","len","length","remaining","charCodeAt","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/javascript/BasicEvaluatedExpression.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"estree\").Node} EsTreeNode */\r\n/** @typedef {import(\"./JavascriptParser\").VariableInfoInterface} VariableInfoInterface */\r\n\r\nconst TypeUnknown = 0;\r\nconst TypeUndefined = 1;\r\nconst TypeNull = 2;\r\nconst TypeString = 3;\r\nconst TypeNumber = 4;\r\nconst TypeBoolean = 5;\r\nconst TypeRegExp = 6;\r\nconst TypeConditional = 7;\r\nconst TypeArray = 8;\r\nconst TypeConstArray = 9;\r\nconst TypeIdentifier = 10;\r\nconst TypeWrapped = 11;\r\nconst TypeTemplateString = 12;\r\nconst TypeBigInt = 13;\r\n\r\nclass BasicEvaluatedExpression {\r\n\tconstructor() {\r\n\t\tthis.type = TypeUnknown;\r\n\t\t/** @type {[number, number]} */\r\n\t\tthis.range = undefined;\r\n\t\t/** @type {boolean} */\r\n\t\tthis.falsy = false;\r\n\t\t/** @type {boolean} */\r\n\t\tthis.truthy = false;\r\n\t\t/** @type {boolean | undefined} */\r\n\t\tthis.nullish = undefined;\r\n\t\t/** @type {boolean} */\r\n\t\tthis.sideEffects = true;\r\n\t\t/** @type {boolean | undefined} */\r\n\t\tthis.bool = undefined;\r\n\t\t/** @type {number | undefined} */\r\n\t\tthis.number = undefined;\r\n\t\t/** @type {bigint | undefined} */\r\n\t\tthis.bigint = undefined;\r\n\t\t/** @type {RegExp | undefined} */\r\n\t\tthis.regExp = undefined;\r\n\t\t/** @type {string | undefined} */\r\n\t\tthis.string = undefined;\r\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\r\n\t\tthis.quasis = undefined;\r\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\r\n\t\tthis.parts = undefined;\r\n\t\t/** @type {any[] | undefined} */\r\n\t\tthis.array = undefined;\r\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\r\n\t\tthis.items = undefined;\r\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\r\n\t\tthis.options = undefined;\r\n\t\t/** @type {BasicEvaluatedExpression | undefined} */\r\n\t\tthis.prefix = undefined;\r\n\t\t/** @type {BasicEvaluatedExpression | undefined} */\r\n\t\tthis.postfix = undefined;\r\n\t\tthis.wrappedInnerExpressions = undefined;\r\n\t\t/** @type {string | VariableInfoInterface | undefined} */\r\n\t\tthis.identifier = undefined;\r\n\t\t/** @type {VariableInfoInterface} */\r\n\t\tthis.rootInfo = undefined;\r\n\t\t/** @type {() => string[]} */\r\n\t\tthis.getMembers = undefined;\r\n\t\t/** @type {() => boolean[]} */\r\n\t\tthis.getMembersOptionals = undefined;\r\n\t\t/** @type {EsTreeNode} */\r\n\t\tthis.expression = undefined;\r\n\t}\r\n\r\n\tisUnknown() {\r\n\t\treturn this.type === TypeUnknown;\r\n\t}\r\n\r\n\tisNull() {\r\n\t\treturn this.type === TypeNull;\r\n\t}\r\n\r\n\tisUndefined() {\r\n\t\treturn this.type === TypeUndefined;\r\n\t}\r\n\r\n\tisString() {\r\n\t\treturn this.type === TypeString;\r\n\t}\r\n\r\n\tisNumber() {\r\n\t\treturn this.type === TypeNumber;\r\n\t}\r\n\r\n\tisBigInt() {\r\n\t\treturn this.type === TypeBigInt;\r\n\t}\r\n\r\n\tisBoolean() {\r\n\t\treturn this.type === TypeBoolean;\r\n\t}\r\n\r\n\tisRegExp() {\r\n\t\treturn this.type === TypeRegExp;\r\n\t}\r\n\r\n\tisConditional() {\r\n\t\treturn this.type === TypeConditional;\r\n\t}\r\n\r\n\tisArray() {\r\n\t\treturn this.type === TypeArray;\r\n\t}\r\n\r\n\tisConstArray() {\r\n\t\treturn this.type === TypeConstArray;\r\n\t}\r\n\r\n\tisIdentifier() {\r\n\t\treturn this.type === TypeIdentifier;\r\n\t}\r\n\r\n\tisWrapped() {\r\n\t\treturn this.type === TypeWrapped;\r\n\t}\r\n\r\n\tisTemplateString() {\r\n\t\treturn this.type === TypeTemplateString;\r\n\t}\r\n\r\n\t/**\r\n\t * Is expression a primitive or an object type value?\r\n\t * @returns {boolean | undefined} true: primitive type, false: object type, undefined: unknown/runtime-defined\r\n\t */\r\n\tisPrimitiveType() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase TypeUndefined:\r\n\t\t\tcase TypeNull:\r\n\t\t\tcase TypeString:\r\n\t\t\tcase TypeNumber:\r\n\t\t\tcase TypeBoolean:\r\n\t\t\tcase TypeBigInt:\r\n\t\t\tcase TypeWrapped:\r\n\t\t\tcase TypeTemplateString:\r\n\t\t\t\treturn true;\r\n\t\t\tcase TypeRegExp:\r\n\t\t\tcase TypeArray:\r\n\t\t\tcase TypeConstArray:\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Is expression a runtime or compile-time value?\r\n\t * @returns {boolean} true: compile time value, false: runtime value\r\n\t */\r\n\tisCompileTimeValue() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase TypeUndefined:\r\n\t\t\tcase TypeNull:\r\n\t\t\tcase TypeString:\r\n\t\t\tcase TypeNumber:\r\n\t\t\tcase TypeBoolean:\r\n\t\t\tcase TypeRegExp:\r\n\t\t\tcase TypeConstArray:\r\n\t\t\tcase TypeBigInt:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the compile-time value of the expression\r\n\t * @returns {any} the javascript value\r\n\t */\r\n\tasCompileTimeValue() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase TypeUndefined:\r\n\t\t\t\treturn undefined;\r\n\t\t\tcase TypeNull:\r\n\t\t\t\treturn null;\r\n\t\t\tcase TypeString:\r\n\t\t\t\treturn this.string;\r\n\t\t\tcase TypeNumber:\r\n\t\t\t\treturn this.number;\r\n\t\t\tcase TypeBoolean:\r\n\t\t\t\treturn this.bool;\r\n\t\t\tcase TypeRegExp:\r\n\t\t\t\treturn this.regExp;\r\n\t\t\tcase TypeConstArray:\r\n\t\t\t\treturn this.array;\r\n\t\t\tcase TypeBigInt:\r\n\t\t\t\treturn this.bigint;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\"asCompileTimeValue must only be called for compile-time values\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tisTruthy() {\r\n\t\treturn this.truthy;\r\n\t}\r\n\r\n\tisFalsy() {\r\n\t\treturn this.falsy;\r\n\t}\r\n\r\n\tisNullish() {\r\n\t\treturn this.nullish;\r\n\t}\r\n\r\n\t/**\r\n\t * Can this expression have side effects?\r\n\t * @returns {boolean} false: never has side effects\r\n\t */\r\n\tcouldHaveSideEffects() {\r\n\t\treturn this.sideEffects;\r\n\t}\r\n\r\n\tasBool() {\r\n\t\tif (this.truthy) return true;\r\n\t\tif (this.falsy || this.nullish) return false;\r\n\t\tif (this.isBoolean()) return this.bool;\r\n\t\tif (this.isNull()) return false;\r\n\t\tif (this.isUndefined()) return false;\r\n\t\tif (this.isString()) return this.string !== \"\";\r\n\t\tif (this.isNumber()) return this.number !== 0;\r\n\t\tif (this.isBigInt()) return this.bigint !== BigInt(0);\r\n\t\tif (this.isRegExp()) return true;\r\n\t\tif (this.isArray()) return true;\r\n\t\tif (this.isConstArray()) return true;\r\n\t\tif (this.isWrapped()) {\r\n\t\t\treturn (this.prefix && this.prefix.asBool()) ||\r\n\t\t\t\t(this.postfix && this.postfix.asBool())\r\n\t\t\t\t? true\r\n\t\t\t\t: undefined;\r\n\t\t}\r\n\t\tif (this.isTemplateString()) {\r\n\t\t\tconst str = this.asString();\r\n\t\t\tif (typeof str === \"string\") return str !== \"\";\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tasNullish() {\r\n\t\tconst nullish = this.isNullish();\r\n\r\n\t\tif (nullish === true || this.isNull() || this.isUndefined()) return true;\r\n\r\n\t\tif (nullish === false) return false;\r\n\t\tif (this.isTruthy()) return false;\r\n\t\tif (this.isBoolean()) return false;\r\n\t\tif (this.isString()) return false;\r\n\t\tif (this.isNumber()) return false;\r\n\t\tif (this.isBigInt()) return false;\r\n\t\tif (this.isRegExp()) return false;\r\n\t\tif (this.isArray()) return false;\r\n\t\tif (this.isConstArray()) return false;\r\n\t\tif (this.isTemplateString()) return false;\r\n\t\tif (this.isRegExp()) return false;\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tasString() {\r\n\t\tif (this.isBoolean()) return `${this.bool}`;\r\n\t\tif (this.isNull()) return \"null\";\r\n\t\tif (this.isUndefined()) return \"undefined\";\r\n\t\tif (this.isString()) return this.string;\r\n\t\tif (this.isNumber()) return `${this.number}`;\r\n\t\tif (this.isBigInt()) return `${this.bigint}`;\r\n\t\tif (this.isRegExp()) return `${this.regExp}`;\r\n\t\tif (this.isArray()) {\r\n\t\t\tlet array = [];\r\n\t\t\tfor (const item of this.items) {\r\n\t\t\t\tconst itemStr = item.asString();\r\n\t\t\t\tif (itemStr === undefined) return undefined;\r\n\t\t\t\tarray.push(itemStr);\r\n\t\t\t}\r\n\t\t\treturn `${array}`;\r\n\t\t}\r\n\t\tif (this.isConstArray()) return `${this.array}`;\r\n\t\tif (this.isTemplateString()) {\r\n\t\t\tlet str = \"\";\r\n\t\t\tfor (const part of this.parts) {\r\n\t\t\t\tconst partStr = part.asString();\r\n\t\t\t\tif (partStr === undefined) return undefined;\r\n\t\t\t\tstr += partStr;\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tsetString(string) {\r\n\t\tthis.type = TypeString;\r\n\t\tthis.string = string;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUndefined() {\r\n\t\tthis.type = TypeUndefined;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetNull() {\r\n\t\tthis.type = TypeNull;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetNumber(number) {\r\n\t\tthis.type = TypeNumber;\r\n\t\tthis.number = number;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetBigInt(bigint) {\r\n\t\tthis.type = TypeBigInt;\r\n\t\tthis.bigint = bigint;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetBoolean(bool) {\r\n\t\tthis.type = TypeBoolean;\r\n\t\tthis.bool = bool;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetRegExp(regExp) {\r\n\t\tthis.type = TypeRegExp;\r\n\t\tthis.regExp = regExp;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetIdentifier(identifier, rootInfo, getMembers, getMembersOptionals) {\r\n\t\tthis.type = TypeIdentifier;\r\n\t\tthis.identifier = identifier;\r\n\t\tthis.rootInfo = rootInfo;\r\n\t\tthis.getMembers = getMembers;\r\n\t\tthis.getMembersOptionals = getMembersOptionals;\r\n\t\tthis.sideEffects = true;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetWrapped(prefix, postfix, innerExpressions) {\r\n\t\tthis.type = TypeWrapped;\r\n\t\tthis.prefix = prefix;\r\n\t\tthis.postfix = postfix;\r\n\t\tthis.wrappedInnerExpressions = innerExpressions;\r\n\t\tthis.sideEffects = true;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetOptions(options) {\r\n\t\tthis.type = TypeConditional;\r\n\t\tthis.options = options;\r\n\t\tthis.sideEffects = true;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddOptions(options) {\r\n\t\tif (!this.options) {\r\n\t\t\tthis.type = TypeConditional;\r\n\t\t\tthis.options = [];\r\n\t\t\tthis.sideEffects = true;\r\n\t\t}\r\n\t\tfor (const item of options) {\r\n\t\t\tthis.options.push(item);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetItems(items) {\r\n\t\tthis.type = TypeArray;\r\n\t\tthis.items = items;\r\n\t\tthis.sideEffects = items.some(i => i.couldHaveSideEffects());\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetArray(array) {\r\n\t\tthis.type = TypeConstArray;\r\n\t\tthis.array = array;\r\n\t\tthis.sideEffects = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetTemplateString(quasis, parts, kind) {\r\n\t\tthis.type = TypeTemplateString;\r\n\t\tthis.quasis = quasis;\r\n\t\tthis.parts = parts;\r\n\t\tthis.templateStringKind = kind;\r\n\t\tthis.sideEffects = parts.some(p => p.sideEffects);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetTruthy() {\r\n\t\tthis.falsy = false;\r\n\t\tthis.truthy = true;\r\n\t\tthis.nullish = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFalsy() {\r\n\t\tthis.falsy = true;\r\n\t\tthis.truthy = false;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetNullish(value) {\r\n\t\tthis.nullish = value;\r\n\r\n\t\tif (value) return this.setFalsy();\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetRange(range) {\r\n\t\tthis.range = range;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetSideEffects(sideEffects = true) {\r\n\t\tthis.sideEffects = sideEffects;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetExpression(expression) {\r\n\t\tthis.expression = expression;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} flags regexp flags\r\n * @returns {boolean} is valid flags\r\n */\r\nBasicEvaluatedExpression.isValidRegExpFlags = flags => {\r\n\tconst len = flags.length;\r\n\r\n\tif (len === 0) return true;\r\n\tif (len > 4) return false;\r\n\r\n\t// cspell:word gimy\r\n\tlet remaining = 0b0000; // bit per RegExp flag: gimy\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tswitch (flags.charCodeAt(i)) {\r\n\t\t\tcase 103 /* g */:\r\n\t\t\t\tif (remaining & 0b1000) return false;\r\n\t\t\t\tremaining |= 0b1000;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 105 /* i */:\r\n\t\t\t\tif (remaining & 0b0100) return false;\r\n\t\t\t\tremaining |= 0b0100;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 109 /* m */:\r\n\t\t\t\tif (remaining & 0b0010) return false;\r\n\t\t\t\tremaining |= 0b0010;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 121 /* y */:\r\n\t\t\t\tif (remaining & 0b0001) return false;\r\n\t\t\t\tremaining |= 0b0001;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nmodule.exports = BasicEvaluatedExpression;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}