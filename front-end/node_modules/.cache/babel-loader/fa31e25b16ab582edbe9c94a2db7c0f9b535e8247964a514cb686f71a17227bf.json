{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst DynamicExports = require(\"./DynamicExports\");\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nmodule.exports = class HarmonyDetectionParserPlugin {\n  constructor(options) {\n    const {\n      topLevelAwait = false\n    } = options || {};\n    this.topLevelAwait = topLevelAwait;\n  }\n  apply(parser) {\n    parser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n      const isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n      const isHarmony = isStrictHarmony || ast.body.some(statement => statement.type === \"ImportDeclaration\" || statement.type === \"ExportDefaultDeclaration\" || statement.type === \"ExportNamedDeclaration\" || statement.type === \"ExportAllDeclaration\");\n      if (isHarmony) {\n        const module = parser.state.module;\n        const compatDep = new HarmonyCompatibilityDependency();\n        compatDep.loc = {\n          start: {\n            line: -1,\n            column: 0\n          },\n          end: {\n            line: -1,\n            column: 0\n          },\n          index: -3\n        };\n        module.addPresentationalDependency(compatDep);\n        DynamicExports.bailout(parser.state);\n        HarmonyExports.enable(parser.state, isStrictHarmony);\n        parser.scope.isStrict = true;\n      }\n    });\n    parser.hooks.topLevelAwait.tap(\"HarmonyDetectionParserPlugin\", () => {\n      const module = parser.state.module;\n      if (!this.topLevelAwait) {\n        throw new Error(\"The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)\");\n      }\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        throw new Error(\"Top-level-await is only supported in EcmaScript Modules\");\n      }\n      module.buildMeta.async = true;\n    });\n    const skipInHarmony = () => {\n      if (HarmonyExports.isEnabled(parser.state)) {\n        return true;\n      }\n    };\n    const nullInHarmony = () => {\n      if (HarmonyExports.isEnabled(parser.state)) {\n        return null;\n      }\n    };\n    const nonHarmonyIdentifiers = [\"define\", \"exports\"];\n    for (const identifier of nonHarmonyIdentifiers) {\n      parser.hooks.evaluateTypeof.for(identifier).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n      parser.hooks.typeof.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      parser.hooks.evaluate.for(identifier).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n      parser.hooks.expression.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      parser.hooks.call.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n    }\n  }\n};","map":{"version":3,"names":["DynamicExports","require","HarmonyCompatibilityDependency","HarmonyExports","module","exports","HarmonyDetectionParserPlugin","constructor","options","topLevelAwait","apply","parser","hooks","program","tap","ast","isStrictHarmony","state","type","isHarmony","body","some","statement","compatDep","loc","start","line","column","end","index","addPresentationalDependency","bailout","enable","scope","isStrict","Error","isEnabled","buildMeta","async","skipInHarmony","nullInHarmony","nonHarmonyIdentifiers","identifier","evaluateTypeof","for","typeof","evaluate","expression","call"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/HarmonyDetectionParserPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst DynamicExports = require(\"./DynamicExports\");\r\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\r\nconst HarmonyExports = require(\"./HarmonyExports\");\r\n\r\nmodule.exports = class HarmonyDetectionParserPlugin {\r\n\tconstructor(options) {\r\n\t\tconst { topLevelAwait = false } = options || {};\r\n\t\tthis.topLevelAwait = topLevelAwait;\r\n\t}\r\n\r\n\tapply(parser) {\r\n\t\tparser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\r\n\t\t\tconst isStrictHarmony = parser.state.module.type === \"javascript/esm\";\r\n\t\t\tconst isHarmony =\r\n\t\t\t\tisStrictHarmony ||\r\n\t\t\t\tast.body.some(\r\n\t\t\t\t\tstatement =>\r\n\t\t\t\t\t\tstatement.type === \"ImportDeclaration\" ||\r\n\t\t\t\t\t\tstatement.type === \"ExportDefaultDeclaration\" ||\r\n\t\t\t\t\t\tstatement.type === \"ExportNamedDeclaration\" ||\r\n\t\t\t\t\t\tstatement.type === \"ExportAllDeclaration\"\r\n\t\t\t\t);\r\n\t\t\tif (isHarmony) {\r\n\t\t\t\tconst module = parser.state.module;\r\n\t\t\t\tconst compatDep = new HarmonyCompatibilityDependency();\r\n\t\t\t\tcompatDep.loc = {\r\n\t\t\t\t\tstart: {\r\n\t\t\t\t\t\tline: -1,\r\n\t\t\t\t\t\tcolumn: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\tend: {\r\n\t\t\t\t\t\tline: -1,\r\n\t\t\t\t\t\tcolumn: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\tindex: -3\r\n\t\t\t\t};\r\n\t\t\t\tmodule.addPresentationalDependency(compatDep);\r\n\t\t\t\tDynamicExports.bailout(parser.state);\r\n\t\t\t\tHarmonyExports.enable(parser.state, isStrictHarmony);\r\n\t\t\t\tparser.scope.isStrict = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tparser.hooks.topLevelAwait.tap(\"HarmonyDetectionParserPlugin\", () => {\r\n\t\t\tconst module = parser.state.module;\r\n\t\t\tif (!this.topLevelAwait) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\"The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\"Top-level-await is only supported in EcmaScript Modules\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmodule.buildMeta.async = true;\r\n\t\t});\r\n\r\n\t\tconst skipInHarmony = () => {\r\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst nullInHarmony = () => {\r\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst nonHarmonyIdentifiers = [\"define\", \"exports\"];\r\n\t\tfor (const identifier of nonHarmonyIdentifiers) {\r\n\t\t\tparser.hooks.evaluateTypeof\r\n\t\t\t\t.for(identifier)\r\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\r\n\t\t\tparser.hooks.typeof\r\n\t\t\t\t.for(identifier)\r\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\r\n\t\t\tparser.hooks.evaluate\r\n\t\t\t\t.for(identifier)\r\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\r\n\t\t\tparser.hooks.expression\r\n\t\t\t\t.for(identifier)\r\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\r\n\t\t\tparser.hooks.call\r\n\t\t\t\t.for(identifier)\r\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\r\n\t\t}\r\n\t}\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}