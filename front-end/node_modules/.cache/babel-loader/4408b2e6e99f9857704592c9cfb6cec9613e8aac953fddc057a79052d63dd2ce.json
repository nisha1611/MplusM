{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\r\n * @typedef {Object} ModuleFactoryResult\r\n * @property {Module=} module the created module or unset if no module was created\r\n * @property {Set<string>=} fileDependencies\r\n * @property {Set<string>=} contextDependencies\r\n * @property {Set<string>=} missingDependencies\r\n * @property {boolean=} cacheable allow to use the unsafe cache\r\n */\n\n/**\r\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\r\n * @property {string} issuer\r\n * @property {string | null=} issuerLayer\r\n * @property {string} compiler\r\n */\n\n/**\r\n * @typedef {Object} ModuleFactoryCreateData\r\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\r\n * @property {ResolveOptions=} resolveOptions\r\n * @property {string} context\r\n * @property {Dependency[]} dependencies\r\n */\nclass ModuleFactory {\n  /* istanbul ignore next */\n  /**\r\n   * @abstract\r\n   * @param {ModuleFactoryCreateData} data data object\r\n   * @param {function(Error=, ModuleFactoryResult=): void} callback callback\r\n   * @returns {void}\r\n   */\n  create(data, callback) {\n    const AbstractMethodError = require(\"./AbstractMethodError\");\n    throw new AbstractMethodError();\n  }\n}\nmodule.exports = ModuleFactory;","map":{"version":3,"names":["ModuleFactory","create","data","callback","AbstractMethodError","require","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/ModuleFactory.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\r\n/** @typedef {import(\"./Dependency\")} Dependency */\r\n/** @typedef {import(\"./Module\")} Module */\r\n\r\n/**\r\n * @typedef {Object} ModuleFactoryResult\r\n * @property {Module=} module the created module or unset if no module was created\r\n * @property {Set<string>=} fileDependencies\r\n * @property {Set<string>=} contextDependencies\r\n * @property {Set<string>=} missingDependencies\r\n * @property {boolean=} cacheable allow to use the unsafe cache\r\n */\r\n\r\n/**\r\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\r\n * @property {string} issuer\r\n * @property {string | null=} issuerLayer\r\n * @property {string} compiler\r\n */\r\n\r\n/**\r\n * @typedef {Object} ModuleFactoryCreateData\r\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\r\n * @property {ResolveOptions=} resolveOptions\r\n * @property {string} context\r\n * @property {Dependency[]} dependencies\r\n */\r\n\r\nclass ModuleFactory {\r\n\t/* istanbul ignore next */\r\n\t/**\r\n\t * @abstract\r\n\t * @param {ModuleFactoryCreateData} data data object\r\n\t * @param {function(Error=, ModuleFactoryResult=): void} callback callback\r\n\t * @returns {void}\r\n\t */\r\n\tcreate(data, callback) {\r\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nmodule.exports = ModuleFactory;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,aAAa,CAAC;EACnB;EACA;AACD;AACA;AACA;AACA;AACA;EACCC,MAAM,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACtB,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;IAC5D,MAAM,IAAID,mBAAmB,EAAE;EAChC;AACD;AAEAE,MAAM,CAACC,OAAO,GAAGP,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}