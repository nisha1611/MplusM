{"ast":null,"code":"'use strict';\n\nconst assert = require('assert');\nconst {\n  inspect\n} = require('util');\nconst busboy = require('..');\nconst active = new Map();\nconst tests = [{\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'super alpha file', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_1\"', '', 'super beta file', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'A'.repeat(1023), '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_1\"; filename=\"1k_b.dat\"', 'Content-Type: application/octet-stream', '', 'B'.repeat(1023), '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'field',\n    name: 'file_name_0',\n    val: 'super alpha file',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, {\n    type: 'field',\n    name: 'file_name_1',\n    val: 'super beta file',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, {\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('A'.repeat(1023)),\n    info: {\n      filename: '1k_a.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_1',\n    data: Buffer.from('B'.repeat(1023)),\n    info: {\n      filename: '1k_b.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }],\n  what: 'Fields and files'\n}, {\n  source: [['------WebKitFormBoundaryTB2MiQ36fnSJlrhY', 'Content-Disposition: form-data; name=\"cont\"', '', 'some random content', '------WebKitFormBoundaryTB2MiQ36fnSJlrhY', 'Content-Disposition: form-data; name=\"pass\"', '', 'some random pass', '------WebKitFormBoundaryTB2MiQ36fnSJlrhY', 'Content-Disposition: form-data; name=bit', '', '2', '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--'].join('\\r\\n')],\n  boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n  expected: [{\n    type: 'field',\n    name: 'cont',\n    val: 'some random content',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, {\n    type: 'field',\n    name: 'pass',\n    val: 'some random pass',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, {\n    type: 'field',\n    name: 'bit',\n    val: '2',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }],\n  what: 'Fields only'\n}, {\n  source: [''],\n  boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n  expected: [{\n    error: 'Unexpected end of form'\n  }],\n  what: 'No fields and no files'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'super alpha file', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  limits: {\n    fileSize: 13,\n    fieldSize: 5\n  },\n  expected: [{\n    type: 'field',\n    name: 'file_name_0',\n    val: 'super',\n    info: {\n      nameTruncated: false,\n      valueTruncated: true,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, {\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('ABCDEFGHIJKLM'),\n    info: {\n      filename: '1k_a.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: true\n  }],\n  what: 'Fields and files (limits)'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'super alpha file', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  limits: {\n    files: 0\n  },\n  expected: [{\n    type: 'field',\n    name: 'file_name_0',\n    val: 'super alpha file',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, 'filesLimit'],\n  what: 'Fields and files (limits: 0 files)'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'super alpha file', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_1\"', '', 'super beta file', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'A'.repeat(1023), '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_1\"; filename=\"1k_b.dat\"', 'Content-Type: application/octet-stream', '', 'B'.repeat(1023), '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'field',\n    name: 'file_name_0',\n    val: 'super alpha file',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, {\n    type: 'field',\n    name: 'file_name_1',\n    val: 'super beta file',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }],\n  events: ['field'],\n  what: 'Fields and (ignored) files'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"/tmp/1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_1\"; filename=\"C:\\\\files\\\\1k_b.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_2\"; filename=\"relative/1k_c.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: '1k_a.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_1',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: '1k_b.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_2',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: '1k_c.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }],\n  what: 'Files with filenames containing paths'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"/absolute/1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_1\"; filename=\"C:\\\\absolute\\\\1k_b.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_2\"; filename=\"relative/1k_c.dat\"', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  preservePath: true,\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: '/absolute/1k_a.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_1',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: 'C:\\\\absolute\\\\1k_b.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_2',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: 'relative/1k_c.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }],\n  what: 'Paths to be preserved through the preservePath option'\n}, {\n  source: [['------WebKitFormBoundaryTB2MiQ36fnSJlrhY', 'Content-Disposition: form-data; name=\"cont\"', 'Content-Type: ', '', 'some random content', '------WebKitFormBoundaryTB2MiQ36fnSJlrhY', 'Content-Disposition: ', '', 'some random pass', '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--'].join('\\r\\n')],\n  boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n  expected: [{\n    type: 'field',\n    name: 'cont',\n    val: 'some random content',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }],\n  what: 'Empty content-type and empty content-disposition'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"file\"; filename*=utf-8\\'\\'n%C3%A4me.txt', 'Content-Type: application/octet-stream', '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'file',\n    data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n    info: {\n      filename: 'näme.txt',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false\n  }],\n  what: 'Unicode filenames'\n}, {\n  source: [['--asdasdasdasd\\r\\n', 'Content-Type: text/plain\\r\\n', 'Content-Disposition: form-data; name=\"foo\"\\r\\n', '\\r\\n', 'asd\\r\\n', '--asdasdasdasd--'].join(':)')],\n  boundary: 'asdasdasdasd',\n  expected: [{\n    error: 'Malformed part header'\n  }, {\n    error: 'Unexpected end of form'\n  }],\n  what: 'Stopped mid-header'\n}, {\n  source: [['------WebKitFormBoundaryTB2MiQ36fnSJlrhY', 'Content-Disposition: form-data; name=\"cont\"', 'Content-Type: application/json', '', '{}', '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--'].join('\\r\\n')],\n  boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n  expected: [{\n    type: 'field',\n    name: 'cont',\n    val: '{}',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'application/json'\n    }\n  }],\n  what: 'content-type for fields'\n}, {\n  source: ['------WebKitFormBoundaryTB2MiQ36fnSJlrhY--'],\n  boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n  expected: [],\n  what: 'empty form'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=upload_file_0; filename=\"1k_a.dat\"', 'Content-Type: application/octet-stream', 'Content-Transfer-Encoding: binary', '', ''].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.alloc(0),\n    info: {\n      filename: '1k_a.dat',\n      encoding: 'binary',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false,\n    err: 'Unexpected end of form'\n  }, {\n    error: 'Unexpected end of form'\n  }],\n  what: 'Stopped mid-file #1'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=upload_file_0; filename=\"1k_a.dat\"', 'Content-Type: application/octet-stream', '', 'a'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('a'),\n    info: {\n      filename: '1k_a.dat',\n      encoding: '7bit',\n      mimeType: 'application/octet-stream'\n    },\n    limited: false,\n    err: 'Unexpected end of form'\n  }, {\n    error: 'Unexpected end of form'\n  }],\n  what: 'Stopped mid-file #2'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"notes.txt\"', 'Content-Type: text/plain; charset=utf8', '', 'a', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('a'),\n    info: {\n      filename: 'notes.txt',\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }],\n  what: 'Text file with charset'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"notes.txt\"', 'Content-Type: ', ' text/plain; charset=utf8', '', 'a', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('a'),\n    info: {\n      filename: 'notes.txt',\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }],\n  what: 'Folded header value'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Type: text/plain; charset=utf8', '', 'a', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [],\n  what: 'No Content-Disposition'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'a'.repeat(64 * 1024), '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"notes.txt\"', 'Content-Type: ', ' text/plain; charset=utf8', '', 'bc', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  limits: {\n    fieldSize: Infinity\n  },\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('bc'),\n    info: {\n      filename: 'notes.txt',\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }],\n  events: ['file'],\n  what: 'Skip field parts if no listener'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'a', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"notes.txt\"', 'Content-Type: ', ' text/plain; charset=utf8', '', 'bc', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  limits: {\n    parts: 1\n  },\n  expected: [{\n    type: 'field',\n    name: 'file_name_0',\n    val: 'a',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, 'partsLimit'],\n  what: 'Parts limit'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_0\"', '', 'a', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; name=\"file_name_1\"', '', 'b', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  limits: {\n    fields: 1\n  },\n  expected: [{\n    type: 'field',\n    name: 'file_name_0',\n    val: 'a',\n    info: {\n      nameTruncated: false,\n      valueTruncated: false,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    }\n  }, 'fieldsLimit'],\n  what: 'Fields limit'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"notes.txt\"', 'Content-Type: text/plain; charset=utf8', '', 'ab', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_1\"; filename=\"notes2.txt\"', 'Content-Type: text/plain; charset=utf8', '', 'cd', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  limits: {\n    files: 1\n  },\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('ab'),\n    info: {\n      filename: 'notes.txt',\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }, 'filesLimit'],\n  what: 'Files limit'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + `name=\"upload_file_0\"; filename=\"${'a'.repeat(64 * 1024)}.txt\"`, 'Content-Type: text/plain; charset=utf8', '', 'ab', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_1\"; filename=\"notes2.txt\"', 'Content-Type: text/plain; charset=utf8', '', 'cd', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    error: 'Malformed part header'\n  }, {\n    type: 'file',\n    name: 'upload_file_1',\n    data: Buffer.from('cd'),\n    info: {\n      filename: 'notes2.txt',\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }],\n  what: 'Oversized part header'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + 'name=\"upload_file_0\"; filename=\"notes.txt\"', 'Content-Type: text/plain; charset=utf8', '', 'a'.repeat(31) + '\\r'].join('\\r\\n'), 'b'.repeat(40), '\\r\\n-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  fileHwm: 32,\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('a'.repeat(31) + '\\r' + 'b'.repeat(40)),\n    info: {\n      filename: 'notes.txt',\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }],\n  what: 'Lookbehind data should not stall file streams'\n}, {\n  source: [['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + `name=\"upload_file_0\"; filename=\"${'a'.repeat(8 * 1024)}.txt\"`, 'Content-Type: text/plain; charset=utf8', '', 'ab', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + `name=\"upload_file_1\"; filename=\"${'b'.repeat(8 * 1024)}.txt\"`, 'Content-Type: text/plain; charset=utf8', '', 'cd', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k', 'Content-Disposition: form-data; ' + `name=\"upload_file_2\"; filename=\"${'c'.repeat(8 * 1024)}.txt\"`, 'Content-Type: text/plain; charset=utf8', '', 'ef', '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'].join('\\r\\n')],\n  boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n  expected: [{\n    type: 'file',\n    name: 'upload_file_0',\n    data: Buffer.from('ab'),\n    info: {\n      filename: `${'a'.repeat(8 * 1024)}.txt`,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_1',\n    data: Buffer.from('cd'),\n    info: {\n      filename: `${'b'.repeat(8 * 1024)}.txt`,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }, {\n    type: 'file',\n    name: 'upload_file_2',\n    data: Buffer.from('ef'),\n    info: {\n      filename: `${'c'.repeat(8 * 1024)}.txt`,\n      encoding: '7bit',\n      mimeType: 'text/plain'\n    },\n    limited: false\n  }],\n  what: 'Header size limit should be per part'\n}, {\n  source: ['\\r\\n--d1bf46b3-aa33-4061-b28d-6c5ced8b08ee\\r\\n', 'Content-Type: application/gzip\\r\\n' + 'Content-Encoding: gzip\\r\\n' + 'Content-Disposition: form-data; name=batch-1; filename=batch-1' + '\\r\\n\\r\\n', '\\r\\n--d1bf46b3-aa33-4061-b28d-6c5ced8b08ee--'],\n  boundary: 'd1bf46b3-aa33-4061-b28d-6c5ced8b08ee',\n  expected: [{\n    type: 'file',\n    name: 'batch-1',\n    data: Buffer.alloc(0),\n    info: {\n      filename: 'batch-1',\n      encoding: '7bit',\n      mimeType: 'application/gzip'\n    },\n    limited: false\n  }],\n  what: 'Empty part'\n}];\nfor (const test of tests) {\n  active.set(test, 1);\n  const {\n    what,\n    boundary,\n    events,\n    limits,\n    preservePath,\n    fileHwm\n  } = test;\n  const bb = busboy({\n    fileHwm,\n    limits,\n    preservePath,\n    headers: {\n      'content-type': `multipart/form-data; boundary=${boundary}`\n    }\n  });\n  const results = [];\n  if (events === undefined || events.includes('field')) {\n    bb.on('field', (name, val, info) => {\n      results.push({\n        type: 'field',\n        name,\n        val,\n        info\n      });\n    });\n  }\n  if (events === undefined || events.includes('file')) {\n    bb.on('file', (name, stream, info) => {\n      const data = [];\n      let nb = 0;\n      const file = {\n        type: 'file',\n        name,\n        data: null,\n        info,\n        limited: false\n      };\n      results.push(file);\n      stream.on('data', d => {\n        data.push(d);\n        nb += d.length;\n      }).on('limit', () => {\n        file.limited = true;\n      }).on('close', () => {\n        file.data = Buffer.concat(data, nb);\n        assert.strictEqual(stream.truncated, file.limited);\n      }).once('error', err => {\n        file.err = err.message;\n      });\n    });\n  }\n  bb.on('error', err => {\n    results.push({\n      error: err.message\n    });\n  });\n  bb.on('partsLimit', () => {\n    results.push('partsLimit');\n  });\n  bb.on('filesLimit', () => {\n    results.push('filesLimit');\n  });\n  bb.on('fieldsLimit', () => {\n    results.push('fieldsLimit');\n  });\n  bb.on('close', () => {\n    active.delete(test);\n    assert.deepStrictEqual(results, test.expected, `[${what}] Results mismatch.\\n` + `Parsed: ${inspect(results)}\\n` + `Expected: ${inspect(test.expected)}`);\n  });\n  for (const src of test.source) {\n    const buf = typeof src === 'string' ? Buffer.from(src, 'utf8') : src;\n    bb.write(buf);\n  }\n  bb.end();\n}\n\n// Byte-by-byte versions\nfor (let test of tests) {\n  test = {\n    ...test\n  };\n  test.what += ' (byte-by-byte)';\n  active.set(test, 1);\n  const {\n    what,\n    boundary,\n    events,\n    limits,\n    preservePath,\n    fileHwm\n  } = test;\n  const bb = busboy({\n    fileHwm,\n    limits,\n    preservePath,\n    headers: {\n      'content-type': `multipart/form-data; boundary=${boundary}`\n    }\n  });\n  const results = [];\n  if (events === undefined || events.includes('field')) {\n    bb.on('field', (name, val, info) => {\n      results.push({\n        type: 'field',\n        name,\n        val,\n        info\n      });\n    });\n  }\n  if (events === undefined || events.includes('file')) {\n    bb.on('file', (name, stream, info) => {\n      const data = [];\n      let nb = 0;\n      const file = {\n        type: 'file',\n        name,\n        data: null,\n        info,\n        limited: false\n      };\n      results.push(file);\n      stream.on('data', d => {\n        data.push(d);\n        nb += d.length;\n      }).on('limit', () => {\n        file.limited = true;\n      }).on('close', () => {\n        file.data = Buffer.concat(data, nb);\n        assert.strictEqual(stream.truncated, file.limited);\n      }).once('error', err => {\n        file.err = err.message;\n      });\n    });\n  }\n  bb.on('error', err => {\n    results.push({\n      error: err.message\n    });\n  });\n  bb.on('partsLimit', () => {\n    results.push('partsLimit');\n  });\n  bb.on('filesLimit', () => {\n    results.push('filesLimit');\n  });\n  bb.on('fieldsLimit', () => {\n    results.push('fieldsLimit');\n  });\n  bb.on('close', () => {\n    active.delete(test);\n    assert.deepStrictEqual(results, test.expected, `[${what}] Results mismatch.\\n` + `Parsed: ${inspect(results)}\\n` + `Expected: ${inspect(test.expected)}`);\n  });\n  for (const src of test.source) {\n    const buf = typeof src === 'string' ? Buffer.from(src, 'utf8') : src;\n    for (let i = 0; i < buf.length; ++i) bb.write(buf.slice(i, i + 1));\n  }\n  bb.end();\n}\n{\n  let exception = false;\n  process.once('uncaughtException', ex => {\n    exception = true;\n    throw ex;\n  });\n  process.on('exit', () => {\n    if (exception || active.size === 0) return;\n    process.exitCode = 1;\n    console.error('==========================');\n    console.error(`${active.size} test(s) did not finish:`);\n    console.error('==========================');\n    console.error(Array.from(active.keys()).map(v => v.what).join('\\n'));\n  });\n}","map":{"version":3,"names":["assert","require","inspect","busboy","active","Map","tests","source","repeat","join","boundary","expected","type","name","val","info","nameTruncated","valueTruncated","encoding","mimeType","data","Buffer","from","filename","limited","what","error","limits","fileSize","fieldSize","files","events","preservePath","alloc","err","Infinity","parts","fields","fileHwm","test","set","bb","headers","results","undefined","includes","on","push","stream","nb","file","d","length","concat","strictEqual","truncated","once","message","delete","deepStrictEqual","src","buf","write","end","i","slice","exception","process","ex","size","exitCode","console","Array","keys","map","v"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/busboy/test/test-types-multipart.js"],"sourcesContent":["'use strict';\n\nconst assert = require('assert');\nconst { inspect } = require('util');\n\nconst busboy = require('..');\n\nconst active = new Map();\n\nconst tests = [\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'super alpha file',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_1\"',\n       '',\n       'super beta file',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'A'.repeat(1023),\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_1\"; filename=\"1k_b.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'B'.repeat(1023),\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'field',\n        name: 'file_name_0',\n        val: 'super alpha file',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      { type: 'field',\n        name: 'file_name_1',\n        val: 'super beta file',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('A'.repeat(1023)),\n        info: {\n          filename: '1k_a.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_1',\n        data: Buffer.from('B'.repeat(1023)),\n        info: {\n          filename: '1k_b.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Fields and files'\n  },\n  { source: [\n      ['------WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n       'Content-Disposition: form-data; name=\"cont\"',\n       '',\n       'some random content',\n       '------WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n       'Content-Disposition: form-data; name=\"pass\"',\n       '',\n       'some random pass',\n       '------WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n       'Content-Disposition: form-data; name=bit',\n       '',\n       '2',\n       '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--'\n      ].join('\\r\\n')\n    ],\n    boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n    expected: [\n      { type: 'field',\n        name: 'cont',\n        val: 'some random content',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      { type: 'field',\n        name: 'pass',\n        val: 'some random pass',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      { type: 'field',\n        name: 'bit',\n        val: '2',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n    ],\n    what: 'Fields only'\n  },\n  { source: [\n      ''\n    ],\n    boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n    expected: [\n      { error: 'Unexpected end of form' },\n    ],\n    what: 'No fields and no files'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'super alpha file',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    limits: {\n      fileSize: 13,\n      fieldSize: 5\n    },\n    expected: [\n      { type: 'field',\n        name: 'file_name_0',\n        val: 'super',\n        info: {\n          nameTruncated: false,\n          valueTruncated: true,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('ABCDEFGHIJKLM'),\n        info: {\n          filename: '1k_a.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: true,\n      },\n    ],\n    what: 'Fields and files (limits)'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'super alpha file',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    limits: {\n      files: 0\n    },\n    expected: [\n      { type: 'field',\n        name: 'file_name_0',\n        val: 'super alpha file',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      'filesLimit',\n    ],\n    what: 'Fields and files (limits: 0 files)'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'super alpha file',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_1\"',\n       '',\n       'super beta file',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'A'.repeat(1023),\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_1\"; filename=\"1k_b.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'B'.repeat(1023),\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'field',\n        name: 'file_name_0',\n        val: 'super alpha file',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      { type: 'field',\n        name: 'file_name_1',\n        val: 'super beta file',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n    ],\n    events: ['field'],\n    what: 'Fields and (ignored) files'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"/tmp/1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_1\"; filename=\"C:\\\\files\\\\1k_b.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_2\"; filename=\"relative/1k_c.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: '1k_a.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_1',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: '1k_b.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_2',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: '1k_c.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Files with filenames containing paths'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"/absolute/1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_1\"; filename=\"C:\\\\absolute\\\\1k_b.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_2\"; filename=\"relative/1k_c.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    preservePath: true,\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: '/absolute/1k_a.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_1',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: 'C:\\\\absolute\\\\1k_b.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_2',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: 'relative/1k_c.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Paths to be preserved through the preservePath option'\n  },\n  { source: [\n      ['------WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n       'Content-Disposition: form-data; name=\"cont\"',\n       'Content-Type: ',\n       '',\n       'some random content',\n       '------WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n       'Content-Disposition: ',\n       '',\n       'some random pass',\n       '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--'\n      ].join('\\r\\n')\n    ],\n    boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n    expected: [\n      { type: 'field',\n        name: 'cont',\n        val: 'some random content',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n    ],\n    what: 'Empty content-type and empty content-disposition'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"file\"; filename*=utf-8\\'\\'n%C3%A4me.txt',\n       'Content-Type: application/octet-stream',\n       '',\n       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--'\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'file',\n        data: Buffer.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        info: {\n          filename: 'näme.txt',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Unicode filenames'\n  },\n  { source: [\n      ['--asdasdasdasd\\r\\n',\n       'Content-Type: text/plain\\r\\n',\n       'Content-Disposition: form-data; name=\"foo\"\\r\\n',\n       '\\r\\n',\n       'asd\\r\\n',\n       '--asdasdasdasd--'\n      ].join(':)')\n    ],\n    boundary: 'asdasdasdasd',\n    expected: [\n      { error: 'Malformed part header' },\n      { error: 'Unexpected end of form' },\n    ],\n    what: 'Stopped mid-header'\n  },\n  { source: [\n      ['------WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n       'Content-Disposition: form-data; name=\"cont\"',\n       'Content-Type: application/json',\n       '',\n       '{}',\n       '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--',\n      ].join('\\r\\n')\n    ],\n    boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n    expected: [\n      { type: 'field',\n        name: 'cont',\n        val: '{}',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'application/json',\n        },\n      },\n    ],\n    what: 'content-type for fields'\n  },\n  { source: [\n      '------WebKitFormBoundaryTB2MiQ36fnSJlrhY--',\n    ],\n    boundary: '----WebKitFormBoundaryTB2MiQ36fnSJlrhY',\n    expected: [],\n    what: 'empty form'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=upload_file_0; filename=\"1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       'Content-Transfer-Encoding: binary',\n       '',\n       '',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.alloc(0),\n        info: {\n          filename: '1k_a.dat',\n          encoding: 'binary',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n        err: 'Unexpected end of form',\n      },\n      { error: 'Unexpected end of form' },\n    ],\n    what: 'Stopped mid-file #1'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=upload_file_0; filename=\"1k_a.dat\"',\n       'Content-Type: application/octet-stream',\n       '',\n       'a',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('a'),\n        info: {\n          filename: '1k_a.dat',\n          encoding: '7bit',\n          mimeType: 'application/octet-stream',\n        },\n        limited: false,\n        err: 'Unexpected end of form',\n      },\n      { error: 'Unexpected end of form' },\n    ],\n    what: 'Stopped mid-file #2'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"notes.txt\"',\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'a',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('a'),\n        info: {\n          filename: 'notes.txt',\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Text file with charset'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"notes.txt\"',\n       'Content-Type: ',\n       ' text/plain; charset=utf8',\n       '',\n       'a',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('a'),\n        info: {\n          filename: 'notes.txt',\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Folded header value'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'a',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [],\n    what: 'No Content-Disposition'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'a'.repeat(64 * 1024),\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"notes.txt\"',\n       'Content-Type: ',\n       ' text/plain; charset=utf8',\n       '',\n       'bc',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    limits: {\n      fieldSize: Infinity,\n    },\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('bc'),\n        info: {\n          filename: 'notes.txt',\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n    ],\n    events: [ 'file' ],\n    what: 'Skip field parts if no listener'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'a',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"notes.txt\"',\n       'Content-Type: ',\n       ' text/plain; charset=utf8',\n       '',\n       'bc',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    limits: {\n      parts: 1,\n    },\n    expected: [\n      { type: 'field',\n        name: 'file_name_0',\n        val: 'a',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      'partsLimit',\n    ],\n    what: 'Parts limit'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_0\"',\n       '',\n       'a',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; name=\"file_name_1\"',\n       '',\n       'b',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    limits: {\n      fields: 1,\n    },\n    expected: [\n      { type: 'field',\n        name: 'file_name_0',\n        val: 'a',\n        info: {\n          nameTruncated: false,\n          valueTruncated: false,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n      },\n      'fieldsLimit',\n    ],\n    what: 'Fields limit'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"notes.txt\"',\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'ab',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_1\"; filename=\"notes2.txt\"',\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'cd',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    limits: {\n      files: 1,\n    },\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('ab'),\n        info: {\n          filename: 'notes.txt',\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n      'filesLimit',\n    ],\n    what: 'Files limit'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + `name=\"upload_file_0\"; filename=\"${'a'.repeat(64 * 1024)}.txt\"`,\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'ab',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_1\"; filename=\"notes2.txt\"',\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'cd',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { error: 'Malformed part header' },\n      { type: 'file',\n        name: 'upload_file_1',\n        data: Buffer.from('cd'),\n        info: {\n          filename: 'notes2.txt',\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Oversized part header'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + 'name=\"upload_file_0\"; filename=\"notes.txt\"',\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'a'.repeat(31) + '\\r',\n      ].join('\\r\\n'),\n      'b'.repeat(40),\n      '\\r\\n-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    fileHwm: 32,\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('a'.repeat(31) + '\\r' + 'b'.repeat(40)),\n        info: {\n          filename: 'notes.txt',\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Lookbehind data should not stall file streams'\n  },\n  { source: [\n      ['-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + `name=\"upload_file_0\"; filename=\"${'a'.repeat(8 * 1024)}.txt\"`,\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'ab',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + `name=\"upload_file_1\"; filename=\"${'b'.repeat(8 * 1024)}.txt\"`,\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'cd',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n       'Content-Disposition: form-data; '\n         + `name=\"upload_file_2\"; filename=\"${'c'.repeat(8 * 1024)}.txt\"`,\n       'Content-Type: text/plain; charset=utf8',\n       '',\n       'ef',\n       '-----------------------------paZqsnEHRufoShdX6fh0lUhXBP4k--',\n      ].join('\\r\\n')\n    ],\n    boundary: '---------------------------paZqsnEHRufoShdX6fh0lUhXBP4k',\n    expected: [\n      { type: 'file',\n        name: 'upload_file_0',\n        data: Buffer.from('ab'),\n        info: {\n          filename: `${'a'.repeat(8 * 1024)}.txt`,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_1',\n        data: Buffer.from('cd'),\n        info: {\n          filename: `${'b'.repeat(8 * 1024)}.txt`,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n      { type: 'file',\n        name: 'upload_file_2',\n        data: Buffer.from('ef'),\n        info: {\n          filename: `${'c'.repeat(8 * 1024)}.txt`,\n          encoding: '7bit',\n          mimeType: 'text/plain',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Header size limit should be per part'\n  },\n  { source: [\n      '\\r\\n--d1bf46b3-aa33-4061-b28d-6c5ced8b08ee\\r\\n',\n      'Content-Type: application/gzip\\r\\n'\n        + 'Content-Encoding: gzip\\r\\n'\n        + 'Content-Disposition: form-data; name=batch-1; filename=batch-1'\n        + '\\r\\n\\r\\n',\n      '\\r\\n--d1bf46b3-aa33-4061-b28d-6c5ced8b08ee--',\n    ],\n    boundary: 'd1bf46b3-aa33-4061-b28d-6c5ced8b08ee',\n    expected: [\n      { type: 'file',\n        name: 'batch-1',\n        data: Buffer.alloc(0),\n        info: {\n          filename: 'batch-1',\n          encoding: '7bit',\n          mimeType: 'application/gzip',\n        },\n        limited: false,\n      },\n    ],\n    what: 'Empty part'\n  },\n];\n\nfor (const test of tests) {\n  active.set(test, 1);\n\n  const { what, boundary, events, limits, preservePath, fileHwm } = test;\n  const bb = busboy({\n    fileHwm,\n    limits,\n    preservePath,\n    headers: {\n      'content-type': `multipart/form-data; boundary=${boundary}`,\n    }\n  });\n  const results = [];\n\n  if (events === undefined || events.includes('field')) {\n    bb.on('field', (name, val, info) => {\n      results.push({ type: 'field', name, val, info });\n    });\n  }\n\n  if (events === undefined || events.includes('file')) {\n    bb.on('file', (name, stream, info) => {\n      const data = [];\n      let nb = 0;\n      const file = {\n        type: 'file',\n        name,\n        data: null,\n        info,\n        limited: false,\n      };\n      results.push(file);\n      stream.on('data', (d) => {\n        data.push(d);\n        nb += d.length;\n      }).on('limit', () => {\n        file.limited = true;\n      }).on('close', () => {\n        file.data = Buffer.concat(data, nb);\n        assert.strictEqual(stream.truncated, file.limited);\n      }).once('error', (err) => {\n        file.err = err.message;\n      });\n    });\n  }\n\n  bb.on('error', (err) => {\n    results.push({ error: err.message });\n  });\n\n  bb.on('partsLimit', () => {\n    results.push('partsLimit');\n  });\n\n  bb.on('filesLimit', () => {\n    results.push('filesLimit');\n  });\n\n  bb.on('fieldsLimit', () => {\n    results.push('fieldsLimit');\n  });\n\n  bb.on('close', () => {\n    active.delete(test);\n\n    assert.deepStrictEqual(\n      results,\n      test.expected,\n      `[${what}] Results mismatch.\\n`\n        + `Parsed: ${inspect(results)}\\n`\n        + `Expected: ${inspect(test.expected)}`\n    );\n  });\n\n  for (const src of test.source) {\n    const buf = (typeof src === 'string' ? Buffer.from(src, 'utf8') : src);\n    bb.write(buf);\n  }\n  bb.end();\n}\n\n// Byte-by-byte versions\nfor (let test of tests) {\n  test = { ...test };\n  test.what += ' (byte-by-byte)';\n  active.set(test, 1);\n\n  const { what, boundary, events, limits, preservePath, fileHwm } = test;\n  const bb = busboy({\n    fileHwm,\n    limits,\n    preservePath,\n    headers: {\n      'content-type': `multipart/form-data; boundary=${boundary}`,\n    }\n  });\n  const results = [];\n\n  if (events === undefined || events.includes('field')) {\n    bb.on('field', (name, val, info) => {\n      results.push({ type: 'field', name, val, info });\n    });\n  }\n\n  if (events === undefined || events.includes('file')) {\n    bb.on('file', (name, stream, info) => {\n      const data = [];\n      let nb = 0;\n      const file = {\n        type: 'file',\n        name,\n        data: null,\n        info,\n        limited: false,\n      };\n      results.push(file);\n      stream.on('data', (d) => {\n        data.push(d);\n        nb += d.length;\n      }).on('limit', () => {\n        file.limited = true;\n      }).on('close', () => {\n        file.data = Buffer.concat(data, nb);\n        assert.strictEqual(stream.truncated, file.limited);\n      }).once('error', (err) => {\n        file.err = err.message;\n      });\n    });\n  }\n\n  bb.on('error', (err) => {\n    results.push({ error: err.message });\n  });\n\n  bb.on('partsLimit', () => {\n    results.push('partsLimit');\n  });\n\n  bb.on('filesLimit', () => {\n    results.push('filesLimit');\n  });\n\n  bb.on('fieldsLimit', () => {\n    results.push('fieldsLimit');\n  });\n\n  bb.on('close', () => {\n    active.delete(test);\n\n    assert.deepStrictEqual(\n      results,\n      test.expected,\n      `[${what}] Results mismatch.\\n`\n        + `Parsed: ${inspect(results)}\\n`\n        + `Expected: ${inspect(test.expected)}`\n    );\n  });\n\n  for (const src of test.source) {\n    const buf = (typeof src === 'string' ? Buffer.from(src, 'utf8') : src);\n    for (let i = 0; i < buf.length; ++i)\n      bb.write(buf.slice(i, i + 1));\n  }\n  bb.end();\n}\n\n{\n  let exception = false;\n  process.once('uncaughtException', (ex) => {\n    exception = true;\n    throw ex;\n  });\n  process.on('exit', () => {\n    if (exception || active.size === 0)\n      return;\n    process.exitCode = 1;\n    console.error('==========================');\n    console.error(`${active.size} test(s) did not finish:`);\n    console.error('==========================');\n    console.error(Array.from(active.keys()).map((v) => v.what).join('\\n'));\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}