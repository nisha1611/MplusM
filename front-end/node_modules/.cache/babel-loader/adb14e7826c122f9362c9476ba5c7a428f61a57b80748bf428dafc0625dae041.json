{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\nconst awsAuthMiddleware = options => (next, context) => async function (args) {\n  var _a, _b, _c, _d;\n  if (!protocol_http_1.HttpRequest.isInstance(args.request)) return next(args);\n  const authScheme = (_c = (_b = (_a = context.endpointV2) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b.authSchemes) === null || _c === void 0 ? void 0 : _c[0];\n  const multiRegionOverride = (authScheme === null || authScheme === void 0 ? void 0 : authScheme.name) === \"sigv4a\" ? (_d = authScheme === null || authScheme === void 0 ? void 0 : authScheme.signingRegionSet) === null || _d === void 0 ? void 0 : _d.join(\",\") : undefined;\n  const signer = await options.signer(authScheme);\n  const output = await next({\n    ...args,\n    request: await signer.sign(args.request, {\n      signingDate: (0, getSkewCorrectedDate_1.getSkewCorrectedDate)(options.systemClockOffset),\n      signingRegion: multiRegionOverride || context[\"signing_region\"],\n      signingService: context[\"signing_service\"]\n    })\n  }).catch(error => {\n    var _a;\n    const serverTime = (_a = error.ServerTime) !== null && _a !== void 0 ? _a : getDateHeader(error.$response);\n    if (serverTime) {\n      options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(serverTime, options.systemClockOffset);\n    }\n    throw error;\n  });\n  const dateHeader = getDateHeader(output.response);\n  if (dateHeader) {\n    options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(dateHeader, options.systemClockOffset);\n  }\n  return output;\n};\nexports.awsAuthMiddleware = awsAuthMiddleware;\nconst getDateHeader = response => {\n  var _a, _b, _c;\n  return protocol_http_1.HttpResponse.isInstance(response) ? (_b = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.date) !== null && _b !== void 0 ? _b : (_c = response.headers) === null || _c === void 0 ? void 0 : _c.Date : undefined;\n};\nexports.awsAuthMiddlewareOptions = {\n  name: \"awsAuthMiddleware\",\n  tags: [\"SIGNATURE\", \"AWSAUTH\"],\n  relation: \"after\",\n  toMiddleware: \"retryMiddleware\",\n  override: true\n};\nconst getAwsAuthPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo((0, exports.awsAuthMiddleware)(options), exports.awsAuthMiddlewareOptions);\n  }\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSigV4AuthPlugin","getAwsAuthPlugin","awsAuthMiddlewareOptions","awsAuthMiddleware","protocol_http_1","require","getSkewCorrectedDate_1","getUpdatedSystemClockOffset_1","options","next","context","args","_a","_b","_c","_d","HttpRequest","isInstance","request","authScheme","endpointV2","properties","authSchemes","multiRegionOverride","name","signingRegionSet","join","undefined","signer","output","sign","signingDate","getSkewCorrectedDate","systemClockOffset","signingRegion","signingService","catch","error","serverTime","ServerTime","getDateHeader","$response","getUpdatedSystemClockOffset","dateHeader","response","HttpResponse","headers","date","Date","tags","relation","toMiddleware","override","applyToStack","clientStack","addRelativeTo"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/middleware-signing/dist-cjs/middleware.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\r\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\r\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\r\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\r\nconst awsAuthMiddleware = (options) => (next, context) => async function (args) {\r\n    var _a, _b, _c, _d;\r\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\r\n        return next(args);\r\n    const authScheme = (_c = (_b = (_a = context.endpointV2) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b.authSchemes) === null || _c === void 0 ? void 0 : _c[0];\r\n    const multiRegionOverride = (authScheme === null || authScheme === void 0 ? void 0 : authScheme.name) === \"sigv4a\" ? (_d = authScheme === null || authScheme === void 0 ? void 0 : authScheme.signingRegionSet) === null || _d === void 0 ? void 0 : _d.join(\",\") : undefined;\r\n    const signer = await options.signer(authScheme);\r\n    const output = await next({\r\n        ...args,\r\n        request: await signer.sign(args.request, {\r\n            signingDate: (0, getSkewCorrectedDate_1.getSkewCorrectedDate)(options.systemClockOffset),\r\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\r\n            signingService: context[\"signing_service\"],\r\n        }),\r\n    }).catch((error) => {\r\n        var _a;\r\n        const serverTime = (_a = error.ServerTime) !== null && _a !== void 0 ? _a : getDateHeader(error.$response);\r\n        if (serverTime) {\r\n            options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(serverTime, options.systemClockOffset);\r\n        }\r\n        throw error;\r\n    });\r\n    const dateHeader = getDateHeader(output.response);\r\n    if (dateHeader) {\r\n        options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(dateHeader, options.systemClockOffset);\r\n    }\r\n    return output;\r\n};\r\nexports.awsAuthMiddleware = awsAuthMiddleware;\r\nconst getDateHeader = (response) => { var _a, _b, _c; return protocol_http_1.HttpResponse.isInstance(response) ? (_b = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.date) !== null && _b !== void 0 ? _b : (_c = response.headers) === null || _c === void 0 ? void 0 : _c.Date : undefined; };\r\nexports.awsAuthMiddlewareOptions = {\r\n    name: \"awsAuthMiddleware\",\r\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\r\n    relation: \"after\",\r\n    toMiddleware: \"retryMiddleware\",\r\n    override: true,\r\n};\r\nconst getAwsAuthPlugin = (options) => ({\r\n    applyToStack: (clientStack) => {\r\n        clientStack.addRelativeTo((0, exports.awsAuthMiddleware)(options), exports.awsAuthMiddlewareOptions);\r\n    },\r\n});\r\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\r\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}