{"ast":null,"code":"import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = _ref => {\n  let {\n    query = {}\n  } = _ref;\n  const keys = [];\n  const serialized = {};\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      continue;\n    }\n    keys.push(key);\n    const value = query[key];\n    if (typeof value === \"string\") {\n      serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).sort().reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), []).join(\"&\");\n    }\n  }\n  return keys.map(key => serialized[key]).filter(serialized => serialized).join(\"&\");\n};","map":{"version":3,"names":["escapeUri","SIGNATURE_HEADER","getCanonicalQuery","query","keys","serialized","key","Object","sort","toLowerCase","push","value","Array","isArray","slice","reduce","encoded","concat","join","map","filter"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js"],"sourcesContent":["import { escapeUri } from \"@aws-sdk/util-uri-escape\";\r\nimport { SIGNATURE_HEADER } from \"./constants\";\r\nexport const getCanonicalQuery = ({ query = {} }) => {\r\n    const keys = [];\r\n    const serialized = {};\r\n    for (const key of Object.keys(query).sort()) {\r\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\r\n            continue;\r\n        }\r\n        keys.push(key);\r\n        const value = query[key];\r\n        if (typeof value === \"string\") {\r\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            serialized[key] = value\r\n                .slice(0)\r\n                .sort()\r\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\r\n                .join(\"&\");\r\n        }\r\n    }\r\n    return keys\r\n        .map((key) => serialized[key])\r\n        .filter((serialized) => serialized)\r\n        .join(\"&\");\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,OAAO,MAAMC,iBAAiB,GAAG,QAAoB;EAAA,IAAnB;IAAEC,KAAK,GAAG,CAAC;EAAE,CAAC;EAC5C,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACH,IAAI,CAACD,KAAK,CAAC,CAACK,IAAI,EAAE,EAAE;IACzC,IAAIF,GAAG,CAACG,WAAW,EAAE,KAAKR,gBAAgB,EAAE;MACxC;IACJ;IACAG,IAAI,CAACM,IAAI,CAACJ,GAAG,CAAC;IACd,MAAMK,KAAK,GAAGR,KAAK,CAACG,GAAG,CAAC;IACxB,IAAI,OAAOK,KAAK,KAAK,QAAQ,EAAE;MAC3BN,UAAU,CAACC,GAAG,CAAC,GAAI,GAAEN,SAAS,CAACM,GAAG,CAAE,IAAGN,SAAS,CAACW,KAAK,CAAE,EAAC;IAC7D,CAAC,MACI,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MAC3BN,UAAU,CAACC,GAAG,CAAC,GAAGK,KAAK,CAClBG,KAAK,CAAC,CAAC,CAAC,CACRN,IAAI,EAAE,CACNO,MAAM,CAAC,CAACC,OAAO,EAAEL,KAAK,KAAKK,OAAO,CAACC,MAAM,CAAC,CAAE,GAAEjB,SAAS,CAACM,GAAG,CAAE,IAAGN,SAAS,CAACW,KAAK,CAAE,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACzFO,IAAI,CAAC,GAAG,CAAC;IAClB;EACJ;EACA,OAAOd,IAAI,CACNe,GAAG,CAAEb,GAAG,IAAKD,UAAU,CAACC,GAAG,CAAC,CAAC,CAC7Bc,MAAM,CAAEf,UAAU,IAAKA,UAAU,CAAC,CAClCa,IAAI,CAAC,GAAG,CAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}