{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nclass OnChunksLoadedRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"chunk loaded\");\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    const {\n      compilation\n    } = this;\n    const {\n      runtimeTemplate\n    } = compilation;\n    return Template.asString([\"var deferred = [];\", `${RuntimeGlobals.onChunksLoaded} = ${runtimeTemplate.basicFunction(\"result, chunkIds, fn, priority\", [\"if(chunkIds) {\", Template.indent([\"priority = priority || 0;\", \"for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\", \"deferred[i] = [chunkIds, fn, priority];\", \"return;\"]), \"}\", \"var notFulfilled = Infinity;\", \"for (var i = 0; i < deferred.length; i++) {\", Template.indent([runtimeTemplate.destructureArray([\"chunkIds\", \"fn\", \"priority\"], \"deferred[i]\"), \"var fulfilled = true;\", \"for (var j = 0; j < chunkIds.length; j++) {\", Template.indent([`if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(${RuntimeGlobals.onChunksLoaded}).every(${runtimeTemplate.returningFunction(`${RuntimeGlobals.onChunksLoaded}[key](chunkIds[j])`, \"key\")})) {`, Template.indent([\"chunkIds.splice(j--, 1);\"]), \"} else {\", Template.indent([\"fulfilled = false;\", \"if(priority < notFulfilled) notFulfilled = priority;\"]), \"}\"]), \"}\", \"if(fulfilled) {\", Template.indent([\"deferred.splice(i--, 1)\", \"var r = fn();\", \"if (r !== undefined) result = r;\"]), \"}\"]), \"}\", \"return result;\"])};`]);\n  }\n}\nmodule.exports = OnChunksLoadedRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","OnChunksLoadedRuntimeModule","constructor","generate","compilation","runtimeTemplate","asString","onChunksLoaded","basicFunction","indent","destructureArray","returningFunction","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/runtime/OnChunksLoadedRuntimeModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\nconst Template = require(\"../Template\");\r\n\r\nclass OnChunksLoadedRuntimeModule extends RuntimeModule {\r\n\tconstructor() {\r\n\t\tsuper(\"chunk loaded\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\tconst { compilation } = this;\r\n\t\tconst { runtimeTemplate } = compilation;\r\n\t\treturn Template.asString([\r\n\t\t\t\"var deferred = [];\",\r\n\t\t\t`${RuntimeGlobals.onChunksLoaded} = ${runtimeTemplate.basicFunction(\r\n\t\t\t\t\"result, chunkIds, fn, priority\",\r\n\t\t\t\t[\r\n\t\t\t\t\t\"if(chunkIds) {\",\r\n\t\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\t\"priority = priority || 0;\",\r\n\t\t\t\t\t\t\"for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\",\r\n\t\t\t\t\t\t\"deferred[i] = [chunkIds, fn, priority];\",\r\n\t\t\t\t\t\t\"return;\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\"var notFulfilled = Infinity;\",\r\n\t\t\t\t\t\"for (var i = 0; i < deferred.length; i++) {\",\r\n\t\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\truntimeTemplate.destructureArray(\r\n\t\t\t\t\t\t\t[\"chunkIds\", \"fn\", \"priority\"],\r\n\t\t\t\t\t\t\t\"deferred[i]\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"var fulfilled = true;\",\r\n\t\t\t\t\t\t\"for (var j = 0; j < chunkIds.length; j++) {\",\r\n\t\t\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\t\t`if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(${\r\n\t\t\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\r\n\t\t\t\t\t\t\t}).every(${runtimeTemplate.returningFunction(\r\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.onChunksLoaded}[key](chunkIds[j])`,\r\n\t\t\t\t\t\t\t\t\"key\"\r\n\t\t\t\t\t\t\t)})) {`,\r\n\t\t\t\t\t\t\tTemplate.indent([\"chunkIds.splice(j--, 1);\"]),\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\t\t\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\t\t\t\"fulfilled = false;\",\r\n\t\t\t\t\t\t\t\t\"if(priority < notFulfilled) notFulfilled = priority;\"\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\t\"}\"\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\t\"if(fulfilled) {\",\r\n\t\t\t\t\t\tTemplate.indent([\r\n\t\t\t\t\t\t\t\"deferred.splice(i--, 1)\",\r\n\t\t\t\t\t\t\t\"var r = fn();\",\r\n\t\t\t\t\t\t\t\"if (r !== undefined) result = r;\"\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\"}\"\r\n\t\t\t\t\t]),\r\n\t\t\t\t\t\"}\",\r\n\t\t\t\t\t\"return result;\"\r\n\t\t\t\t]\r\n\t\t\t)};`\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nmodule.exports = OnChunksLoadedRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvC,MAAMG,2BAA2B,SAASF,aAAa,CAAC;EACvDG,WAAW,GAAG;IACb,KAAK,CAAC,cAAc,CAAC;EACtB;;EAEA;AACD;AACA;EACCC,QAAQ,GAAG;IACV,MAAM;MAAEC;IAAY,CAAC,GAAG,IAAI;IAC5B,MAAM;MAAEC;IAAgB,CAAC,GAAGD,WAAW;IACvC,OAAOJ,QAAQ,CAACM,QAAQ,CAAC,CACxB,oBAAoB,EACnB,GAAET,cAAc,CAACU,cAAe,MAAKF,eAAe,CAACG,aAAa,CAClE,gCAAgC,EAChC,CACC,gBAAgB,EAChBR,QAAQ,CAACS,MAAM,CAAC,CACf,2BAA2B,EAC3B,0GAA0G,EAC1G,yCAAyC,EACzC,SAAS,CACT,CAAC,EACF,GAAG,EACH,8BAA8B,EAC9B,6CAA6C,EAC7CT,QAAQ,CAACS,MAAM,CAAC,CACfJ,eAAe,CAACK,gBAAgB,CAC/B,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,EAC9B,aAAa,CACb,EACD,uBAAuB,EACvB,6CAA6C,EAC7CV,QAAQ,CAACS,MAAM,CAAC,CACd,uEACAZ,cAAc,CAACU,cACf,WAAUF,eAAe,CAACM,iBAAiB,CAC1C,GAAEd,cAAc,CAACU,cAAe,oBAAmB,EACpD,KAAK,CACJ,MAAK,EACPP,QAAQ,CAACS,MAAM,CAAC,CAAC,0BAA0B,CAAC,CAAC,EAC7C,UAAU,EACVT,QAAQ,CAACS,MAAM,CAAC,CACf,oBAAoB,EACpB,sDAAsD,CACtD,CAAC,EACF,GAAG,CACH,CAAC,EACF,GAAG,EACH,iBAAiB,EACjBT,QAAQ,CAACS,MAAM,CAAC,CACf,yBAAyB,EACzB,eAAe,EACf,kCAAkC,CAClC,CAAC,EACF,GAAG,CACH,CAAC,EACF,GAAG,EACH,gBAAgB,CAChB,CACA,GAAE,CACJ,CAAC;EACH;AACD;AAEAG,MAAM,CAACC,OAAO,GAAGZ,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}