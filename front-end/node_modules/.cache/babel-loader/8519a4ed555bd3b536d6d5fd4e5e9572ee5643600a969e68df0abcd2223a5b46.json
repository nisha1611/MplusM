{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throwDefaultError = void 0;\nconst exceptions_1 = require(\"./exceptions\");\nconst throwDefaultError = _ref => {\n  let {\n    output,\n    parsedBody,\n    exceptionCtor,\n    errorCode\n  } = _ref;\n  const $metadata = deserializeMetadata(output);\n  const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n  const response = new exceptionCtor({\n    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\n    $fault: \"client\",\n    $metadata\n  });\n  throw (0, exceptions_1.decorateServiceException)(response, parsedBody);\n};\nexports.throwDefaultError = throwDefaultError;\nconst deserializeMetadata = output => {\n  var _a, _b;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","throwDefaultError","exceptions_1","require","output","parsedBody","exceptionCtor","errorCode","$metadata","deserializeMetadata","statusCode","httpStatusCode","undefined","response","name","code","Code","$fault","decorateServiceException","_a","_b","requestId","headers","extendedRequestId","cfId"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/@aws-sdk/smithy-client/dist-cjs/default-error-handler.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.throwDefaultError = void 0;\r\nconst exceptions_1 = require(\"./exceptions\");\r\nconst throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\r\n    const $metadata = deserializeMetadata(output);\r\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\r\n    const response = new exceptionCtor({\r\n        name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\r\n        $fault: \"client\",\r\n        $metadata,\r\n    });\r\n    throw (0, exceptions_1.decorateServiceException)(response, parsedBody);\r\n};\r\nexports.throwDefaultError = throwDefaultError;\r\nconst deserializeMetadata = (output) => {\r\n    var _a, _b;\r\n    return ({\r\n        httpStatusCode: output.statusCode,\r\n        requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\r\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\r\n        cfId: output.headers[\"x-amz-cf-id\"],\r\n    });\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMF,iBAAiB,GAAG,QAAsD;EAAA,IAArD;IAAEG,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAU,CAAC;EACvE,MAAMC,SAAS,GAAGC,mBAAmB,CAACL,MAAM,CAAC;EAC7C,MAAMM,UAAU,GAAGF,SAAS,CAACG,cAAc,GAAGH,SAAS,CAACG,cAAc,GAAG,EAAE,GAAGC,SAAS;EACvF,MAAMC,QAAQ,GAAG,IAAIP,aAAa,CAAC;IAC/BQ,IAAI,EAAET,UAAU,CAACU,IAAI,IAAIV,UAAU,CAACW,IAAI,IAAIT,SAAS,IAAIG,UAAU,IAAI,cAAc;IACrFO,MAAM,EAAE,QAAQ;IAChBT;EACJ,CAAC,CAAC;EACF,MAAM,CAAC,CAAC,EAAEN,YAAY,CAACgB,wBAAwB,EAAEL,QAAQ,EAAER,UAAU,CAAC;AAC1E,CAAC;AACDN,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB;AAC7C,MAAMQ,mBAAmB,GAAIL,MAAM,IAAK;EACpC,IAAIe,EAAE,EAAEC,EAAE;EACV,OAAQ;IACJT,cAAc,EAAEP,MAAM,CAACM,UAAU;IACjCW,SAAS,EAAE,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGf,MAAM,CAACkB,OAAO,CAAC,kBAAkB,CAAC,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGf,MAAM,CAACkB,OAAO,CAAC,mBAAmB,CAAC,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGhB,MAAM,CAACkB,OAAO,CAAC,kBAAkB,CAAC;IACpMC,iBAAiB,EAAEnB,MAAM,CAACkB,OAAO,CAAC,YAAY,CAAC;IAC/CE,IAAI,EAAEpB,MAAM,CAACkB,OAAO,CAAC,aAAa;EACtC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}