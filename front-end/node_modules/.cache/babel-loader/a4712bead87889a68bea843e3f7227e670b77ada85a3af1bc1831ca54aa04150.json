{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\n/*eslint-disable no-console*/\nconst fs = require('fs');\nconst path = require('path');\nconst {\n  XMLParser,\n  XMLValidator\n} = require(\"../fxp\");\nconst readToEnd = require('./read').readToEnd;\nconst version = require('./../../package.json').version;\nif (process.argv[2] === '--help' || process.argv[2] === '-h') {\n  console.log(require(\"./man\"));\n} else if (process.argv[2] === '--version') {\n  console.log(version);\n} else {\n  const options = {\n    removeNSPrefix: true,\n    ignoreAttributes: false,\n    parseTagValue: true,\n    parseAttributeValue: true\n  };\n  let fileName = '';\n  let outputFileName;\n  let validate = false;\n  let validateOnly = false;\n  for (let i = 2; i < process.argv.length; i++) {\n    if (process.argv[i] === '-ns') {\n      options.removeNSPrefix = false;\n    } else if (process.argv[i] === '-a') {\n      options.ignoreAttributes = true;\n    } else if (process.argv[i] === '-c') {\n      options.parseTagValue = false;\n      options.parseAttributeValue = false;\n    } else if (process.argv[i] === '-o') {\n      outputFileName = process.argv[++i];\n    } else if (process.argv[i] === '-v') {\n      validate = true;\n    } else if (process.argv[i] === '-V') {\n      validateOnly = true;\n    } else {\n      //filename\n      fileName = process.argv[i];\n    }\n  }\n  const callback = function (xmlData) {\n    let output = '';\n    if (validate) {\n      const parser = new XMLParser(options);\n      output = parser.parse(xmlData, validate);\n    } else if (validateOnly) {\n      output = XMLValidator.validate(xmlData);\n      process.exitCode = output === true ? 0 : 1;\n    } else {\n      const parser = new XMLParser(options);\n      output = JSON.stringify(parser.parse(xmlData, validate), null, 4);\n    }\n    if (outputFileName) {\n      writeToFile(outputFileName, output);\n    } else {\n      console.log(output);\n    }\n  };\n  try {\n    if (!fileName) {\n      readToEnd(process.stdin, function (err, data) {\n        if (err) {\n          throw err;\n        }\n        callback(data.toString());\n      });\n    } else {\n      fs.readFile(fileName, function (err, data) {\n        if (err) {\n          throw err;\n        }\n        callback(data.toString());\n      });\n    }\n  } catch (e) {\n    console.log('Seems an invalid file or stream.' + e);\n  }\n}\nfunction writeToFile(fileName, data) {\n  fs.writeFile(fileName, data, function (err) {\n    if (err) {\n      throw err;\n    }\n    console.log('JSON output has been written to ' + fileName);\n  });\n}","map":{"version":3,"names":["fs","require","path","XMLParser","XMLValidator","readToEnd","version","process","argv","console","log","options","removeNSPrefix","ignoreAttributes","parseTagValue","parseAttributeValue","fileName","outputFileName","validate","validateOnly","i","length","callback","xmlData","output","parser","parse","exitCode","JSON","stringify","writeToFile","stdin","err","data","toString","readFile","e","writeFile"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/node_modules/fast-xml-parser/src/cli/cli.js"],"sourcesContent":["#!/usr/bin/env node\r\n'use strict';\r\n/*eslint-disable no-console*/\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst {XMLParser, XMLValidator} = require(\"../fxp\");\r\nconst readToEnd = require('./read').readToEnd;\r\n\r\nconst version = require('./../../package.json').version;\r\nif (process.argv[2] === '--help' || process.argv[2] === '-h') {\r\n  console.log(require(\"./man\"));\r\n} else if (process.argv[2] === '--version') {\r\n  console.log(version);\r\n} else {\r\n  const options = {\r\n    removeNSPrefix: true,\r\n    ignoreAttributes: false,\r\n    parseTagValue: true,\r\n    parseAttributeValue: true,\r\n  };\r\n  let fileName = '';\r\n  let outputFileName;\r\n  let validate = false;\r\n  let validateOnly = false;\r\n  for (let i = 2; i < process.argv.length; i++) {\r\n    if (process.argv[i] === '-ns') {\r\n      options.removeNSPrefix = false;\r\n    } else if (process.argv[i] === '-a') {\r\n      options.ignoreAttributes = true;\r\n    } else if (process.argv[i] === '-c') {\r\n      options.parseTagValue = false;\r\n      options.parseAttributeValue = false;\r\n    } else if (process.argv[i] === '-o') {\r\n      outputFileName = process.argv[++i];\r\n    } else if (process.argv[i] === '-v') {\r\n      validate = true;\r\n    } else if (process.argv[i] === '-V') {\r\n      validateOnly = true;\r\n    } else {\r\n      //filename\r\n      fileName = process.argv[i];\r\n    }\r\n  }\r\n  \r\n  const callback = function(xmlData) {\r\n    let output = '';\r\n    if (validate) {\r\n      const parser = new XMLParser(options);\r\n      output = parser.parse(xmlData,validate);\r\n    } else if (validateOnly) {\r\n      output = XMLValidator.validate(xmlData);\r\n      process.exitCode = output === true ? 0 : 1;\r\n    } else {\r\n      const parser = new XMLParser(options);\r\n      output = JSON.stringify(parser.parse(xmlData,validate), null, 4);\r\n    }\r\n    if (outputFileName) {\r\n      writeToFile(outputFileName, output);\r\n    } else {\r\n      console.log(output);\r\n    }\r\n  };\r\n\r\n  try {\r\n    \r\n    if (!fileName) {\r\n      readToEnd(process.stdin, function(err, data) {\r\n        if (err) {\r\n          throw err;\r\n        }\r\n        callback(data.toString());\r\n      });\r\n    } else {\r\n      fs.readFile(fileName, function(err, data) {\r\n        if (err) {\r\n          throw err;\r\n        }\r\n        callback(data.toString());\r\n      });\r\n    }\r\n  } catch (e) {\r\n    console.log('Seems an invalid file or stream.' + e);\r\n  }\r\n}\r\n\r\nfunction writeToFile(fileName, data) {\r\n  fs.writeFile(fileName, data, function(err) {\r\n    if (err) {\r\n      throw err;\r\n    }\r\n    console.log('JSON output has been written to ' + fileName);\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}