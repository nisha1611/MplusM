{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource,\n  RawSource\n} = require(\"webpack-sources\");\nconst ExternalModule = require(\"./ExternalModule\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\nconst cache = new WeakMap();\nconst devtoolWarning = new RawSource(`/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n`);\nclass EvalDevToolModulePlugin {\n  constructor(options) {\n    this.namespace = options.namespace || \"\";\n    this.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\n    this.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack://[namespace]/[resourcePath]?[loaders]\";\n  }\n\n  /**\r\n   * Apply the plugin\r\n   * @param {Compiler} compiler the compiler instance\r\n   * @returns {void}\r\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", compilation => {\n      const hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n      hooks.renderModuleContent.tap(\"EvalDevToolModulePlugin\", (source, module, _ref) => {\n        let {\n          runtimeTemplate,\n          chunkGraph\n        } = _ref;\n        const cacheEntry = cache.get(source);\n        if (cacheEntry !== undefined) return cacheEntry;\n        if (module instanceof ExternalModule) {\n          cache.set(source, source);\n          return source;\n        }\n        const content = source.source();\n        const str = ModuleFilenameHelpers.createFilename(module, {\n          moduleFilenameTemplate: this.moduleFilenameTemplate,\n          namespace: this.namespace\n        }, {\n          requestShortener: runtimeTemplate.requestShortener,\n          chunkGraph,\n          hashFunction: compilation.outputOptions.hashFunction\n        });\n        const footer = \"\\n\" + this.sourceUrlComment.replace(/\\[url\\]/g, encodeURI(str).replace(/%2F/g, \"/\").replace(/%20/g, \"_\").replace(/%5E/g, \"^\").replace(/%5C/g, \"\\\\\").replace(/^\\//, \"\"));\n        const result = new RawSource(`eval(${compilation.outputOptions.trustedTypes ? `${RuntimeGlobals.createScript}(${JSON.stringify(content + footer)})` : JSON.stringify(content + footer)});`);\n        cache.set(source, result);\n        return result;\n      });\n      hooks.inlineInRuntimeBailout.tap(\"EvalDevToolModulePlugin\", () => \"the eval devtool is used.\");\n      hooks.render.tap(\"EvalDevToolModulePlugin\", source => new ConcatSource(devtoolWarning, source));\n      hooks.chunkHash.tap(\"EvalDevToolModulePlugin\", (chunk, hash) => {\n        hash.update(\"EvalDevToolModulePlugin\");\n        hash.update(\"2\");\n      });\n      if (compilation.outputOptions.trustedTypes) {\n        compilation.hooks.additionalModuleRuntimeRequirements.tap(\"EvalDevToolModulePlugin\", (module, set, context) => {\n          set.add(RuntimeGlobals.createScript);\n        });\n      }\n    });\n  }\n}\nmodule.exports = EvalDevToolModulePlugin;","map":{"version":3,"names":["ConcatSource","RawSource","require","ExternalModule","ModuleFilenameHelpers","RuntimeGlobals","JavascriptModulesPlugin","cache","WeakMap","devtoolWarning","EvalDevToolModulePlugin","constructor","options","namespace","sourceUrlComment","moduleFilenameTemplate","apply","compiler","hooks","compilation","tap","getCompilationHooks","renderModuleContent","source","module","runtimeTemplate","chunkGraph","cacheEntry","get","undefined","set","content","str","createFilename","requestShortener","hashFunction","outputOptions","footer","replace","encodeURI","result","trustedTypes","createScript","JSON","stringify","inlineInRuntimeBailout","render","chunkHash","chunk","hash","update","additionalModuleRuntimeRequirements","context","add","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/EvalDevToolModulePlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\r\nconst ExternalModule = require(\"./ExternalModule\");\r\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\r\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\r\n\r\n/** @typedef {import(\"webpack-sources\").Source} Source */\r\n/** @typedef {import(\"./Compiler\")} Compiler */\r\n\r\n/** @type {WeakMap<Source, Source>} */\r\nconst cache = new WeakMap();\r\n\r\nconst devtoolWarning = new RawSource(`/*\r\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\r\n`);\r\n\r\nclass EvalDevToolModulePlugin {\r\n\tconstructor(options) {\r\n\t\tthis.namespace = options.namespace || \"\";\r\n\t\tthis.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\r\n\t\tthis.moduleFilenameTemplate =\r\n\t\t\toptions.moduleFilenameTemplate ||\r\n\t\t\t\"webpack://[namespace]/[resourcePath]?[loaders]\";\r\n\t}\r\n\r\n\t/**\r\n\t * Apply the plugin\r\n\t * @param {Compiler} compiler the compiler instance\r\n\t * @returns {void}\r\n\t */\r\n\tapply(compiler) {\r\n\t\tcompiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", compilation => {\r\n\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\r\n\t\t\thooks.renderModuleContent.tap(\r\n\t\t\t\t\"EvalDevToolModulePlugin\",\r\n\t\t\t\t(source, module, { runtimeTemplate, chunkGraph }) => {\r\n\t\t\t\t\tconst cacheEntry = cache.get(source);\r\n\t\t\t\t\tif (cacheEntry !== undefined) return cacheEntry;\r\n\t\t\t\t\tif (module instanceof ExternalModule) {\r\n\t\t\t\t\t\tcache.set(source, source);\r\n\t\t\t\t\t\treturn source;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst content = source.source();\r\n\t\t\t\t\tconst str = ModuleFilenameHelpers.createFilename(\r\n\t\t\t\t\t\tmodule,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmoduleFilenameTemplate: this.moduleFilenameTemplate,\r\n\t\t\t\t\t\t\tnamespace: this.namespace\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequestShortener: runtimeTemplate.requestShortener,\r\n\t\t\t\t\t\t\tchunkGraph,\r\n\t\t\t\t\t\t\thashFunction: compilation.outputOptions.hashFunction\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst footer =\r\n\t\t\t\t\t\t\"\\n\" +\r\n\t\t\t\t\t\tthis.sourceUrlComment.replace(\r\n\t\t\t\t\t\t\t/\\[url\\]/g,\r\n\t\t\t\t\t\t\tencodeURI(str)\r\n\t\t\t\t\t\t\t\t.replace(/%2F/g, \"/\")\r\n\t\t\t\t\t\t\t\t.replace(/%20/g, \"_\")\r\n\t\t\t\t\t\t\t\t.replace(/%5E/g, \"^\")\r\n\t\t\t\t\t\t\t\t.replace(/%5C/g, \"\\\\\")\r\n\t\t\t\t\t\t\t\t.replace(/^\\//, \"\")\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tconst result = new RawSource(\r\n\t\t\t\t\t\t`eval(${\r\n\t\t\t\t\t\t\tcompilation.outputOptions.trustedTypes\r\n\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScript}(${JSON.stringify(\r\n\t\t\t\t\t\t\t\t\t\tcontent + footer\r\n\t\t\t\t\t\t\t\t  )})`\r\n\t\t\t\t\t\t\t\t: JSON.stringify(content + footer)\r\n\t\t\t\t\t\t});`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcache.set(source, result);\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\thooks.inlineInRuntimeBailout.tap(\r\n\t\t\t\t\"EvalDevToolModulePlugin\",\r\n\t\t\t\t() => \"the eval devtool is used.\"\r\n\t\t\t);\r\n\t\t\thooks.render.tap(\r\n\t\t\t\t\"EvalDevToolModulePlugin\",\r\n\t\t\t\tsource => new ConcatSource(devtoolWarning, source)\r\n\t\t\t);\r\n\t\t\thooks.chunkHash.tap(\"EvalDevToolModulePlugin\", (chunk, hash) => {\r\n\t\t\t\thash.update(\"EvalDevToolModulePlugin\");\r\n\t\t\t\thash.update(\"2\");\r\n\t\t\t});\r\n\t\t\tif (compilation.outputOptions.trustedTypes) {\r\n\t\t\t\tcompilation.hooks.additionalModuleRuntimeRequirements.tap(\r\n\t\t\t\t\t\"EvalDevToolModulePlugin\",\r\n\t\t\t\t\t(module, set, context) => {\r\n\t\t\t\t\t\tset.add(RuntimeGlobals.createScript);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = EvalDevToolModulePlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA,YAAY;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9D,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAME,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMI,uBAAuB,GAAGJ,OAAO,CAAC,sCAAsC,CAAC;;AAE/E;AACA;;AAEA;AACA,MAAMK,KAAK,GAAG,IAAIC,OAAO,EAAE;AAE3B,MAAMC,cAAc,GAAG,IAAIR,SAAS,CAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,MAAMS,uBAAuB,CAAC;EAC7BC,WAAW,CAACC,OAAO,EAAE;IACpB,IAAI,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,IAAI,EAAE;IACxC,IAAI,CAACC,gBAAgB,GAAGF,OAAO,CAACE,gBAAgB,IAAI,uBAAuB;IAC3E,IAAI,CAACC,sBAAsB,GAC1BH,OAAO,CAACG,sBAAsB,IAC9B,gDAAgD;EAClD;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,yBAAyB,EAAED,WAAW,IAAI;MACxE,MAAMD,KAAK,GAAGZ,uBAAuB,CAACe,mBAAmB,CAACF,WAAW,CAAC;MACtED,KAAK,CAACI,mBAAmB,CAACF,GAAG,CAC5B,yBAAyB,EACzB,CAACG,MAAM,EAAEC,MAAM,WAAsC;QAAA,IAApC;UAAEC,eAAe;UAAEC;QAAW,CAAC;QAC/C,MAAMC,UAAU,GAAGpB,KAAK,CAACqB,GAAG,CAACL,MAAM,CAAC;QACpC,IAAII,UAAU,KAAKE,SAAS,EAAE,OAAOF,UAAU;QAC/C,IAAIH,MAAM,YAAYrB,cAAc,EAAE;UACrCI,KAAK,CAACuB,GAAG,CAACP,MAAM,EAAEA,MAAM,CAAC;UACzB,OAAOA,MAAM;QACd;QACA,MAAMQ,OAAO,GAAGR,MAAM,CAACA,MAAM,EAAE;QAC/B,MAAMS,GAAG,GAAG5B,qBAAqB,CAAC6B,cAAc,CAC/CT,MAAM,EACN;UACCT,sBAAsB,EAAE,IAAI,CAACA,sBAAsB;UACnDF,SAAS,EAAE,IAAI,CAACA;QACjB,CAAC,EACD;UACCqB,gBAAgB,EAAET,eAAe,CAACS,gBAAgB;UAClDR,UAAU;UACVS,YAAY,EAAEhB,WAAW,CAACiB,aAAa,CAACD;QACzC,CAAC,CACD;QACD,MAAME,MAAM,GACX,IAAI,GACJ,IAAI,CAACvB,gBAAgB,CAACwB,OAAO,CAC5B,UAAU,EACVC,SAAS,CAACP,GAAG,CAAC,CACZM,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACrBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CACpB;QACF,MAAME,MAAM,GAAG,IAAIvC,SAAS,CAC1B,QACAkB,WAAW,CAACiB,aAAa,CAACK,YAAY,GAClC,GAAEpC,cAAc,CAACqC,YAAa,IAAGC,IAAI,CAACC,SAAS,CAChDb,OAAO,GAAGM,MAAM,CACd,GAAE,GACJM,IAAI,CAACC,SAAS,CAACb,OAAO,GAAGM,MAAM,CAClC,IAAG,CACJ;QACD9B,KAAK,CAACuB,GAAG,CAACP,MAAM,EAAEiB,MAAM,CAAC;QACzB,OAAOA,MAAM;MACd,CAAC,CACD;MACDtB,KAAK,CAAC2B,sBAAsB,CAACzB,GAAG,CAC/B,yBAAyB,EACzB,MAAM,2BAA2B,CACjC;MACDF,KAAK,CAAC4B,MAAM,CAAC1B,GAAG,CACf,yBAAyB,EACzBG,MAAM,IAAI,IAAIvB,YAAY,CAACS,cAAc,EAAEc,MAAM,CAAC,CAClD;MACDL,KAAK,CAAC6B,SAAS,CAAC3B,GAAG,CAAC,yBAAyB,EAAE,CAAC4B,KAAK,EAAEC,IAAI,KAAK;QAC/DA,IAAI,CAACC,MAAM,CAAC,yBAAyB,CAAC;QACtCD,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;MACjB,CAAC,CAAC;MACF,IAAI/B,WAAW,CAACiB,aAAa,CAACK,YAAY,EAAE;QAC3CtB,WAAW,CAACD,KAAK,CAACiC,mCAAmC,CAAC/B,GAAG,CACxD,yBAAyB,EACzB,CAACI,MAAM,EAAEM,GAAG,EAAEsB,OAAO,KAAK;UACzBtB,GAAG,CAACuB,GAAG,CAAChD,cAAc,CAACqC,YAAY,CAAC;QACrC,CAAC,CACD;MACF;IACD,CAAC,CAAC;EACH;AACD;AAEAlB,MAAM,CAAC8B,OAAO,GAAG5C,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}