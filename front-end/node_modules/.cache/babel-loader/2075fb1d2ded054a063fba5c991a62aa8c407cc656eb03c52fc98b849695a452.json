{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nclass StartupChunkDependenciesRuntimeModule extends RuntimeModule {\n  constructor(asyncChunkLoading) {\n    super(\"startup chunk dependencies\", RuntimeModule.STAGE_TRIGGER);\n    this.asyncChunkLoading = asyncChunkLoading;\n  }\n\n  /**\r\n   * @returns {string} runtime code\r\n   */\n  generate() {\n    const {\n      chunkGraph,\n      chunk,\n      compilation\n    } = this;\n    const {\n      runtimeTemplate\n    } = compilation;\n    const chunkIds = Array.from(chunkGraph.getChunkEntryDependentChunksIterable(chunk)).map(chunk => {\n      return chunk.id;\n    });\n    return Template.asString([`var next = ${RuntimeGlobals.startup};`, `${RuntimeGlobals.startup} = ${runtimeTemplate.basicFunction(\"\", !this.asyncChunkLoading ? chunkIds.map(id => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)});`).concat(\"return next();\") : chunkIds.length === 1 ? `return ${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunkIds[0])}).then(next);` : chunkIds.length > 2 ? [\n    // using map is shorter for 3 or more chunks\n    `return Promise.all(${JSON.stringify(chunkIds)}.map(${RuntimeGlobals.ensureChunk}, __webpack_require__)).then(next);`] : [\n    // calling ensureChunk directly is shorter for 0 - 2 chunks\n    \"return Promise.all([\", Template.indent(chunkIds.map(id => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)})`).join(\",\\n\")), \"]).then(next);\"])};`]);\n  }\n}\nmodule.exports = StartupChunkDependenciesRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","StartupChunkDependenciesRuntimeModule","constructor","asyncChunkLoading","STAGE_TRIGGER","generate","chunkGraph","chunk","compilation","runtimeTemplate","chunkIds","Array","from","getChunkEntryDependentChunksIterable","map","id","asString","startup","basicFunction","ensureChunk","JSON","stringify","concat","length","indent","join","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/runtime/StartupChunkDependenciesRuntimeModule.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst RuntimeModule = require(\"../RuntimeModule\");\r\nconst Template = require(\"../Template\");\r\n\r\nclass StartupChunkDependenciesRuntimeModule extends RuntimeModule {\r\n\tconstructor(asyncChunkLoading) {\r\n\t\tsuper(\"startup chunk dependencies\", RuntimeModule.STAGE_TRIGGER);\r\n\t\tthis.asyncChunkLoading = asyncChunkLoading;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string} runtime code\r\n\t */\r\n\tgenerate() {\r\n\t\tconst { chunkGraph, chunk, compilation } = this;\r\n\t\tconst { runtimeTemplate } = compilation;\r\n\t\tconst chunkIds = Array.from(\r\n\t\t\tchunkGraph.getChunkEntryDependentChunksIterable(chunk)\r\n\t\t).map(chunk => {\r\n\t\t\treturn chunk.id;\r\n\t\t});\r\n\t\treturn Template.asString([\r\n\t\t\t`var next = ${RuntimeGlobals.startup};`,\r\n\t\t\t`${RuntimeGlobals.startup} = ${runtimeTemplate.basicFunction(\r\n\t\t\t\t\"\",\r\n\t\t\t\t!this.asyncChunkLoading\r\n\t\t\t\t\t? chunkIds\r\n\t\t\t\t\t\t\t.map(\r\n\t\t\t\t\t\t\t\tid => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)});`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.concat(\"return next();\")\r\n\t\t\t\t\t: chunkIds.length === 1\r\n\t\t\t\t\t? `return ${RuntimeGlobals.ensureChunk}(${JSON.stringify(\r\n\t\t\t\t\t\t\tchunkIds[0]\r\n\t\t\t\t\t  )}).then(next);`\r\n\t\t\t\t\t: chunkIds.length > 2\r\n\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t// using map is shorter for 3 or more chunks\r\n\t\t\t\t\t\t\t`return Promise.all(${JSON.stringify(chunkIds)}.map(${\r\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunk\r\n\t\t\t\t\t\t\t}, __webpack_require__)).then(next);`\r\n\t\t\t\t\t  ]\r\n\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t// calling ensureChunk directly is shorter for 0 - 2 chunks\r\n\t\t\t\t\t\t\t\"return Promise.all([\",\r\n\t\t\t\t\t\t\tTemplate.indent(\r\n\t\t\t\t\t\t\t\tchunkIds\r\n\t\t\t\t\t\t\t\t\t.map(\r\n\t\t\t\t\t\t\t\t\t\tid => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)})`\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.join(\",\\n\")\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\"]).then(next);\"\r\n\t\t\t\t\t  ]\r\n\t\t\t)};`\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nmodule.exports = StartupChunkDependenciesRuntimeModule;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvC,MAAMG,qCAAqC,SAASF,aAAa,CAAC;EACjEG,WAAW,CAACC,iBAAiB,EAAE;IAC9B,KAAK,CAAC,4BAA4B,EAAEJ,aAAa,CAACK,aAAa,CAAC;IAChE,IAAI,CAACD,iBAAiB,GAAGA,iBAAiB;EAC3C;;EAEA;AACD;AACA;EACCE,QAAQ,GAAG;IACV,MAAM;MAAEC,UAAU;MAAEC,KAAK;MAAEC;IAAY,CAAC,GAAG,IAAI;IAC/C,MAAM;MAAEC;IAAgB,CAAC,GAAGD,WAAW;IACvC,MAAME,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAC1BN,UAAU,CAACO,oCAAoC,CAACN,KAAK,CAAC,CACtD,CAACO,GAAG,CAACP,KAAK,IAAI;MACd,OAAOA,KAAK,CAACQ,EAAE;IAChB,CAAC,CAAC;IACF,OAAOf,QAAQ,CAACgB,QAAQ,CAAC,CACvB,cAAanB,cAAc,CAACoB,OAAQ,GAAE,EACtC,GAAEpB,cAAc,CAACoB,OAAQ,MAAKR,eAAe,CAACS,aAAa,CAC3D,EAAE,EACF,CAAC,IAAI,CAACf,iBAAiB,GACpBO,QAAQ,CACPI,GAAG,CACHC,EAAE,IAAK,GAAElB,cAAc,CAACsB,WAAY,IAAGC,IAAI,CAACC,SAAS,CAACN,EAAE,CAAE,IAAG,CAC7D,CACAO,MAAM,CAAC,gBAAgB,CAAC,GACzBZ,QAAQ,CAACa,MAAM,KAAK,CAAC,GACpB,UAAS1B,cAAc,CAACsB,WAAY,IAAGC,IAAI,CAACC,SAAS,CACtDX,QAAQ,CAAC,CAAC,CAAC,CACT,eAAc,GAChBA,QAAQ,CAACa,MAAM,GAAG,CAAC,GACnB;IACA;IACC,sBAAqBH,IAAI,CAACC,SAAS,CAACX,QAAQ,CAAE,QAC9Cb,cAAc,CAACsB,WACf,qCAAoC,CACpC,GACD;IACA;IACA,sBAAsB,EACtBnB,QAAQ,CAACwB,MAAM,CACdd,QAAQ,CACNI,GAAG,CACHC,EAAE,IAAK,GAAElB,cAAc,CAACsB,WAAY,IAAGC,IAAI,CAACC,SAAS,CAACN,EAAE,CAAE,GAAE,CAC5D,CACAU,IAAI,CAAC,KAAK,CAAC,CACb,EACD,gBAAgB,CACf,CACH,GAAE,CACJ,CAAC;EACH;AACD;AAEAC,MAAM,CAACC,OAAO,GAAG1B,qCAAqC"},"metadata":{},"sourceType":"script","externalDependencies":[]}