{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass RequireHeaderDependency extends NullDependency {\n  constructor(range) {\n    super();\n    if (!Array.isArray(range)) throw new Error(\"range must be valid\");\n    this.range = range;\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    super.serialize(context);\n  }\n  static deserialize(context) {\n    const obj = new RequireHeaderDependency(context.read());\n    obj.deserialize(context);\n    return obj;\n  }\n}\nmakeSerializable(RequireHeaderDependency, \"webpack/lib/dependencies/RequireHeaderDependency\");\nRequireHeaderDependency.Template = class RequireHeaderDependencyTemplate extends NullDependency.Template {\n  /**\r\n   * @param {Dependency} dependency the dependency for which the template should be applied\r\n   * @param {ReplaceSource} source the current replace source which can be modified\r\n   * @param {DependencyTemplateContext} templateContext the context object\r\n   * @returns {void}\r\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeRequirements\n    } = _ref;\n    const dep = /** @type {RequireHeaderDependency} */dependency;\n    runtimeRequirements.add(RuntimeGlobals.require);\n    source.replace(dep.range[0], dep.range[1] - 1, \"__webpack_require__\");\n  }\n};\nmodule.exports = RequireHeaderDependency;","map":{"version":3,"names":["RuntimeGlobals","require","makeSerializable","NullDependency","RequireHeaderDependency","constructor","range","Array","isArray","Error","serialize","context","write","deserialize","obj","read","Template","RequireHeaderDependencyTemplate","apply","dependency","source","runtimeRequirements","dep","add","replace","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/dependencies/RequireHeaderDependency.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\r\nconst makeSerializable = require(\"../util/makeSerializable\");\r\nconst NullDependency = require(\"./NullDependency\");\r\n\r\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\r\n/** @typedef {import(\"../Dependency\")} Dependency */\r\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\r\n\r\nclass RequireHeaderDependency extends NullDependency {\r\n\tconstructor(range) {\r\n\t\tsuper();\r\n\t\tif (!Array.isArray(range)) throw new Error(\"range must be valid\");\r\n\t\tthis.range = range;\r\n\t}\r\n\r\n\tserialize(context) {\r\n\t\tconst { write } = context;\r\n\t\twrite(this.range);\r\n\t\tsuper.serialize(context);\r\n\t}\r\n\r\n\tstatic deserialize(context) {\r\n\t\tconst obj = new RequireHeaderDependency(context.read());\r\n\t\tobj.deserialize(context);\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nmakeSerializable(\r\n\tRequireHeaderDependency,\r\n\t\"webpack/lib/dependencies/RequireHeaderDependency\"\r\n);\r\n\r\nRequireHeaderDependency.Template = class RequireHeaderDependencyTemplate extends (\r\n\tNullDependency.Template\r\n) {\r\n\t/**\r\n\t * @param {Dependency} dependency the dependency for which the template should be applied\r\n\t * @param {ReplaceSource} source the current replace source which can be modified\r\n\t * @param {DependencyTemplateContext} templateContext the context object\r\n\t * @returns {void}\r\n\t */\r\n\tapply(dependency, source, { runtimeRequirements }) {\r\n\t\tconst dep = /** @type {RequireHeaderDependency} */ (dependency);\r\n\t\truntimeRequirements.add(RuntimeGlobals.require);\r\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"__webpack_require__\");\r\n\t}\r\n};\r\n\r\nmodule.exports = RequireHeaderDependency;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAME,cAAc,GAAGF,OAAO,CAAC,kBAAkB,CAAC;;AAElD;AACA;AACA;;AAEA,MAAMG,uBAAuB,SAASD,cAAc,CAAC;EACpDE,WAAW,CAACC,KAAK,EAAE;IAClB,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;IACjE,IAAI,CAACH,KAAK,GAAGA,KAAK;EACnB;EAEAI,SAAS,CAACC,OAAO,EAAE;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGD,OAAO;IACzBC,KAAK,CAAC,IAAI,CAACN,KAAK,CAAC;IACjB,KAAK,CAACI,SAAS,CAACC,OAAO,CAAC;EACzB;EAEA,OAAOE,WAAW,CAACF,OAAO,EAAE;IAC3B,MAAMG,GAAG,GAAG,IAAIV,uBAAuB,CAACO,OAAO,CAACI,IAAI,EAAE,CAAC;IACvDD,GAAG,CAACD,WAAW,CAACF,OAAO,CAAC;IACxB,OAAOG,GAAG;EACX;AACD;AAEAZ,gBAAgB,CACfE,uBAAuB,EACvB,kDAAkD,CAClD;AAEDA,uBAAuB,CAACY,QAAQ,GAAG,MAAMC,+BAA+B,SACvEd,cAAc,CAACa,QAAQ,CACtB;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAK,CAACC,UAAU,EAAEC,MAAM,QAA2B;IAAA,IAAzB;MAAEC;IAAoB,CAAC;IAChD,MAAMC,GAAG,GAAG,sCAAwCH,UAAW;IAC/DE,mBAAmB,CAACE,GAAG,CAACvB,cAAc,CAACC,OAAO,CAAC;IAC/CmB,MAAM,CAACI,OAAO,CAACF,GAAG,CAAChB,KAAK,CAAC,CAAC,CAAC,EAAEgB,GAAG,CAAChB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,qBAAqB,CAAC;EACtE;AACD,CAAC;AAEDmB,MAAM,CAACC,OAAO,GAAGtB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}