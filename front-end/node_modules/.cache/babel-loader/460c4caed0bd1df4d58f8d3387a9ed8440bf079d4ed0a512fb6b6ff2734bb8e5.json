{"ast":null,"code":"const path = require('path');\nconst multer = require('multer');\nconst {\n  uuid\n} = require('uuidv4');\n//upload prescription\nvar storagePrescription = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, 'Upload prescriptions/');\n  },\n  filename: function (req, file, cb) {\n    let ext = path.extname(file.originalname);\n    //cb(null,Date.now()+ext)\n    cb(null, uuid() + '-' + Date.now() + path.extname(file.originalname));\n  }\n});\nvar prescriptionUpload = multer({\n  storage: storagePrescription,\n  fileFilter: function (req, file, callback) {\n    if (file.mimetype == \"image/png\" || file.mimetype == \"image/jpg\" || file.mimetype == \"image/jpeg\" || file.mimetype == \"application/pdf\") {\n      callback(null, true);\n    } else {\n      console.log(\"only jpg & png format supported\");\n      callback(null, false);\n    }\n  },\n  limits: {\n    fileSize: 1024 * 1024 * 2\n  }\n});\nmodule.exports = prescriptionUpload;","map":{"version":3,"names":["path","require","multer","uuid","storagePrescription","diskStorage","destination","req","file","cb","filename","ext","extname","originalname","Date","now","prescriptionUpload","storage","fileFilter","callback","mimetype","console","log","limits","fileSize","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/back-end/middleware/prescriptionUpload.js"],"sourcesContent":["const path = require('path')\r\nconst multer = require('multer')\r\nconst {uuid} = require('uuidv4')\r\n//upload prescription\r\nvar storagePrescription=multer.diskStorage({\r\n    destination:function(req,file,cb){\r\n        cb(null,'Upload prescriptions/')\r\n    },\r\n    filename:function (req,file,cb){\r\n        let ext=path.extname(file.originalname)\r\n        //cb(null,Date.now()+ext)\r\n        cb(null,uuid()+'-'+Date.now()+path.extname(file.originalname))\r\n    }\r\n})\r\nvar prescriptionUpload =multer({\r\n    storage:storagePrescription,\r\n    fileFilter:function(req,file,callback){\r\n        if(\r\n            file.mimetype==\"image/png\"||\r\n            file.mimetype==\"image/jpg\"||\r\n            file.mimetype==\"image/jpeg\"||\r\n            file.mimetype==\"application/pdf\"\r\n            \r\n        ){\r\n            callback(null,true)\r\n        }else{\r\n            console.log(\"only jpg & png format supported\")\r\n            callback(null,false)\r\n        }\r\n    },\r\n    limits:{\r\n        fileSize:1024*1024*2\r\n    }\r\n})\r\nmodule.exports =prescriptionUpload"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAM;EAACE;AAAI,CAAC,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChC;AACA,IAAIG,mBAAmB,GAACF,MAAM,CAACG,WAAW,CAAC;EACvCC,WAAW,EAAC,UAASC,GAAG,EAACC,IAAI,EAACC,EAAE,EAAC;IAC7BA,EAAE,CAAC,IAAI,EAAC,uBAAuB,CAAC;EACpC,CAAC;EACDC,QAAQ,EAAC,UAAUH,GAAG,EAACC,IAAI,EAACC,EAAE,EAAC;IAC3B,IAAIE,GAAG,GAACX,IAAI,CAACY,OAAO,CAACJ,IAAI,CAACK,YAAY,CAAC;IACvC;IACAJ,EAAE,CAAC,IAAI,EAACN,IAAI,EAAE,GAAC,GAAG,GAACW,IAAI,CAACC,GAAG,EAAE,GAACf,IAAI,CAACY,OAAO,CAACJ,IAAI,CAACK,YAAY,CAAC,CAAC;EAClE;AACJ,CAAC,CAAC;AACF,IAAIG,kBAAkB,GAAEd,MAAM,CAAC;EAC3Be,OAAO,EAACb,mBAAmB;EAC3Bc,UAAU,EAAC,UAASX,GAAG,EAACC,IAAI,EAACW,QAAQ,EAAC;IAClC,IACIX,IAAI,CAACY,QAAQ,IAAE,WAAW,IAC1BZ,IAAI,CAACY,QAAQ,IAAE,WAAW,IAC1BZ,IAAI,CAACY,QAAQ,IAAE,YAAY,IAC3BZ,IAAI,CAACY,QAAQ,IAAE,iBAAiB,EAEnC;MACGD,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC;IACvB,CAAC,MAAI;MACDE,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CH,QAAQ,CAAC,IAAI,EAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EACDI,MAAM,EAAC;IACHC,QAAQ,EAAC,IAAI,GAAC,IAAI,GAAC;EACvB;AACJ,CAAC,CAAC;AACFC,MAAM,CAACC,OAAO,GAAEV,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}