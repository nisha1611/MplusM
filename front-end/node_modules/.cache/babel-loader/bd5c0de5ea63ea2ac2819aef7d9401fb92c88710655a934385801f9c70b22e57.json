{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n\n/** @typedef {Record<string, any>} PreparsedAst */\n\n/**\r\n * @typedef {Object} ParserStateBase\r\n * @property {string | Buffer} source\r\n * @property {NormalModule} current\r\n * @property {NormalModule} module\r\n * @property {Compilation} compilation\r\n * @property {{[k: string]: any}} options\r\n */\n\n/** @typedef {Record<string, any> & ParserStateBase} ParserState */\nclass Parser {\n  /* istanbul ignore next */\n  /**\r\n   * @abstract\r\n   * @param {string | Buffer | PreparsedAst} source the source to parse\r\n   * @param {ParserState} state the parser state\r\n   * @returns {ParserState} the parser state\r\n   */\n  parse(source, state) {\n    const AbstractMethodError = require(\"./AbstractMethodError\");\n    throw new AbstractMethodError();\n  }\n}\nmodule.exports = Parser;","map":{"version":3,"names":["Parser","parse","source","state","AbstractMethodError","require","module","exports"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/webpack/lib/Parser.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"./Compilation\")} Compilation */\r\n/** @typedef {import(\"./NormalModule\")} NormalModule */\r\n\r\n/** @typedef {Record<string, any>} PreparsedAst */\r\n\r\n/**\r\n * @typedef {Object} ParserStateBase\r\n * @property {string | Buffer} source\r\n * @property {NormalModule} current\r\n * @property {NormalModule} module\r\n * @property {Compilation} compilation\r\n * @property {{[k: string]: any}} options\r\n */\r\n\r\n/** @typedef {Record<string, any> & ParserStateBase} ParserState */\r\n\r\nclass Parser {\r\n\t/* istanbul ignore next */\r\n\t/**\r\n\t * @abstract\r\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\r\n\t * @param {ParserState} state the parser state\r\n\t * @returns {ParserState} the parser state\r\n\t */\r\n\tparse(source, state) {\r\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nmodule.exports = Parser;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA,MAAMA,MAAM,CAAC;EACZ;EACA;AACD;AACA;AACA;AACA;AACA;EACCC,KAAK,CAACC,MAAM,EAAEC,KAAK,EAAE;IACpB,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;IAC5D,MAAM,IAAID,mBAAmB,EAAE;EAChC;AACD;AAEAE,MAAM,CAACC,OAAO,GAAGP,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}