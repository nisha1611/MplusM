{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar aSet = require('../internals/a-set');\nvar add = require('../internals/set-helpers').add;\n\n// `Set.prototype.addAll` method\n// https://github.com/tc39/proposal-collection-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  addAll: function addAll( /* ...elements */\n  ) {\n    var set = aSet(this);\n    for (var k = 0, len = arguments.length; k < len; k++) {\n      add(set, arguments[k]);\n    }\n    return set;\n  }\n});","map":{"version":3,"names":["$","require","aSet","add","target","proto","real","forced","addAll","set","k","len","arguments","length"],"sources":["C:/Users/91930/Desktop/Github projects/Pharmacy Demo/front-end/node_modules/core-js/modules/esnext.set.add-all.js"],"sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar aSet = require('../internals/a-set');\r\nvar add = require('../internals/set-helpers').add;\r\n\r\n// `Set.prototype.addAll` method\r\n// https://github.com/tc39/proposal-collection-methods\r\n$({ target: 'Set', proto: true, real: true, forced: true }, {\r\n  addAll: function addAll(/* ...elements */) {\r\n    var set = aSet(this);\r\n    for (var k = 0, len = arguments.length; k < len; k++) {\r\n      add(set, arguments[k]);\r\n    } return set;\r\n  }\r\n});\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,IAAI,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACxC,IAAIE,GAAG,GAAGF,OAAO,CAAC,0BAA0B,CAAC,CAACE,GAAG;;AAEjD;AACA;AACAH,CAAC,CAAC;EAAEI,MAAM,EAAE,KAAK;EAAEC,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC,EAAE;EAC1DC,MAAM,EAAE,SAASA,MAAM,EAAC;EAAA,EAAmB;IACzC,IAAIC,GAAG,GAAGP,IAAI,CAAC,IAAI,CAAC;IACpB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MACpDP,GAAG,CAACM,GAAG,EAAEG,SAAS,CAACF,CAAC,CAAC,CAAC;IACxB;IAAE,OAAOD,GAAG;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}